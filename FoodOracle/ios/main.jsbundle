__DEV__ = 
false;


__BUNDLE_START_TIME__ = Date.now();
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
var _inGuard=false;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}

if(global.ErrorUtils && !_inGuard){
_inGuard = true;
try{
var ret=require.apply(this,arguments);}
catch(e) {
global.ErrorUtils.reportFatalError(e);}

_inGuard = false;
return ret;}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};










require.ensure = function(dependencies,callback){
throw '`require.ensure` is still not supported';};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}






function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);

global.require = require;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var inspect=(function(){























function inspect(obj,opts){
var ctx={
seen:[],
stylize:stylizeNoColor};

return formatValue(ctx,obj,opts.depth);}


function stylizeNoColor(str,styleType){
return str;}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val] = true;});


return hash;}



function formatValue(ctx,value,recurseTimes){

var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;}



var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);



if(isError(value) && (
keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)){
return formatError(value);}



if(keys.length === 0){
if(isFunction(value)){
var name=value.name?': ' + value.name:'';
return ctx.stylize('[Function' + name + ']','special');}

if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}

if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');}

if(isError(value)){
return formatError(value);}}



var base='',array=false,braces=['{','}'];


if(isArray(value)){
array = true;
braces = ['[',']'];}



if(isFunction(value)){
var n=value.name?': ' + value.name:'';
base = ' [Function' + n + ']';}



if(isRegExp(value)){
base = ' ' + RegExp.prototype.toString.call(value);}



if(isDate(value)){
base = ' ' + Date.prototype.toUTCString.call(value);}



if(isError(value)){
base = ' ' + formatError(value);}


if(keys.length === 0 && (!array || value.length == 0)){
return braces[0] + base + braces[1];}


if(recurseTimes < 0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else 
{
return ctx.stylize('[Object]','special');}}



ctx.seen.push(value);

var output;
if(array){
output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else 
{
output = keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}



ctx.seen.pop();

return reduceToSingleString(output,base,braces);}



function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"') + '\'';
return ctx.stylize(simple,'string');}

if(isNumber(value))
return ctx.stylize('' + value,'number');
if(isBoolean(value))
return ctx.stylize('' + value,'boolean');

if(isNull(value))
return ctx.stylize('null','null');}



function formatError(value){
return '[' + Error.prototype.toString.call(value) + ']';}



function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i < l;++i) {
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));}else 
{
output.push('');}}


keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));}});


return output;}



function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc = Object.getOwnPropertyDescriptor(value,key) || {value:value[key]};
if(desc.get){
if(desc.set){
str = ctx.stylize('[Getter/Setter]','special');}else 
{
str = ctx.stylize('[Getter]','special');}}else 

{
if(desc.set){
str = ctx.stylize('[Setter]','special');}}


if(!hasOwnProperty(visibleKeys,key)){
name = '[' + key + ']';}

if(!str){
if(ctx.seen.indexOf(desc.value) < 0){
if(isNull(recurseTimes)){
str = formatValue(ctx,desc.value,null);}else 
{
str = formatValue(ctx,desc.value,recurseTimes - 1);}

if(str.indexOf('\n') > -1){
if(array){
str = str.split('\n').map(function(line){
return '  ' + line;}).
join('\n').substr(2);}else 
{
str = '\n' + str.split('\n').map(function(line){
return '   ' + line;}).
join('\n');}}}else 


{
str = ctx.stylize('[Circular]','special');}}


if(isUndefined(name)){
if(array && key.match(/^\d+$/)){
return str;}

name = JSON.stringify('' + key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name = name.substr(1,name.length - 2);
name = ctx.stylize(name,'name');}else 
{
name = name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name = ctx.stylize(name,'string');}}



return name + ': ' + str;}



function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n') >= 0)numLinesEst++;
return prev + cur.replace(/\u001b\[\d\d?m/g,'').length + 1;},
0);

if(length > 60){
return braces[0] + (
base === ''?'':base + '\n ') + 
' ' + 
output.join(',\n  ') + 
' ' + 
braces[1];}


return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}





function isArray(ar){
return Array.isArray(ar);}


function isBoolean(arg){
return typeof arg === 'boolean';}


function isNull(arg){
return arg === null;}


function isNullOrUndefined(arg){
return arg == null;}


function isNumber(arg){
return typeof arg === 'number';}


function isString(arg){
return typeof arg === 'string';}


function isSymbol(arg){
return typeof arg === 'symbol';}


function isUndefined(arg){
return arg === void 0;}


function isRegExp(re){
return isObject(re) && objectToString(re) === '[object RegExp]';}


function isObject(arg){
return typeof arg === 'object' && arg !== null;}


function isDate(d){
return isObject(d) && objectToString(d) === '[object Date]';}


function isError(e){
return isObject(e) && (
objectToString(e) === '[object Error]' || e instanceof Error);}


function isFunction(arg){
return typeof arg === 'function';}


function isPrimitive(arg){
return arg === null || 
typeof arg === 'boolean' || 
typeof arg === 'number' || 
typeof arg === 'string' || 
typeof arg === 'symbol' || 
typeof arg === 'undefined';}


function objectToString(o){
return Object.prototype.toString.call(o);}


function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);}


return inspect;})();



var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){
if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
return inspect(arg,{depth:10});}).
join(', ');
if(str.slice(0,10) === "'Warning: " && level >= LOG_LEVELS.error){



level = LOG_LEVELS.warn;}

global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
__d('FoodOracle/index.ios.js',["react-native/Libraries/react-native/react-native.js","Ionicons","FoodOracle/Preference.js","FoodOracle/Favourite.js","FoodOracle/Home.js","FoodOracle/Refrigerator.js","react-native-drawer/index.js"],function(global, require, module, exports) {  'use strict';





var React=require('react-native/Libraries/react-native/react-native.js');var 

AppRegistry=






React.AppRegistry;var StyleSheet=React.StyleSheet;var TabBarIOS=React.TabBarIOS;var View=React.View;var Image=React.Image;var Text=React.Text;var View=React.View;

var Icon=require('Ionicons');
var Preference=require('FoodOracle/Preference.js');
var Favourite=require('FoodOracle/Favourite.js');
var Home=require('FoodOracle/Home.js');
var Refrigerator=require('FoodOracle/Refrigerator.js');
var Drawer=require('react-native-drawer/index.js');


var FoodOracle=React.createClass({displayName:'FoodOracle',
getInitialState:function(){
return {
selectedTab:'home'};},


render:function(){var _this=this;
return (

React.createElement(Drawer,{
type:'static',
content:React.createElement(Refrigerator,null),
openDrawerOffset:50,
styles:{main:{shadowColor:"#000000",shadowOpacity:0.4,shadowRadius:3}},
tweenHandler:Drawer.tweenPresets.parallax},

React.createElement(TabBarIOS,{
selectedTab:this.state.selectedTab === 'home',
tintColor:'rgba(20,50,87,0.8)',
translucent:'true'},
React.createElement(Icon.TabBarItem,{
selected:this.state.selectedTab === 'home',
title:'Home',
iconName:'ios-home',
selectedIconName:'ios-home',
onPress:function(){
_this.setState({
selectedTab:'home'});}},


React.createElement(Home,null)),


React.createElement(Icon.TabBarItem,{
selected:this.state.selectedTab === 'favourite',
title:'CookBook',
iconName:'ios-list',
selectedIconName:'ios-list',
onPress:function(){
_this.setState({
selectedTab:'favourite'});}},


React.createElement(Favourite,null)),


React.createElement(Icon.TabBarItem,{
selected:this.state.selectedTab === 'preference',
title:'Preference',
iconName:'person',
selectedIconName:'person',
onPress:function(){
_this.setState({
selectedTab:'preference'});}},


React.createElement(Preference,null)))));}});








AppRegistry.registerComponent('FoodOracle',function(){return FoodOracle;});
});
__d('react-native/Libraries/react-native/react-native.js',["React","ActivityIndicatorIOS","DatePickerIOS","DrawerLayoutAndroid","Image","ListView","MapView","Modal","Navigator","NavigatorIOS","PickerIOS","ProgressBarAndroid","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchAndroid","SwitchIOS","TabBarIOS","Text","TextInput","ToastAndroid","ToolbarAndroid","TouchableHighlight","TouchableNativeFeedback","TouchableOpacity","TouchableWithoutFeedback","View","WebView","ActionSheetIOS","AdSupportIOS","AlertIOS","Animated","AppRegistry","AppStateIOS","AsyncStorage","BackAndroid","CameraRoll","Dimensions","Easing","ImagePickerIOS","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","Settings","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","Platform","requireNativeComponent","EdgeInsetsPropType","PointPropType","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
DrawerLayoutAndroid:require('DrawerLayoutAndroid'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Modal:require('Modal'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressBarAndroid:require('ProgressBarAndroid'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SwitchAndroid:require('SwitchAndroid'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
ToastAndroid:require('ToastAndroid'),
ToolbarAndroid:require('ToolbarAndroid'),
TouchableHighlight:require('TouchableHighlight'),
TouchableNativeFeedback:require('TouchableNativeFeedback'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
WebView:require('WebView'),


ActionSheetIOS:require('ActionSheetIOS'),
AdSupportIOS:require('AdSupportIOS'),
AlertIOS:require('AlertIOS'),
Animated:require('Animated'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
BackAndroid:require('BackAndroid'),
CameraRoll:require('CameraRoll'),
Dimensions:require('Dimensions'),
Easing:require('Easing'),
ImagePickerIOS:require('ImagePickerIOS'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
Settings:require('Settings'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
Platform:require('Platform'),
requireNativeComponent:require('requireNativeComponent'),


EdgeInsetsPropType:require('EdgeInsetsPropType'),
PointPropType:require('PointPropType'),

addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;
});
__d('React',["ReactNative"],function(global, require, module, exports) {  'use strict';












module.exports = require('ReactNative');
});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","ReactUpdates","deprecated","findNodeHandle","invariant","onlyChild","warning","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');
var ReactUpdates=require('ReactUpdates');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');
var warning=require('warning');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


unstable_batchedUpdates:ReactUpdates.batchedUpdates,



__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:function(
element,
mountInto,
callback)
{
warning('Use React.render instead of React.renderComponent');
return ReactNative.render(element,mountInto,callback);}};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;
});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.func = forEachFunction;
this.context = forEachContext;
this.count = 0;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name){
var bookKeeping=traverseContext;
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.result = mapResult;
this.func = mapFunction;
this.context = mapContext;
this.count = 0;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name){
var bookKeeping=traverseContext;
var mapResult=bookKeeping.result;

var keyUnique=mapResult[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
bookKeeping.func.call(bookKeeping.context,child,bookKeeping.count++);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;
});
__d('PooledClass',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fourArgumentPooler=function(a1,a2,a3,a4){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4);
return instance;}else 
{
return new Klass(a1,a2,a3,a4);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fourArgumentPooler:fourArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;
});
__d('invariant',[],function(global, require, module, exports) {  "use strict";























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;
});
__d('ReactFragment',["ReactElement","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









var fragmentKey;
var didWarnKey;
var canWarnForReactFragment;

if(__DEV__){
fragmentKey = '_reactFragment';
didWarnKey = '_reactDidWarn';

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {
canWarnForReactFragment = false;}


var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object. Got: %s',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;
});
__d('ReactElement',["ReactCurrentOwner","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');

var RESERVED_PROPS={
key:true,
ref:true};













var ReactElement=function(type,key,ref,owner,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;

this.props = props;

if(__DEV__){




this._store = {};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true,
value:false});}

catch(x) {
this._store.validated = false;}

Object.freeze(this.props);
Object.freeze(this);}};





ReactElement.prototype = {
_isReactElement:true};


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}


return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;
});
__d('ReactCurrentOwner',[],function(global, require, module, exports) {  'use strict';


















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;
});
__d('Object.assign',[],function(global, require, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;
});
__d('warning',["emptyFunction"],function(global, require, module, exports) {  "use strict";












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
if(typeof console !== 'undefined'){
console.error(message);}

try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;
});
__d('emptyFunction',[],function(global, require, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;
});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}










function traverseAllChildrenImpl(
children,
nameSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar);

return 1;}


var child;
var nextName;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

subtreeCount += traverseAllChildrenImpl(
child,
nextName,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',callback,traverseContext);}


module.exports = traverseAllChildren;
});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, module, exports) {  'use strict';













var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=10000;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
var i;
for(i = start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}















function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop,id);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},


getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;
});
__d('ReactRootIndex',[],function(global, require, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;
});
__d('getIteratorFn',[],function(global, require, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;
});
__d('ReactClass',["ReactComponent","ReactElement","ReactErrorUtils","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactNoopUpdateQueue","Object.assign","emptyObject","invariant","keyMirror","keyOf","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];

var warnedSetProps=false;
function warnSetProps(){
if(!warnedSetProps){
warnedSetProps = true;
warning(
false,
'setProps(...) and replaceProps(...) are deprecated. ' + 
'Instead, call React.render again at the top level.');}}


























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}










var ReactClassMixin={





replaceState:function(newState,callback){
this.updater.enqueueReplaceState(this,newState);
if(callback){
this.updater.enqueueCallback(this,callback);}},









isMounted:function(){
return this.updater.isMounted(this);},











setProps:function(partialProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueSetProps(this,partialProps);
if(callback){
this.updater.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
if(__DEV__){
warnSetProps();}

this.updater.enqueueReplaceProps(this,newProps);
if(callback){
this.updater.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context,updater){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: https://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.refs = emptyObject;
this.updater = updater || ReactNoopUpdateQueue;

this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');

warning(
!Constructor.prototype.componentWillRecieveProps,
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}



return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;
});
__d('ReactComponent',["ReactNoopUpdateQueue","emptyObject","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactNoopUpdateQueue=require('ReactNoopUpdateQueue');

var emptyObject=require('emptyObject');
var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context,updater){
this.props = props;
this.context = context;
this.refs = emptyObject;


this.updater = updater || ReactNoopUpdateQueue;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


this.updater.enqueueSetState(this,partialState);
if(callback){
this.updater.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
this.updater.enqueueForceUpdate(this);
if(callback){
this.updater.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:[
'getDOMNode',
'Use React.findDOMNode(component) instead.'],

isMounted:[
'isMounted',
'Instead, make sure to clean up subscriptions and pending requests in ' + 
'componentWillUnmount to prevent memory leaks.'],

replaceProps:[
'replaceProps',
'Instead, call React.render again at the top level.'],

replaceState:[
'replaceState',
'Refactor your code to use setState instead (see ' + 
'https://github.com/facebook/react/issues/3236).'],

setProps:[
'setProps',
'Instead, call React.render again at the top level.']};


var defineDeprecationWarning=function(methodName,info){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes. %s',
info[0],
info[1]);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;
});
__d('ReactNoopUpdateQueue',["warning"],function(global, require, module, exports) {  'use strict';












var warning=require('warning');

function warnTDZ(publicInstance,callerName){
if(__DEV__){
warning(
false,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor && publicInstance.constructor.displayName || '');}}







var ReactNoopUpdateQueue={








isMounted:function(publicInstance){
return false;},










enqueueCallback:function(publicInstance,callback){},














enqueueForceUpdate:function(publicInstance){
warnTDZ(publicInstance,'forceUpdate');},













enqueueReplaceState:function(publicInstance,completeState){
warnTDZ(publicInstance,'replaceState');},












enqueueSetState:function(publicInstance,partialState){
warnTDZ(publicInstance,'setState');},









enqueueSetProps:function(publicInstance,partialProps){
warnTDZ(publicInstance,'setProps');},









enqueueReplaceProps:function(publicInstance,props){
warnTDZ(publicInstance,'replaceProps');}};




module.exports = ReactNoopUpdateQueue;
});
__d('emptyObject',[],function(global, require, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;
});
__d('ReactErrorUtils',[],function(global, require, module, exports) {  'use strict';













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;
});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;
});
__d('keyMirror',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;
});
__d('ReactPropTypeLocationNames',[],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;
});
__d('keyOf',[],function(global, require, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;
});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","getIteratorFn","invariant","warning"],function(global, require, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

var addenda=getAddendaForKeyUse('uniqueKey',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Each child in an array or iterator should have a unique "key" prop.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

var addenda=getAddendaForKeyUse('numericKeys',element,parentType);
if(addenda === null){

return;}

warning(
false,
'Child objects should have non-numeric keys so ordering is preserved.' + 
'%s%s%s',
addenda.parentOrOwner || '',
addenda.childOwner || '',
addenda.url || '');}













function getAddendaForKeyUse(messageType,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[messageType] || (
ownerHasKeyUseWarning[messageType] = {});

if(memoizer[useName]){
return null;}

memoizer[useName] = true;

var addenda={
parentOrOwner:
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
null,
url:' See https://fb.me/react-warning-keys for more information.',
childOwner:null};





if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

addenda.childOwner = ' It was passed a child from ' + 
getName(element._owner) + '.';}


return addenda;}











function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

warning(
!error || error instanceof Error,
'%s: type specification of %s `%s` is invalid; the type checker ' + 
'function must return `null` or an `Error` but returned a %s. ' + 
'You may have forgotten to pass an argument to the type checker ' + 
'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 
'shape all require an argument).',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName,
typeof error);

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum();
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}











function validatePropTypes(element){
var componentClass=element.type;
if(typeof componentClass !== 'function'){
return;}

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

createElement:function(type,props,children){


warning(typeof type === 'string' || typeof type === 'function',
'React.createElement: type should not be null, undefined, boolean, or ' + 
'number. It should be a string (for DOM elements) or a ReactClass ' + 
'(for composite components).%s',
getDeclarationErrorAddendum());


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;
});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","JSTimersExecution"],function(global, require, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('JSTimersExecution');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{},
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectGenericComponentClass(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};
});
__d('InitializeJavaScriptAppEngine',["RCTDebugComponentOwnership","RCTDeviceEventEmitter","PerformanceLogger","regenerator/runtime.js","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","checkFlowAtRuntime","JSTimers","NativeModules","Promise","XMLHttpRequest","FormData","fetch","Geolocation","WebSocket","BridgeProfiling"],function(global, require, module, exports) {  require(
























'RCTDebugComponentOwnership');
require('RCTDeviceEventEmitter');
require('PerformanceLogger');
require('regenerator/runtime.js');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee) {
console.log('Failed to print error: ',ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}



function setupFlowChecker(){
if(__DEV__){
var checkFlowAtRuntime=require('checkFlowAtRuntime');
checkFlowAtRuntime();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert',
message:'' + text,
buttons:[{'cancel':'OK'}]};

RCTAlertManager.alertWithArgs(alertOpts,function(){});};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');
GLOBAL.FormData = require('FormData');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.nativeTraceBeginSection || function(){};
console.profileEnd = console.profileEnd || GLOBAL.nativeTraceEndSection || function(){};
require('BridgeProfiling').swizzleReactPerf();}


function setUpProcessEnv(){
GLOBAL.process = GLOBAL.process || {};
GLOBAL.process.env = {NODE_ENV:__DEV__?'development':'production'};}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();
setUpProcessEnv();
setupFlowChecker();
});
__d('RCTDebugComponentOwnership',["NativeModules","InspectorUtils","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';
















var DebugComponentOwnershipModule=require('NativeModules').DebugComponentOwnershipModule;
var InspectorUtils=require('InspectorUtils');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function componentToString(component){
return component.getName?component.getName():'Unknown';}


function getRootTagForTag(tag){
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
if(!rootNodeID){
return null;}

var rootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootNodeID);
if(!rootID){
return null;}

return ReactNativeTagHandles.rootNodeIDToTag[rootID];}


module.exports = {








getOwnerHierarchy:function(requestID,tag){
var rootTag=getRootTagForTag(tag);
var instance=InspectorUtils.findInstanceByNativeTag(rootTag,tag);
var ownerHierarchy=instance?
InspectorUtils.getOwnerHierarchy(instance).map(componentToString):
null;
DebugComponentOwnershipModule.receiveOwnershipHierarchy(requestID,tag,ownerHierarchy);}};
});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;
});
__d('BatchedBridge',["MessageQueue"],function(global, require, module, exports) {  'use strict';











var MessageQueue=require('MessageQueue');

var BatchedBridge=new MessageQueue(
__fbBatchedBridgeConfig.remoteModuleConfig,
__fbBatchedBridgeConfig.localModulesConfig);


module.exports = BatchedBridge;
});
__d('MessageQueue',["BridgeProfiling","ErrorUtils","JSTimersExecution","ReactUpdates","invariant","keyMirror","stringifySafe"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}














var BridgeProfiling=require('BridgeProfiling');
var ErrorUtils=require('ErrorUtils');
var JSTimersExecution=require('JSTimersExecution');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var stringifySafe=require('stringifySafe');

var MODULE_IDS=0;
var METHOD_IDS=1;
var PARAMS=2;

var SPY_MODE=false;

var MethodTypes=keyMirror({
local:null,
remote:null,
remoteAsync:null});


var guard=function(fn){
try{
fn();}
catch(error) {
ErrorUtils.reportFatalError(error);}};var 



MessageQueue=(function(){

function MessageQueue(remoteModules,localModules,customRequire){var _this=this;_classCallCheck(this,MessageQueue);
this.RemoteModules = {};

this._require = customRequire || require;
this._queue = [[],[],[]];
this._moduleTable = {};
this._methodTable = {};
this._callbacks = [];
this._callbackID = 0;

[
'processBatch',
'invokeCallbackAndReturnFlushedQueue',
'callFunctionReturnFlushedQueue',
'flushedQueue'].
forEach(function(fn){return _this[fn] = _this[fn].bind(_this);});

this._genModules(remoteModules);
localModules && this._genLookupTables(
localModules,this._moduleTable,this._methodTable);

if(__DEV__){
this._debugInfo = {};
this._remoteModuleTable = {};
this._remoteMethodTable = {};
this._genLookupTables(
remoteModules,this._remoteModuleTable,this._remoteMethodTable);}}_createClass(MessageQueue,[{key:'processBatch',value:






function processBatch(batch){var _this2=this;
guard(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
var method=call.method === 'callFunctionReturnFlushedQueue'?
'__callFunction':'__invokeCallback';
guard(function(){return _this2[method].apply(_this2,call.args);});});

BridgeProfiling.profile('ReactUpdates.batchedUpdates()');});

BridgeProfiling.profileEnd();});

return this.flushedQueue();}},{key:'callFunctionReturnFlushedQueue',value:


function callFunctionReturnFlushedQueue(module,method,args){var _this3=this;
guard(function(){return _this3.__callFunction(module,method,args);});
return this.flushedQueue();}},{key:'invokeCallbackAndReturnFlushedQueue',value:


function invokeCallbackAndReturnFlushedQueue(cbID,args){var _this4=this;
guard(function(){return _this4.__invokeCallback(cbID,args);});
return this.flushedQueue();}},{key:'flushedQueue',value:


function flushedQueue(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');
guard(function(){return JSTimersExecution.callImmediates();});
BridgeProfiling.profileEnd();
var queue=this._queue;
this._queue = [[],[],[]];
return queue[0].length?queue:null;}},{key:'__nativeCall',value:





function __nativeCall(module,method,params,onFail,onSucc){
if(onFail || onSucc){
if(__DEV__){

this._callbackID > 1 << 5 && (
this._debugInfo[this._callbackID >> 5] = null);

this._debugInfo[this._callbackID >> 1] = [module,method];}

onFail && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onFail;
onSucc && params.push(this._callbackID);
this._callbacks[this._callbackID++] = onSucc;}

this._queue[MODULE_IDS].push(module);
this._queue[METHOD_IDS].push(method);
this._queue[PARAMS].push(params);
if(__DEV__ && SPY_MODE && isFinite(module)){
console.log('JS->N : ' + this._remoteModuleTable[module] + '.' + 
this._remoteMethodTable[module][method] + '(' + JSON.stringify(params) + ')');}}},{key:'__callFunction',value:



function __callFunction(module,method,args){
BridgeProfiling.profile(function(){return module + '.' + method + '(' + stringifySafe(args) + ')';});
if(isFinite(module)){
method = this._methodTable[module][method];
module = this._moduleTable[module];}

if(__DEV__ && SPY_MODE){
console.log('N->JS : ' + module + '.' + method + '(' + JSON.stringify(args) + ')');}

module = this._require(module);
module[method].apply(module,args);
BridgeProfiling.profileEnd();}},{key:'__invokeCallback',value:


function __invokeCallback(cbID,args){
BridgeProfiling.profile(
function(){return 'MessageQueue.invokeCallback(' + cbID + ', ' + stringifySafe(args) + ')';});
var callback=this._callbacks[cbID];
if(__DEV__){
var debug=this._debugInfo[cbID >> 1];
var _module=debug && this._remoteModuleTable[debug[0]];
var method=debug && this._remoteMethodTable[debug[0]][debug[1]];
if(!callback){
console.error('Callback with id ' + cbID + ': ' + _module + '.' + method + '() not found');}else 
if(SPY_MODE){
console.log('N->JS : <callback for ' + _module + '.' + method + '>(' + JSON.stringify(args) + ')');}}


this._callbacks[cbID & ~1] = null;
this._callbacks[cbID | 1] = null;
callback.apply(null,args);
BridgeProfiling.profileEnd();}},{key:'_genLookupTables',value:





function _genLookupTables(localModules,moduleTable,methodTable){
var moduleNames=Object.keys(localModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var methods=localModules[moduleName].methods;
var moduleID=localModules[moduleName].moduleID;
moduleTable[moduleID] = moduleName;
methodTable[moduleID] = {};

var methodNames=Object.keys(methods);
for(var j=0,k=methodNames.length;j < k;j++) {
var methodName=methodNames[j];
var methodConfig=methods[methodName];
methodTable[moduleID][methodConfig.methodID] = methodName;}}}},{key:'_genModules',value:




function _genModules(remoteModules){
var moduleNames=Object.keys(remoteModules);
for(var i=0,l=moduleNames.length;i < l;i++) {
var moduleName=moduleNames[i];
var moduleConfig=remoteModules[moduleName];
this.RemoteModules[moduleName] = this._genModule({},moduleConfig);}}},{key:'_genModule',value:



function _genModule(module,moduleConfig){
var methodNames=Object.keys(moduleConfig.methods);
for(var i=0,l=methodNames.length;i < l;i++) {
var methodName=methodNames[i];
var methodConfig=moduleConfig.methods[methodName];
module[methodName] = this._genMethod(
moduleConfig.moduleID,methodConfig.methodID,methodConfig.type);}

Object.assign(module,moduleConfig.constants);
return module;}},{key:'_genMethod',value:


function _genMethod(module,method,type){
if(type === MethodTypes.local){
return null;}


var fn=null;
var self=this;
if(type === MethodTypes.remoteAsync){
fn = function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
return new Promise(function(resolve,reject){
self.__nativeCall(module,method,args,resolve,function(errorData){
var error=createErrorFromErrorData(errorData);
reject(error);});});};}else 



{
fn = function(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2 < _len2;_key2++) {args[_key2] = arguments[_key2];}
var lastArg=args.length > 0?args[args.length - 1]:null;
var secondLastArg=args.length > 1?args[args.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=hasSuccCB + hasErrorCB;
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
args = args.slice(0,args.length - numCBs);
return self.__nativeCall(module,method,args,onFail,onSucc);};}


fn.type = type;
return fn;}}]);return MessageQueue;})();




function createErrorFromErrorData(errorData){var 

message=

errorData.message;var extraErrorInfo=_objectWithoutProperties(errorData,['message']);
var error=new Error(message);
error.framesToPop = 1;
return Object.assign(error,extraErrorInfo);}


module.exports = MessageQueue;
});
__d('BridgeProfiling',["ReactPerf"],function(global, require, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;
var TRACE_TAG_REACT_APPS=1 << 17;

var BridgeProfiling={
profile:function(profileName){
if(GLOBAL.__BridgeProfilingIsProfiling){
profileName = typeof profileName === 'function'?
profileName():profileName;
console.profile(TRACE_TAG_REACT_APPS,profileName);}},



profileEnd:function(){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd(TRACE_TAG_REACT_APPS);}},



swizzleReactPerf:function(){
var ReactPerf=require('ReactPerf');
var originalMeasure=ReactPerf.measure;
ReactPerf.measure = function(objName,fnName,func){
func = originalMeasure.apply(ReactPerf,arguments);
return function(component){
if(GLOBAL.__BridgeProfilingIsProfiling){
var name=this._instance && this._instance.constructor && (
this._instance.constructor.displayName || 
this._instance.constructor.name);
BridgeProfiling.profile(objName + '.' + fnName + '(' + name + ')');}

var ret=func.apply(this,arguments);
BridgeProfiling.profileEnd();
return ret;};};}};





module.exports = BridgeProfiling;
});
__d('ReactPerf',[],function(global, require, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;
});
__d('ErrorUtils',[],function(global, require, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;
});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;
});
__d('performanceNow',["performance"],function(global, require, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;
});
__d('performance',["ExecutionEnvironment"],function(global, require, module, exports) {  "use strict";













var ExecutionEnvironment=require('ExecutionEnvironment');

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};
});
__d('ExecutionEnvironment',[],function(global, require, module, exports) {  "use strict";























var canUseDOM=false;







var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;
});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration || 0,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration || 0,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;
});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d,e){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d,e);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();







if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;
});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0;i < callbacks.length;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
});
__d('ReactReconciler',["ReactRef"],function(global, require, module, exports) {  'use strict';












var ReactRef=require('ReactRef');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(internalInstance._currentElement.ref != null){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}

return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;
if(nextElement === prevElement && 
nextElement._owner != null)

{










return;}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;
});
__d('ReactRef',["ReactOwner"],function(global, require, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;
});
__d('ReactOwner',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;
});
__d('Transaction',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},



















perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;
});
__d('stringifySafe',[],function(global, require, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;
});
__d('nativeModulePrefixNormalizer',[],function(global, require, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;
});
__d('InspectorUtils',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};
});
__d('ReactInstanceMap',[],function(global, require, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;
});
__d('ReactNativeMount',["NativeModules","ReactElement","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent","findNodeHandle"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactElement=require('ReactElement');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}







var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},


findNodeHandle:require('findNodeHandle'),
nativeTagToRootNodeID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];},






renderComponent:function(
nextElement,
containerTag,
callback)
{
var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextWrappedElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextWrappedElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


getID:function(nativeTag){
return ReactNativeTagHandles.tagToRootNodeID[nativeTag];}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;
});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var NATIVE_TOP_ROOT_ID_SEPARATOR='{TOP_LEVEL}';
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']' + NATIVE_TOP_ROOT_ID_SEPARATOR;},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},


getNativeTopRootIDFromNodeID:function(nodeID){
if(!nodeID){
return null;}

var index=nodeID.indexOf(NATIVE_TOP_ROOT_ID_SEPARATOR);
if(index === -1){
return null;}

return nodeID.substr(0,index + NATIVE_TOP_ROOT_ID_SEPARATOR.length);},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;
});
__d('ReactUpdateQueue',["ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';












var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
ReactUpdates.enqueueUpdate(internalInstance);}


function getInternalInstanceReadyForUpdate(publicInstance,callerName){
if(__DEV__){
warning(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);}



var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted component. ' + 
'This is a no-op. Please check the code for the %s component.',
callerName,
callerName,
publicInstance.constructor.displayName);}


return null;}


return internalInstance;}






var ReactUpdateQueue={








isMounted:function(publicInstance){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(publicInstance);
if(internalInstance){



return !!internalInstance._renderedComponent;}else 
{
return false;}},











enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueSetPropsInternal(internalInstance,partialProps);},


enqueueSetPropsInternal:function(internalInstance,partialProps){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
var props=assign({},element.props,partialProps);
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');

if(!internalInstance){
return;}

ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance,props);},


enqueueReplacePropsInternal:function(internalInstance,props){
var topLevelWrapper=internalInstance._topLevelWrapper;
invariant(
topLevelWrapper,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var wrapElement=topLevelWrapper._pendingElement || 
topLevelWrapper._currentElement;
var element=wrapElement.props;
topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(
wrapElement,
ReactElement.cloneAndReplaceProps(element,props));


enqueueUpdate(topLevelWrapper);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;
});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});



function getDeclarationErrorAddendum(owner){
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}









function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}










function instantiateReactComponent(node){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
invariant(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Element type is invalid: expected a string (for built-in components) ' + 
'or a class/function (for composite components) but got: %s.%s',
element.type == null?element.type:typeof element.type,
getDeclarationErrorAddendum(element._owner));



if(typeof element.type === 'string'){
instance = ReactNativeComponent.createInternalComponent(element);}else 
if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;
});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdateQueue","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._topLevelWrapper = null;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(context);

var Component=this._currentElement.type;


var inst=new Component(publicProps,publicContext,ReactUpdateQueue);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;
inst.updater = ReactUpdateQueue;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');

warning(
typeof inst.componentDidUnmount !== 'function',
'%s has a method called ' + 
'componentDidUnmount(). But there is no such lifecycle method. ' + 
'Did you mean componentWillUnmount()?',
this.getName() || 'A component');

warning(
typeof inst.componentWillRecieveProps !== 'function',
'%s has a method called ' + 
'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



var renderedElement=this._renderValidatedComponent();

this._renderedComponent = this._instantiateReactComponent(
renderedElement);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
inst.componentWillUnmount();}


ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;




this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;
this._topLevelWrapper = null;




ReactInstanceMap.remove(inst);},
















_maskContext:function(context){
var maskedContext=null;
var Component=this._currentElement.type;
var contextTypes=Component.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=this._currentElement.type;
if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var Component=this._currentElement.type;
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof Component.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
Component.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in Component.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=this._currentElement.type;
if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=this._context === nextUnmaskedContext?
inst.context:
this._processContext(nextUnmaskedContext);
var nextProps;


if(prevParentElement === nextParentElement){


nextProps = nextParentElement.props;}else 
{
nextProps = this._processProps(nextParentElement.props);




if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


if(replace && queue.length === 1){
return queue[0];}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var hasComponentDidUpdate=Boolean(inst.componentDidUpdate);
var prevProps;
var prevState;
var prevContext;
if(hasComponentDidUpdate){
prevProps = inst.props;
prevState = inst.state;
prevContext = inst.context;}


if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(hasComponentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;
});
__d('ReactComponentEnvironment',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;
});
__d('shouldUpdateReactComponent',[],function(global, require, module, exports) {  'use strict';
























function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
return (
nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key);}}



return false;}


module.exports = shouldUpdateReactComponent;
});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;
});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;
});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;
});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;
});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;
});
__d('EmitterSubscription',["EventSubscription"],function(global, require, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){_inherits(EmitterSubscription,_EventSubscription);









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;
});
__d('EventSubscription',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;
});
__d('EventSubscriptionVendor',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;
});
__d('PerformanceLogger',["performanceNow"],function(global, require, module, exports) {  'use strict';












var performanceNow=require('performanceNow');

var timespans={};





var PerformanceLogger={
addTimespan:function(key,lengthInMs,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to add a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
totalTime:lengthInMs};},



startTimespan:function(key,description){
if(timespans[key]){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to start a timespan that already exists ',
key);}


return;}


timespans[key] = {
description:description,
startTime:performanceNow()};},



stopTimespan:function(key){
if(!timespans[key] || !timespans[key].startTime){
if(__DEV__){
console.log(
'PerformanceLogger: Attempting to end a timespan that has not started ',
key);}


return;}


timespans[key].endTime = performanceNow();
timespans[key].totalTime = 
timespans[key].endTime - timespans[key].startTime;},


clearTimespans:function(){
timespans = {};},


getTimespans:function(){
return timespans;},


hasTimespan:function(key){
return !!timespans[key];},


logTimespans:function(){
for(var key in timespans) {
if(timespans[key].totalTime){
console.log(key + ': ' + timespans[key].totalTime + 'ms');}}},




addTimespans:function(newTimespans,labels){
for(var i=0,l=newTimespans.length;i < l;i += 2) {
var label=labels[i / 2];
PerformanceLogger.addTimespan(
label,
newTimespans[i + 1] - newTimespans[i],
label);}}};





module.exports = PerformanceLogger;
});
__d('regenerator/runtime.js',[],function(global, require, module, exports) {  !









(function(global){
"use strict";

var hasOwn=Object.prototype.hasOwnProperty;
var undefined;
var iteratorSymbol=
typeof Symbol === "function" && Symbol.iterator || "@@iterator";

var inModule=typeof module === "object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){


module.exports = runtime;}



return;}




runtime = global.regeneratorRuntime = inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){

var generator=Object.create((outerFn || Generator).prototype);

generator._invoke = makeInvokeMethod(
innerFn,self || null,
new Context(tryLocsList || []));


return generator;}

runtime.wrap = wrap;











function tryCatch(fn,obj,arg){
try{
return {type:"normal",arg:fn.call(obj,arg)};}
catch(err) {
return {type:"throw",arg:err};}}



var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";



var ContinueSentinel={};





function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

var Gp=GeneratorFunctionPrototype.prototype = Generator.prototype;
GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor = GeneratorFunction;
GeneratorFunction.displayName = "GeneratorFunction";



function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method] = function(arg){
return this._invoke(method,arg);};});}




runtime.isGeneratorFunction = function(genFun){
var ctor=typeof genFun === "function" && genFun.constructor;
return ctor?
ctor === GeneratorFunction || 


(ctor.displayName || ctor.name) === "GeneratorFunction":
false;};


runtime.mark = function(genFun){
genFun.__proto__ = GeneratorFunctionPrototype;
genFun.prototype = Object.create(Gp);
return genFun;};







runtime.awrap = function(arg){
return new AwaitArgument(arg);};


function AwaitArgument(arg){
this.arg = arg;}


function AsyncIterator(generator){


function invoke(method,arg){
var result=generator[method](arg);
var value=result.value;
return value instanceof AwaitArgument?
Promise.resolve(value.arg).then(invokeNext,invokeThrow):
Promise.resolve(value).then(function(unwrapped){















result.value = unwrapped;
return result;});}



if(typeof process === "object" && process.domain){
invoke = process.domain.bind(invoke);}


var invokeNext=invoke.bind(generator,"next");
var invokeThrow=invoke.bind(generator,"throw");
var invokeReturn=invoke.bind(generator,"return");
var previousPromise;

function enqueue(method,arg){
var enqueueResult=












previousPromise?previousPromise.then(function(){
return invoke(method,arg);}):
new Promise(function(resolve){
resolve(invoke(method,arg));});




previousPromise = enqueueResult["catch"](function(ignored){});

return enqueueResult;}




this._invoke = enqueue;}


defineIteratorMethods(AsyncIterator.prototype);




runtime.async = function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter:
iter.next().then(function(result){
return result.done?result.value:iter.next();});};



function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state === GenStateExecuting){
throw new Error("Generator is already running");}


if(state === GenStateCompleted){
if(method === "throw"){
throw arg;}




return doneResult();}


while(true) {
var delegate=context.delegate;
if(delegate){
if(method === "return" || 
method === "throw" && delegate.iterator[method] === undefined){


context.delegate = null;



var returnMethod=delegate.iterator["return"];
if(returnMethod){
var record=tryCatch(returnMethod,delegate.iterator,arg);
if(record.type === "throw"){


method = "throw";
arg = record.arg;
continue;}}



if(method === "return"){


continue;}}



var record=tryCatch(
delegate.iterator[method],
delegate.iterator,
arg);


if(record.type === "throw"){
context.delegate = null;



method = "throw";
arg = record.arg;
continue;}





method = "next";
arg = undefined;

var info=record.arg;
if(info.done){
context[delegate.resultName] = info.value;
context.next = delegate.nextLoc;}else 
{
state = GenStateSuspendedYield;
return info;}


context.delegate = null;}


if(method === "next"){
if(state === GenStateSuspendedYield){
context.sent = arg;}else 
{
context.sent = undefined;}}else 


if(method === "throw"){
if(state === GenStateSuspendedStart){
state = GenStateCompleted;
throw arg;}


if(context.dispatchException(arg)){


method = "next";
arg = undefined;}}else 


if(method === "return"){
context.abrupt("return",arg);}


state = GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type === "normal"){


state = context.done?
GenStateCompleted:
GenStateSuspendedYield;

var info={
value:record.arg,
done:context.done};


if(record.arg === ContinueSentinel){
if(context.delegate && method === "next"){


arg = undefined;}}else 

{
return info;}}else 


if(record.type === "throw"){
state = GenStateCompleted;


method = "throw";
arg = record.arg;}}};}







defineIteratorMethods(Gp);

Gp[iteratorSymbol] = function(){
return this;};


Gp.toString = function(){
return "[object Generator]";};


function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc = locs[1];}


if(2 in locs){
entry.finallyLoc = locs[2];
entry.afterLoc = locs[3];}


this.tryEntries.push(entry);}


function resetTryEntry(entry){
var record=entry.completion || {};
record.type = "normal";
delete record.arg;
entry.completion = record;}


function Context(tryLocsList){



this.tryEntries = [{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);}


runtime.keys = function(object){
var keys=[];
for(var key in object) {
keys.push(key);}

keys.reverse();



return function next(){
while(keys.length) {
var key=keys.pop();
if(key in object){
next.value = key;
next.done = false;
return next;}}






next.done = true;
return next;};};



function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);}


if(typeof iterable.next === "function"){
return iterable;}


if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i < iterable.length) {
if(hasOwn.call(iterable,i)){
next.value = iterable[i];
next.done = false;
return next;}}



next.value = undefined;
next.done = true;

return next;};


return next.next = next;}}




return {next:doneResult};}

runtime.values = values;

function doneResult(){
return {value:undefined,done:true};}


Context.prototype = {
constructor:Context,

reset:function(skipTempReset){
this.prev = 0;
this.next = 0;
this.sent = undefined;
this.done = false;
this.delegate = null;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this) {

if(name.charAt(0) === "t" && 
hasOwn.call(this,name) && 
!isNaN(+name.slice(1))){
this[name] = undefined;}}}},





stop:function(){
this.done = true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type === "throw"){
throw rootRecord.arg;}


return this.rval;},


dispatchException:function(exception){
if(this.done){
throw exception;}


var context=this;
function handle(loc,caught){
record.type = "throw";
record.arg = exception;
context.next = loc;
return !!caught;}


for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc === "root"){



return handle("end");}


if(entry.tryLoc <= this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch && hasFinally){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}else 
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


if(hasCatch){
if(this.prev < entry.catchLoc){
return handle(entry.catchLoc,true);}}else 


if(hasFinally){
if(this.prev < entry.finallyLoc){
return handle(entry.finallyLoc);}}else 


{
throw new Error("try statement without catch or finally");}}}},





abrupt:function(type,arg){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc <= this.prev && 
hasOwn.call(entry,"finallyLoc") && 
this.prev < entry.finallyLoc){
var finallyEntry=entry;
break;}}



if(finallyEntry && (
type === "break" || 
type === "continue") && 
finallyEntry.tryLoc <= arg && 
arg <= finallyEntry.finallyLoc){


finallyEntry = null;}


var record=finallyEntry?finallyEntry.completion:{};
record.type = type;
record.arg = arg;

if(finallyEntry){
this.next = finallyEntry.finallyLoc;}else 
{
this.complete(record);}


return ContinueSentinel;},


complete:function(record,afterLoc){
if(record.type === "throw"){
throw record.arg;}


if(record.type === "break" || 
record.type === "continue"){
this.next = record.arg;}else 
if(record.type === "return"){
this.rval = record.arg;
this.next = "end";}else 
if(record.type === "normal" && afterLoc){
this.next = afterLoc;}},



finish:function(finallyLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.finallyLoc === finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;}}},




"catch":function(tryLoc){
for(var i=this.tryEntries.length - 1;i >= 0;--i) {
var entry=this.tryEntries[i];
if(entry.tryLoc === tryLoc){
var record=entry.completion;
if(record.type === "throw"){
var thrown=record.arg;
resetTryEntry(entry);}

return thrown;}}





throw new Error("illegal catch attempt");},


delegateYield:function(iterable,resultName,nextLoc){
this.delegate = {
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


return ContinueSentinel;}};})(






typeof global === "object"?global:
typeof window === "object"?window:
typeof self === "object"?self:this);
});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







var exceptionID=0;

function reportException(e,isFatal,stack){
var currentExceptionID=++exceptionID;
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack,currentExceptionID);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack,currentExceptionID);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e,isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e,isFatal,stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){



console.errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
if(str.slice(0,10) === '"Warning: '){



return;}

var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error,false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null,stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame,maxLength);}).join('\n');}


function stackFrameToString(stackFrame,maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0,17) + '\u2026';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};
});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js"],function(global, require, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js');

var RCTSourceCode=NativeModules.SourceCode;
var RCTNetworking=NativeModules.Networking;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTNetworking){

return Promise.reject(new Error('RCTNetworking module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;
});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions.js","promise/setimmediate/done.js"],function(global, require, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions.js');
require('promise/setimmediate/done.js');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled,onSettled);};



module.exports = Promise;
});
__d('setImmediate',["ImmediateImplementation"],function(global, require, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;
});
__d('ImmediateImplementation',[],function(global, require, module, exports) {  /**
 * @generated SignedSource<<57d0446bbd1186485d372efe6b323dca>>
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! This file is a check-in of a static_upstream project!      !!
 * !!                                                            !!
 * !! You should not modify this file directly. Instead:         !!
 * !! 1) Use `fjs use-upstream` to temporarily replace this with !!
 * !!    the latest version from upstream.                       !!
 * !! 2) Make your changes, test them, etc.                      !!
 * !! 3) Use `fjs push-upstream` to copy your changes back to    !!
 * !!    static_upstream.                                        !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic
 * Denicola
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 * @providesModule ImmediateImplementation
 */

(function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());
});
__d('promise/setimmediate/es6-extensions.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._99);
p._37 = 1;
p._12 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._37 === 3) {
val = val._12;}

if(val._37 === 1)return res(i,val._12);
if(val._37 === 2)reject(val._12);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0;i < args.length;i++) {
res(i,args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null,onRejected);};
});
__d('promise/setimmediate/core.js',[],function(global, require, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._37 = 0;
this._12 = null;
this._59 = [];
if(fn === noop)return;
doResolve(fn,this);}

Promise._99 = noop;

Promise.prototype.then = function(onFulfilled,onRejected){
if(this.constructor !== Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._37 === 3) {
self = self._12;}

if(self._37 === 0){
self._59.push(deferred);
return;}

setImmediate(function(){
var cb=self._37 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._37 === 1){
resolve(deferred.promise,self._12);}else 
{
reject(deferred.promise,self._12);}

return;}

var ret=tryCallOne(cb,self._12);
if(ret === IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue === self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._37 = 3;
self._12 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue),self);
return;}}


self._37 = 1;
self._12 = newValue;
finale(self);}


function reject(self,newValue){
self._37 = 2;
self._12 = newValue;
finale(self);}

function finale(self){
for(var i=0;i < self._59.length;i++) {
handle(self,self._59[i]);}

self._59 = null;}


function Handler(onFulfilled,onRejected,promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done = true;
resolve(promise,value);},
function(reason){
if(done)return;
done = true;
reject(promise,reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise,LAST_ERROR);}}
});
__d('promise/setimmediate/done.js',["promise/setimmediate/core.js"],function(global, require, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core.js');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};
});
__d('SourceMap',[],function(global, require, module, exports) {  var 























scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName != "string"){
throw new TypeError('Expected string, got: ' + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split('/');
var i=1;
while(i < bits.length) {
if(bits[i] === '..'){
bits.splice(i - 1,1);}else 
if(bits[i] === '.'){
bits.splice(i,1);}else 
{
i++;}}


return bits.join('/');}


function join(a,b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,'/') + b;}}



function dirname(path){
var bits=path.split('/');
bits.pop();
return bits.join('/');}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define('source-map/source-map-generator',['require','exports','module','source-map/base64-vlq','source-map/util','source-map/array-set'],function(require,exports,module){

var base64VLQ=require('./base64-vlq');
var util=require('./util');
var ArraySet=require('./array-set').ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs,'file');
this._sourceRoot = util.getArg(aArgs,'sourceRoot',null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot,newMapping.source);}


newMapping.original = {
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,'generated');
var original=util.getArg(aArgs,'original',null);
var source=util.getArg(aArgs,'source',null);
var name=util.getArg(aArgs,'name',null);

this._validateMapping(generated,original,source,name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original != null && original.line,
originalColumn:original != null && original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot,source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot,original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}},


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && 'line' in aGenerated && 'column' in aGenerated && 
aOriginal && 'line' in aOriginal && 'column' in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error('Invalid mapping: ' + JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result='';
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i < len;i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ';';
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i - 1])){
continue;}

result += ',';}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define('source-map/base64-vlq',['require','exports','module','source-map/base64'],function(require,exports,module){

var base64=require('./base64');













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define('source-map/base64',['require','exports','module'],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.
split('').
forEach(function(ch,index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define('source-map/util',['require','exports','module'],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error('"' + aName + '" is a required argument.');}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === '/' && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,'') + '/' + aPath;}

exports.join = join;










function toSetString(aStr){
return '$' + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot,aPath){
aRoot = aRoot.replace(/\/$/,'');

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + '/') === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1,aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define('source-map/array-set',['require','exports','module','source-map/util'],function(require,exports,module){

var util=require('./util');







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i < len;i++) {
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error('"' + aStr + '" is not in the set.');};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error('No element indexed by ' + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define('source-map/source-map-consumer',['require','exports','module','source-map/util','source-map/binary-search','source-map/array-set','source-map/base64-vlq'],function(require,exports,module){

var util=require('./util');
var binarySearch=require('./binary-search');
var ArraySet=require('./array-set').ArraySet;
var base64VLQ=require('./base64-vlq');































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === 'string'){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/,''));}


var version=util.getArg(sourceMap,'version');
var sources=util.getArg(sourceMap,'sources');


var names=util.getArg(sourceMap,'names',[]);
var sourceRoot=util.getArg(sourceMap,'sourceRoot',null);
var sourcesContent=util.getArg(sourceMap,'sourcesContent',null);
var mappings=util.getArg(sourceMap,'mappings');
var file=util.getArg(sourceMap,'file',null);



if(version != this._version){
throw new Error('Unsupported version: ' + version);}






this._names = ArraySet.fromArray(names,true);
this._sources = ArraySet.fromArray(sources,true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype,'sources',{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_generatedMappings',{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,'_originalMappings',{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ';'){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ','){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source, but no line and column');}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error('Found a source and line, but no column');}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === 'number'){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError('Line must be greater than or equal to 1, got ' + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError('Column must be greater than or equal to 0, got ' + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,'line'),
generatedColumn:util.getArg(aArgs,'column')};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,'source',null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,'originalLine',null),
column:util.getArg(mapping,'originalColumn',null),
name:util.getArg(mapping,'name',null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error('"' + aSource + '" is not in the SourceMap.');};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,'source'),
originalLine:util.getArg(aArgs,'line'),
originalColumn:util.getArg(aArgs,'column')};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,'generatedLine',null),
column:util.getArg(mapping,'generatedColumn',null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define('source-map/binary-search',['require','exports','module'],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle,aHaystack,aCompare){
return aHaystack.length > 0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define('source-map/source-node',['require','exports','module','source-map/source-map-generator','source-map/util'],function(require,exports,module){

var SourceMapGenerator=require('./source-map-generator').SourceMapGenerator;
var util=require('./util');













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split('\n');


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0,mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping = mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1;i >= 0;i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i < len;i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ''){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0;i < len - 1;i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild === 'string'){
this.children[this.children.length - 1] = lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push(''.replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i < len;i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i < len;i++) {
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split('').forEach(function(ch){
if(ch === '\n'){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require('source-map/source-map-consumer').SourceMapConsumer,
SourceMapGenerator:require('source-map/source-map-generator').SourceMapGenerator,
SourceNode:require('source-map/source-node').SourceNode};}
});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url.js',[],function(global, require, module, exports) {  (














function(){
var define=null;




void (function(root,factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();
});
__d('parseErrorStack',["stacktrace-parser/index.js"],function(global, require, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index.js');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e,sourceMapInstance){
if(!e || !e.stack){
return [];}


var stack=Array.isArray(e.stack)?e.stack:stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;
});
__d('stacktrace-parser/index.js',["stacktrace-parser/lib/stacktrace-parser.js"],function(global, require, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser.js');
});
__d('stacktrace-parser/lib/stacktrace-parser.js',[],function(global, require, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i < j;++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;
});
__d('Platform',[],function(global, require, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;
});
__d('checkFlowAtRuntime',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












function checkFlowAtRuntime(){
var url=getPackagerURL();
if(!url){
return;}

fetch(url + 'flow/').
then(function(response){return response.json();}).
then(function(response){
if(response.silentError){
return;}

throw {
message:response.message,
stack:response.errors.map(function(err){
return _extends({},
err,{
methodName:err.description,
file:err.filename});})};},




function(){}).


done();}


function getPackagerURL(){
var NativeModules=require('NativeModules');
var scriptURL=NativeModules && 
NativeModules.SourceCode && 
NativeModules.SourceCode.scriptURL || 
'';




return getFirstOrNull(scriptURL.match(/^https?:\/\/[^/]+\//));}


function getFirstOrNull(ar){
return ar?ar[0]:null;}


module.exports = checkFlowAtRuntime;
});
__d('XMLHttpRequest',["FormData","NativeModules","RCTDeviceEventEmitter","XMLHttpRequestBase"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var FormData=require('FormData');
var RCTNetworking=require('NativeModules').Networking;
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){_inherits(XMLHttpRequest,_XMLHttpRequestBase);







function XMLHttpRequest(){_classCallCheck(this,XMLHttpRequest);
_get(Object.getPrototypeOf(XMLHttpRequest.prototype),'constructor',this).call(this);
this._requestId = null;
this._subscriptions = [];
this.upload = {};}_createClass(XMLHttpRequest,[{key:'_didCreateRequest',value:


function _didCreateRequest(requestId){var _this=this;
this._requestId = requestId;
this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didSendNetworkData',
function(args){return _this._didUploadProgress.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkResponse',
function(args){return _this._didReceiveResponse.call(_this,args[0],args[1],args[2]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didReceiveNetworkData',
function(args){return _this._didReceiveData.call(_this,args[0],args[1]);}));

this._subscriptions.push(RCTDeviceEventEmitter.addListener(
'didCompleteNetworkResponse',
function(args){return _this._didCompleteResponse.call(_this,args[0],args[1]);}));}},{key:'_didUploadProgress',value:



function _didUploadProgress(requestId,progress,total){
if(requestId === this._requestId && this.upload.onprogress){
var event={
lengthComputable:true,
loaded:progress,
total:total};

this.upload.onprogress(event);}}},{key:'_didReceiveResponse',value:



function _didReceiveResponse(requestId,status,responseHeaders){
if(requestId === this._requestId){
this.status = status;
this.setResponseHeaders(responseHeaders);
this.setReadyState(this.HEADERS_RECEIVED);}}},{key:'_didReceiveData',value:



function _didReceiveData(requestId,responseText){
if(requestId === this._requestId){
if(!this.responseText){
this.responseText = responseText;}else 
{
this.responseText += responseText;}

this.setReadyState(this.LOADING);}}},{key:'_didCompleteResponse',value:



function _didCompleteResponse(requestId,error){
if(requestId === this._requestId){
if(error){
this.responseText = error;}

this._clearSubscriptions();
this._requestId = null;
this.setReadyState(this.DONE);}}},{key:'_clearSubscriptions',value:



function _clearSubscriptions(){
for(var i=0;i < this._subscriptions.length;i++) {
var sub=this._subscriptions[i];
sub.remove();}

this._subscriptions = [];}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
if(typeof data === 'string'){
data = {string:data};}else 
if(data instanceof FormData){
data = {formData:data.getParts()};}

RCTNetworking.sendRequest(
{
method:method,
url:url,
data:data,
headers:headers,
incrementalUpdates:this.onreadystatechange?true:false},

this._didCreateRequest.bind(this));}},{key:'abortImpl',value:



function abortImpl(){
if(this._requestId){
RCTNetworking.cancelRequest(this._requestId);
this._clearSubscriptions();
this._requestId = null;}}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;
});
__d('FormData',[],function(global, require, module, exports) {  'use strict';var _slicedToArray=(function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n = (_s = _i.next()).done);_n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i['return'])_i['return']();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError('Invalid attempt to destructure non-iterable instance');}};})();var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 














































FormData=(function(){



function FormData(){_classCallCheck(this,FormData);
this._parts = [];
this._partsByKey = {};}_createClass(FormData,[{key:'append',value:


function append(key,value){
var parts=this._partsByKey[key];
if(parts){




parts[1] = value;
return;}

parts = [key,value];
this._parts.push(parts);
this._partsByKey[key] = parts;}},{key:'getParts',value:


function getParts(){
return this._parts.map(function(_ref){var _ref2=_slicedToArray(_ref,2);var name=_ref2[0];var value=_ref2[1];
var contentDisposition='form-data; name="' + name + '"';
var headers={'content-disposition':contentDisposition};
if(typeof value === 'string'){
return {string:value,headers:headers,fieldName:name};}






if(typeof value.name === 'string'){
headers['content-disposition'] += '; filename="' + value.name + '"';}

if(typeof value.type === 'string'){
headers['content-type'] = value.type;}

return _extends({},value,{headers:headers,fieldName:name});});}}]);return FormData;})();




module.exports = FormData;
});
__d('XMLHttpRequestBase',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















XMLHttpRequestBase=(function(){






















function XMLHttpRequestBase(){_classCallCheck(this,XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = null;
this.onload = null;
this.upload = undefined;

this._reset();
this._method = null;
this._url = null;
this._aborted = false;}_createClass(XMLHttpRequestBase,[{key:'_reset',value:


function _reset(){
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = '';
this.status = 0;

this._headers = {};
this._sent = false;
this._lowerCaseResponseHeaders = {};}},{key:'getAllResponseHeaders',value:


function getAllResponseHeaders(){
if(!this.responseHeaders){

return null;}

var headers=this.responseHeaders || {};
return Object.keys(headers).map(function(headerName){
return headerName + ': ' + headers[headerName];}).
join('\n');}},{key:'getResponseHeader',value:


function getResponseHeader(header){
var value=this._lowerCaseResponseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}},{key:'setRequestHeader',value:


function setRequestHeader(header,value){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

this._headers[header.toLowerCase()] = value;}},{key:'open',value:


function open(method,url,async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._reset();
this._method = method;
this._url = url;
this._aborted = false;
this.setReadyState(this.OPENED);}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'abortImpl',value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}},{key:'send',value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:


function abort(){
this._aborted = true;
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._reset();
this.setReadyState(this.DONE);}


this._reset();}},{key:'callback',value:


function callback(status,responseHeaders,responseText){
if(this._aborted){
return;}

this.status = status;
this.setResponseHeaders(responseHeaders || {});
this.responseText = responseText;
this.setReadyState(this.DONE);}},{key:'setResponseHeaders',value:


function setResponseHeaders(responseHeaders){
this.responseHeaders = responseHeaders || null;
var headers=responseHeaders || {};
this._lowerCaseResponseHeaders = 
Object.keys(headers).reduce(function(lcaseHeaders,headerName){
lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
return lcaseHeaders;},
{});}},{key:'setReadyState',value:


function setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}

if(newState === this.DONE && !this._aborted){
this._sendLoad();}}},{key:'_sendLoad',value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;
});
__d('fetch',[],function(global, require, module, exports) {  'use strict';
















var self={};

/**
 * Copyright (c) 2014 GitHub, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @preserve-header
 */
(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name,values){
values.forEach(function(value){
self.append(name,value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name,headers[name]);});}}




Headers.prototype.append = function(name,value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name,value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name,self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(),


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url,options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input,init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name,values){
values.forEach(function(value){
xhr.setRequestHeader(name,value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;
});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;
});
__d('logError',[],function(global, require, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;
});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){_inherits(WebSocket,_WebSocketBase);function WebSocket(){_classCallCheck(this,WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype),'constructor',this).apply(this,arguments);}_createClass(WebSocket,[{key:'connectToSocketImpl',value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url,this._socketId);
this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'sendStringImpl',value:


function sendStringImpl(message){
RCTWebSocketManager.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_unregisterEvents',value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}},{key:'_registerEvents',value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage',
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketOpen',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketClosed',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketFailed',
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;
});
__d('WebSocketBase',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url,protocols){_classCallCheck(this,WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase,[{key:'close',value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}},{key:'send',value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;
});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');
var warning=require('warning');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
warning(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;

var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.didPutListener){
PluginModule.didPutListener(id,registrationName,listener);}},








getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


var bankForRegistrationName=listenerBank[registrationName];

if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
if(!listenerBank[registrationName][id]){
continue;}


var PluginModule=
EventPluginRegistry.registrationNameModules[registrationName];
if(PluginModule && PluginModule.willDeleteListener){
PluginModule.willDeleteListener(id,registrationName);}


delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0;i < plugins.length;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;
});
__d('EventPluginRegistry',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;
});
__d('EventPluginUtils',["EventConstants","invariant","warning"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');
var warning=require('warning');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
warning(
InjectedMount && InjectedMount.getNode && InjectedMount.getID,
'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 
'module is missing getNode or getID.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

warning(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,

getNode:function(id){
return injection.Mount.getNode(id);},

getID:function(node){
return injection.Mount.getID(node);},


injection:injection};


module.exports = EventPluginUtils;
});
__d('EventConstants',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;
});
__d('accumulateInto',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;
});
__d('forEachAccumulated',[],function(global, require, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;
});
__d('IOSDefaultEventPluginOrder',[],function(global, require, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;
});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;
});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, module, exports) {  "use strict";



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;
});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');





var EventInterface={
path:null,
type:null,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;
this.target = nativeEventTarget;
this.currentTarget = nativeEventTarget;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.fourArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;
});
__d('merge',["mergeInto"],function(global, require, module, exports) {  "use strict";
































var mergeInto=require('mergeInto');








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;
});
__d('mergeInto',["mergeHelpers"],function(global, require, module, exports) {  "use strict";

































var mergeHelpers=require('mergeHelpers');

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;
});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, module, exports) {  "use strict";


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;
});
__d('NodeHandle',[],function(global, require, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;
});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d,e){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d,e);}else 
{
transaction.perform(callback,null,a,b,c,d,e);}}};




module.exports = ReactDefaultBatchingStrategy;
});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;
});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i < childrenUpdates.length;i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;
});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;
});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;
});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;
});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');



var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}


module.exports = InteractionManager;
});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());
});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());
});
__d('guid',[],function(global, require, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;
});
__d('isNode',[],function(global, require, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;
});
__d('toIterator',[],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;
});
__d('_shouldPolyfillES6Collection',[],function(global, require, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){_inherits(SubCollection,_Collection);function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;
});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to,blockNativeResponder){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to),
blockNativeResponder);}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;
});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;},


mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
'RCTRawText',
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
{text:this._stringText});

return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;
});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID,blockNativeResponder){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID,
blockNativeResponder);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles.getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent,
nativeEventTarget);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent,
nativeEventTarget);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
var blockNativeResponder=executeDirectDispatch(grantEvent) === true;
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent,
nativeEventTarget);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent,
nativeEventTarget);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID,blockNativeResponder);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent,
nativeEventTarget);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted,rejectEvent);}}else 

{
extracted = accumulate(extracted,grantEvent);
changeResponder(wantsResponderID,blockNativeResponder);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent){
return topLevelTargetID && (



topLevelType === EventConstants.topLevelTypes.topScroll && 
!nativeEvent.responderIgnoreScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0;i < touches.length;i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var isAncestor=
ReactInstanceHandles.isAncestorIDOf(
responderID,
EventPluginUtils.getID(target));

if(isAncestor){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent,nativeEventTarget);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID,nativeEvent)?
setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent,
nativeEventTarget):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(
incrementalTouch,
responderID,
nativeEvent,
nativeEventTarget);

gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted,gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent,nativeEventTarget);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;
});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, module, exports) {  'use strict';













var SyntheticEvent=require('SyntheticEvent');






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent,nativeEventTarget);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports = ResponderSyntheticEvent;
});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, module, exports) {  'use strict';












var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null,'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack,touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0;i < touchBank.length;i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;
});
__d('accumulate',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next != null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports = accumulate;
});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;
});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');












var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.viewConfig = viewConfig;
Constructor.propTypes = viewConfig.propTypes;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;
});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteListener=ReactNativeEventEmitter.deleteListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},












computeUpdatedProperties:function(prevProps,nextProps,validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null,
prevProps,
nextProps,
validAttributes);







if(styleDiffer(nextProps.style,prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload,
this.previousFlattenedStyle,
nextFlattenedStyle,
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
if(nextProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}else 
{
deleteListener(this._rootNodeID,key);}}}},










mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{},
this._currentElement.props,
this.viewConfig.validAttributes);


var nativeTopRootID=ReactNativeTagHandles.getNativeTopRootIDFromNodeID(rootID);
RCTUIManager.createView(
tag,
this.viewConfig.uiViewClassName,
nativeTopRootID?ReactNativeTagHandles.rootNodeIDToTag[nativeTopRootID]:null,
updatePayload);


this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;
});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');


















var NativeMethodsMixin={
measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},



measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps,style);}


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
props);},



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;
});
__d('TextInputState',["Platform","NativeModules"],function(global, require, module, exports) {  'use strict';
















var Platform=require('Platform');
var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
if(Platform.OS === 'ios'){
RCTUIManager.focus(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.focusTextInput,
null);}}},










blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
if(Platform.OS === 'ios'){
RCTUIManager.blur(textFieldID);}else 
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
textFieldID,
RCTUIManager.AndroidTextInput.Commands.blurTextInput,
null);}}}};






module.exports = TextInputState;
});
__d('flattenStyle',["StyleSheetRegistry","invariant"],function(global, require, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}


function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
for(var key in computedStyle) {
result[key] = computedStyle[key];

if(__DEV__){
var value=computedStyle[key];}}}}




return result;}


module.exports = flattenStyle;
});
__d('StyleSheetRegistry',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;
});
__d('mergeFast',[],function(global, require, module, exports) {  'use strict';





















var mergeFast=function(one,two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;
});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix,
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({},style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'perspective':
_multiplyTransform(result,MatrixMath.reusePerspectiveCommand,[value]);
break;
case 'rotateX':
_multiplyTransform(result,MatrixMath.reuseRotateXCommand,[_convertToRadians(value)]);
break;
case 'rotateY':
_multiplyTransform(result,MatrixMath.reuseRotateYCommand,[_convertToRadians(value)]);
break;
case 'rotate':
case 'rotateZ':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({},
style,{
transformMatrix:result,
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({},
style,{
transformMatrix:result});}






function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an Animated.Value to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotateX':
case 'rotateY':
case 'rotateZ':
case 'rotate':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = precomputeStyle;
});
__d('MatrixMath',["invariant"],function(global, require, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createOrthographic:function(left,right,bottom,top,near,far){
var a=2 / (right - left);
var b=2 / (top - bottom);
var c=-2 / (far - near);

var tx=-(right + left) / (right - left);
var ty=-(top + bottom) / (top - bottom);
var tz=-(far + near) / (far - near);

return [
a,0,0,0,
0,b,0,0,
0,0,c,0,
tx,ty,tz,1];},



createFrustum:function(left,right,bottom,top,near,far){
var r_width=1 / (right - left);
var r_height=1 / (top - bottom);
var r_depth=1 / (near - far);
var x=2 * (near * r_width);
var y=2 * (near * r_height);
var A=(right + left) * r_width;
var B=(top + bottom) * r_height;
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
x,0,0,0,
0,y,0,0,
A,B,C,-1,
0,0,D,0];},



createPerspective:function(fovInRadians,aspect,near,far){
var h=1 / Math.tan(fovInRadians);
var r_depth=1 / (near - far);
var C=(far + near) * r_depth;
var D=2 * (far * near * r_depth);
return [
h / aspect,0,0,0,
0,h,0,0,
0,0,C,-1,
0,0,D,0];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reusePerspectiveCommand:function(matrixCommand,p){
matrixCommand[11] = -1 / p;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;
});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;
});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent,
nativeEvent.target);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;
});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent,
nativeEventTarget);

runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;
});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;
});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;
});
__d('ImageResizeMode',["keyMirror"],function(global, require, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;
});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;
});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:createElementTypeChecker(),
instanceOf:createInstanceTypeChecker,
node:createNodeChecker(),
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(
isRequired,
props,
propName,
componentName,
location,
propFullName)
{
componentName = componentName || ANONYMOUS;
propFullName = propFullName || propName;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location,propFullName);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + 
expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(
propValue,
i,
componentName,
location,
propFullName + '[' + i + ']');

if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a single ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location,propFullName){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
if(!Array.isArray(expectedValues)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOf, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
if(!Array.isArray(arrayOfTypeCheckers)){
return createChainableTypeChecker(function(){
return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');});}





function validate(props,propName,componentName,location,propFullName){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(
checker(props,propName,componentName,location,propFullName) == null)
{
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location,propFullName){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location,propFullName){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(
propValue,
key,
componentName,
location,
propFullName + '.' + key);

if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;
});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({perspective:ReactPropTypes.number}),
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({rotateX:ReactPropTypes.string}),
ReactPropTypes.shape({rotateY:ReactPropTypes.string}),
ReactPropTypes.shape({rotateZ:ReactPropTypes.string}),
ReactPropTypes.shape({scale:ReactPropTypes.number}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number})])),








transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number),


rotation:ReactPropTypes.number,
scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;
});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
color:ReactPropTypes.string,
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontStyle:ReactPropTypes.oneOf(['normal','italic']),





fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),




letterSpacing:ReactPropTypes.number,
lineHeight:ReactPropTypes.number,



textAlign:ReactPropTypes.oneOf(
['auto','left','right','center','justify']),




textDecorationLine:ReactPropTypes.oneOf(
['none','underline','line-through','underline line-through']),




textDecorationStyle:ReactPropTypes.oneOf(
['solid','double','dotted','dashed']),




textDecorationColor:ReactPropTypes.string,



writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl'])});




var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;
});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backfaceVisibility:ReactPropTypes.oneOf(['visible','hidden']),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
borderStyle:ReactPropTypes.oneOf(['solid','dotted','dashed']),
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;
});
__d('matricesDiffer',[],function(global, require, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;
});
__d('sizesDiffer',[],function(global, require, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;
});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;
});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
if(renderedChildren.hasOwnProperty(name)){
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}}};






module.exports = ReactChildReconciler;
});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=result[name] === undefined;
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;
});
__d('styleDiffer',["deepDiffer"],function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;
});
__d('deepDiffer',[],function(global, require, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;
});
__d('diffRawProperties',["deepDiffer"],function(global, require, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');












function diffRawProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;
var differ;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){


differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || !prevProp || differ(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}



differ = validAttributeConfig.diff || deepDiffer;
isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = 
isScalar && 
prevProp !== nextProp || 
differ(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;
});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;
});
__d('RCTLog',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this,RCTLog);}_createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;
});
__d('deprecated',["Object.assign","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');











function deprecated(fnName,newModule,ctx,fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned,



'`require' + '("react").%s` is deprecated. Please use `require' + '("%s").%s` ' + 
'instead.',
fnName,
newModule,
fnName);

warned = true;
return fn.apply(ctx,arguments);};



return assign(newFn,fn);}


return fn;}


module.exports = deprecated;
});
__d('onlyChild',["ReactElement","invariant"],function(global, require, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;
});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({displayName:'ActivityIndicatorIOS',
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func},


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
width:20,
height:20},

sizeLarge:{
width:36,
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
ActivityIndicatorIOS,
{nativeOnly:{activityIndicatorViewStyle:true}});


module.exports = ActivityIndicatorIOS;
});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;
});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes).sort(),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];






















var View=React.createClass({displayName:'View',
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,






accessibilityComponentType:PropTypes.oneOf([
'none',
'button',
'radiobutton_checked',
'radiobutton_unchecked']),









accessibilityLiveRegion:PropTypes.oneOf([
'none',
'polite',
'assertive']),


















importantForAccessibility:PropTypes.oneOf([
'auto',
'yes',
'no',
'no-hide-descendants']),







accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAcccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,





testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,






onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,














renderToHardwareTextureAndroid:PropTypes.bool,














shouldRasterizeIOS:PropTypes.bool,








collapsable:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;
});
__d('ReactNativeViewAttributes',["merge"],function(global, require, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityComponentType:true,
accessibilityLiveRegion:true,
accessibilityTraits:true,
importantForAccessibility:true,
testID:true,
renderToHardwareTextureAndroid:true,
shouldRasterizeIOS:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true,
collapsable:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;
});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;
});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;
});
__d('requireNativeComponent',["verifyPropTypes","NativeModules","UnimplementedView","createReactNativeComponentClass","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};










'use strict';

var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


















function requireNativeComponent(
viewName,
componentInterface,
extraConfig)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
viewConfig.propTypes = componentInterface && componentInterface.propTypes;
for(var key in nativeProps) {
var differ=TypeToDifferMap[nativeProps[key]];
viewConfig.validAttributes[key] = differ?{diff:differ}:true;}

if(__DEV__){
componentInterface && verifyPropTypes(
componentInterface,
viewConfig,
extraConfig && extraConfig.nativeOnly);}


return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;
});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');







function verifyPropTypes(
componentInterface,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=componentInterface.name || 
componentInterface.displayName || 
'unknown';
if(!componentInterface.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!componentInterface.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;
});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({displayName:'UnimplementedView',
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;
});
__d('insetsDiffer',[],function(global, require, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;
});
__d('pointsDiffer',[],function(global, require, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;
});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({displayName:'DatePickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS);

module.exports = DatePickerIOS;
});
__d('DrawerLayoutAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","requireNativeComponent","resolveAssetSource","warning"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var warning=require('warning');

























var Image=React.createClass({displayName:'Image',
propTypes:{
style:StyleSheetPropType(ImageStylePropTypes),





source:PropTypes.oneOfType([
PropTypes.shape({
uri:PropTypes.string}),


PropTypes.number]),






defaultSource:PropTypes.shape({
uri:PropTypes.string}),





accessible:PropTypes.bool,





accessibilityLabel:PropTypes.string,








capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),




testID:PropTypes.string,




onLayout:PropTypes.func,




onLoadStart:PropTypes.func,




onProgress:PropTypes.func,




onError:PropTypes.func,




onLoad:PropTypes.func,




onLoadEnd:PropTypes.func},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


render:function(){
for(var prop in cfg.nativeOnly) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};
var defaultSource=this.props.defaultSource && resolveAssetSource(this.props.defaultSource) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]) || {};

var isNetwork=source.uri && source.uri.match(/^https?:/);
var RawImage=isNetwork?RCTNetworkImageView:RCTImageView;
var resizeMode=this.props.resizeMode || (style || {}).resizeMode || 'cover';
var tintColor=(style || {}).tintColor;

return (
React.createElement(RawImage,_extends({},
this.props,{
style:style,
resizeMode:resizeMode,
tintColor:tintColor,
src:source.uri,
defaultImageSrc:defaultSource.uri})));}});





var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var cfg={
nativeOnly:{
src:true,
defaultImageSrc:true,
imageTag:true,
progressHandlerRegistered:true}};


var RCTImageView=requireNativeComponent('RCTImageView',Image,cfg);
var RCTNetworkImageView=NativeModules.NetworkImageViewManager?requireNativeComponent('RCTNetworkImageView',Image,cfg):RCTImageView;

module.exports = Image;
});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;
});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false};}else 

{
return {
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;
});
__d('AssetRegistry',[],function(global, require, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};
});
__d('PixelRatio',["Dimensions"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 
































PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:


















function get(){
return Dimensions.get('window').scale;}},{key:'getFontScale',value:













function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;
});
__d('Dimensions',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;
});
__d('ListView',["ListViewDataSource","React","NativeModules","NativeModules","ScrollView","ScrollResponder","StaticRenderer","react-timer-mixin/TimerMixin.js","isEmpty","logError","merge"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var RCTScrollViewManager=require('NativeModules').ScrollViewManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var isEmpty=require('isEmpty');
var logError=require('logError');
var merge=require('merge');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({displayName:'ListView',
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderSeparator:PropTypes.func,










renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,






renderScrollComponent:React.PropTypes.func.isRequired,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentLength:this.scrollProperties.contentLength,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF] && 
this.refs[SCROLLVIEW_REF].getScrollResponder && 
this.refs[SCROLLVIEW_REF].getScrollResponder();},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
renderScrollComponent:function(props){return React.createElement(ScrollView,props);},
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



getInnerViewNode:function(){
return this.refs[SCROLLVIEW_REF].getInnerViewNode();},


componentWillMount:function(){

this.scrollProperties = {
visibleLength:null,
contentLength:null,
offset:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:0,
curRenderedRowsCount:rowsToRender};});}},





componentDidUpdate:function(){var _this2=this;
this.requestAnimationFrame(function(){
_this2._measureAndUpdateScrollProps();});},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}var _props=






this.props;var renderScrollComponent=_props.renderScrollComponent;var props=_objectWithoutProperties(_props,['renderScrollComponent']);
if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}

Object.assign(props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices,



onKeyboardWillShow:undefined,
onKeyboardWillHide:undefined,
onKeyboardDidShow:undefined,
onKeyboardDidHide:undefined});




return React.cloneElement(renderScrollComponent(props),{
ref:SCROLLVIEW_REF},
header,bodyComponents,footer);},






_measureAndUpdateScrollProps:function(){
var scrollComponent=this.getScrollResponder();
if(!scrollComponent || !scrollComponent.getInnerViewNode){
return;}

RCTUIManager.measureLayout(
scrollComponent.getInnerViewNode(),
React.findNodeHandle(scrollComponent),
logError,
this._setScrollContentLength);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(scrollComponent),
logError,
this._setScrollVisibleLength);




RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && 
RCTScrollViewManager.calculateChildFrames(
React.findNodeHandle(scrollComponent),
this._updateChildFrames);},



_setScrollContentLength:function(left,top,width,height){
this.scrollProperties.contentLength = !this.props.horizontal?
height:width;},


_setScrollVisibleLength:function(left,top,width,height){
this.scrollProperties.visibleLength = !this.props.horizontal?
height:width;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_updateChildFrames:function(childFrames){
this._updateVisibleRows(childFrames);},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentLength === null || 
this.scrollProperties.visibleLength === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this3=this;
this.setState(function(state,props){
var rowsToRender=Math.min(
state.curRenderedRowsCount + props.pageSize,
props.dataSource.getRowCount());

return {
prevRenderedRowsCount:state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender};},

function(){
_this3._measureAndUpdateScrollProps();
_this3.setState(function(state){return {
prevRenderedRowsCount:state.curRenderedRowsCount};});});},




_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentLength - 
scrollProperties.visibleLength - 
scrollProperties.offset;},


_updateVisibleRows:function(updatedFrames){var _this4=this;
if(!this.props.onChangeVisibleRows){
return;}

if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this4._childFrames[newFrame.index] = merge(newFrame);});}


var isVertical=!this.props.horizontal;
var dataSource=this.props.dataSource;
var visibleMin=this.scrollProperties.offset;
var visibleMax=visibleMin + this.scrollProperties.visibleLength;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var min=isVertical?frame.y:frame.x;
var max=min + (isVertical?frame.height:frame.width);
if(min > visibleMax || max < visibleMin){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
var isVertical=!this.props.horizontal;
this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[
isVertical?'height':'width'];

this.scrollProperties.contentLength = e.nativeEvent.contentSize[
isVertical?'height':'width'];

this.scrollProperties.offset = e.nativeEvent.contentOffset[
isVertical?'y':'x'];

this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentLength !== this._sentEndForContentLength && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentLength = this.scrollProperties.contentLength;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;
});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;
});
__d('isEmpty',[],function(global, require, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;
});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","dismissKeyboard","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var dismissKeyboard=require('dismissKeyboard');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';
















var ScrollView=React.createClass({displayName:'ScrollView',
propTypes:{






automaticallyAdjustContentInsets:PropTypes.bool,





contentInset:EdgeInsetsPropType,





contentOffset:PointPropType,







bounces:PropTypes.bool,






bouncesZoom:PropTypes.bool,






alwaysBounceHorizontal:PropTypes.bool,






alwaysBounceVertical:PropTypes.bool,







centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),







decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,





directionalLockEnabled:PropTypes.bool,





canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,




maximumZoomScale:PropTypes.number,




minimumZoomScale:PropTypes.number,




onScroll:PropTypes.func,




onScrollAnimationEnd:PropTypes.func,






pagingEnabled:PropTypes.bool,





scrollEnabled:PropTypes.bool,









scrollEventThrottle:PropTypes.number,






scrollIndicatorInsets:EdgeInsetsPropType,





scrollsToTop:PropTypes.bool,



showsHorizontalScrollIndicator:PropTypes.bool,



showsVerticalScrollIndicator:PropTypes.bool,








stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),
style:StyleSheetPropType(ViewStylePropTypes),






removeClippedSubviews:PropTypes.bool,




zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},








getScrollResponder:function(){
return this;},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){

this.getScrollResponder().scrollResponderScrollTo(destX || 0,destY || 0);},


scrollWithoutAnimationTo:function(destY,destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);},



handleScroll:function(e){
if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');}}



if(Platform.OS === 'android'){
if(this.props.keyboardDismissMode === 'on-drag'){
dismissKeyboard();}}


this.scrollResponderHandleScroll(e);},


render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}



var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews,
collapsable:false},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.handleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}}


invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;
});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;
});
__d('ScrollResponder',["NativeModules","Platform","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(this.props.keyboardShouldPersistTaps === false && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,"ScrollView doesn't take rejection well - scrolls anyway");},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(this.props.keyboardShouldPersistTaps === false && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[offsetX,offsetY]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
offsetX,
offsetY);}},








scrollResponderZoomTo:function(rect){
RCTUIManager.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this.getInnerViewNode()),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);
warning(this.getInnerViewNode,'You need to implement getInnerViewNode in ' + 
this.constructor.displayName + ' to get full' + 
'functionality from ScrollResponder mixin. See example of ListView and' + 
' ScrollView.');},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(e){


if(e){
this.keyboardWillOpenTo = e;}

this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;
});
__d('Subscribable',["EventEmitter"],function(global, require, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;
});
__d('dismissKeyboard',["TextInputState"],function(global, require, module, exports) {  'use strict';








var TextInputState=require('TextInputState');

function dismissKeyboard(){
TextInputState.blurTextInput(TextInputState.currentlyFocusedField());}


module.exports = dismissKeyboard;
});
__d('StaticRenderer',["React"],function(global, require, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({displayName:'StaticRenderer',
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({displayName:'MapView',
mixins:[NativeMethodsMixin],

checkAnnotationIds:function(annotations){

var newAnnotations=annotations.map(function(annotation){
if(!annotation.id){

annotation.id = encodeURIComponent(JSON.stringify(annotation));}


return annotation;});


this.setState({
annotations:newAnnotations});},



componentWillMount:function(){
if(this.props.annotations){
this.checkAnnotationIds(this.props.annotations);}},



componentWillReceiveProps:function(nextProps){
if(nextProps.annotations){
this.checkAnnotationIds(nextProps.annotations);}},



propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,








mapType:React.PropTypes.oneOf([
'standard',
'satellite',
'hybrid']),








region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




animateDrop:React.PropTypes.bool,




title:React.PropTypes.string,
subtitle:React.PropTypes.string,




hasLeftCallout:React.PropTypes.bool,
hasRightCallout:React.PropTypes.bool,




onLeftCalloutPress:React.PropTypes.func,
onRightCalloutPress:React.PropTypes.func,




id:React.PropTypes.string})),






maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func,




onAnnotationPress:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



_onPress:function(event){
if(event.nativeEvent.action === 'annotation-click'){
this.props.onAnnotationPress && this.props.onAnnotationPress(event.nativeEvent.annotation);}


if(event.nativeEvent.action === 'callout-click'){
if(!this.props.annotations){
return;}



for(var i=0;i < this.props.annotations.length;i++) {
var annotation=this.props.annotations[i];
if(annotation.id === event.nativeEvent.annotationId){

if(event.nativeEvent.side === 'left'){
annotation.onLeftCalloutPress && annotation.onLeftCalloutPress(event.nativeEvent);}else 
if(event.nativeEvent.side === 'right'){
annotation.onRightCalloutPress && annotation.onRightCalloutPress(event.nativeEvent);}}}}},







render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onPress:this._onPress,onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
active:true,
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView);}


module.exports = MapView;
});
__d('Modal',["ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var RCTModalHostView=requireNativeComponent('RCTModalHostView',null);var 

Modal=(function(_React$Component){_inherits(Modal,_React$Component);function Modal(){_classCallCheck(this,Modal);_get(Object.getPrototypeOf(Modal.prototype),'constructor',this).apply(this,arguments);}_createClass(Modal,[{key:'render',value:
function render(){
if(this.props.visible === false){
return null;}


if(this.props.transparent){
var containerBackgroundColor={backgroundColor:'transparent'};}


return (
React.createElement(RCTModalHostView,{
animated:this.props.animated,
transparent:this.props.transparent,
style:styles.modal},
React.createElement(View,{style:[styles.container,containerBackgroundColor]},
this.props.children)));}}]);return Modal;})(React.Component);






Modal.propTypes = {
animated:PropTypes.bool,
transparent:PropTypes.bool};


var styles=StyleSheet.create({
modal:{
position:'absolute'},

container:{
left:0,
position:'absolute',
top:0}});



module.exports = Modal;
});
__d('Navigator',["NativeModules","Dimensions","InteractionMixin","Map","NavigationContext","NavigatorBreadcrumbNavigationBar","NavigatorNavigationBar","NavigatorSceneConfigs","PanResponder","React","StaticContainer.react","StyleSheet","Subscribable","react-timer-mixin/TimerMixin.js","View","clamp","flattenStyle","invariant","rebound/rebound.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var Map=require('Map');
var NavigationContext=require('NavigationContext');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var PanResponder=require('PanResponder');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var rebound=require('rebound/rebound.js');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
pointerEvents:'none',
style:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}


function getRouteID(route){
if(route === null || typeof route !== 'object'){
return String(route);}


var key='__navigatorRouteID';

if(!route.hasOwnProperty(key)){
Object.defineProperty(route,key,{
enumerable:false,
configurable:false,
writable:false,
value:getuid()});}


return route[key];}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
top:SCREEN_HEIGHT,
bottom:-SCREEN_HEIGHT},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];





























































var Navigator=React.createClass({displayName:'Navigator',

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),







onWillFocus:PropTypes.func,








onDidFocus:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
this._renderedSceneMap = new Map();

var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

routeStack:routeStack,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;

this.__defineGetter__('navigationContext',this._getNavigationContext);

this._subRouteFocus = [];
this.parentNavigator = this.props.navigator;
this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);},


componentWillUnmount:function(){
if(this._navigationContext){
this._navigationContext.dispose();
this._navigationContext = null;}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}},







_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._emitWillFocus(this.state.routeStack[queuedTransition.destIndex]);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});

if(this.props.onDidFocus){
this.props.onDidFocus(route);}},



_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});

var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
pointerEvents:'auto',
style:{
top:sceneStyle.top,
bottom:sceneStyle.bottom}};


if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.style.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHarwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHarwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress && toIndex >= 0 && fromIndex >= 0){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){
var destIndex=this._getDestIndexWithinBounds(n);
this._enableScene(destIndex);
this._emitWillFocus(this.state.routeStack[destIndex]);
this._transitionTo(destIndex);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this6=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

this._emitWillFocus(nextStack[destIndex]);
this.setState({
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack},
function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);});},



_popN:function(n){var _this7=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._emitWillFocus(this.state.routeStack[popIndex]);
this._transitionTo(
popIndex,
null,
null,
function(){
_this7._cleanScenesPastIndex(popIndex);});},




pop:function(){
if(this.state.transitionQueue.length){






return;}


if(this.state.presentedIndex > 0){
this._popN(1);}},









replaceAtIndex:function(route,index,cb){var _this8=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}


var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

if(index === this.state.presentedIndex){
this._emitWillFocus(route);}

this.setState({
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack},
function(){
if(index === _this8.state.presentedIndex){
_this8._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this9=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this9.state.presentedIndex > 0){
_this9._popN(_this9.state.presentedIndex);}});},




getCurrentRoutes:function(){

return this.state.routeStack.slice();},


_cleanScenesPastIndex:function(index){
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
this.setState({
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)});}},




_renderScene:function(route,i){var _this10=this;
var disabledSceneStyle=null;
var disabledScenePointerEvents='auto';
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;
disabledScenePointerEvents = 'none';}

return (
React.createElement(View,{
key:'scene_' + getRouteID(route),
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return _this10.state.transitionFromIndex != null || _this10.state.transitionFromIndex != null;},

pointerEvents:disabledScenePointerEvents,
style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
this.props.renderScene(
route,
this)));},





_renderNavigationBar:function(){var _this11=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this11._navBar = navBar;},
navigator:this,
navState:this.state});},



render:function(){var _this12=this;
var newRenderedSceneMap=new Map();
var scenes=this.state.routeStack.map(function(route,index){
var renderedScene;
if(_this12._renderedSceneMap.has(route) && 
index !== _this12.state.presentedIndex){
renderedScene = _this12._renderedSceneMap.get(route);}else 
{
renderedScene = _this12._renderScene(route,index);}

newRenderedSceneMap.set(route,renderedScene);
return renderedScene;});

this._renderedSceneMap = newRenderedSceneMap;
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

scenes),

this._renderNavigationBar()));},




_getNavigationContext:function(){
if(!this._navigationContext){
this._navigationContext = new NavigationContext();}

return this._navigationContext;}});



module.exports = Navigator;
});
__d('InteractionMixin',["InteractionManager"],function(global, require, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;
});
__d('NavigationContext',["NavigationEvent","EventSubscription","NavigationEventEmitter","emptyFunction","invariant"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

























'use strict';

var NavigationEventEmitter=require('NavigationEventEmitter');

var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 







NavigationContext=(function(){



function NavigationContext(){_classCallCheck(this,NavigationContext);
this._eventEmitter = new NavigationEventEmitter(this);
this._currentRoute = null;
this.addListener('willfocus',this._onFocus,this);
this.addListener('didfocus',this._onFocus,this);}_createClass(NavigationContext,[{key:'addListener',value:








function addListener(
eventType,
listener,
context)
{
var emitter=this._eventEmitter;
if(emitter){
return emitter.addListener(eventType,listener,context);}else 
{
return {remove:emptyFunction};}}},{key:'emit',value:



function emit(eventType,data,didEmitCallback){
var emitter=this._eventEmitter;
if(emitter){
emitter.emit(eventType,data,didEmitCallback);}}},{key:'dispose',value:



function dispose(){
var emitter=this._eventEmitter;
if(emitter){

emitter.removeAllListeners();
this._eventEmitter = null;
this._currentRoute = null;}}},{key:'_onFocus',value:



function _onFocus(event){
invariant(
event.data && event.data.hasOwnProperty('route'),
'didfocus event should provide route');

this._currentRoute = event.data.route;}},{key:'currentRoute',get:function(){return this._currentRoute;}}]);return NavigationContext;})();



module.exports = NavigationContext;
});
__d('NavigationEvent',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}




























var invariant=require('invariant');var 

NavigationEventPool=(function(){


function NavigationEventPool(){_classCallCheck(this,NavigationEventPool);
this._list = [];}_createClass(NavigationEventPool,[{key:'get',value:


function get(type,target,data){
var event;
if(this._list.length > 0){
event = this._list.pop();
event.constructor.call(event,type,target,data);}else 
{
event = new NavigationEvent(type,target,data);}

return event;}},{key:'put',value:


function put(event){
this._list.push(event);}}]);return NavigationEventPool;})();



var _navigationEventPool=new NavigationEventPool();var 

NavigationEvent=(function(){_createClass(NavigationEvent,null,[{key:'pool',value:






function pool(type,target,data){
return _navigationEventPool.get(type,target,data);}}]);


function NavigationEvent(type,target,data){_classCallCheck(this,NavigationEvent);
this._type = type;
this._target = target;
this._data = data;
this._defaultPrevented = false;
this._disposed = false;}_createClass(NavigationEvent,[{key:'preventDefault',value:






















function preventDefault(){
this._defaultPrevented = true;}},{key:'dispose',value:







function dispose(){
invariant(!this._disposed,'NavigationEvent is already disposed');
this._disposed = true;


this._type = null;
this._target = null;
this._data = null;
this._defaultPrevented = false;


_navigationEventPool.put(this);}},{key:'type',get:function(){return this._type;}},{key:'target',get:function(){return this._target;}},{key:'data',get:function(){return this._data;}},{key:'defaultPrevented',get:function(){return this._defaultPrevented;}}]);return NavigationEvent;})();



module.exports = NavigationEvent;
});
__d('NavigationEventEmitter',["EventEmitter","NavigationEvent"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




























var EventEmitter=require('EventEmitter');
var NavigationEvent=require('NavigationEvent');var 







NavigationEventEmitter=(function(_EventEmitter){_inherits(NavigationEventEmitter,_EventEmitter);




function NavigationEventEmitter(target){_classCallCheck(this,NavigationEventEmitter);
_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'constructor',this).call(this);
this._emitting = false;
this._emitQueue = [];
this._target = target;}_createClass(NavigationEventEmitter,[{key:'emit',value:


function emit(
eventType,
data,
didEmitCallback)
{
if(this._emitting){


this._emitQueue.push({eventType:eventType,data:data,didEmitCallback:didEmitCallback});
return;}


this._emitting = true;

var event=new NavigationEvent(eventType,this._target,data);



_get(Object.getPrototypeOf(NavigationEventEmitter.prototype),'emit',this).call(this,String(eventType),event);

if(typeof didEmitCallback === 'function'){
didEmitCallback.call(this._target,event);}

event.dispose();

this._emitting = false;

while(this._emitQueue.length) {
var arg=this._emitQueue.shift();
this.emit(arg.eventType,arg.data,arg.didEmitCallback);}}}]);return NavigationEventEmitter;})(EventEmitter);




module.exports = NavigationEventEmitter;
});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js","invariant"],function(global, require, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({displayName:'NavigatorBreadcrumbNavigationBar',
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this._setPropsIfExists('crumb_' + index,CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this._setPropsIfExists('icon_' + index,ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this._setPropsIfExists('separator_' + index,SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this._setPropsIfExists('title_' + index,TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this._setPropsIfExists('icon_' + index,props);
this._setPropsIfExists('separator_' + index,props);
this._setPropsIfExists('title_' + index,props);
this._setPropsIfExists('right_' + index,props);},


componentWillMount:function(){
this._descriptors = {
crumb:new Map(),
title:new Map(),
right:new Map()};},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._getBreadcrumb);
var titles=navState.routeStack.map(this._getTitle);
var buttons=navState.routeStack.map(this._getRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_getBreadcrumb:function(route,index){
if(this._descriptors.crumb.has(route)){
return this._descriptors.crumb.get(route);}


var navBarRouteMapper=this.props.routeMapper;
var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var breadcrumbDescriptor=
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,this.props.navigator)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,this.props.navigator)));




this._descriptors.crumb = this._descriptors.crumb.set(route,breadcrumbDescriptor);
return breadcrumbDescriptor;},


_getTitle:function(route,index){
if(this._descriptors.title.has(route)){
return this._descriptors.title.get(route);}


var titleContent=this.props.routeMapper.titleContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));

var titleDescriptor=
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent);


this._descriptors.title = this._descriptors.title.set(route,titleDescriptor);
return titleDescriptor;},


_getRightButton:function(route,index){
if(this._descriptors.right.has(route)){
return this._descriptors.right.get(route);}

var rightContent=this.props.routeMapper.rightContentForRoute(
this.props.navState.routeStack[index],
this.props.navigator);

if(!rightContent){
this._descriptors.right = this._descriptors.right.set(route,null);
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
var rightButtonDescriptor=
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent);


this._descriptors.right = this._descriptors.right.set(route,rightButtonDescriptor);
return rightButtonDescriptor;},


_setPropsIfExists:function(ref,props){
var ref=this.refs[ref];
ref && ref.setNativeProps(props);}});



var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;
});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};
});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
alignItems:'center',
width:SCREEN_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:2 * SCREEN_WIDTH / 3,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};
});
__d('buildStyleInterpolator',["keyOf"],function(global, require, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}'));
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;
});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}




















var React=require('React');

var onlyChild=require('onlyChild');var 
















StaticContainer=(function(_React$Component){_inherits(StaticContainer,_React$Component);function StaticContainer(){_classCallCheck(this,StaticContainer);_get(Object.getPrototypeOf(StaticContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(StaticContainer,[{key:'shouldComponentUpdate',value:

function shouldComponentUpdate(nextProps){
return !!nextProps.shouldUpdate;}},{key:'render',value:


function render(){
var child=this.props.children;
return child === null || child === false?null:onlyChild(child);}}]);return StaticContainer;})(React.Component);




module.exports = StaticContainer;
});
__d('immutable/dist/immutable.js',[],function(global, require, module, exports) {  (







function(global,factory){
typeof exports === 'object' && typeof module !== 'undefined'?module.exports = factory():
typeof define === 'function' && define.amd?define(factory):
global.Immutable = factory();})(
this,function(){'use strict';var SLICE$0=Array.prototype.slice;

function createClass(ctor,superClass){
if(superClass){
ctor.prototype = Object.create(superClass.prototype);}

ctor.prototype.constructor = ctor;}



var DELETE='delete';


var SHIFT=5;
var SIZE=1 << SHIFT;
var MASK=SIZE - 1;



var NOT_SET={};


var CHANGE_LENGTH={value:false};
var DID_ALTER={value:false};

function MakeRef(ref){
ref.value = false;
return ref;}


function SetRef(ref){
ref && (ref.value = true);}





function OwnerID(){}


function arrCopy(arr,offset){
offset = offset || 0;
var len=Math.max(0,arr.length - offset);
var newArr=new Array(len);
for(var ii=0;ii < len;ii++) {
newArr[ii] = arr[ii + offset];}

return newArr;}


function ensureSize(iter){
if(iter.size === undefined){
iter.size = iter.__iterate(returnTrue);}

return iter.size;}


function wrapIndex(iter,index){







if(typeof index !== 'number'){
var numIndex=+index;
if('' + numIndex !== index){
return NaN;}

index = numIndex;}

return index < 0?ensureSize(iter) + index:index;}


function returnTrue(){
return true;}


function wholeSlice(begin,end,size){
return (begin === 0 || size !== undefined && begin <= -size) && (
end === undefined || size !== undefined && end >= size);}


function resolveBegin(begin,size){
return resolveIndex(begin,size,0);}


function resolveEnd(end,size){
return resolveIndex(end,size,size);}


function resolveIndex(index,size,defaultIndex){
return index === undefined?
defaultIndex:
index < 0?
Math.max(0,size + index):
size === undefined?
index:
Math.min(size,index);}


function Iterable(value){
return isIterable(value)?value:Seq(value);}



createClass(KeyedIterable,Iterable);
function KeyedIterable(value){
return isKeyed(value)?value:KeyedSeq(value);}



createClass(IndexedIterable,Iterable);
function IndexedIterable(value){
return isIndexed(value)?value:IndexedSeq(value);}



createClass(SetIterable,Iterable);
function SetIterable(value){
return isIterable(value) && !isAssociative(value)?value:SetSeq(value);}




function isIterable(maybeIterable){
return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);}


function isKeyed(maybeKeyed){
return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);}


function isIndexed(maybeIndexed){
return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);}


function isAssociative(maybeAssociative){
return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);}


function isOrdered(maybeOrdered){
return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);}


Iterable.isIterable = isIterable;
Iterable.isKeyed = isKeyed;
Iterable.isIndexed = isIndexed;
Iterable.isAssociative = isAssociative;
Iterable.isOrdered = isOrdered;

Iterable.Keyed = KeyedIterable;
Iterable.Indexed = IndexedIterable;
Iterable.Set = SetIterable;


var IS_ITERABLE_SENTINEL='@@__IMMUTABLE_ITERABLE__@@';
var IS_KEYED_SENTINEL='@@__IMMUTABLE_KEYED__@@';
var IS_INDEXED_SENTINEL='@@__IMMUTABLE_INDEXED__@@';
var IS_ORDERED_SENTINEL='@@__IMMUTABLE_ORDERED__@@';



var ITERATE_KEYS=0;
var ITERATE_VALUES=1;
var ITERATE_ENTRIES=2;

var REAL_ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';

var ITERATOR_SYMBOL=REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


function src_Iterator__Iterator(next){
this.next = next;}


src_Iterator__Iterator.prototype.toString = function(){
return '[Iterator]';};



src_Iterator__Iterator.KEYS = ITERATE_KEYS;
src_Iterator__Iterator.VALUES = ITERATE_VALUES;
src_Iterator__Iterator.ENTRIES = ITERATE_ENTRIES;

src_Iterator__Iterator.prototype.inspect = 
src_Iterator__Iterator.prototype.toSource = function(){return this.toString();};
src_Iterator__Iterator.prototype[ITERATOR_SYMBOL] = function(){
return this;};



function iteratorValue(type,k,v,iteratorResult){
var value=type === 0?k:type === 1?v:[k,v];
iteratorResult?iteratorResult.value = value:iteratorResult = {
value:value,done:false};

return iteratorResult;}


function iteratorDone(){
return {value:undefined,done:true};}


function hasIterator(maybeIterable){
return !!getIteratorFn(maybeIterable);}


function isIterator(maybeIterator){
return maybeIterator && typeof maybeIterator.next === 'function';}


function getIterator(iterable){
var iteratorFn=getIteratorFn(iterable);
return iteratorFn && iteratorFn.call(iterable);}


function getIteratorFn(iterable){
var iteratorFn=iterable && (
REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || 
iterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



function isArrayLike(value){
return value && typeof value.length === 'number';}


createClass(Seq,Iterable);
function Seq(value){
return value === null || value === undefined?emptySequence():
isIterable(value)?value.toSeq():seqFromValue(value);}


Seq.of = function(){
return Seq(arguments);};


Seq.prototype.toSeq = function(){
return this;};


Seq.prototype.toString = function(){
return this.__toString('Seq {','}');};


Seq.prototype.cacheResult = function(){
if(!this._cache && this.__iterateUncached){
this._cache = this.entrySeq().toArray();
this.size = this._cache.length;}

return this;};




Seq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,true);};




Seq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,true);};




createClass(KeyedSeq,Seq);
function KeyedSeq(value){
return value === null || value === undefined?
emptySequence().toKeyedSeq():
isIterable(value)?
isKeyed(value)?value.toSeq():value.fromEntrySeq():
keyedSeqFromValue(value);}


KeyedSeq.prototype.toKeyedSeq = function(){
return this;};




createClass(IndexedSeq,Seq);
function IndexedSeq(value){
return value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value.toIndexedSeq();}


IndexedSeq.of = function(){
return IndexedSeq(arguments);};


IndexedSeq.prototype.toIndexedSeq = function(){
return this;};


IndexedSeq.prototype.toString = function(){
return this.__toString('Seq [',']');};


IndexedSeq.prototype.__iterate = function(fn,reverse){
return seqIterate(this,fn,reverse,false);};


IndexedSeq.prototype.__iterator = function(type,reverse){
return seqIterator(this,type,reverse,false);};




createClass(SetSeq,Seq);
function SetSeq(value){
return (
value === null || value === undefined?emptySequence():
!isIterable(value)?indexedSeqFromValue(value):
isKeyed(value)?value.entrySeq():value).
toSetSeq();}


SetSeq.of = function(){
return SetSeq(arguments);};


SetSeq.prototype.toSetSeq = function(){
return this;};




Seq.isSeq = isSeq;
Seq.Keyed = KeyedSeq;
Seq.Set = SetSeq;
Seq.Indexed = IndexedSeq;

var IS_SEQ_SENTINEL='@@__IMMUTABLE_SEQ__@@';

Seq.prototype[IS_SEQ_SENTINEL] = true;





createClass(ArraySeq,IndexedSeq);
function ArraySeq(array){
this._array = array;
this.size = array.length;}


ArraySeq.prototype.get = function(index,notSetValue){
return this.has(index)?this._array[wrapIndex(this,index)]:notSetValue;};


ArraySeq.prototype.__iterate = function(fn,reverse){
var array=this._array;
var maxIndex=array.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(array[reverse?maxIndex - ii:ii],ii,this) === false){
return ii + 1;}}


return ii;};


ArraySeq.prototype.__iterator = function(type,reverse){
var array=this._array;
var maxIndex=array.length - 1;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii > maxIndex?
iteratorDone():
iteratorValue(type,ii,array[reverse?maxIndex - ii++:ii++]);});};





createClass(ObjectSeq,KeyedSeq);
function ObjectSeq(object){
var keys=Object.keys(object);
this._object = object;
this._keys = keys;
this.size = keys.length;}


ObjectSeq.prototype.get = function(key,notSetValue){
if(notSetValue !== undefined && !this.has(key)){
return notSetValue;}

return this._object[key];};


ObjectSeq.prototype.has = function(key){
return this._object.hasOwnProperty(key);};


ObjectSeq.prototype.__iterate = function(fn,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var key=keys[reverse?maxIndex - ii:ii];
if(fn(object[key],key,this) === false){
return ii + 1;}}


return ii;};


ObjectSeq.prototype.__iterator = function(type,reverse){
var object=this._object;
var keys=this._keys;
var maxIndex=keys.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var key=keys[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,key,object[key]);});};



ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


createClass(IterableSeq,IndexedSeq);
function IterableSeq(iterable){
this._iterable = iterable;
this.size = iterable.length || iterable.size;}


IterableSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
var iterations=0;
if(isIterator(iterator)){
var step;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}}



return iterations;};


IterableSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterable=this._iterable;
var iterator=getIterator(iterable);
if(!isIterator(iterator)){
return new src_Iterator__Iterator(iteratorDone);}

var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:iteratorValue(type,iterations++,step.value);});};





createClass(IteratorSeq,IndexedSeq);
function IteratorSeq(iterator){
this._iterator = iterator;
this._iteratorCache = [];}


IteratorSeq.prototype.__iterateUncached = function(fn,reverse){
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
while(iterations < cache.length) {
if(fn(cache[iterations],iterations++,this) === false){
return iterations;}}


var step;
while(!(step = iterator.next()).done) {
var val=step.value;
cache[iterations] = val;
if(fn(val,iterations++,this) === false){
break;}}


return iterations;};


IteratorSeq.prototype.__iteratorUncached = function(type,reverse){
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=this._iterator;
var cache=this._iteratorCache;
var iterations=0;
return new src_Iterator__Iterator(function(){
if(iterations >= cache.length){
var step=iterator.next();
if(step.done){
return step;}

cache[iterations] = step.value;}

return iteratorValue(type,iterations,cache[iterations++]);});};








function isSeq(maybeSeq){
return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);}


var EMPTY_SEQ;

function emptySequence(){
return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));}


function keyedSeqFromValue(value){
var seq=
Array.isArray(value)?new ArraySeq(value).fromEntrySeq():
isIterator(value)?new IteratorSeq(value).fromEntrySeq():
hasIterator(value)?new IterableSeq(value).fromEntrySeq():
typeof value === 'object'?new ObjectSeq(value):
undefined;
if(!seq){
throw new TypeError(
'Expected Array or iterable object of [k, v] entries, ' + 
'or keyed object: ' + value);}


return seq;}


function indexedSeqFromValue(value){
var seq=maybeIndexedSeqFromValue(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values: ' + value);}


return seq;}


function seqFromValue(value){
var seq=maybeIndexedSeqFromValue(value) || 
typeof value === 'object' && new ObjectSeq(value);
if(!seq){
throw new TypeError(
'Expected Array or iterable object of values, or keyed object: ' + value);}


return seq;}


function maybeIndexedSeqFromValue(value){
return (
isArrayLike(value)?new ArraySeq(value):
isIterator(value)?new IteratorSeq(value):
hasIterator(value)?new IterableSeq(value):
undefined);}



function seqIterate(seq,fn,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
for(var ii=0;ii <= maxIndex;ii++) {
var entry=cache[reverse?maxIndex - ii:ii];
if(fn(entry[1],useKeys?entry[0]:ii,seq) === false){
return ii + 1;}}


return ii;}

return seq.__iterateUncached(fn,reverse);}


function seqIterator(seq,type,reverse,useKeys){
var cache=seq._cache;
if(cache){
var maxIndex=cache.length - 1;
var ii=0;
return new src_Iterator__Iterator(function(){
var entry=cache[reverse?maxIndex - ii:ii];
return ii++ > maxIndex?
iteratorDone():
iteratorValue(type,useKeys?entry[0]:ii - 1,entry[1]);});}


return seq.__iteratorUncached(type,reverse);}


createClass(Collection,Iterable);
function Collection(){
throw TypeError('Abstract');}



createClass(KeyedCollection,Collection);function KeyedCollection(){}

createClass(IndexedCollection,Collection);function IndexedCollection(){}

createClass(SetCollection,Collection);function SetCollection(){}


Collection.Keyed = KeyedCollection;
Collection.Indexed = IndexedCollection;
Collection.Set = SetCollection;























































function is(valueA,valueB){
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}

if(typeof valueA.valueOf === 'function' && 
typeof valueB.valueOf === 'function'){
valueA = valueA.valueOf();
valueB = valueB.valueOf();
if(valueA === valueB || valueA !== valueA && valueB !== valueB){
return true;}

if(!valueA || !valueB){
return false;}}


if(typeof valueA.equals === 'function' && 
typeof valueB.equals === 'function' && 
valueA.equals(valueB)){
return true;}

return false;}


function fromJS(json,converter){
return converter?
fromJSWith(converter,json,'',{'':json}):
fromJSDefault(json);}


function fromJSWith(converter,json,key,parentJSON){
if(Array.isArray(json)){
return converter.call(parentJSON,key,IndexedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

if(isPlainObj(json)){
return converter.call(parentJSON,key,KeyedSeq(json).map(function(v,k){return fromJSWith(converter,v,k,json);}));}

return json;}


function fromJSDefault(json){
if(Array.isArray(json)){
return IndexedSeq(json).map(fromJSDefault).toList();}

if(isPlainObj(json)){
return KeyedSeq(json).map(fromJSDefault).toMap();}

return json;}


function isPlainObj(value){
return value && (value.constructor === Object || value.constructor === undefined);}


var src_Math__imul=
typeof Math.imul === 'function' && Math.imul(0xffffffff,2) === -2?
Math.imul:
function imul(a,b){
a = a | 0;
b = b | 0;
var c=a & 0xffff;
var d=b & 0xffff;

return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;};






function smi(i32){
return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;}


function hash(o){
if(o === false || o === null || o === undefined){
return 0;}

if(typeof o.valueOf === 'function'){
o = o.valueOf();
if(o === false || o === null || o === undefined){
return 0;}}


if(o === true){
return 1;}

var type=typeof o;
if(type === 'number'){
var h=o | 0;
if(h !== o){
h ^= o * 0xFFFFFFFF;}

while(o > 0xFFFFFFFF) {
o /= 0xFFFFFFFF;
h ^= o;}

return smi(h);}

if(type === 'string'){
return o.length > STRING_HASH_CACHE_MIN_STRLEN?cachedHashString(o):hashString(o);}

if(typeof o.hashCode === 'function'){
return o.hashCode();}

return hashJSObj(o);}


function cachedHashString(string){
var hash=stringHashCache[string];
if(hash === undefined){
hash = hashString(string);
if(STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE){
STRING_HASH_CACHE_SIZE = 0;
stringHashCache = {};}

STRING_HASH_CACHE_SIZE++;
stringHashCache[string] = hash;}

return hash;}



function hashString(string){






var hash=0;
for(var ii=0;ii < string.length;ii++) {
hash = 31 * hash + string.charCodeAt(ii) | 0;}

return smi(hash);}


function hashJSObj(obj){
var hash;
if(usingWeakMap){
hash = weakMap.get(obj);
if(hash !== undefined){
return hash;}}



hash = obj[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


if(!canDefineProperty){
hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
if(hash !== undefined){
return hash;}


hash = getIENodeHash(obj);
if(hash !== undefined){
return hash;}}



hash = ++objHashUID;
if(objHashUID & 0x40000000){
objHashUID = 0;}


if(usingWeakMap){
weakMap.set(obj,hash);}else 
if(isExtensible !== undefined && isExtensible(obj) === false){
throw new Error('Non-extensible objects are not allowed as keys.');}else 
if(canDefineProperty){
Object.defineProperty(obj,UID_HASH_KEY,{
'enumerable':false,
'configurable':false,
'writable':false,
'value':hash});}else 

if(obj.propertyIsEnumerable !== undefined && 
obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable){




obj.propertyIsEnumerable = function(){
return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments);};

obj.propertyIsEnumerable[UID_HASH_KEY] = hash;}else 
if(obj.nodeType !== undefined){




obj[UID_HASH_KEY] = hash;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}


return hash;}



var isExtensible=Object.isExtensible;


var canDefineProperty=(function(){
try{
Object.defineProperty({},'@',{});
return true;}
catch(e) {
return false;}})();





function getIENodeHash(node){
if(node && node.nodeType > 0){
switch(node.nodeType){
case 1:
return node.uniqueID;
case 9:
return node.documentElement && node.documentElement.uniqueID;}}}





var usingWeakMap=typeof WeakMap === 'function';
var weakMap;
if(usingWeakMap){
weakMap = new WeakMap();}


var objHashUID=0;

var UID_HASH_KEY='__immutablehash__';
if(typeof Symbol === 'function'){
UID_HASH_KEY = Symbol(UID_HASH_KEY);}


var STRING_HASH_CACHE_MIN_STRLEN=16;
var STRING_HASH_CACHE_MAX_SIZE=255;
var STRING_HASH_CACHE_SIZE=0;
var stringHashCache={};

function invariant(condition,error){
if(!condition)throw new Error(error);}


function assertNotInfinite(size){
invariant(
size !== Infinity,
'Cannot perform this action with an infinite size.');}



createClass(ToKeyedSequence,KeyedSeq);
function ToKeyedSequence(indexed,useKeys){
this._iter = indexed;
this._useKeys = useKeys;
this.size = indexed.size;}


ToKeyedSequence.prototype.get = function(key,notSetValue){
return this._iter.get(key,notSetValue);};


ToKeyedSequence.prototype.has = function(key){
return this._iter.has(key);};


ToKeyedSequence.prototype.valueSeq = function(){
return this._iter.valueSeq();};


ToKeyedSequence.prototype.reverse = function(){var this$0=this;
var reversedSequence=reverseFactory(this,true);
if(!this._useKeys){
reversedSequence.valueSeq = function(){return this$0._iter.toSeq().reverse();};}

return reversedSequence;};


ToKeyedSequence.prototype.map = function(mapper,context){var this$0=this;
var mappedSequence=mapFactory(this,mapper,context);
if(!this._useKeys){
mappedSequence.valueSeq = function(){return this$0._iter.toSeq().map(mapper,context);};}

return mappedSequence;};


ToKeyedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var ii;
return this._iter.__iterate(
this._useKeys?
function(v,k){return fn(v,k,this$0);}:(
ii = reverse?resolveSize(this):0,
function(v){return fn(v,reverse?--ii:ii++,this$0);}),
reverse);};



ToKeyedSequence.prototype.__iterator = function(type,reverse){
if(this._useKeys){
return this._iter.__iterator(type,reverse);}

var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var ii=reverse?resolveSize(this):0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,reverse?--ii:ii++,step.value,step);});};



ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


createClass(ToIndexedSequence,IndexedSeq);
function ToIndexedSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToIndexedSequence.prototype.includes = function(value){
return this._iter.includes(value);};


ToIndexedSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
return this._iter.__iterate(function(v){return fn(v,iterations++,this$0);},reverse);};


ToIndexedSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,iterations++,step.value,step);});};





createClass(ToSetSequence,SetSeq);
function ToSetSequence(iter){
this._iter = iter;
this.size = iter.size;}


ToSetSequence.prototype.has = function(key){
return this._iter.includes(key);};


ToSetSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(v){return fn(v,v,this$0);},reverse);};


ToSetSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
return step.done?step:
iteratorValue(type,step.value,step.value,step);});};





createClass(FromEntriesSequence,KeyedSeq);
function FromEntriesSequence(entries){
this._iter = entries;
this.size = entries.size;}


FromEntriesSequence.prototype.entrySeq = function(){
return this._iter.toSeq();};


FromEntriesSequence.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._iter.__iterate(function(entry){


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return fn(
indexedIterable?entry.get(1):entry[1],
indexedIterable?entry.get(0):entry[0],
this$0);}},


reverse);};


FromEntriesSequence.prototype.__iterator = function(type,reverse){
var iterator=this._iter.__iterator(ITERATE_VALUES,reverse);
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;


if(entry){
validateEntry(entry);
var indexedIterable=isIterable(entry);
return iteratorValue(
type,
indexedIterable?entry.get(0):entry[0],
indexedIterable?entry.get(1):entry[1],
step);}}});};







ToIndexedSequence.prototype.cacheResult = 
ToKeyedSequence.prototype.cacheResult = 
ToSetSequence.prototype.cacheResult = 
FromEntriesSequence.prototype.cacheResult = 
cacheResultThrough;


function flipFactory(iterable){
var flipSequence=makeSequence(iterable);
flipSequence._iter = iterable;
flipSequence.size = iterable.size;
flipSequence.flip = function(){return iterable;};
flipSequence.reverse = function(){
var reversedSequence=iterable.reverse.apply(this);
reversedSequence.flip = function(){return iterable.reverse();};
return reversedSequence;};

flipSequence.has = function(key){return iterable.includes(key);};
flipSequence.includes = function(key){return iterable.has(key);};
flipSequence.cacheResult = cacheResultThrough;
flipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(k,v,this$0) !== false;},reverse);};

flipSequence.__iteratorUncached = function(type,reverse){
if(type === ITERATE_ENTRIES){
var iterator=iterable.__iterator(type,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(!step.done){
var k=step.value[0];
step.value[0] = step.value[1];
step.value[1] = k;}

return step;});}


return iterable.__iterator(
type === ITERATE_VALUES?ITERATE_KEYS:ITERATE_VALUES,
reverse);};


return flipSequence;}



function mapFactory(iterable,mapper,context){
var mappedSequence=makeSequence(iterable);
mappedSequence.size = iterable.size;
mappedSequence.has = function(key){return iterable.has(key);};
mappedSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v === NOT_SET?
notSetValue:
mapper.call(context,v,key,iterable);};

mappedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
return iterable.__iterate(
function(v,k,c){return fn(mapper.call(context,v,k,c),k,this$0) !== false;},
reverse);};


mappedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
return new src_Iterator__Iterator(function(){
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
return iteratorValue(
type,
key,
mapper.call(context,entry[1],key,iterable),
step);});};



return mappedSequence;}



function reverseFactory(iterable,useKeys){
var reversedSequence=makeSequence(iterable);
reversedSequence._iter = iterable;
reversedSequence.size = iterable.size;
reversedSequence.reverse = function(){return iterable;};
if(iterable.flip){
reversedSequence.flip = function(){
var flipSequence=flipFactory(iterable);
flipSequence.reverse = function(){return iterable.flip();};
return flipSequence;};}


reversedSequence.get = function(key,notSetValue)
{return iterable.get(useKeys?key:-1 - key,notSetValue);};
reversedSequence.has = function(key)
{return iterable.has(useKeys?key:-1 - key);};
reversedSequence.includes = function(value){return iterable.includes(value);};
reversedSequence.cacheResult = cacheResultThrough;
reversedSequence.__iterate = function(fn,reverse){var this$0=this;
return iterable.__iterate(function(v,k){return fn(v,k,this$0);},!reverse);};

reversedSequence.__iterator = 
function(type,reverse){return iterable.__iterator(type,!reverse);};
return reversedSequence;}



function filterFactory(iterable,predicate,context,useKeys){
var filterSequence=makeSequence(iterable);
if(useKeys){
filterSequence.has = function(key){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && !!predicate.call(context,v,key,iterable);};

filterSequence.get = function(key,notSetValue){
var v=iterable.get(key,NOT_SET);
return v !== NOT_SET && predicate.call(context,v,key,iterable)?
v:notSetValue;};}


filterSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}},

reverse);
return iterations;};

filterSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterations=0;
return new src_Iterator__Iterator(function(){
while(true) {
var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var key=entry[0];
var value=entry[1];
if(predicate.call(context,value,key,iterable)){
return iteratorValue(type,useKeys?key:iterations++,value,step);}}});};




return filterSequence;}



function countByFactory(iterable,grouper,context){
var groups=src_Map__Map().asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
0,
function(a){return a + 1;});});


return groups.asImmutable();}



function groupByFactory(iterable,grouper,context){
var isKeyedIter=isKeyed(iterable);
var groups=(isOrdered(iterable)?OrderedMap():src_Map__Map()).asMutable();
iterable.__iterate(function(v,k){
groups.update(
grouper.call(context,v,k,iterable),
function(a){return (a = a || [],a.push(isKeyedIter?[k,v]:v),a);});});


var coerce=iterableClass(iterable);
return groups.map(function(arr){return reify(iterable,coerce(arr));});}



function sliceFactory(iterable,begin,end,useKeys){
var originalSize=iterable.size;



if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}


if(wholeSlice(begin,end,originalSize)){
return iterable;}


var resolvedBegin=resolveBegin(begin,originalSize);
var resolvedEnd=resolveEnd(end,originalSize);




if(resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd){
return sliceFactory(iterable.toSeq().cacheResult(),begin,end,useKeys);}






var resolvedSize=resolvedEnd - resolvedBegin;
var sliceSize;
if(resolvedSize === resolvedSize){
sliceSize = resolvedSize < 0?0:resolvedSize;}


var sliceSeq=makeSequence(iterable);



sliceSeq.size = sliceSize === 0?sliceSize:iterable.size && sliceSize || undefined;

if(!useKeys && isSeq(iterable) && sliceSize >= 0){
sliceSeq.get = function(index,notSetValue){
index = wrapIndex(this,index);
return index >= 0 && index < sliceSize?
iterable.get(index + resolvedBegin,notSetValue):
notSetValue;};}



sliceSeq.__iterateUncached = function(fn,reverse){var this$0=this;
if(sliceSize === 0){
return 0;}

if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var skipped=0;
var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k){
if(!(isSkipping && (isSkipping = skipped++ < resolvedBegin))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0) !== false && 
iterations !== sliceSize;}});


return iterations;};


sliceSeq.__iteratorUncached = function(type,reverse){
if(sliceSize !== 0 && reverse){
return this.cacheResult().__iterator(type,reverse);}


var iterator=sliceSize !== 0 && iterable.__iterator(type,reverse);
var skipped=0;
var iterations=0;
return new src_Iterator__Iterator(function(){
while(skipped++ < resolvedBegin) {
iterator.next();}

if(++iterations > sliceSize){
return iteratorDone();}

var step=iterator.next();
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations - 1,undefined,step);}else 
{
return iteratorValue(type,iterations - 1,step.value[1],step);}});};




return sliceSeq;}



function takeWhileFactory(iterable,predicate,context){
var takeSequence=makeSequence(iterable);
takeSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var iterations=0;
iterable.__iterate(function(v,k,c)
{return predicate.call(context,v,k,c) && ++iterations && fn(v,k,this$0);});

return iterations;};

takeSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var iterating=true;
return new src_Iterator__Iterator(function(){
if(!iterating){
return iteratorDone();}

var step=iterator.next();
if(step.done){
return step;}

var entry=step.value;
var k=entry[0];
var v=entry[1];
if(!predicate.call(context,v,k,this$0)){
iterating = false;
return iteratorDone();}

return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return takeSequence;}



function skipWhileFactory(iterable,predicate,context,useKeys){
var skipSequence=makeSequence(iterable);
skipSequence.__iterateUncached = function(fn,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterate(fn,reverse);}

var isSkipping=true;
var iterations=0;
iterable.__iterate(function(v,k,c){
if(!(isSkipping && (isSkipping = predicate.call(context,v,k,c)))){
iterations++;
return fn(v,useKeys?k:iterations - 1,this$0);}});


return iterations;};

skipSequence.__iteratorUncached = function(type,reverse){var this$0=this;
if(reverse){
return this.cacheResult().__iterator(type,reverse);}

var iterator=iterable.__iterator(ITERATE_ENTRIES,reverse);
var skipping=true;
var iterations=0;
return new src_Iterator__Iterator(function(){
var step,k,v;
do {
step = iterator.next();
if(step.done){
if(useKeys || type === ITERATE_VALUES){
return step;}else 
if(type === ITERATE_KEYS){
return iteratorValue(type,iterations++,undefined,step);}else 
{
return iteratorValue(type,iterations++,step.value[1],step);}}


var entry=step.value;
k = entry[0];
v = entry[1];
skipping && (skipping = predicate.call(context,v,k,this$0));}while(
skipping);
return type === ITERATE_ENTRIES?step:
iteratorValue(type,k,v,step);});};


return skipSequence;}



function concatFactory(iterable,values){
var isKeyedIterable=isKeyed(iterable);
var iters=[iterable].concat(values).map(function(v){
if(!isIterable(v)){
v = isKeyedIterable?
keyedSeqFromValue(v):
indexedSeqFromValue(Array.isArray(v)?v:[v]);}else 
if(isKeyedIterable){
v = KeyedIterable(v);}

return v;}).
filter(function(v){return v.size !== 0;});

if(iters.length === 0){
return iterable;}


if(iters.length === 1){
var singleton=iters[0];
if(singleton === iterable || 
isKeyedIterable && isKeyed(singleton) || 
isIndexed(iterable) && isIndexed(singleton)){
return singleton;}}



var concatSeq=new ArraySeq(iters);
if(isKeyedIterable){
concatSeq = concatSeq.toKeyedSeq();}else 
if(!isIndexed(iterable)){
concatSeq = concatSeq.toSetSeq();}

concatSeq = concatSeq.flatten(true);
concatSeq.size = iters.reduce(
function(sum,seq){
if(sum !== undefined){
var size=seq.size;
if(size !== undefined){
return sum + size;}}},



0);

return concatSeq;}



function flattenFactory(iterable,depth,useKeys){
var flatSequence=makeSequence(iterable);
flatSequence.__iterateUncached = function(fn,reverse){
var iterations=0;
var stopped=false;
function flatDeep(iter,currentDepth){var this$0=this;
iter.__iterate(function(v,k){
if((!depth || currentDepth < depth) && isIterable(v)){
flatDeep(v,currentDepth + 1);}else 
if(fn(v,useKeys?k:iterations++,this$0) === false){
stopped = true;}

return !stopped;},
reverse);}

flatDeep(iterable,0);
return iterations;};

flatSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(type,reverse);
var stack=[];
var iterations=0;
return new src_Iterator__Iterator(function(){
while(iterator) {
var step=iterator.next();
if(step.done !== false){
iterator = stack.pop();
continue;}

var v=step.value;
if(type === ITERATE_ENTRIES){
v = v[1];}

if((!depth || stack.length < depth) && isIterable(v)){
stack.push(iterator);
iterator = v.__iterator(type,reverse);}else 
{
return useKeys?step:iteratorValue(type,iterations++,v,step);}}


return iteratorDone();});};


return flatSequence;}



function flatMapFactory(iterable,mapper,context){
var coerce=iterableClass(iterable);
return iterable.toSeq().map(
function(v,k){return coerce(mapper.call(context,v,k,iterable));}).
flatten(true);}



function interposeFactory(iterable,separator){
var interposedSequence=makeSequence(iterable);
interposedSequence.size = iterable.size && iterable.size * 2 - 1;
interposedSequence.__iterateUncached = function(fn,reverse){var this$0=this;
var iterations=0;
iterable.__iterate(function(v,k)
{return (!iterations || fn(separator,iterations++,this$0) !== false) && 
fn(v,iterations++,this$0) !== false;},
reverse);

return iterations;};

interposedSequence.__iteratorUncached = function(type,reverse){
var iterator=iterable.__iterator(ITERATE_VALUES,reverse);
var iterations=0;
var step;
return new src_Iterator__Iterator(function(){
if(!step || iterations % 2){
step = iterator.next();
if(step.done){
return step;}}


return iterations % 2?
iteratorValue(type,iterations++,separator):
iteratorValue(type,iterations++,step.value,step);});};


return interposedSequence;}



function sortFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

var isKeyedIterable=isKeyed(iterable);
var index=0;
var entries=iterable.toSeq().map(
function(v,k){return [k,v,index++,mapper?mapper(v,k,iterable):v];}).
toArray();
entries.sort(function(a,b){return comparator(a[3],b[3]) || a[2] - b[2];}).forEach(
isKeyedIterable?
function(v,i){entries[i].length = 2;}:
function(v,i){entries[i] = v[1];});

return isKeyedIterable?KeyedSeq(entries):
isIndexed(iterable)?IndexedSeq(entries):
SetSeq(entries);}



function maxFactory(iterable,comparator,mapper){
if(!comparator){
comparator = defaultComparator;}

if(mapper){
var entry=iterable.toSeq().
map(function(v,k){return [v,mapper(v,k,iterable)];}).
reduce(function(a,b){return maxCompare(comparator,a[1],b[1])?b:a;});
return entry && entry[0];}else 
{
return iterable.reduce(function(a,b){return maxCompare(comparator,a,b)?b:a;});}}



function maxCompare(comparator,a,b){
var comp=comparator(b,a);


return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;}



function zipWithFactory(keyIter,zipper,iters){
var zipSequence=makeSequence(keyIter);
zipSequence.size = new ArraySeq(iters).map(function(i){return i.size;}).min();


zipSequence.__iterate = function(fn,reverse){













var iterator=this.__iterator(ITERATE_VALUES,reverse);
var step;
var iterations=0;
while(!(step = iterator.next()).done) {
if(fn(step.value,iterations++,this) === false){
break;}}


return iterations;};

zipSequence.__iteratorUncached = function(type,reverse){
var iterators=iters.map(function(i)
{return (i = Iterable(i),getIterator(reverse?i.reverse():i));});

var iterations=0;
var isDone=false;
return new src_Iterator__Iterator(function(){
var steps;
if(!isDone){
steps = iterators.map(function(i){return i.next();});
isDone = steps.some(function(s){return s.done;});}

if(isDone){
return iteratorDone();}

return iteratorValue(
type,
iterations++,
zipper.apply(null,steps.map(function(s){return s.value;})));});};



return zipSequence;}





function reify(iter,seq){
return isSeq(iter)?seq:iter.constructor(seq);}


function validateEntry(entry){
if(entry !== Object(entry)){
throw new TypeError('Expected [K, V] tuple: ' + entry);}}



function resolveSize(iter){
assertNotInfinite(iter.size);
return ensureSize(iter);}


function iterableClass(iterable){
return isKeyed(iterable)?KeyedIterable:
isIndexed(iterable)?IndexedIterable:
SetIterable;}


function makeSequence(iterable){
return Object.create(
(
isKeyed(iterable)?KeyedSeq:
isIndexed(iterable)?IndexedSeq:
SetSeq).
prototype);}



function cacheResultThrough(){
if(this._iter.cacheResult){
this._iter.cacheResult();
this.size = this._iter.size;
return this;}else 
{
return Seq.prototype.cacheResult.call(this);}}



function defaultComparator(a,b){
return a > b?1:a < b?-1:0;}


function forceIterator(keyPath){
var iter=getIterator(keyPath);
if(!iter){


if(!isArrayLike(keyPath)){
throw new TypeError('Expected iterable or array-like: ' + keyPath);}

iter = getIterator(Iterable(keyPath));}

return iter;}


createClass(src_Map__Map,KeyedCollection);



function src_Map__Map(value){
return value === null || value === undefined?emptyMap():
isMap(value) && !isOrdered(value)?value:
emptyMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



src_Map__Map.prototype.toString = function(){
return this.__toString('Map {','}');};




src_Map__Map.prototype.get = function(k,notSetValue){
return this._root?
this._root.get(0,undefined,k,notSetValue):
notSetValue;};




src_Map__Map.prototype.set = function(k,v){
return updateMap(this,k,v);};


src_Map__Map.prototype.setIn = function(keyPath,v){
return this.updateIn(keyPath,NOT_SET,function(){return v;});};


src_Map__Map.prototype.remove = function(k){
return updateMap(this,k,NOT_SET);};


src_Map__Map.prototype.deleteIn = function(keyPath){
return this.updateIn(keyPath,function(){return NOT_SET;});};


src_Map__Map.prototype.update = function(k,notSetValue,updater){
return arguments.length === 1?
k(this):
this.updateIn([k],notSetValue,updater);};


src_Map__Map.prototype.updateIn = function(keyPath,notSetValue,updater){
if(!updater){
updater = notSetValue;
notSetValue = undefined;}

var updatedValue=updateInDeepMap(
this,
forceIterator(keyPath),
notSetValue,
updater);

return updatedValue === NOT_SET?undefined:updatedValue;};


src_Map__Map.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._root = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyMap();};




src_Map__Map.prototype.merge = function(){
return mergeIntoMapWith(this,undefined,arguments);};


src_Map__Map.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,merger,iters);};


src_Map__Map.prototype.mergeIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.merge === 'function'?
m.merge.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.mergeDeep = function(){
return mergeIntoMapWith(this,deepMerger(undefined),arguments);};


src_Map__Map.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoMapWith(this,deepMerger(merger),iters);};


src_Map__Map.prototype.mergeDeepIn = function(keyPath){var iters=SLICE$0.call(arguments,1);
return this.updateIn(
keyPath,
emptyMap(),
function(m){return typeof m.mergeDeep === 'function'?
m.mergeDeep.apply(m,iters):
iters[iters.length - 1];});};



src_Map__Map.prototype.sort = function(comparator){

return OrderedMap(sortFactory(this,comparator));};


src_Map__Map.prototype.sortBy = function(mapper,comparator){

return OrderedMap(sortFactory(this,comparator,mapper));};




src_Map__Map.prototype.withMutations = function(fn){
var mutable=this.asMutable();
fn(mutable);
return mutable.wasAltered()?mutable.__ensureOwner(this.__ownerID):this;};


src_Map__Map.prototype.asMutable = function(){
return this.__ownerID?this:this.__ensureOwner(new OwnerID());};


src_Map__Map.prototype.asImmutable = function(){
return this.__ensureOwner();};


src_Map__Map.prototype.wasAltered = function(){
return this.__altered;};


src_Map__Map.prototype.__iterator = function(type,reverse){
return new MapIterator(this,type,reverse);};


src_Map__Map.prototype.__iterate = function(fn,reverse){var this$0=this;
var iterations=0;
this._root && this._root.iterate(function(entry){
iterations++;
return fn(entry[1],entry[0],this$0);},
reverse);
return iterations;};


src_Map__Map.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeMap(this.size,this._root,ownerID,this.__hash);};



function isMap(maybeMap){
return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);}


src_Map__Map.isMap = isMap;

var IS_MAP_SENTINEL='@@__IMMUTABLE_MAP__@@';

var MapPrototype=src_Map__Map.prototype;
MapPrototype[IS_MAP_SENTINEL] = true;
MapPrototype[DELETE] = MapPrototype.remove;
MapPrototype.removeIn = MapPrototype.deleteIn;






function ArrayMapNode(ownerID,entries){
this.ownerID = ownerID;
this.entries = entries;}


ArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


ArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;

var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && entries.length === 1){
return;}


if(!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE){
return createNodes(ownerID,entries,key,value);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new ArrayMapNode(ownerID,newEntries);};





function BitmapIndexedNode(ownerID,bitmap,nodes){
this.ownerID = ownerID;
this.bitmap = bitmap;
this.nodes = nodes;}


BitmapIndexedNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var bit=1 << ((shift === 0?keyHash:keyHash >>> shift) & MASK);
var bitmap=this.bitmap;
return (bitmap & bit) === 0?notSetValue:
this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT,keyHash,key,notSetValue);};


BitmapIndexedNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var keyHashFrag=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var bit=1 << keyHashFrag;
var bitmap=this.bitmap;
var exists=(bitmap & bit) !== 0;

if(!exists && value === NOT_SET){
return this;}


var idx=popCount(bitmap & bit - 1);
var nodes=this.nodes;
var node=exists?nodes[idx]:undefined;
var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);

if(newNode === node){
return this;}


if(!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE){
return expandNodes(ownerID,nodes,bitmap,keyHashFrag,newNode);}


if(exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])){
return nodes[idx ^ 1];}


if(exists && newNode && nodes.length === 1 && isLeafNode(newNode)){
return newNode;}


var isEditable=ownerID && ownerID === this.ownerID;
var newBitmap=exists?newNode?bitmap:bitmap ^ bit:bitmap | bit;
var newNodes=exists?newNode?
setIn(nodes,idx,newNode,isEditable):
spliceOut(nodes,idx,isEditable):
spliceIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.bitmap = newBitmap;
this.nodes = newNodes;
return this;}


return new BitmapIndexedNode(ownerID,newBitmap,newNodes);};





function HashArrayMapNode(ownerID,count,nodes){
this.ownerID = ownerID;
this.count = count;
this.nodes = nodes;}


HashArrayMapNode.prototype.get = function(shift,keyHash,key,notSetValue){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var node=this.nodes[idx];
return node?node.get(shift + SHIFT,keyHash,key,notSetValue):notSetValue;};


HashArrayMapNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}

var idx=(shift === 0?keyHash:keyHash >>> shift) & MASK;
var removed=value === NOT_SET;
var nodes=this.nodes;
var node=nodes[idx];

if(removed && !node){
return this;}


var newNode=updateNode(node,ownerID,shift + SHIFT,keyHash,key,value,didChangeSize,didAlter);
if(newNode === node){
return this;}


var newCount=this.count;
if(!node){
newCount++;}else 
if(!newNode){
newCount--;
if(newCount < MIN_HASH_ARRAY_MAP_SIZE){
return packNodes(ownerID,nodes,newCount,idx);}}



var isEditable=ownerID && ownerID === this.ownerID;
var newNodes=setIn(nodes,idx,newNode,isEditable);

if(isEditable){
this.count = newCount;
this.nodes = newNodes;
return this;}


return new HashArrayMapNode(ownerID,newCount,newNodes);};





function HashCollisionNode(ownerID,keyHash,entries){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entries = entries;}


HashCollisionNode.prototype.get = function(shift,keyHash,key,notSetValue){
var entries=this.entries;
for(var ii=0,len=entries.length;ii < len;ii++) {
if(is(key,entries[ii][0])){
return entries[ii][1];}}


return notSetValue;};


HashCollisionNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(keyHash === undefined){
keyHash = hash(key);}


var removed=value === NOT_SET;

if(keyHash !== this.keyHash){
if(removed){
return this;}

SetRef(didAlter);
SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,keyHash,[key,value]);}


var entries=this.entries;
var idx=0;
for(var len=entries.length;idx < len;idx++) {
if(is(key,entries[idx][0])){
break;}}


var exists=idx < len;

if(exists?entries[idx][1] === value:removed){
return this;}


SetRef(didAlter);
(removed || !exists) && SetRef(didChangeSize);

if(removed && len === 2){
return new ValueNode(ownerID,this.keyHash,entries[idx ^ 1]);}


var isEditable=ownerID && ownerID === this.ownerID;
var newEntries=isEditable?entries:arrCopy(entries);

if(exists){
if(removed){
idx === len - 1?newEntries.pop():newEntries[idx] = newEntries.pop();}else 
{
newEntries[idx] = [key,value];}}else 

{
newEntries.push([key,value]);}


if(isEditable){
this.entries = newEntries;
return this;}


return new HashCollisionNode(ownerID,this.keyHash,newEntries);};





function ValueNode(ownerID,keyHash,entry){
this.ownerID = ownerID;
this.keyHash = keyHash;
this.entry = entry;}


ValueNode.prototype.get = function(shift,keyHash,key,notSetValue){
return is(key,this.entry[0])?this.entry[1]:notSetValue;};


ValueNode.prototype.update = function(ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
var removed=value === NOT_SET;
var keyMatch=is(key,this.entry[0]);
if(keyMatch?value === this.entry[1]:removed){
return this;}


SetRef(didAlter);

if(removed){
SetRef(didChangeSize);
return;}


if(keyMatch){
if(ownerID && ownerID === this.ownerID){
this.entry[1] = value;
return this;}

return new ValueNode(ownerID,this.keyHash,[key,value]);}


SetRef(didChangeSize);
return mergeIntoNode(this,ownerID,shift,hash(key),[key,value]);};






ArrayMapNode.prototype.iterate = 
HashCollisionNode.prototype.iterate = function(fn,reverse){
var entries=this.entries;
for(var ii=0,maxIndex=entries.length - 1;ii <= maxIndex;ii++) {
if(fn(entries[reverse?maxIndex - ii:ii]) === false){
return false;}}};




BitmapIndexedNode.prototype.iterate = 
HashArrayMapNode.prototype.iterate = function(fn,reverse){
var nodes=this.nodes;
for(var ii=0,maxIndex=nodes.length - 1;ii <= maxIndex;ii++) {
var node=nodes[reverse?maxIndex - ii:ii];
if(node && node.iterate(fn,reverse) === false){
return false;}}};




ValueNode.prototype.iterate = function(fn,reverse){
return fn(this.entry);};


createClass(MapIterator,src_Iterator__Iterator);

function MapIterator(map,type,reverse){
this._type = type;
this._reverse = reverse;
this._stack = map._root && mapIteratorFrame(map._root);}


MapIterator.prototype.next = function(){
var type=this._type;
var stack=this._stack;
while(stack) {
var node=stack.node;
var index=stack.index++;
var maxIndex;
if(node.entry){
if(index === 0){
return mapIteratorValue(type,node.entry);}}else 

if(node.entries){
maxIndex = node.entries.length - 1;
if(index <= maxIndex){
return mapIteratorValue(type,node.entries[this._reverse?maxIndex - index:index]);}}else 

{
maxIndex = node.nodes.length - 1;
if(index <= maxIndex){
var subNode=node.nodes[this._reverse?maxIndex - index:index];
if(subNode){
if(subNode.entry){
return mapIteratorValue(type,subNode.entry);}

stack = this._stack = mapIteratorFrame(subNode,stack);}

continue;}}


stack = this._stack = this._stack.__prev;}

return iteratorDone();};



function mapIteratorValue(type,entry){
return iteratorValue(type,entry[0],entry[1]);}


function mapIteratorFrame(node,prev){
return {
node:node,
index:0,
__prev:prev};}



function makeMap(size,root,ownerID,hash){
var map=Object.create(MapPrototype);
map.size = size;
map._root = root;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_MAP;
function emptyMap(){
return EMPTY_MAP || (EMPTY_MAP = makeMap(0));}


function updateMap(map,k,v){
var newRoot;
var newSize;
if(!map._root){
if(v === NOT_SET){
return map;}

newSize = 1;
newRoot = new ArrayMapNode(map.__ownerID,[[k,v]]);}else 
{
var didChangeSize=MakeRef(CHANGE_LENGTH);
var didAlter=MakeRef(DID_ALTER);
newRoot = updateNode(map._root,map.__ownerID,0,undefined,k,v,didChangeSize,didAlter);
if(!didAlter.value){
return map;}

newSize = map.size + (didChangeSize.value?v === NOT_SET?-1:1:0);}

if(map.__ownerID){
map.size = newSize;
map._root = newRoot;
map.__hash = undefined;
map.__altered = true;
return map;}

return newRoot?makeMap(newSize,newRoot):emptyMap();}


function updateNode(node,ownerID,shift,keyHash,key,value,didChangeSize,didAlter){
if(!node){
if(value === NOT_SET){
return node;}

SetRef(didAlter);
SetRef(didChangeSize);
return new ValueNode(ownerID,keyHash,[key,value]);}

return node.update(ownerID,shift,keyHash,key,value,didChangeSize,didAlter);}


function isLeafNode(node){
return node.constructor === ValueNode || node.constructor === HashCollisionNode;}


function mergeIntoNode(node,ownerID,shift,keyHash,entry){
if(node.keyHash === keyHash){
return new HashCollisionNode(ownerID,keyHash,[node.entry,entry]);}


var idx1=(shift === 0?node.keyHash:node.keyHash >>> shift) & MASK;
var idx2=(shift === 0?keyHash:keyHash >>> shift) & MASK;

var newNode;
var nodes=idx1 === idx2?
[mergeIntoNode(node,ownerID,shift + SHIFT,keyHash,entry)]:(
newNode = new ValueNode(ownerID,keyHash,entry),idx1 < idx2?[node,newNode]:[newNode,node]);

return new BitmapIndexedNode(ownerID,1 << idx1 | 1 << idx2,nodes);}


function createNodes(ownerID,entries,key,value){
if(!ownerID){
ownerID = new OwnerID();}

var node=new ValueNode(ownerID,hash(key),[key,value]);
for(var ii=0;ii < entries.length;ii++) {
var entry=entries[ii];
node = node.update(ownerID,0,undefined,entry[0],entry[1]);}

return node;}


function packNodes(ownerID,nodes,count,excluding){
var bitmap=0;
var packedII=0;
var packedNodes=new Array(count);
for(var ii=0,bit=1,len=nodes.length;ii < len;ii++,bit <<= 1) {
var node=nodes[ii];
if(node !== undefined && ii !== excluding){
bitmap |= bit;
packedNodes[packedII++] = node;}}


return new BitmapIndexedNode(ownerID,bitmap,packedNodes);}


function expandNodes(ownerID,nodes,bitmap,including,node){
var count=0;
var expandedNodes=new Array(SIZE);
for(var ii=0;bitmap !== 0;ii++,bitmap >>>= 1) {
expandedNodes[ii] = bitmap & 1?nodes[count++]:undefined;}

expandedNodes[including] = node;
return new HashArrayMapNode(ownerID,count + 1,expandedNodes);}


function mergeIntoMapWith(map,merger,iterables){
var iters=[];
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=KeyedIterable(value);
if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

return mergeIntoCollectionWith(map,merger,iters);}


function deepMerger(merger){
return function(existing,value,key)
{return existing && existing.mergeDeepWith && isIterable(value)?
existing.mergeDeepWith(merger,value):
merger?merger(existing,value,key):value;};}


function mergeIntoCollectionWith(collection,merger,iters){
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return collection;}

if(collection.size === 0 && !collection.__ownerID && iters.length === 1){
return collection.constructor(iters[0]);}

return collection.withMutations(function(collection){
var mergeIntoMap=merger?
function(value,key){
collection.update(key,NOT_SET,function(existing)
{return existing === NOT_SET?value:merger(existing,value,key);});}:


function(value,key){
collection.set(key,value);};

for(var ii=0;ii < iters.length;ii++) {
iters[ii].forEach(mergeIntoMap);}});}




function updateInDeepMap(existing,keyPathIter,notSetValue,updater){
var isNotSet=existing === NOT_SET;
var step=keyPathIter.next();
if(step.done){
var existingValue=isNotSet?notSetValue:existing;
var newValue=updater(existingValue);
return newValue === existingValue?existing:newValue;}

invariant(
isNotSet || existing && existing.set,
'invalid keyPath');

var key=step.value;
var nextExisting=isNotSet?NOT_SET:existing.get(key,NOT_SET);
var nextUpdated=updateInDeepMap(
nextExisting,
keyPathIter,
notSetValue,
updater);

return nextUpdated === nextExisting?existing:
nextUpdated === NOT_SET?existing.remove(key):
(isNotSet?emptyMap():existing).set(key,nextUpdated);}


function popCount(x){
x = x - (x >> 1 & 0x55555555);
x = (x & 0x33333333) + (x >> 2 & 0x33333333);
x = x + (x >> 4) & 0x0f0f0f0f;
x = x + (x >> 8);
x = x + (x >> 16);
return x & 0x7f;}


function setIn(array,idx,val,canEdit){
var newArray=canEdit?array:arrCopy(array);
newArray[idx] = val;
return newArray;}


function spliceIn(array,idx,val,canEdit){
var newLen=array.length + 1;
if(canEdit && idx + 1 === newLen){
array[idx] = val;
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
newArray[ii] = val;
after = -1;}else 
{
newArray[ii] = array[ii + after];}}


return newArray;}


function spliceOut(array,idx,canEdit){
var newLen=array.length - 1;
if(canEdit && idx === newLen){
array.pop();
return array;}

var newArray=new Array(newLen);
var after=0;
for(var ii=0;ii < newLen;ii++) {
if(ii === idx){
after = 1;}

newArray[ii] = array[ii + after];}

return newArray;}


var MAX_ARRAY_MAP_SIZE=SIZE / 4;
var MAX_BITMAP_INDEXED_SIZE=SIZE / 2;
var MIN_HASH_ARRAY_MAP_SIZE=SIZE / 4;

createClass(List,IndexedCollection);



function List(value){
var empty=emptyList();
if(value === null || value === undefined){
return empty;}

if(isList(value)){
return value;}

var iter=IndexedIterable(value);
var size=iter.size;
if(size === 0){
return empty;}

assertNotInfinite(size);
if(size > 0 && size < SIZE){
return makeList(0,size,SHIFT,null,new VNode(iter.toArray()));}

return empty.withMutations(function(list){
list.setSize(size);
iter.forEach(function(v,i){return list.set(i,v);});});}



List.of = function(){
return this(arguments);};


List.prototype.toString = function(){
return this.__toString('List [',']');};




List.prototype.get = function(index,notSetValue){
index = wrapIndex(this,index);
if(index >= 0 && index < this.size){
index += this._origin;
var node=listNodeFor(this,index);
return node && node.array[index & MASK];}

return notSetValue;};




List.prototype.set = function(index,value){
return updateList(this,index,value);};


List.prototype.remove = function(index){
return !this.has(index)?this:
index === 0?this.shift():
index === this.size - 1?this.pop():
this.splice(index,1);};


List.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = this._origin = this._capacity = 0;
this._level = SHIFT;
this._root = this._tail = null;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyList();};


List.prototype.push = function(){
var values=arguments;
var oldSize=this.size;
return this.withMutations(function(list){
setListBounds(list,0,oldSize + values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(oldSize + ii,values[ii]);}});};




List.prototype.pop = function(){
return setListBounds(this,0,-1);};


List.prototype.unshift = function(){
var values=arguments;
return this.withMutations(function(list){
setListBounds(list,-values.length);
for(var ii=0;ii < values.length;ii++) {
list.set(ii,values[ii]);}});};




List.prototype.shift = function(){
return setListBounds(this,1);};




List.prototype.merge = function(){
return mergeIntoListWith(this,undefined,arguments);};


List.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,merger,iters);};


List.prototype.mergeDeep = function(){
return mergeIntoListWith(this,deepMerger(undefined),arguments);};


List.prototype.mergeDeepWith = function(merger){var iters=SLICE$0.call(arguments,1);
return mergeIntoListWith(this,deepMerger(merger),iters);};


List.prototype.setSize = function(size){
return setListBounds(this,0,size);};




List.prototype.slice = function(begin,end){
var size=this.size;
if(wholeSlice(begin,end,size)){
return this;}

return setListBounds(
this,
resolveBegin(begin,size),
resolveEnd(end,size));};



List.prototype.__iterator = function(type,reverse){
var index=0;
var values=iterateList(this,reverse);
return new src_Iterator__Iterator(function(){
var value=values();
return value === DONE?
iteratorDone():
iteratorValue(type,index++,value);});};



List.prototype.__iterate = function(fn,reverse){
var index=0;
var values=iterateList(this,reverse);
var value;
while((value = values()) !== DONE) {
if(fn(value,index++,this) === false){
break;}}


return index;};


List.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
return this;}

return makeList(this._origin,this._capacity,this._level,this._root,this._tail,ownerID,this.__hash);};



function isList(maybeList){
return !!(maybeList && maybeList[IS_LIST_SENTINEL]);}


List.isList = isList;

var IS_LIST_SENTINEL='@@__IMMUTABLE_LIST__@@';

var ListPrototype=List.prototype;
ListPrototype[IS_LIST_SENTINEL] = true;
ListPrototype[DELETE] = ListPrototype.remove;
ListPrototype.setIn = MapPrototype.setIn;
ListPrototype.deleteIn = 
ListPrototype.removeIn = MapPrototype.removeIn;
ListPrototype.update = MapPrototype.update;
ListPrototype.updateIn = MapPrototype.updateIn;
ListPrototype.mergeIn = MapPrototype.mergeIn;
ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
ListPrototype.withMutations = MapPrototype.withMutations;
ListPrototype.asMutable = MapPrototype.asMutable;
ListPrototype.asImmutable = MapPrototype.asImmutable;
ListPrototype.wasAltered = MapPrototype.wasAltered;



function VNode(array,ownerID){
this.array = array;
this.ownerID = ownerID;}




VNode.prototype.removeBefore = function(ownerID,level,index){
if(index === level?1 << level:0 || this.array.length === 0){
return this;}

var originIndex=index >>> level & MASK;
if(originIndex >= this.array.length){
return new VNode([],ownerID);}

var removingFirst=originIndex === 0;
var newChild;
if(level > 0){
var oldChild=this.array[originIndex];
newChild = oldChild && oldChild.removeBefore(ownerID,level - SHIFT,index);
if(newChild === oldChild && removingFirst){
return this;}}


if(removingFirst && !newChild){
return this;}

var editable=editableVNode(this,ownerID);
if(!removingFirst){
for(var ii=0;ii < originIndex;ii++) {
editable.array[ii] = undefined;}}


if(newChild){
editable.array[originIndex] = newChild;}

return editable;};


VNode.prototype.removeAfter = function(ownerID,level,index){
if(index === (level?1 << level:0) || this.array.length === 0){
return this;}

var sizeIndex=index - 1 >>> level & MASK;
if(sizeIndex >= this.array.length){
return this;}


var newChild;
if(level > 0){
var oldChild=this.array[sizeIndex];
newChild = oldChild && oldChild.removeAfter(ownerID,level - SHIFT,index);
if(newChild === oldChild && sizeIndex === this.array.length - 1){
return this;}}



var editable=editableVNode(this,ownerID);
editable.array.splice(sizeIndex + 1);
if(newChild){
editable.array[sizeIndex] = newChild;}

return editable;};




var DONE={};

function iterateList(list,reverse){
var left=list._origin;
var right=list._capacity;
var tailPos=getTailOffset(right);
var tail=list._tail;

return iterateNodeOrLeaf(list._root,list._level,0);

function iterateNodeOrLeaf(node,level,offset){
return level === 0?
iterateLeaf(node,offset):
iterateNode(node,level,offset);}


function iterateLeaf(node,offset){
var array=offset === tailPos?tail && tail.array:node && node.array;
var from=offset > left?0:left - offset;
var to=right - offset;
if(to > SIZE){
to = SIZE;}

return function(){
if(from === to){
return DONE;}

var idx=reverse?--to:from++;
return array && array[idx];};}



function iterateNode(node,level,offset){
var values;
var array=node && node.array;
var from=offset > left?0:left - offset >> level;
var to=(right - offset >> level) + 1;
if(to > SIZE){
to = SIZE;}

return function(){
do {
if(values){
var value=values();
if(value !== DONE){
return value;}

values = null;}

if(from === to){
return DONE;}

var idx=reverse?--to:from++;
values = iterateNodeOrLeaf(
array && array[idx],level - SHIFT,offset + (idx << level));}while(

true);};}}




function makeList(origin,capacity,level,root,tail,ownerID,hash){
var list=Object.create(ListPrototype);
list.size = capacity - origin;
list._origin = origin;
list._capacity = capacity;
list._level = level;
list._root = root;
list._tail = tail;
list.__ownerID = ownerID;
list.__hash = hash;
list.__altered = false;
return list;}


var EMPTY_LIST;
function emptyList(){
return EMPTY_LIST || (EMPTY_LIST = makeList(0,0,SHIFT));}


function updateList(list,index,value){
index = wrapIndex(list,index);

if(index !== index){
return list;}


if(index >= list.size || index < 0){
return list.withMutations(function(list){
index < 0?
setListBounds(list,index).set(0,value):
setListBounds(list,0,index + 1).set(index,value);});}



index += list._origin;

var newTail=list._tail;
var newRoot=list._root;
var didAlter=MakeRef(DID_ALTER);
if(index >= getTailOffset(list._capacity)){
newTail = updateVNode(newTail,list.__ownerID,0,index,value,didAlter);}else 
{
newRoot = updateVNode(newRoot,list.__ownerID,list._level,index,value,didAlter);}


if(!didAlter.value){
return list;}


if(list.__ownerID){
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(list._origin,list._capacity,list._level,newRoot,newTail);}


function updateVNode(node,ownerID,level,index,value,didAlter){
var idx=index >>> level & MASK;
var nodeHas=node && idx < node.array.length;
if(!nodeHas && value === undefined){
return node;}


var newNode;

if(level > 0){
var lowerNode=node && node.array[idx];
var newLowerNode=updateVNode(lowerNode,ownerID,level - SHIFT,index,value,didAlter);
if(newLowerNode === lowerNode){
return node;}

newNode = editableVNode(node,ownerID);
newNode.array[idx] = newLowerNode;
return newNode;}


if(nodeHas && node.array[idx] === value){
return node;}


SetRef(didAlter);

newNode = editableVNode(node,ownerID);
if(value === undefined && idx === newNode.array.length - 1){
newNode.array.pop();}else 
{
newNode.array[idx] = value;}

return newNode;}


function editableVNode(node,ownerID){
if(ownerID && node && ownerID === node.ownerID){
return node;}

return new VNode(node?node.array.slice():[],ownerID);}


function listNodeFor(list,rawIndex){
if(rawIndex >= getTailOffset(list._capacity)){
return list._tail;}

if(rawIndex < 1 << list._level + SHIFT){
var node=list._root;
var level=list._level;
while(node && level > 0) {
node = node.array[rawIndex >>> level & MASK];
level -= SHIFT;}

return node;}}



function setListBounds(list,begin,end){


if(begin !== undefined){
begin = begin | 0;}

if(end !== undefined){
end = end | 0;}

var owner=list.__ownerID || new OwnerID();
var oldOrigin=list._origin;
var oldCapacity=list._capacity;
var newOrigin=oldOrigin + begin;
var newCapacity=end === undefined?oldCapacity:end < 0?oldCapacity + end:oldOrigin + end;
if(newOrigin === oldOrigin && newCapacity === oldCapacity){
return list;}



if(newOrigin >= newCapacity){
return list.clear();}


var newLevel=list._level;
var newRoot=list._root;


var offsetShift=0;
while(newOrigin + offsetShift < 0) {
newRoot = new VNode(newRoot && newRoot.array.length?[undefined,newRoot]:[],owner);
newLevel += SHIFT;
offsetShift += 1 << newLevel;}

if(offsetShift){
newOrigin += offsetShift;
oldOrigin += offsetShift;
newCapacity += offsetShift;
oldCapacity += offsetShift;}


var oldTailOffset=getTailOffset(oldCapacity);
var newTailOffset=getTailOffset(newCapacity);


while(newTailOffset >= 1 << newLevel + SHIFT) {
newRoot = new VNode(newRoot && newRoot.array.length?[newRoot]:[],owner);
newLevel += SHIFT;}



var oldTail=list._tail;
var newTail=newTailOffset < oldTailOffset?
listNodeFor(list,newCapacity - 1):
newTailOffset > oldTailOffset?new VNode([],owner):oldTail;


if(oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length){
newRoot = editableVNode(newRoot,owner);
var node=newRoot;
for(var level=newLevel;level > SHIFT;level -= SHIFT) {
var idx=oldTailOffset >>> level & MASK;
node = node.array[idx] = editableVNode(node.array[idx],owner);}

node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;}



if(newCapacity < oldCapacity){
newTail = newTail && newTail.removeAfter(owner,0,newCapacity);}



if(newOrigin >= newTailOffset){
newOrigin -= newTailOffset;
newCapacity -= newTailOffset;
newLevel = SHIFT;
newRoot = null;
newTail = newTail && newTail.removeBefore(owner,0,newOrigin);}else 


if(newOrigin > oldOrigin || newTailOffset < oldTailOffset){
offsetShift = 0;


while(newRoot) {
var beginIndex=newOrigin >>> newLevel & MASK;
if(beginIndex !== newTailOffset >>> newLevel & MASK){
break;}

if(beginIndex){
offsetShift += (1 << newLevel) * beginIndex;}

newLevel -= SHIFT;
newRoot = newRoot.array[beginIndex];}



if(newRoot && newOrigin > oldOrigin){
newRoot = newRoot.removeBefore(owner,newLevel,newOrigin - offsetShift);}

if(newRoot && newTailOffset < oldTailOffset){
newRoot = newRoot.removeAfter(owner,newLevel,newTailOffset - offsetShift);}

if(offsetShift){
newOrigin -= offsetShift;
newCapacity -= offsetShift;}}



if(list.__ownerID){
list.size = newCapacity - newOrigin;
list._origin = newOrigin;
list._capacity = newCapacity;
list._level = newLevel;
list._root = newRoot;
list._tail = newTail;
list.__hash = undefined;
list.__altered = true;
return list;}

return makeList(newOrigin,newCapacity,newLevel,newRoot,newTail);}


function mergeIntoListWith(list,merger,iterables){
var iters=[];
var maxSize=0;
for(var ii=0;ii < iterables.length;ii++) {
var value=iterables[ii];
var iter=IndexedIterable(value);
if(iter.size > maxSize){
maxSize = iter.size;}

if(!isIterable(value)){
iter = iter.map(function(v){return fromJS(v);});}

iters.push(iter);}

if(maxSize > list.size){
list = list.setSize(maxSize);}

return mergeIntoCollectionWith(list,merger,iters);}


function getTailOffset(size){
return size < SIZE?0:size - 1 >>> SHIFT << SHIFT;}


createClass(OrderedMap,src_Map__Map);



function OrderedMap(value){
return value === null || value === undefined?emptyOrderedMap():
isOrderedMap(value)?value:
emptyOrderedMap().withMutations(function(map){
var iter=KeyedIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v,k){return map.set(k,v);});});}



OrderedMap.of = function(){
return this(arguments);};


OrderedMap.prototype.toString = function(){
return this.__toString('OrderedMap {','}');};




OrderedMap.prototype.get = function(k,notSetValue){
var index=this._map.get(k);
return index !== undefined?this._list.get(index)[1]:notSetValue;};




OrderedMap.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._map.clear();
this._list.clear();
return this;}

return emptyOrderedMap();};


OrderedMap.prototype.set = function(k,v){
return updateOrderedMap(this,k,v);};


OrderedMap.prototype.remove = function(k){
return updateOrderedMap(this,k,NOT_SET);};


OrderedMap.prototype.wasAltered = function(){
return this._map.wasAltered() || this._list.wasAltered();};


OrderedMap.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._list.__iterate(
function(entry){return entry && fn(entry[1],entry[0],this$0);},
reverse);};



OrderedMap.prototype.__iterator = function(type,reverse){
return this._list.fromEntrySeq().__iterator(type,reverse);};


OrderedMap.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
var newList=this._list.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
this._list = newList;
return this;}

return makeOrderedMap(newMap,newList,ownerID,this.__hash);};



function isOrderedMap(maybeOrderedMap){
return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);}


OrderedMap.isOrderedMap = isOrderedMap;

OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



function makeOrderedMap(map,list,ownerID,hash){
var omap=Object.create(OrderedMap.prototype);
omap.size = map?map.size:0;
omap._map = map;
omap._list = list;
omap.__ownerID = ownerID;
omap.__hash = hash;
return omap;}


var EMPTY_ORDERED_MAP;
function emptyOrderedMap(){
return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(),emptyList()));}


function updateOrderedMap(omap,k,v){
var map=omap._map;
var list=omap._list;
var i=map.get(k);
var has=i !== undefined;
var newMap;
var newList;
if(v === NOT_SET){
if(!has){
return omap;}

if(list.size >= SIZE && list.size >= map.size * 2){
newList = list.filter(function(entry,idx){return entry !== undefined && i !== idx;});
newMap = newList.toKeyedSeq().map(function(entry){return entry[0];}).flip().toMap();
if(omap.__ownerID){
newMap.__ownerID = newList.__ownerID = omap.__ownerID;}}else 

{
newMap = map.remove(k);
newList = i === list.size - 1?list.pop():list.set(i,undefined);}}else 

{
if(has){
if(v === list.get(i)[1]){
return omap;}

newMap = map;
newList = list.set(i,[k,v]);}else 
{
newMap = map.set(k,list.size);
newList = list.set(list.size,[k,v]);}}


if(omap.__ownerID){
omap.size = newMap.size;
omap._map = newMap;
omap._list = newList;
omap.__hash = undefined;
return omap;}

return makeOrderedMap(newMap,newList);}


createClass(Stack,IndexedCollection);



function Stack(value){
return value === null || value === undefined?emptyStack():
isStack(value)?value:
emptyStack().unshiftAll(value);}


Stack.of = function(){
return this(arguments);};


Stack.prototype.toString = function(){
return this.__toString('Stack [',']');};




Stack.prototype.get = function(index,notSetValue){
var head=this._head;
index = wrapIndex(this,index);
while(head && index--) {
head = head.next;}

return head?head.value:notSetValue;};


Stack.prototype.peek = function(){
return this._head && this._head.value;};




Stack.prototype.push = function(){
if(arguments.length === 0){
return this;}

var newSize=this.size + arguments.length;
var head=this._head;
for(var ii=arguments.length - 1;ii >= 0;ii--) {
head = {
value:arguments[ii],
next:head};}


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pushAll = function(iter){
iter = IndexedIterable(iter);
if(iter.size === 0){
return this;}

assertNotInfinite(iter.size);
var newSize=this.size;
var head=this._head;
iter.reverse().forEach(function(value){
newSize++;
head = {
value:value,
next:head};});


if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};


Stack.prototype.pop = function(){
return this.slice(1);};


Stack.prototype.unshift = function(){
return this.push.apply(this,arguments);};


Stack.prototype.unshiftAll = function(iter){
return this.pushAll(iter);};


Stack.prototype.shift = function(){
return this.pop.apply(this,arguments);};


Stack.prototype.clear = function(){
if(this.size === 0){
return this;}

if(this.__ownerID){
this.size = 0;
this._head = undefined;
this.__hash = undefined;
this.__altered = true;
return this;}

return emptyStack();};


Stack.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

var resolvedBegin=resolveBegin(begin,this.size);
var resolvedEnd=resolveEnd(end,this.size);
if(resolvedEnd !== this.size){

return IndexedCollection.prototype.slice.call(this,begin,end);}

var newSize=this.size - resolvedBegin;
var head=this._head;
while(resolvedBegin--) {
head = head.next;}

if(this.__ownerID){
this.size = newSize;
this._head = head;
this.__hash = undefined;
this.__altered = true;
return this;}

return makeStack(newSize,head);};




Stack.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

if(!ownerID){
this.__ownerID = ownerID;
this.__altered = false;
return this;}

return makeStack(this.size,this._head,ownerID,this.__hash);};




Stack.prototype.__iterate = function(fn,reverse){
if(reverse){
return this.reverse().__iterate(fn);}

var iterations=0;
var node=this._head;
while(node) {
if(fn(node.value,iterations++,this) === false){
break;}

node = node.next;}

return iterations;};


Stack.prototype.__iterator = function(type,reverse){
if(reverse){
return this.reverse().__iterator(type);}

var iterations=0;
var node=this._head;
return new src_Iterator__Iterator(function(){
if(node){
var value=node.value;
node = node.next;
return iteratorValue(type,iterations++,value);}

return iteratorDone();});};




function isStack(maybeStack){
return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);}


Stack.isStack = isStack;

var IS_STACK_SENTINEL='@@__IMMUTABLE_STACK__@@';

var StackPrototype=Stack.prototype;
StackPrototype[IS_STACK_SENTINEL] = true;
StackPrototype.withMutations = MapPrototype.withMutations;
StackPrototype.asMutable = MapPrototype.asMutable;
StackPrototype.asImmutable = MapPrototype.asImmutable;
StackPrototype.wasAltered = MapPrototype.wasAltered;


function makeStack(size,head,ownerID,hash){
var map=Object.create(StackPrototype);
map.size = size;
map._head = head;
map.__ownerID = ownerID;
map.__hash = hash;
map.__altered = false;
return map;}


var EMPTY_STACK;
function emptyStack(){
return EMPTY_STACK || (EMPTY_STACK = makeStack(0));}


createClass(src_Set__Set,SetCollection);



function src_Set__Set(value){
return value === null || value === undefined?emptySet():
isSet(value) && !isOrdered(value)?value:
emptySet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



src_Set__Set.of = function(){
return this(arguments);};


src_Set__Set.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


src_Set__Set.prototype.toString = function(){
return this.__toString('Set {','}');};




src_Set__Set.prototype.has = function(value){
return this._map.has(value);};




src_Set__Set.prototype.add = function(value){
return updateSet(this,this._map.set(value,true));};


src_Set__Set.prototype.remove = function(value){
return updateSet(this,this._map.remove(value));};


src_Set__Set.prototype.clear = function(){
return updateSet(this,this._map.clear());};




src_Set__Set.prototype.union = function(){var iters=SLICE$0.call(arguments,0);
iters = iters.filter(function(x){return x.size !== 0;});
if(iters.length === 0){
return this;}

if(this.size === 0 && !this.__ownerID && iters.length === 1){
return this.constructor(iters[0]);}

return this.withMutations(function(set){
for(var ii=0;ii < iters.length;ii++) {
SetIterable(iters[ii]).forEach(function(value){return set.add(value);});}});};




src_Set__Set.prototype.intersect = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(!iters.every(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.subtract = function(){var iters=SLICE$0.call(arguments,0);
if(iters.length === 0){
return this;}

iters = iters.map(function(iter){return SetIterable(iter);});
var originalSet=this;
return this.withMutations(function(set){
originalSet.forEach(function(value){
if(iters.some(function(iter){return iter.includes(value);})){
set.remove(value);}});});};





src_Set__Set.prototype.merge = function(){
return this.union.apply(this,arguments);};


src_Set__Set.prototype.mergeWith = function(merger){var iters=SLICE$0.call(arguments,1);
return this.union.apply(this,iters);};


src_Set__Set.prototype.sort = function(comparator){

return OrderedSet(sortFactory(this,comparator));};


src_Set__Set.prototype.sortBy = function(mapper,comparator){

return OrderedSet(sortFactory(this,comparator,mapper));};


src_Set__Set.prototype.wasAltered = function(){
return this._map.wasAltered();};


src_Set__Set.prototype.__iterate = function(fn,reverse){var this$0=this;
return this._map.__iterate(function(_,k){return fn(k,k,this$0);},reverse);};


src_Set__Set.prototype.__iterator = function(type,reverse){
return this._map.map(function(_,k){return k;}).__iterator(type,reverse);};


src_Set__Set.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return this.__make(newMap,ownerID);};



function isSet(maybeSet){
return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);}


src_Set__Set.isSet = isSet;

var IS_SET_SENTINEL='@@__IMMUTABLE_SET__@@';

var SetPrototype=src_Set__Set.prototype;
SetPrototype[IS_SET_SENTINEL] = true;
SetPrototype[DELETE] = SetPrototype.remove;
SetPrototype.mergeDeep = SetPrototype.merge;
SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
SetPrototype.withMutations = MapPrototype.withMutations;
SetPrototype.asMutable = MapPrototype.asMutable;
SetPrototype.asImmutable = MapPrototype.asImmutable;

SetPrototype.__empty = emptySet;
SetPrototype.__make = makeSet;

function updateSet(set,newMap){
if(set.__ownerID){
set.size = newMap.size;
set._map = newMap;
return set;}

return newMap === set._map?set:
newMap.size === 0?set.__empty():
set.__make(newMap);}


function makeSet(map,ownerID){
var set=Object.create(SetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_SET;
function emptySet(){
return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));}


createClass(OrderedSet,src_Set__Set);



function OrderedSet(value){
return value === null || value === undefined?emptyOrderedSet():
isOrderedSet(value)?value:
emptyOrderedSet().withMutations(function(set){
var iter=SetIterable(value);
assertNotInfinite(iter.size);
iter.forEach(function(v){return set.add(v);});});}



OrderedSet.of = function(){
return this(arguments);};


OrderedSet.fromKeys = function(value){
return this(KeyedIterable(value).keySeq());};


OrderedSet.prototype.toString = function(){
return this.__toString('OrderedSet {','}');};



function isOrderedSet(maybeOrderedSet){
return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);}


OrderedSet.isOrderedSet = isOrderedSet;

var OrderedSetPrototype=OrderedSet.prototype;
OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

OrderedSetPrototype.__empty = emptyOrderedSet;
OrderedSetPrototype.__make = makeOrderedSet;

function makeOrderedSet(map,ownerID){
var set=Object.create(OrderedSetPrototype);
set.size = map?map.size:0;
set._map = map;
set.__ownerID = ownerID;
return set;}


var EMPTY_ORDERED_SET;
function emptyOrderedSet(){
return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));}


createClass(Record,KeyedCollection);

function Record(defaultValues,name){
var hasInitialized;

var RecordType=function Record(values){
if(values instanceof RecordType){
return values;}

if(!(this instanceof RecordType)){
return new RecordType(values);}

if(!hasInitialized){
hasInitialized = true;
var keys=Object.keys(defaultValues);
setProps(RecordTypePrototype,keys);
RecordTypePrototype.size = keys.length;
RecordTypePrototype._name = name;
RecordTypePrototype._keys = keys;
RecordTypePrototype._defaultValues = defaultValues;}

this._map = src_Map__Map(values);};


var RecordTypePrototype=RecordType.prototype = Object.create(RecordPrototype);
RecordTypePrototype.constructor = RecordType;

return RecordType;}


Record.prototype.toString = function(){
return this.__toString(recordName(this) + ' {','}');};




Record.prototype.has = function(k){
return this._defaultValues.hasOwnProperty(k);};


Record.prototype.get = function(k,notSetValue){
if(!this.has(k)){
return notSetValue;}

var defaultVal=this._defaultValues[k];
return this._map?this._map.get(k,defaultVal):defaultVal;};




Record.prototype.clear = function(){
if(this.__ownerID){
this._map && this._map.clear();
return this;}

var RecordType=this.constructor;
return RecordType._empty || (RecordType._empty = makeRecord(this,emptyMap()));};


Record.prototype.set = function(k,v){
if(!this.has(k)){
throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));}

var newMap=this._map && this._map.set(k,v);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.remove = function(k){
if(!this.has(k)){
return this;}

var newMap=this._map && this._map.remove(k);
if(this.__ownerID || newMap === this._map){
return this;}

return makeRecord(this,newMap);};


Record.prototype.wasAltered = function(){
return this._map.wasAltered();};


Record.prototype.__iterator = function(type,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterator(type,reverse);};


Record.prototype.__iterate = function(fn,reverse){var this$0=this;
return KeyedIterable(this._defaultValues).map(function(_,k){return this$0.get(k);}).__iterate(fn,reverse);};


Record.prototype.__ensureOwner = function(ownerID){
if(ownerID === this.__ownerID){
return this;}

var newMap=this._map && this._map.__ensureOwner(ownerID);
if(!ownerID){
this.__ownerID = ownerID;
this._map = newMap;
return this;}

return makeRecord(this,newMap,ownerID);};



var RecordPrototype=Record.prototype;
RecordPrototype[DELETE] = RecordPrototype.remove;
RecordPrototype.deleteIn = 
RecordPrototype.removeIn = MapPrototype.removeIn;
RecordPrototype.merge = MapPrototype.merge;
RecordPrototype.mergeWith = MapPrototype.mergeWith;
RecordPrototype.mergeIn = MapPrototype.mergeIn;
RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
RecordPrototype.setIn = MapPrototype.setIn;
RecordPrototype.update = MapPrototype.update;
RecordPrototype.updateIn = MapPrototype.updateIn;
RecordPrototype.withMutations = MapPrototype.withMutations;
RecordPrototype.asMutable = MapPrototype.asMutable;
RecordPrototype.asImmutable = MapPrototype.asImmutable;


function makeRecord(likeRecord,map,ownerID){
var record=Object.create(Object.getPrototypeOf(likeRecord));
record._map = map;
record.__ownerID = ownerID;
return record;}


function recordName(record){
return record._name || record.constructor.name || 'Record';}


function setProps(prototype,names){
try{
names.forEach(setProp.bind(undefined,prototype));}
catch(error) {}}




function setProp(prototype,name){
Object.defineProperty(prototype,name,{
get:function(){
return this.get(name);},

set:function(value){
invariant(this.__ownerID,'Cannot set on an immutable record.');
this.set(name,value);}});}




function deepEqual(a,b){
if(a === b){
return true;}


if(
!isIterable(b) || 
a.size !== undefined && b.size !== undefined && a.size !== b.size || 
a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || 
isKeyed(a) !== isKeyed(b) || 
isIndexed(a) !== isIndexed(b) || 
isOrdered(a) !== isOrdered(b))
{
return false;}


if(a.size === 0 && b.size === 0){
return true;}


var notAssociative=!isAssociative(a);

if(isOrdered(a)){
var entries=a.entries();
return b.every(function(v,k){
var entry=entries.next().value;
return entry && is(entry[1],v) && (notAssociative || is(entry[0],k));}) && 
entries.next().done;}


var flipped=false;

if(a.size === undefined){
if(b.size === undefined){
if(typeof a.cacheResult === 'function'){
a.cacheResult();}}else 

{
flipped = true;
var _=a;
a = b;
b = _;}}



var allEqual=true;
var bSize=b.__iterate(function(v,k){
if(notAssociative?!a.has(v):
flipped?!is(v,a.get(k,NOT_SET)):!is(a.get(k,NOT_SET),v)){
allEqual = false;
return false;}});



return allEqual && a.size === bSize;}


createClass(Range,IndexedSeq);

function Range(start,end,step){
if(!(this instanceof Range)){
return new Range(start,end,step);}

invariant(step !== 0,'Cannot step a Range by 0');
start = start || 0;
if(end === undefined){
end = Infinity;}

step = step === undefined?1:Math.abs(step);
if(end < start){
step = -step;}

this._start = start;
this._end = end;
this._step = step;
this.size = Math.max(0,Math.ceil((end - start) / step - 1) + 1);
if(this.size === 0){
if(EMPTY_RANGE){
return EMPTY_RANGE;}

EMPTY_RANGE = this;}}



Range.prototype.toString = function(){
if(this.size === 0){
return 'Range []';}

return 'Range [ ' + 
this._start + '...' + this._end + (
this._step > 1?' by ' + this._step:'') + 
' ]';};


Range.prototype.get = function(index,notSetValue){
return this.has(index)?
this._start + wrapIndex(this,index) * this._step:
notSetValue;};


Range.prototype.includes = function(searchValue){
var possibleIndex=(searchValue - this._start) / this._step;
return possibleIndex >= 0 && 
possibleIndex < this.size && 
possibleIndex === Math.floor(possibleIndex);};


Range.prototype.slice = function(begin,end){
if(wholeSlice(begin,end,this.size)){
return this;}

begin = resolveBegin(begin,this.size);
end = resolveEnd(end,this.size);
if(end <= begin){
return new Range(0,0);}

return new Range(this.get(begin,this._end),this.get(end,this._end),this._step);};


Range.prototype.indexOf = function(searchValue){
var offsetValue=searchValue - this._start;
if(offsetValue % this._step === 0){
var index=offsetValue / this._step;
if(index >= 0 && index < this.size){
return index;}}


return -1;};


Range.prototype.lastIndexOf = function(searchValue){
return this.indexOf(searchValue);};


Range.prototype.__iterate = function(fn,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
for(var ii=0;ii <= maxIndex;ii++) {
if(fn(value,ii,this) === false){
return ii + 1;}

value += reverse?-step:step;}

return ii;};


Range.prototype.__iterator = function(type,reverse){
var maxIndex=this.size - 1;
var step=this._step;
var value=reverse?this._start + maxIndex * step:this._start;
var ii=0;
return new src_Iterator__Iterator(function(){
var v=value;
value += reverse?-step:step;
return ii > maxIndex?iteratorDone():iteratorValue(type,ii++,v);});};



Range.prototype.equals = function(other){
return other instanceof Range?
this._start === other._start && 
this._end === other._end && 
this._step === other._step:
deepEqual(this,other);};



var EMPTY_RANGE;

createClass(Repeat,IndexedSeq);

function Repeat(value,times){
if(!(this instanceof Repeat)){
return new Repeat(value,times);}

this._value = value;
this.size = times === undefined?Infinity:Math.max(0,times);
if(this.size === 0){
if(EMPTY_REPEAT){
return EMPTY_REPEAT;}

EMPTY_REPEAT = this;}}



Repeat.prototype.toString = function(){
if(this.size === 0){
return 'Repeat []';}

return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';};


Repeat.prototype.get = function(index,notSetValue){
return this.has(index)?this._value:notSetValue;};


Repeat.prototype.includes = function(searchValue){
return is(this._value,searchValue);};


Repeat.prototype.slice = function(begin,end){
var size=this.size;
return wholeSlice(begin,end,size)?this:
new Repeat(this._value,resolveEnd(end,size) - resolveBegin(begin,size));};


Repeat.prototype.reverse = function(){
return this;};


Repeat.prototype.indexOf = function(searchValue){
if(is(this._value,searchValue)){
return 0;}

return -1;};


Repeat.prototype.lastIndexOf = function(searchValue){
if(is(this._value,searchValue)){
return this.size;}

return -1;};


Repeat.prototype.__iterate = function(fn,reverse){
for(var ii=0;ii < this.size;ii++) {
if(fn(this._value,ii,this) === false){
return ii + 1;}}


return ii;};


Repeat.prototype.__iterator = function(type,reverse){var this$0=this;
var ii=0;
return new src_Iterator__Iterator(function()
{return ii < this$0.size?iteratorValue(type,ii++,this$0._value):iteratorDone();});};



Repeat.prototype.equals = function(other){
return other instanceof Repeat?
is(this._value,other._value):
deepEqual(other);};



var EMPTY_REPEAT;




function mixin(ctor,methods){
var keyCopier=function(key){ctor.prototype[key] = methods[key];};
Object.keys(methods).forEach(keyCopier);
Object.getOwnPropertySymbols && 
Object.getOwnPropertySymbols(methods).forEach(keyCopier);
return ctor;}


Iterable.Iterator = src_Iterator__Iterator;

mixin(Iterable,{



toArray:function(){
assertNotInfinite(this.size);
var array=new Array(this.size || 0);
this.valueSeq().__iterate(function(v,i){array[i] = v;});
return array;},


toIndexedSeq:function(){
return new ToIndexedSequence(this);},


toJS:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJS === 'function'?value.toJS():value;}).
__toJS();},


toJSON:function(){
return this.toSeq().map(
function(value){return value && typeof value.toJSON === 'function'?value.toJSON():value;}).
__toJS();},


toKeyedSeq:function(){
return new ToKeyedSequence(this,true);},


toMap:function(){

return src_Map__Map(this.toKeyedSeq());},


toObject:function(){
assertNotInfinite(this.size);
var object={};
this.__iterate(function(v,k){object[k] = v;});
return object;},


toOrderedMap:function(){

return OrderedMap(this.toKeyedSeq());},


toOrderedSet:function(){

return OrderedSet(isKeyed(this)?this.valueSeq():this);},


toSet:function(){

return src_Set__Set(isKeyed(this)?this.valueSeq():this);},


toSetSeq:function(){
return new ToSetSequence(this);},


toSeq:function(){
return isIndexed(this)?this.toIndexedSeq():
isKeyed(this)?this.toKeyedSeq():
this.toSetSeq();},


toStack:function(){

return Stack(isKeyed(this)?this.valueSeq():this);},


toList:function(){

return List(isKeyed(this)?this.valueSeq():this);},





toString:function(){
return '[Iterable]';},


__toString:function(head,tail){
if(this.size === 0){
return head + tail;}

return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;},





concat:function(){var values=SLICE$0.call(arguments,0);
return reify(this,concatFactory(this,values));},


includes:function(searchValue){
return this.some(function(value){return is(value,searchValue);});},


entries:function(){
return this.__iterator(ITERATE_ENTRIES);},


every:function(predicate,context){
assertNotInfinite(this.size);
var returnValue=true;
this.__iterate(function(v,k,c){
if(!predicate.call(context,v,k,c)){
returnValue = false;
return false;}});


return returnValue;},


filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,true));},


find:function(predicate,context,notSetValue){
var entry=this.findEntry(predicate,context);
return entry?entry[1]:notSetValue;},


findEntry:function(predicate,context){
var found;
this.__iterate(function(v,k,c){
if(predicate.call(context,v,k,c)){
found = [k,v];
return false;}});


return found;},


findLastEntry:function(predicate,context){
return this.toSeq().reverse().findEntry(predicate,context);},


forEach:function(sideEffect,context){
assertNotInfinite(this.size);
return this.__iterate(context?sideEffect.bind(context):sideEffect);},


join:function(separator){
assertNotInfinite(this.size);
separator = separator !== undefined?'' + separator:',';
var joined='';
var isFirst=true;
this.__iterate(function(v){
isFirst?isFirst = false:joined += separator;
joined += v !== null && v !== undefined?v.toString():'';});

return joined;},


keys:function(){
return this.__iterator(ITERATE_KEYS);},


map:function(mapper,context){
return reify(this,mapFactory(this,mapper,context));},


reduce:function(reducer,initialReduction,context){
assertNotInfinite(this.size);
var reduction;
var useFirst;
if(arguments.length < 2){
useFirst = true;}else 
{
reduction = initialReduction;}

this.__iterate(function(v,k,c){
if(useFirst){
useFirst = false;
reduction = v;}else 
{
reduction = reducer.call(context,reduction,v,k,c);}});


return reduction;},


reduceRight:function(reducer,initialReduction,context){
var reversed=this.toKeyedSeq().reverse();
return reversed.reduce.apply(reversed,arguments);},


reverse:function(){
return reify(this,reverseFactory(this,true));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,true));},


some:function(predicate,context){
return !this.every(not(predicate),context);},


sort:function(comparator){
return reify(this,sortFactory(this,comparator));},


values:function(){
return this.__iterator(ITERATE_VALUES);},





butLast:function(){
return this.slice(0,-1);},


isEmpty:function(){
return this.size !== undefined?this.size === 0:!this.some(function(){return true;});},


count:function(predicate,context){
return ensureSize(
predicate?this.toSeq().filter(predicate,context):this);},



countBy:function(grouper,context){
return countByFactory(this,grouper,context);},


equals:function(other){
return deepEqual(this,other);},


entrySeq:function(){
var iterable=this;
if(iterable._cache){

return new ArraySeq(iterable._cache);}

var entriesSequence=iterable.toSeq().map(entryMapper).toIndexedSeq();
entriesSequence.fromEntrySeq = function(){return iterable.toSeq();};
return entriesSequence;},


filterNot:function(predicate,context){
return this.filter(not(predicate),context);},


findLast:function(predicate,context,notSetValue){
return this.toKeyedSeq().reverse().find(predicate,context,notSetValue);},


first:function(){
return this.find(returnTrue);},


flatMap:function(mapper,context){
return reify(this,flatMapFactory(this,mapper,context));},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,true));},


fromEntrySeq:function(){
return new FromEntriesSequence(this);},


get:function(searchKey,notSetValue){
return this.find(function(_,key){return is(key,searchKey);},undefined,notSetValue);},


getIn:function(searchKeyPath,notSetValue){
var nested=this;


var iter=forceIterator(searchKeyPath);
var step;
while(!(step = iter.next()).done) {
var key=step.value;
nested = nested && nested.get?nested.get(key,NOT_SET):NOT_SET;
if(nested === NOT_SET){
return notSetValue;}}


return nested;},


groupBy:function(grouper,context){
return groupByFactory(this,grouper,context);},


has:function(searchKey){
return this.get(searchKey,NOT_SET) !== NOT_SET;},


hasIn:function(searchKeyPath){
return this.getIn(searchKeyPath,NOT_SET) !== NOT_SET;},


isSubset:function(iter){
iter = typeof iter.includes === 'function'?iter:Iterable(iter);
return this.every(function(value){return iter.includes(value);});},


isSuperset:function(iter){
iter = typeof iter.isSubset === 'function'?iter:Iterable(iter);
return iter.isSubset(this);},


keySeq:function(){
return this.toSeq().map(keyMapper).toIndexedSeq();},


last:function(){
return this.toSeq().reverse().first();},


max:function(comparator){
return maxFactory(this,comparator);},


maxBy:function(mapper,comparator){
return maxFactory(this,comparator,mapper);},


min:function(comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator);},


minBy:function(mapper,comparator){
return maxFactory(this,comparator?neg(comparator):defaultNegComparator,mapper);},


rest:function(){
return this.slice(1);},


skip:function(amount){
return this.slice(Math.max(0,amount));},


skipLast:function(amount){
return reify(this,this.toSeq().reverse().skip(amount).reverse());},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,true));},


skipUntil:function(predicate,context){
return this.skipWhile(not(predicate),context);},


sortBy:function(mapper,comparator){
return reify(this,sortFactory(this,comparator,mapper));},


take:function(amount){
return this.slice(0,Math.max(0,amount));},


takeLast:function(amount){
return reify(this,this.toSeq().reverse().take(amount).reverse());},


takeWhile:function(predicate,context){
return reify(this,takeWhileFactory(this,predicate,context));},


takeUntil:function(predicate,context){
return this.takeWhile(not(predicate),context);},


valueSeq:function(){
return this.toIndexedSeq();},





hashCode:function(){
return this.__hash || (this.__hash = hashIterable(this));}});















var IterablePrototype=Iterable.prototype;
IterablePrototype[IS_ITERABLE_SENTINEL] = true;
IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
IterablePrototype.__toJS = IterablePrototype.toArray;
IterablePrototype.__toStringMapper = quoteString;
IterablePrototype.inspect = 
IterablePrototype.toSource = function(){return this.toString();};
IterablePrototype.chain = IterablePrototype.flatMap;
IterablePrototype.contains = IterablePrototype.includes;


(function(){
try{
Object.defineProperty(IterablePrototype,'length',{
get:function(){
if(!Iterable.noLengthWarning){
var stack;
try{
throw new Error();}
catch(error) {
stack = error.stack;}

if(stack.indexOf('_wrapObject') === -1){
console && console.warn && console.warn(
'iterable.length has been deprecated, ' + 
'use iterable.size or iterable.count(). ' + 
'This warning will become a silent error in a future version. ' + 
stack);

return this.size;}}}});}




catch(e) {}})();




mixin(KeyedIterable,{



flip:function(){
return reify(this,flipFactory(this));},


findKey:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry && entry[0];},


findLastKey:function(predicate,context){
return this.toSeq().reverse().findKey(predicate,context);},


keyOf:function(searchValue){
return this.findKey(function(value){return is(value,searchValue);});},


lastKeyOf:function(searchValue){
return this.findLastKey(function(value){return is(value,searchValue);});},


mapEntries:function(mapper,context){var this$0=this;
var iterations=0;
return reify(this,
this.toSeq().map(
function(v,k){return mapper.call(context,[k,v],iterations++,this$0);}).
fromEntrySeq());},



mapKeys:function(mapper,context){var this$0=this;
return reify(this,
this.toSeq().flip().map(
function(k,v){return mapper.call(context,k,v,this$0);}).
flip());}});





var KeyedIterablePrototype=KeyedIterable.prototype;
KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
KeyedIterablePrototype.__toStringMapper = function(v,k){return JSON.stringify(k) + ': ' + quoteString(v);};



mixin(IndexedIterable,{



toKeyedSeq:function(){
return new ToKeyedSequence(this,false);},





filter:function(predicate,context){
return reify(this,filterFactory(this,predicate,context,false));},


findIndex:function(predicate,context){
var entry=this.findEntry(predicate,context);
return entry?entry[0]:-1;},


indexOf:function(searchValue){
var key=this.toKeyedSeq().keyOf(searchValue);
return key === undefined?-1:key;},


lastIndexOf:function(searchValue){
return this.toSeq().reverse().indexOf(searchValue);},


reverse:function(){
return reify(this,reverseFactory(this,false));},


slice:function(begin,end){
return reify(this,sliceFactory(this,begin,end,false));},


splice:function(index,removeNum){
var numArgs=arguments.length;
removeNum = Math.max(removeNum | 0,0);
if(numArgs === 0 || numArgs === 2 && !removeNum){
return this;}




index = resolveBegin(index,index < 0?this.count():this.size);
var spliced=this.slice(0,index);
return reify(
this,
numArgs === 1?
spliced:
spliced.concat(arrCopy(arguments,2),this.slice(index + removeNum)));},






findLastIndex:function(predicate,context){
var key=this.toKeyedSeq().findLastKey(predicate,context);
return key === undefined?-1:key;},


first:function(){
return this.get(0);},


flatten:function(depth){
return reify(this,flattenFactory(this,depth,false));},


get:function(index,notSetValue){
index = wrapIndex(this,index);
return index < 0 || (this.size === Infinity || 
this.size !== undefined && index > this.size)?
notSetValue:
this.find(function(_,key){return key === index;},undefined,notSetValue);},


has:function(index){
index = wrapIndex(this,index);
return index >= 0 && (this.size !== undefined?
this.size === Infinity || index < this.size:
this.indexOf(index) !== -1);},



interpose:function(separator){
return reify(this,interposeFactory(this,separator));},


interleave:function(){
var iterables=[this].concat(arrCopy(arguments));
var zipped=zipWithFactory(this.toSeq(),IndexedSeq.of,iterables);
var interleaved=zipped.flatten(true);
if(zipped.size){
interleaved.size = zipped.size * iterables.length;}

return reify(this,interleaved);},


last:function(){
return this.get(-1);},


skipWhile:function(predicate,context){
return reify(this,skipWhileFactory(this,predicate,context,false));},


zip:function(){
var iterables=[this].concat(arrCopy(arguments));
return reify(this,zipWithFactory(this,defaultZipper,iterables));},


zipWith:function(zipper){
var iterables=arrCopy(arguments);
iterables[0] = this;
return reify(this,zipWithFactory(this,zipper,iterables));}});




IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



mixin(SetIterable,{



get:function(value,notSetValue){
return this.has(value)?value:notSetValue;},


includes:function(value){
return this.has(value);},





keySeq:function(){
return this.valueSeq();}});




SetIterable.prototype.has = IterablePrototype.includes;




mixin(KeyedSeq,KeyedIterable.prototype);
mixin(IndexedSeq,IndexedIterable.prototype);
mixin(SetSeq,SetIterable.prototype);

mixin(KeyedCollection,KeyedIterable.prototype);
mixin(IndexedCollection,IndexedIterable.prototype);
mixin(SetCollection,SetIterable.prototype);




function keyMapper(v,k){
return k;}


function entryMapper(v,k){
return [k,v];}


function not(predicate){
return function(){
return !predicate.apply(this,arguments);};}



function neg(predicate){
return function(){
return -predicate.apply(this,arguments);};}



function quoteString(value){
return typeof value === 'string'?JSON.stringify(value):value;}


function defaultZipper(){
return arrCopy(arguments);}


function defaultNegComparator(a,b){
return a < b?1:a > b?-1:0;}


function hashIterable(iterable){
if(iterable.size === Infinity){
return 0;}

var ordered=isOrdered(iterable);
var keyed=isKeyed(iterable);
var h=ordered?1:0;
var size=iterable.__iterate(
keyed?
ordered?
function(v,k){h = 31 * h + hashMerge(hash(v),hash(k)) | 0;}:
function(v,k){h = h + hashMerge(hash(v),hash(k)) | 0;}:
ordered?
function(v){h = 31 * h + hash(v) | 0;}:
function(v){h = h + hash(v) | 0;});

return murmurHashOfSize(size,h);}


function murmurHashOfSize(size,h){
h = src_Math__imul(h,0xCC9E2D51);
h = src_Math__imul(h << 15 | h >>> -15,0x1B873593);
h = src_Math__imul(h << 13 | h >>> -13,5);
h = (h + 0xE6546B64 | 0) ^ size;
h = src_Math__imul(h ^ h >>> 16,0x85EBCA6B);
h = src_Math__imul(h ^ h >>> 13,0xC2B2AE35);
h = smi(h ^ h >>> 16);
return h;}


function hashMerge(a,b){
return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;}


var Immutable={

Iterable:Iterable,

Seq:Seq,
Collection:Collection,
Map:src_Map__Map,
OrderedMap:OrderedMap,
List:List,
Stack:Stack,
Set:src_Set__Set,
OrderedSet:OrderedSet,

Record:Record,
Range:Range,
Repeat:Repeat,

is:is,
fromJS:fromJS};



return Immutable;});
});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View","immutable/dist/immutable.js"],function(global, require, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');var _require=

require('immutable/dist/immutable.js');var Map=_require.Map;

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({displayName:'NavigatorNavigationBar',

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles},


componentWillMount:function(){var _this=this;
this._components = {};
this._descriptors = {};

COMPONENT_NAMES.forEach(function(componentName){
_this._components[componentName] = new Map();
_this._descriptors[componentName] = new Map();});},



_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this._components[componentName].get(this.props.navState.routeStack[index]);
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._getComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,this.props.style]},
components));},




_getComponent:function(
componentName,
route,
index)
{var _this2=this;
if(this._descriptors[componentName].includes(route)){
return this._descriptors[componentName].get(route);}


var rendered=null;

var content=this.props.routeMapper[componentName](
this.props.navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
rendered = 
React.createElement(View,{
ref:function(ref){
_this2._components[componentName] = _this2._components[componentName].set(route,ref);},

style:initialStage[componentName]},
content);



this._descriptors[componentName] = this._descriptors[componentName].set(route,rendered);
return rendered;}});





var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;
});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheUp={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:-Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:-Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var ToTheDown={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:Dimensions.get('window').height,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},

translateY:{
from:0,
to:Dimensions.get('window').height,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheDown=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var FromTheTop=_extends({},
FromTheRight,{
transformTranslate:{
from:{y:-SCREEN_HEIGHT,x:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:-SCREEN_HEIGHT,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:100,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:100,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseDownUpGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'down-to-up'});


var BaseUpDownGesture=_extends({},
BaseLeftToRightGesture,{
fullDistance:SCREEN_HEIGHT,
direction:'up-to-down'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
defaultTransitionVelocity:3,
springFriction:20,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}}),


VerticalUpSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseDownUpGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheDown),
out:buildStyleInterpolator(ToTheUp)}}),


VerticalDownSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseUpDownGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheTop),
out:buildStyleInterpolator(ToTheDown)}})};




module.exports = NavigatorSceneConfigs;
});
__d('PanResponder',["TouchHistoryMath"],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath=require('TouchHistoryMath');

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;















































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},


































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetPanResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);

return config.onShouldBlockNativeResponder === undefined?true:
config.onShouldBlockNativeResponder();},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;
});
__d('TouchHistoryMath',[],function(global, require, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;
});
__d('clamp',[],function(global, require, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;
});
__d('rebound/rebound.js',[],function(global, require, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2.;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();
});
__d('NavigatorIOS',["EventEmitter","Image","NavigationContext","React","NativeModules","StyleSheet","StaticContainer.react","View","requireNativeComponent","invariant","logError"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var NavigationContext=require('NavigationContext');
var React=require('React');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var invariant=require('invariant');
var logError=require('logError');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var NavigatorTransitionerIOS=React.createClass({displayName:'NavigatorTransitionerIOS',
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({displayName:'NavigatorIOS',

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,




shadowHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string,




translucent:PropTypes.bool},



navigator:undefined,
navigationContext:new NavigationContext(),

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop,
navigationContext:this.navigationContext};

this._emitWillFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentDidMount:function(){
this._emitDidFocus(this.state.routeStack[this.state.observedTopOfStack]);},


componentWillUnmount:function(){
this.navigationContext.dispose();
this.navigationContext = new NavigationContext();},


getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
this._emitDidFocus(this.state.routeStack[newObservedTopOfStack]);

invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



_emitDidFocus:function(route){
this.navigationContext.emit('didfocus',{route:route});},


_emitWillFocus:function(route){
this.navigationContext.emit('willfocus',{route:route});},


push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
_this._emitWillFocus(route);

var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
var newRequestedTopOfStack=_this2.state.requestedTopOfStack - n;
invariant(newRequestedTopOfStack >= 0,'Cannot pop below 0');
_this2._emitWillFocus(_this2.state.routeStack[newRequestedTopOfStack]);
_this2.setState({
requestedTopOfStack:newRequestedTopOfStack,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});


this._emitWillFocus(route);
this._emitDidFocus(route);},





replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:this._imageNameFromSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
shadowHidden:this.props.shadowHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






_imageNameFromSource:function(source){
return source?source.uri:undefined;},


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



var RCTNavigator=requireNativeComponent('RCTNavigator');
var RCTNavigatorItem=requireNativeComponent('RCTNavItem');

module.exports = NavigatorIOS;
});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({displayName:'PickerIOS',
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.pickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({displayName:'Item',
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',null);

module.exports = PickerIOS;
});
__d('ProgressBarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');




var ProgressViewIOS=React.createClass({displayName:'ProgressViewIOS',
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;
});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({displayName:'SegmentedControlIOS',
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports = SegmentedControlIOS;
});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({displayName:'SliderIOS',
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports = SliderIOS;
});
__d('SwitchAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({displayName:'SwitchIOS',
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS);

module.exports = SwitchIOS;
});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({displayName:'TabBarIOS',
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string,



translucent:React.PropTypes.bool},


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
translucent:this.props.translucent !== false},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;
});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({displayName:'TabBarItemIOS',
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,_extends({},
this.props,{
icon:this.props.systemIcon || this.props.icon,
badge:badge,
style:[styles.tab,this.props.style]}),
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;
});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true,
allowFontScaling:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({displayName:'Text',

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onLayout:React.PropTypes.func,



onPress:React.PropTypes.func,





suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,



allowFontScaling:React.PropTypes.bool},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



getDefaultProps:function(){
return {
allowFontScaling:true};},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText,props);}else 
{
return React.createElement(RCTText,props);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;
});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS + delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress(e);}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut(e);},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut(e);}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;
});
__d('BoundingDimensions',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;
});
__d('Position',["PooledClass"],function(global, require, module, exports) {  "use strict";





var PooledClass=require('PooledClass');

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;
});
__d('TouchEventUtils',[],function(global, require, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;
});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;
});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","StyleSheet","Text","TextInputState","react-timer-mixin/TimerMixin.js","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","requireNativeComponent"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var requireNativeComponent=require('requireNativeComponent');

var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true,
autoCorrect:true,
autoFocus:true,
textAlign:true,
textAlignVertical:true,
keyboardType:true,
mostRecentEventCount:true,
multiline:true,
password:true,
placeholder:true,
placeholderTextColor:true,
text:true,
testID:true,
underlineColorAndroid:true,
editable:true};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput',
validAttributes:AndroidTextInputAttributes};


var RCTTextView=requireNativeComponent('RCTTextView',null);
var RCTTextField=requireNativeComponent('RCTTextField',null);


































var TextInput=React.createClass({displayName:'TextInput',
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,




autoFocus:PropTypes.bool,




textAlign:PropTypes.oneOf([
'start',
'center',
'end']),





textAlignVertical:PropTypes.oneOf([
'top',
'center',
'bottom']),




editable:PropTypes.bool,








keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),





returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),






maxLength:PropTypes.number,





enablesReturnKeyAutomatically:PropTypes.bool,




multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,




onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




secureTextEntry:PropTypes.bool,





selectionState:PropTypes.instanceOf(DocumentSelectionState),









value:PropTypes.string,





defaultValue:PropTypes.string,




clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),





clearTextOnFocus:PropTypes.bool,




selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string,




underlineColorAndroid:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?RCTTextField.viewConfig:
Platform.OS === 'android'?viewConfigAndroid:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getInitialState:function(){
return {
mostRecentEventCount:0};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


clear:function(){
this.setNativeProps({text:''});},


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_getText:function(){
return typeof this.props.value === 'string'?
this.props.value:
this.props.defaultValue;},


_renderIOS:function(){
var textContainer;

var props=Object.assign({},this.props);
props.style = [styles.input,this.props.style];
if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,_extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChangeShouldSetResponder:function(){return true;},
text:this._getText(),
mostRecentEventCount:this.state.mostRecentEventCount}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(props.inputView){
children = [children,props.inputView];}

textContainer = 
React.createElement(RCTTextView,_extends({
ref:'input'},
props,{
children:children,
mostRecentEventCount:this.state.mostRecentEventCount,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this._getText()}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var textAlign=
RCTUIManager.AndroidTextInput.Constants.TextAlign[this.props.textAlign];
var textAlignVertical=
RCTUIManager.AndroidTextInput.Constants.TextAlignVertical[this.props.textAlignVertical];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
textAlign:textAlign,
textAlignVertical:textAlignVertical,
keyboardType:this.props.keyboardType,
mostRecentEventCount:this.state.mostRecentEventCount,
multiline:this.props.multiline,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onTextInput:this._onTextInput,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
placeholderTextColor:this.props.placeholderTextColor,
text:this._getText(),
underlineColorAndroid:this.props.underlineColorAndroid,
children:children,
editable:this.props.editable});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
if(this.props.editable || this.props.editable === undefined){
this.focus();}},



_onChange:function(event){var _this2=this;
if(Platform.OS === 'android'){

this.refs.input.setNativeProps({
mostRecentEventCount:event.nativeEvent.eventCount});}


var text=event.nativeEvent.text;
var eventCount=event.nativeEvent.eventCount;
this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(text);
this.setState({mostRecentEventCount:eventCount},function(){



if(text !== _this2.props.value && typeof _this2.props.value === 'string'){
_this2.refs.input.setNativeProps({
text:_this2.props.value});}});},





_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);}});



var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes,
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;
});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;
});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;
});
__d('EventEmitterWithHolding',[],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;
});
__d('EventHolder',["invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;
});
__d('EventValidator',["copyProperties"],function(global, require, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;
});
__d('copyProperties',[],function(global, require, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;
});
__d('TouchableWithoutFeedback',["React","react-timer-mixin/TimerMixin.js","Touchable","ensurePositiveDelayProps","onlyChild"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');









var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};






var TouchableWithoutFeedback=React.createClass({displayName:'TouchableWithoutFeedback',
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{




accessible:React.PropTypes.bool,
onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,
onLongPress:React.PropTypes.func,



delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(e){
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
this.props.onPressOut && this.props.onPressOut(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible !== false,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;
});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0),
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;
});
__d('ToastAndroid',["warning"],function(global, require, module, exports) {  'use strict';











var warning=require('warning');

var ToastAndroid={

show:function(
message,
duration)
{
warning(false,'Cannot use ToastAndroid on iOS.');}};




module.exports = ToastAndroid;
});
__d('ToolbarAndroid',["UnimplementedView"],function(global, require, module, exports) {  'use strict';











module.exports = require('UnimplementedView');
});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');



var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


























var TouchableHighlight=React.createClass({displayName:'TouchableHighlight',
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
if(!this.isMounted()){
return;}


this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
accessible:true,
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate,
testID:this.props.testID},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;
});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;
});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;
});
__d('joinClasses',[],function(global, require, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;
});
__d('ensureComponentIsNative',["invariant"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;
});
__d('TouchableNativeFeedback',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var DummyTouchableNativeFeedback=React.createClass({displayName:'DummyTouchableNativeFeedback',
render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
React.createElement(Text,{style:styles.info},'TouchableNativeFeedback is not supported on this platform!')));}});





var styles=StyleSheet.create({
container:{
height:100,
width:300,
backgroundColor:'#ffbcbc',
borderWidth:1,
borderColor:'red',
alignItems:'center',
justifyContent:'center',
margin:10},

info:{
color:'#333333',
margin:20}});



module.exports = DummyTouchableNativeFeedback;
});
__d('TouchableOpacity',["Animated","NativeMethodsMixin","React","react-timer-mixin/TimerMixin.js","Touchable","TouchableWithoutFeedback","ensurePositiveDelayProps","flattenStyle","keyOf"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var Animated=require('Animated');
var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin.js');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');




























var TouchableOpacity=React.createClass({displayName:'TouchableOpacity',
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return _extends({},
this.touchableGetInitialState(),{
anim:new Animated.Value(1)});},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
Animated.timing(
this.state.anim,
{toValue:value,duration:150}).
start();},






touchableHandleActivePressIn:function(e){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn(e);},


touchableHandleActivePressOut:function(e){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut(e);},


touchableHandlePress:function(e){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive,
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress(e);},


touchableHandleLongPress:function(e){
this.props.onLongPress && this.props.onLongPress(e);},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var childStyle=flattenStyle(this.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);},



render:function(){
return (
React.createElement(Animated.View,{
accessible:true,
style:[this.props.style,{opacity:this.state.anim}],
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
this.props.children));}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};


module.exports = TouchableOpacity;
});
__d('Animated',["Interpolation","Easing","Image","InteractionManager","Interpolation","React","Set","SpringConfig","Text","View","invariant","flattenStyle","requestAnimationFrame"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}










'use strict';

var Easing=require('Easing');
var Image=require('Image');
var InteractionManager=require('InteractionManager');
var Interpolation=require('Interpolation');
var React=require('React');
var Set=require('Set');
var SpringConfig=require('SpringConfig');
var Text=require('Text');
var View=require('View');
var invariant=require('invariant');

var flattenStyle=require('flattenStyle');
var requestAnimationFrame=require('requestAnimationFrame');var 








Animated=(function(){function Animated(){_classCallCheck(this,Animated);}_createClass(Animated,[{key:'__attach',value:
function __attach(){}},{key:'__detach',value:
function __detach(){}},{key:'__getValue',value:
function __getValue(){}},{key:'__getAnimatedValue',value:
function __getAnimatedValue(){return this.__getValue();}},{key:'__addChild',value:
function __addChild(child){}},{key:'__removeChild',value:
function __removeChild(child){}},{key:'__getChildren',value:
function __getChildren(){return [];}}]);return Animated;})();var 





Animation=(function(){function Animation(){_classCallCheck(this,Animation);}_createClass(Animation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{}},{key:'stop',value:
function stop(){}},{key:'__debouncedOnEnd',value:

function __debouncedOnEnd(result){
var onEnd=this.__onEnd;
this.__onEnd = null;
onEnd && onEnd(result);}}]);return Animation;})();var 



AnimatedWithChildren=(function(_Animated){_inherits(AnimatedWithChildren,_Animated);


function AnimatedWithChildren(){_classCallCheck(this,AnimatedWithChildren);
_get(Object.getPrototypeOf(AnimatedWithChildren.prototype),'constructor',this).call(this);
this._children = [];}_createClass(AnimatedWithChildren,[{key:'__addChild',value:


function __addChild(child){
if(this._children.length === 0){
this.__attach();}

this._children.push(child);}},{key:'__removeChild',value:


function __removeChild(child){
var index=this._children.indexOf(child);
if(index === -1){
console.warn('Trying to remove a child that doesn\'t exist');
return;}

this._children.splice(index,1);
if(this._children.length === 0){
this.__detach();}}},{key:'__getChildren',value:



function __getChildren(){
return this._children;}}]);return AnimatedWithChildren;})(Animated);

























function _flush(rootNode){
var animatedStyles=new Set();
function findAnimatedStyles(node){
if(typeof node.update === 'function'){
animatedStyles.add(node);}else 
{
node.__getChildren().forEach(findAnimatedStyles);}}


findAnimatedStyles(rootNode);
animatedStyles.forEach(function(animatedStyle){return animatedStyle.update();});}









var easeInOut=Easing.inOut(Easing.ease);var 

TimingAnimation=(function(_Animation){_inherits(TimingAnimation,_Animation);










function TimingAnimation(
config)
{_classCallCheck(this,TimingAnimation);
_get(Object.getPrototypeOf(TimingAnimation.prototype),'constructor',this).call(this);
this._toValue = config.toValue;
this._easing = config.easing || easeInOut;
this._duration = config.duration !== undefined?config.duration:500;
this._delay = config.delay || 0;}_createClass(TimingAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{var _this=this;
this.__active = true;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;

var start=function(){
if(_this._duration === 0){
_this._onUpdate(_this._toValue);
_this.__debouncedOnEnd({finished:true});}else 
{
_this._startTime = Date.now();
_this._animationFrame = requestAnimationFrame(_this.onUpdate.bind(_this));}};


if(this._delay){
this._timeout = setTimeout(start,this._delay);}else 
{
start();}}},{key:'onUpdate',value:



function onUpdate(){
var now=Date.now();
if(now >= this._startTime + this._duration){
if(this._duration === 0){
this._onUpdate(this._toValue);}else 
{
this._onUpdate(
this._fromValue + this._easing(1) * (this._toValue - this._fromValue));}


this.__debouncedOnEnd({finished:true});
return;}


this._onUpdate(
this._fromValue + 
this._easing((now - this._startTime) / this._duration) * (
this._toValue - this._fromValue));

if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
clearTimeout(this._timeout);
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return TimingAnimation;})(Animation);var 













DecayAnimation=(function(_Animation2){_inherits(DecayAnimation,_Animation2);








function DecayAnimation(
config)
{_classCallCheck(this,DecayAnimation);
_get(Object.getPrototypeOf(DecayAnimation.prototype),'constructor',this).call(this);
this._deceleration = config.deceleration || 0.998;
this._velocity = config.velocity;}_createClass(DecayAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd)
{
this.__active = true;
this._lastValue = fromValue;
this._fromValue = fromValue;
this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._startTime = Date.now();
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'onUpdate',value:


function onUpdate(){
var now=Date.now();

var value=this._fromValue + 
this._velocity / (1 - this._deceleration) * (
1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

this._onUpdate(value);

if(Math.abs(this._lastValue - value) < 0.1){
this.__debouncedOnEnd({finished:true});
return;}


this._lastValue = value;
if(this.__active){
this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}}},{key:'stop',value:



function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return DecayAnimation;})(Animation);



























function withDefault(value,defaultValue){
if(value === undefined || value === null){
return defaultValue;}

return value;}var 


SpringAnimation=(function(_Animation3){_inherits(SpringAnimation,_Animation3);















function SpringAnimation(
config)
{_classCallCheck(this,SpringAnimation);
_get(Object.getPrototypeOf(SpringAnimation.prototype),'constructor',this).call(this);

this._overshootClamping = withDefault(config.overshootClamping,false);
this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold,0.001);
this._restSpeedThreshold = withDefault(config.restSpeedThreshold,0.001);
this._initialVelocity = config.velocity;
this._lastVelocity = withDefault(config.velocity,0);
this._toValue = config.toValue;

var springConfig;
if(config.bounciness !== undefined || config.speed !== undefined){
invariant(
config.tension === undefined && config.friction === undefined,
'You can only define bounciness/speed or tension/friction but not both');

springConfig = SpringConfig.fromBouncinessAndSpeed(
withDefault(config.bounciness,8),
withDefault(config.speed,12));}else 

{
springConfig = SpringConfig.fromOrigamiTensionAndFriction(
withDefault(config.tension,40),
withDefault(config.friction,7));}


this._tension = springConfig.tension;
this._friction = springConfig.friction;}_createClass(SpringAnimation,[{key:'start',value:


function start(
fromValue,
onUpdate,
onEnd,
previousAnimation)
{
this.__active = true;
this._startPosition = fromValue;
this._lastPosition = this._startPosition;

this._onUpdate = onUpdate;
this.__onEnd = onEnd;
this._lastTime = Date.now();

if(previousAnimation instanceof SpringAnimation){
var internalState=previousAnimation.getInternalState();
this._lastPosition = internalState.lastPosition;
this._lastVelocity = internalState.lastVelocity;
this._lastTime = internalState.lastTime;}

if(this._initialVelocity !== undefined && 
this._initialVelocity !== null){
this._lastVelocity = this._initialVelocity;}

this.onUpdate();}},{key:'getInternalState',value:


function getInternalState(){
return {
lastPosition:this._lastPosition,
lastVelocity:this._lastVelocity,
lastTime:this._lastTime};}},{key:'onUpdate',value:



function onUpdate(){
var position=this._lastPosition;
var velocity=this._lastVelocity;

var tempPosition=this._lastPosition;
var tempVelocity=this._lastVelocity;





var MAX_STEPS=64;
var now=Date.now();
if(now > this._lastTime + MAX_STEPS){
now = this._lastTime + MAX_STEPS;}





var TIMESTEP_MSEC=1;
var numSteps=Math.floor((now - this._lastTime) / TIMESTEP_MSEC);

for(var i=0;i < numSteps;++i) {

var step=TIMESTEP_MSEC / 1000;



var aVelocity=velocity;
var aAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
var tempPosition=position + aVelocity * step / 2;
var tempVelocity=velocity + aAcceleration * step / 2;

var bVelocity=tempVelocity;
var bAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + bVelocity * step / 2;
tempVelocity = velocity + bAcceleration * step / 2;

var cVelocity=tempVelocity;
var cAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dVelocity=tempVelocity;
var dAcceleration=this._tension * (this._toValue - tempPosition) - this._friction * tempVelocity;
tempPosition = position + cVelocity * step / 2;
tempVelocity = velocity + cAcceleration * step / 2;

var dxdt=(aVelocity + 2 * (bVelocity + cVelocity) + dVelocity) / 6;
var dvdt=(aAcceleration + 2 * (bAcceleration + cAcceleration) + dAcceleration) / 6;

position += dxdt * step;
velocity += dvdt * step;}


this._lastTime = now;
this._lastPosition = position;
this._lastVelocity = velocity;

this._onUpdate(position);
if(!this.__active){
return;}



var isOvershooting=false;
if(this._overshootClamping && this._tension !== 0){
if(this._startPosition < this._toValue){
isOvershooting = position > this._toValue;}else 
{
isOvershooting = position < this._toValue;}}


var isVelocity=Math.abs(velocity) <= this._restSpeedThreshold;
var isDisplacement=true;
if(this._tension !== 0){
isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;}


if(isOvershooting || isVelocity && isDisplacement){
if(this._tension !== 0){

this._onUpdate(this._toValue);}


this.__debouncedOnEnd({finished:true});
return;}

this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));}},{key:'stop',value:


function stop(){
this.__active = false;
window.cancelAnimationFrame(this._animationFrame);
this.__debouncedOnEnd({finished:false});}}]);return SpringAnimation;})(Animation);





var _uniqueId=1;var 

AnimatedValue=(function(_AnimatedWithChildren){_inherits(AnimatedValue,_AnimatedWithChildren);






function AnimatedValue(value){_classCallCheck(this,AnimatedValue);
_get(Object.getPrototypeOf(AnimatedValue.prototype),'constructor',this).call(this);
this._value = value;
this._offset = 0;
this._animation = null;
this._listeners = {};}_createClass(AnimatedValue,[{key:'__detach',value:


function __detach(){
this.stopAnimation();}},{key:'__getValue',value:


function __getValue(){
return this._value + this._offset;}},{key:'setValue',value:


function setValue(value){
if(this._animation){
this._animation.stop();
this._animation = null;}

this._updateValue(value);}},{key:'setOffset',value:


function setOffset(offset){
this._offset = offset;}},{key:'flattenOffset',value:


function flattenOffset(){
this._value += this._offset;
this._offset = 0;}},{key:'addListener',value:


function addListener(callback){
var id=String(_uniqueId++);
this._listeners[id] = callback;
return id;}},{key:'removeListener',value:


function removeListener(id){
delete this._listeners[id];}},{key:'removeAllListeners',value:


function removeAllListeners(){
this._listeners = {};}},{key:'animate',value:


function animate(animation,callback){var _this2=this;
var handle=InteractionManager.createInteractionHandle();
var previousAnimation=this._animation;
this._animation && this._animation.stop();
this._animation = animation;
animation.start(
this._value,
function(value){
_this2._updateValue(value);},

function(result){
_this2._animation = null;
InteractionManager.clearInteractionHandle(handle);
callback && callback(result);},

previousAnimation);}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.stopTracking();
this._animation && this._animation.stop();
this._animation = null;
callback && callback(this.__getValue());}},{key:'stopTracking',value:


function stopTracking(){
this._tracking && this._tracking.__detach();
this._tracking = null;}},{key:'track',value:


function track(tracking){
this.stopTracking();
this._tracking = tracking;}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'_updateValue',value:


function _updateValue(value){
this._value = value;
_flush(this);
for(var key in this._listeners) {
this._listeners[key]({value:this.__getValue()});}}}]);return AnimatedValue;})(AnimatedWithChildren);var 





AnimatedValueXY=(function(_AnimatedWithChildren2){_inherits(AnimatedValueXY,_AnimatedWithChildren2);




function AnimatedValueXY(valueIn){_classCallCheck(this,AnimatedValueXY);
_get(Object.getPrototypeOf(AnimatedValueXY.prototype),'constructor',this).call(this);
var value=valueIn || {x:0,y:0};
if(typeof value.x === 'number' && typeof value.y === 'number'){
this.x = new AnimatedValue(value.x);
this.y = new AnimatedValue(value.y);}else 
{
invariant(
value.x instanceof AnimatedValue && 
value.y instanceof AnimatedValue,
'AnimatedValueXY must be initalized with an object of numbers or ' + 
'AnimatedValues.');

this.x = value.x;
this.y = value.y;}

this._listeners = {};}_createClass(AnimatedValueXY,[{key:'setValue',value:


function setValue(value){
this.x.setValue(value.x);
this.y.setValue(value.y);}},{key:'setOffset',value:


function setOffset(offset){
this.x.setOffset(offset.x);
this.y.setOffset(offset.y);}},{key:'flattenOffset',value:


function flattenOffset(){
this.x.flattenOffset();
this.y.flattenOffset();}},{key:'__getValue',value:


function __getValue(){
return {
x:this.x.__getValue(),
y:this.y.__getValue()};}},{key:'stopAnimation',value:



function stopAnimation(callback){
this.x.stopAnimation();
this.y.stopAnimation();
callback && callback(this.__getValue());}},{key:'addListener',value:


function addListener(callback){var _this3=this;
var id=String(_uniqueId++);
var jointCallback=function(_ref){var number=_ref.value;
callback(_this3.__getValue());};

this._listeners[id] = {
x:this.x.addListener(jointCallback),
y:this.y.addListener(jointCallback)};

return id;}},{key:'removeListener',value:


function removeListener(id){
this.x.removeListener(this._listeners[id].x);
this.y.removeListener(this._listeners[id].y);
delete this._listeners[id];}},{key:'getLayout',value:


function getLayout(){
return {
left:this.x,
top:this.y};}},{key:'getTranslateTransform',value:



function getTranslateTransform(){
return [
{translateX:this.x},
{translateY:this.y}];}}]);return AnimatedValueXY;})(AnimatedWithChildren);var 




AnimatedInterpolation=(function(_AnimatedWithChildren3){_inherits(AnimatedInterpolation,_AnimatedWithChildren3);



function AnimatedInterpolation(parent,interpolation){_classCallCheck(this,AnimatedInterpolation);
_get(Object.getPrototypeOf(AnimatedInterpolation.prototype),'constructor',this).call(this);
this._parent = parent;
this._interpolation = interpolation;}_createClass(AnimatedInterpolation,[{key:'__getValue',value:


function __getValue(){
var parentValue=this._parent.__getValue();
invariant(
typeof parentValue === 'number',
'Cannot interpolate an input which is not a number.');

return this._interpolation(parentValue);}},{key:'interpolate',value:


function interpolate(config){
return new AnimatedInterpolation(this,Interpolation.create(config));}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}}]);return AnimatedInterpolation;})(AnimatedWithChildren);var 



AnimatedTransform=(function(_AnimatedWithChildren4){_inherits(AnimatedTransform,_AnimatedWithChildren4);


function AnimatedTransform(transforms){_classCallCheck(this,AnimatedTransform);
_get(Object.getPrototypeOf(AnimatedTransform.prototype),'constructor',this).call(this);
this._transforms = transforms;}_createClass(AnimatedTransform,[{key:'__getValue',value:


function __getValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getValue();}else 
{
result[key] = value;}}


return result;});}},{key:'__getAnimatedValue',value:



function __getAnimatedValue(){
return this._transforms.map(function(transform){
var result={};
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
result[key] = value.__getAnimatedValue();}else 
{

result[key] = value;}}


return result;});}},{key:'__attach',value:



function __attach(){var _this4=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__addChild(_this4);}}});}},{key:'__detach',value:





function __detach(){var _this5=this;
this._transforms.forEach(function(transform){
for(var key in transform) {
var value=transform[key];
if(value instanceof Animated){
value.__removeChild(_this5);}}});}}]);return AnimatedTransform;})(AnimatedWithChildren);var 






AnimatedStyle=(function(_AnimatedWithChildren5){_inherits(AnimatedStyle,_AnimatedWithChildren5);


function AnimatedStyle(style){_classCallCheck(this,AnimatedStyle);
_get(Object.getPrototypeOf(AnimatedStyle.prototype),'constructor',this).call(this);
style = flattenStyle(style) || {};
if(style.transform){
style = _extends({},
style,{
transform:new AnimatedTransform(style.transform)});}


this._style = style;}_createClass(AnimatedStyle,[{key:'__getValue',value:


function __getValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getValue();}else 
{
style[key] = value;}}


return style;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var style={};
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
style[key] = value.__getAnimatedValue();}}


return style;}},{key:'__attach',value:


function __attach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._style) {
var value=this._style[key];
if(value instanceof Animated){
value.__removeChild(this);}}}}]);return AnimatedStyle;})(AnimatedWithChildren);var 





AnimatedProps=(function(_Animated2){_inherits(AnimatedProps,_Animated2);



function AnimatedProps(
props,
callback)
{_classCallCheck(this,AnimatedProps);
_get(Object.getPrototypeOf(AnimatedProps.prototype),'constructor',this).call(this);
if(props.style){
props = _extends({},
props,{
style:new AnimatedStyle(props.style)});}


this._props = props;
this._callback = callback;
this.__attach();}_createClass(AnimatedProps,[{key:'__getValue',value:


function __getValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getValue();}else 
{
props[key] = value;}}


return props;}},{key:'__getAnimatedValue',value:


function __getAnimatedValue(){
var props={};
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
props[key] = value.__getAnimatedValue();}}


return props;}},{key:'__attach',value:


function __attach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__addChild(this);}}}},{key:'__detach',value:




function __detach(){
for(var key in this._props) {
var value=this._props[key];
if(value instanceof Animated){
value.__removeChild(this);}}}},{key:'update',value:




function update(){
this._callback();}}]);return AnimatedProps;})(Animated);



function createAnimatedComponent(Component){
var refName='node';var 

AnimatedComponent=(function(_React$Component){_inherits(AnimatedComponent,_React$Component);function AnimatedComponent(){_classCallCheck(this,AnimatedComponent);_get(Object.getPrototypeOf(AnimatedComponent.prototype),'constructor',this).apply(this,arguments);}_createClass(AnimatedComponent,[{key:'componentWillUnmount',value:


function componentWillUnmount(){
this._propsAnimated && this._propsAnimated.__detach();}},{key:'setNativeProps',value:


function setNativeProps(props){
this.refs[refName].setNativeProps(props);}},{key:'componentWillMount',value:


function componentWillMount(){
this.attachProps(this.props);}},{key:'attachProps',value:


function attachProps(nextProps){var _this6=this;
var oldPropsAnimated=this._propsAnimated;







var callback=function(){
if(_this6.refs[refName].setNativeProps){
var value=_this6._propsAnimated.__getAnimatedValue();
_this6.refs[refName].setNativeProps(value);}else 
{
_this6.forceUpdate();}};



this._propsAnimated = new AnimatedProps(
nextProps,
callback);










oldPropsAnimated && oldPropsAnimated.__detach();}},{key:'componentWillReceiveProps',value:


function componentWillReceiveProps(nextProps){
this.attachProps(nextProps);}},{key:'render',value:


function render(){
return (
React.createElement(Component,_extends({},
this._propsAnimated.__getValue(),{
ref:refName})));}}]);return AnimatedComponent;})(React.Component);





return AnimatedComponent;}var 


AnimatedTracking=(function(_Animated3){_inherits(AnimatedTracking,_Animated3);






function AnimatedTracking(
value,
parent,
animationClass,
animationConfig,
callback)
{_classCallCheck(this,AnimatedTracking);
_get(Object.getPrototypeOf(AnimatedTracking.prototype),'constructor',this).call(this);
this._value = value;
this._parent = parent;
this._animationClass = animationClass;
this._animationConfig = animationConfig;
this._callback = callback;
this.__attach();}_createClass(AnimatedTracking,[{key:'__getValue',value:


function __getValue(){
return this._parent.__getValue();}},{key:'__attach',value:


function __attach(){
this._parent.__addChild(this);}},{key:'__detach',value:


function __detach(){
this._parent.__removeChild(this);}},{key:'update',value:


function update(){
this._value.animate(new this._animationClass(_extends({},
this._animationConfig,{
toValue:this._animationConfig.toValue.__getValue()})),
this._callback);}}]);return AnimatedTracking;})(Animated);








var maybeVectorAnim=function(
value,
config,
anim)
{
if(value instanceof AnimatedValueXY){
var configX=_extends({},config);
var configY=_extends({},config);
for(var key in config) {var _config$key=
config[key];var x=_config$key.x;var y=_config$key.y;
if(x !== undefined && y !== undefined){
configX[key] = x;
configY[key] = y;}}


var aX=anim(value.x,configX);
var aY=anim(value.y,configY);


return parallel([aX,aY],{stopTogether:false});}

return null;};


var spring=function(
value,
config)
{
return maybeVectorAnim(value,config,spring) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
SpringAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new SpringAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var timing=function(
value,
config)
{
return maybeVectorAnim(value,config,timing) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
if(config.toValue instanceof Animated){
singleValue.track(new AnimatedTracking(
singleValue,
config.toValue,
TimingAnimation,
singleConfig,
callback));}else 

{
singleValue.animate(new TimingAnimation(singleConfig),callback);}},



stop:function(){
value.stopAnimation();}};};




var decay=function(
value,
config)
{
return maybeVectorAnim(value,config,decay) || {
start:function(callback){
var singleValue=value;
var singleConfig=config;
singleValue.stopTracking();
singleValue.animate(new DecayAnimation(singleConfig),callback);},


stop:function(){
value.stopAnimation();}};};




var sequence=function(
animations)
{
var current=0;
return {
start:function(callback){
var onComplete=function(result){
if(!result.finished){
callback && callback(result);
return;}


current++;

if(current === animations.length){
callback && callback(result);
return;}


animations[current].start(onComplete);};


if(animations.length === 0){
callback && callback({finished:true});}else 
{
animations[current].start(onComplete);}},



stop:function(){
if(current < animations.length){
animations[current].stop();}}};};








var parallel=function(
animations,
config)
{
var doneCount=0;

var hasEnded={};
var stopTogether=!(config && config.stopTogether === false);

var result={
start:function(callback){
if(doneCount === animations.length){
callback && callback({finished:true});
return;}


animations.forEach(function(animation,idx){
var cb=function(endResult){
hasEnded[idx] = true;
doneCount++;
if(doneCount === animations.length){
doneCount = 0;
callback && callback(endResult);
return;}


if(!endResult.finished && stopTogether){
result.stop();}};



if(!animation){
cb({finished:true});}else 
{
animation.start(cb);}});},




stop:function(){
animations.forEach(function(animation,idx){
!hasEnded[idx] && animation.stop();
hasEnded[idx] = true;});}};




return result;};


var delay=function(time){

return timing(new AnimatedValue(0),{toValue:0,delay:time,duration:0});};


var stagger=function(
time,
animations)
{
return parallel(animations.map(function(animation,i){
return sequence([
delay(time * i),
animation]);}));};






















var event=function(
argMapping,
config)
{
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var traverse=function(recMapping,recEvt,key){
if(typeof recEvt === 'number'){
invariant(
recMapping instanceof AnimatedValue,
'Bad mapping of type ' + typeof recMapping + ' for key ' + key + 
', event value must map to AnimatedValue');

recMapping.setValue(recEvt);
return;}

invariant(
typeof recMapping === 'object',
'Bad mapping of type ' + typeof recMapping + ' for key ' + key);

invariant(
typeof recEvt === 'object',
'Bad event of type ' + typeof recEvt + ' for key ' + key);

for(var key in recMapping) {
traverse(recMapping[key],recEvt[key],key);}};


argMapping.forEach(function(mapping,idx){
traverse(mapping,args[idx],'arg' + idx);});

if(config && config.listener){
config.listener.apply(null,args);}};};




module.exports = {
delay:delay,
sequence:sequence,
parallel:parallel,
stagger:stagger,

decay:decay,
timing:timing,
spring:spring,

event:event,

Value:AnimatedValue,
ValueXY:AnimatedValueXY,
__PropsOnlyForTests:AnimatedProps,
View:createAnimatedComponent(View),
Text:createAnimatedComponent(Text),
Image:createAnimatedComponent(Image),
createAnimatedComponent:createAnimatedComponent};
});
__d('Interpolation',[],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}













var invariant=function(condition,message){
if(!condition){
var error=new Error(message);
error.framesToPop = 1;
throw error;}};















var linear=function(t){return t;};var 





Interpolation=(function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:
function create(config){

if(config.outputRange && typeof config.outputRange[0] === 'string'){
return createInterpolationFromStringOutputRange(config);}


var outputRange=config.outputRange;
checkInfiniteRange('outputRange',outputRange);

var inputRange=config.inputRange;
checkInfiniteRange('inputRange',inputRange);
checkValidInputRange(inputRange);

invariant(
inputRange.length === outputRange.length,
'inputRange (' + inputRange.length + ') and outputRange (' + 
outputRange.length + ') must have the same length');


var easing=config.easing || linear;

var extrapolateLeft='extend';
if(config.extrapolateLeft !== undefined){
extrapolateLeft = config.extrapolateLeft;}else 
if(config.extrapolate !== undefined){
extrapolateLeft = config.extrapolate;}


var extrapolateRight='extend';
if(config.extrapolateRight !== undefined){
extrapolateRight = config.extrapolateRight;}else 
if(config.extrapolate !== undefined){
extrapolateRight = config.extrapolate;}


return function(input){
invariant(
typeof input === 'number',
'Cannot interpolation an input which is not a number');


var range=findRange(input,inputRange);
return interpolate(
input,
inputRange[range],
inputRange[range + 1],
outputRange[range],
outputRange[range + 1],
easing,
extrapolateLeft,
extrapolateRight);};}}]);return Interpolation;})();





function interpolate(
input,
inputMin,
inputMax,
outputMin,
outputMax,
easing,
extrapolateLeft,
extrapolateRight)
{
var result=input;


if(result < inputMin){
if(extrapolateLeft === 'identity'){
return result;}else 
if(extrapolateLeft === 'clamp'){
result = inputMin;}else 
if(extrapolateLeft === 'extend'){}}




if(result > inputMax){
if(extrapolateRight === 'identity'){
return result;}else 
if(extrapolateRight === 'clamp'){
result = inputMax;}else 
if(extrapolateRight === 'extend'){}}




if(outputMin === outputMax){
return outputMin;}


if(inputMin === inputMax){
if(input <= inputMin){
return outputMin;}

return outputMax;}



if(inputMin === -Infinity){
result = -result;}else 
if(inputMax === Infinity){
result = result - inputMin;}else 
{
result = (result - inputMin) / (inputMax - inputMin);}



result = easing(result);


if(outputMin === -Infinity){
result = -result;}else 
if(outputMax === Infinity){
result = result + outputMin;}else 
{
result = result * (outputMax - outputMin) + outputMin;}


return result;}


var stringShapeRegex=/[0-9\.-]+/g;









function createInterpolationFromStringOutputRange(
config)
{
var outputRange=config.outputRange;
invariant(outputRange.length >= 2,'Bad output range');
checkPattern(outputRange);









var outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return [];});
outputRange.forEach(function(value){
value.match(stringShapeRegex).forEach(function(number,i){
outputRanges[i].push(+number);});});



var interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){
return Interpolation.create(_extends({},
config,{
outputRange:outputRanges[i]}));});



return function(input){
var i=0;



return outputRange[0].replace(stringShapeRegex,function(){
return String(interpolations[i++](input));});};}




function checkPattern(arr){
var pattern=arr[0].replace(stringShapeRegex,'');
for(var i=1;i < arr.length;++i) {
invariant(
pattern === arr[i].replace(stringShapeRegex,''),
'invalid pattern ' + arr[0] + ' and ' + arr[i]);}}




function findRange(input,inputRange){
for(var i=1;i < inputRange.length - 1;++i) {
if(inputRange[i] >= input){
break;}}


return i - 1;}


function checkValidInputRange(arr){
invariant(arr.length >= 2,'inputRange must have at least 2 elements');
for(var i=1;i < arr.length;++i) {
invariant(
arr[i] >= arr[i - 1],






'inputRange must be monotonically increasing ' + arr);}}




function checkInfiniteRange(name,arr){
invariant(arr.length >= 2,name + ' must have at least 2 elements');
invariant(
arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,






name + 'cannot be ]-infinity;+infinity[ ' + arr);}



module.exports = Interpolation;
});
__d('Easing',["bezier"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var _bezier=require('bezier');var 






Easing=(function(){function Easing(){_classCallCheck(this,Easing);}_createClass(Easing,null,[{key:'step0',value:
function step0(n){
return n > 0?1:0;}},{key:'step1',value:


function step1(n){
return n >= 1?1:0;}},{key:'linear',value:


function linear(t){
return t;}},{key:'ease',value:(function(_ease){function ease(_x){return _ease.apply(this,arguments);}ease.toString = function(){return _ease.toString();};return ease;})(


function(t){
return ease(t);})},{key:'quad',value:


function quad(t){
return t * t;}},{key:'cubic',value:


function cubic(t){
return t * t * t;}},{key:'poly',value:


function poly(n){
return function(t){return Math.pow(t,n);};}},{key:'sin',value:


function sin(t){
return 1 - Math.cos(t * Math.PI / 2);}},{key:'circle',value:


function circle(t){
return 1 - Math.sqrt(1 - t * t);}},{key:'exp',value:


function exp(t){
return Math.pow(2,10 * (t - 1));}},{key:'elastic',value:


function elastic(a,p){
var tau=Math.PI * 2;


var s;
if(arguments.length < 2){
p = 0.45;}

if(arguments.length){
s = p / tau * Math.asin(1 / a);}else 
{
a = 1;
s = p / 4;}

return function(t){return 1 + a * Math.pow(2,-10 * t) * Math.sin((t - s) * tau / p);};}},{key:'back',value:


function back(s){
if(s === undefined){
s = 1.70158;}

return function(t){return t * t * ((s + 1) * t - s);};}},{key:'bounce',value:


function bounce(t){
if(t < 1 / 2.75){
return 7.5625 * t * t;}


if(t < 2 / 2.75){
t -= 1.5 / 2.75;
return 7.5625 * t * t + 0.75;}


if(t < 2.5 / 2.75){
t -= 2.25 / 2.75;
return 7.5625 * t * t + 0.9375;}


t -= 2.625 / 2.75;
return 7.5625 * t * t + 0.984375;}},{key:'bezier',value:


function bezier(
x1,
y1,
x2,
y2,
epsilon)
{
if(epsilon === undefined){


var duration=500;
epsilon = 1000 / 60 / duration / 4;}


return _bezier(x1,y1,x2,y2,epsilon);}},{key:'in',value:


function _in(
easing)
{
return easing;}},{key:'out',value:


function out(
easing)
{
return function(t){return 1 - easing(1 - t);};}},{key:'inOut',value:


function inOut(
easing)
{
return function(t){
if(t < 0.5){
return easing(t * 2) / 2;}

return 1 - easing((1 - t) * 2) / 2;};}}]);return Easing;})();




var ease=Easing.bezier(0.42,0,1,1);

module.exports = Easing;
});
__d('bezier',[],function(global, require, module, exports) {  module.





























exports = function(x1,y1,x2,y2,epsilon){

var curveX=function(t){
var v=1 - t;
return 3 * v * v * t * x1 + 3 * v * t * t * x2 + t * t * t;};


var curveY=function(t){
var v=1 - t;
return 3 * v * v * t * y1 + 3 * v * t * t * y2 + t * t * t;};


var derivativeCurveX=function(t){
var v=1 - t;
return 3 * (2 * (t - 1) * t + v * v) * x1 + 3 * (-t * t * t + 2 * v * t) * x2;};


return function(t){

var x=t,t0,t1,t2,x2,d2,i;


for(t2 = x,i = 0;i < 8;i++) {
x2 = curveX(t2) - x;
if(Math.abs(x2) < epsilon)return curveY(t2);
d2 = derivativeCurveX(t2);
if(Math.abs(d2) < 1e-6)break;
t2 = t2 - x2 / d2;}


t0 = 0,t1 = 1,t2 = x;

if(t2 < t0)return curveY(t0);
if(t2 > t1)return curveY(t1);


while(t0 < t1) {
x2 = curveX(t2);
if(Math.abs(x2 - x) < epsilon)return curveY(t2);
if(x > x2)t0 = t2;else 
t1 = t2;
t2 = (t1 - t0) * .5 + t0;}



return curveY(t2);};};
});
__d('SpringConfig',[],function(global, require, module, exports) {  'use strict';


















function tensionFromOrigamiValue(oValue){
return (oValue - 30) * 3.62 + 194;}


function frictionFromOrigamiValue(oValue){
return (oValue - 8) * 3 + 25;}


function fromOrigamiTensionAndFriction(
tension,
friction)
{
return {
tension:tensionFromOrigamiValue(tension),
friction:frictionFromOrigamiValue(friction)};}



function fromBouncinessAndSpeed(
bounciness,
speed)
{
function normalize(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);}


function projectNormal(n,start,end){
return start + n * (end - start);}


function linearInterpolation(t,start,end){
return t * end + (1 - t) * start;}


function quadraticOutInterpolation(t,start,end){
return linearInterpolation(2 * t - t * t,start,end);}


function b3Friction1(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;}


function b3Friction2(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2;}


function b3Friction3(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;}


function b3Nobounce(tension){
if(tension <= 18){
return b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
return b3Friction2(tension);}else 
{
return b3Friction3(tension);}}



var b=normalize(bounciness / 1.7,0,20);
b = projectNormal(b,0,0.8);
var s=normalize(speed / 1.7,0,20);
var bouncyTension=projectNormal(s,0.5,200);
var bouncyFriction=quadraticOutInterpolation(
b,
b3Nobounce(bouncyTension),
0.01);


return {
tension:tensionFromOrigamiValue(bouncyTension),
friction:frictionFromOrigamiValue(bouncyFriction)};}



module.exports = {
fromOrigamiTensionAndFriction:fromOrigamiTensionAndFriction,
fromBouncinessAndSpeed:fromBouncinessAndSpeed};
});
__d('requestAnimationFrame',["emptyFunction","nativeRequestAnimationFrame"],function(global, require, module, exports) {  var 










emptyFunction=require('emptyFunction');
var nativeRequestAnimationFrame=require('nativeRequestAnimationFrame');

var lastTime=0;

var requestAnimationFrame=
nativeRequestAnimationFrame || 
function(callback){
var currTime=Date.now();
var timeDelay=Math.max(0,16 - (currTime - lastTime));
lastTime = currTime + timeDelay;
return global.setTimeout(function(){
callback(Date.now());},
timeDelay);};



requestAnimationFrame(emptyFunction);

module.exports = requestAnimationFrame;
});
__d('nativeRequestAnimationFrame',[],function(global, require, module, exports) {  var 










nativeRequestAnimationFrame=
global.requestAnimationFrame || 
global.webkitRequestAnimationFrame || 
global.mozRequestAnimationFrame || 
global.oRequestAnimationFrame || 
global.msRequestAnimationFrame;

module.exports = nativeRequestAnimationFrame;
});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};


var JSNavigationScheme=RCTWebViewManager.JSNavigationScheme;









var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({displayName:'WebView',
statics:{
JSNavigationScheme:JSNavigationScheme,
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool,



injectedJavaScript:PropTypes.string,





scalesPageToFit:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
injectedJavaScript:this.props.injectedJavaScript,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError,
scalesPageToFit:this.props.scalesPageToFit});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebViewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebViewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebViewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebViewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;
});
__d('ActionSheetIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTActionSheetManager=require('NativeModules').ActionSheetManager;

var invariant=require('invariant');

var ActionSheetIOS={
showActionSheetWithOptions:function(options,callback){
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTActionSheetManager.showActionSheetWithOptions(
options,
function(){},
callback);},



showShareActionSheetWithOptions:function(
options,
failureCallback,
successCallback)
{
invariant(
typeof options === 'object' && options !== null,
'Options must a valid object');

invariant(
typeof failureCallback === 'function',
'Must provide a valid failureCallback');

invariant(
typeof successCallback === 'function',
'Must provide a valid successCallback');

RCTActionSheetManager.showShareActionSheetWithOptions(
options,
failureCallback,
successCallback);}};




module.exports = ActionSheetIOS;
});
__d('AdSupportIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var AdSupport=require('NativeModules').AdSupport;

module.exports = {
getAdvertisingId:function(onSuccess,onFailure){
AdSupport.getAdvertisingId(onSuccess,onFailure);},


getAdvertisingTrackingEnabled:function(onSuccess,onFailure){
AdSupport.getAdvertisingTrackingEnabled(onSuccess,onFailure);}};
});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;
});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};




















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
invariant(appConfig.component,'No component provider passed in');
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


getAppKeys:function(){
return Object.keys(runnables);},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + String(__DEV__) + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;
});
__d('renderApplication',["Inspector","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant","setupDevtools"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var Inspector=require('Inspector');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({displayName:'AppContainer',
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(Inspector,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{collapsible:false,style:styles.appContainer,ref:'main'},
this.props.children),

warningBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);


if(__DEV__ && !window.document){
var setupDevtools=require('setupDevtools');
setupDevtools();}

React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,_extends({},
initialProps,{
rootTag:rootTag}))),


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;
});
__d('Inspector',["Dimensions","InspectorOverlay","InspectorPanel","InspectorUtils","React","StyleSheet","NativeModules","View","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var Dimensions=require('Dimensions');
var InspectorOverlay=require('InspectorOverlay');
var InspectorPanel=require('InspectorPanel');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = require('flattenStyle');}var 


Inspector=(function(_React$Component){_inherits(Inspector,_React$Component);


function Inspector(props){_classCallCheck(this,Inspector);
_get(Object.getPrototypeOf(Inspector.prototype),'constructor',this).call(this,props);

this.state = {
devtoolsAgent:null,
panelPos:'bottom',
inspecting:true,
perfing:false,
inspected:null};}_createClass(Inspector,[{key:'componentDidMount',value:



function componentDidMount(){
if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
this.attachToDevtools = this.attachToDevtools.bind(this);
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on('react-devtools',this.attachToDevtools);

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent){
this.attachToDevtools(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent);}}}},{key:'componentWillUnmount',value:




function componentWillUnmount(){
if(this._subs){
this._subs.map(function(fn){return fn();});}

if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.off('react-devtools',this.attachToDevtools);}}},{key:'attachToDevtools',value:



function attachToDevtools(agent){var _this=this;
var _hideWait=null;
var hlSub=agent.sub('highlight',function(_ref){var node=_ref.node;var name=_ref.name;var props=_ref.props;
clearTimeout(_hideWait);
UIManager.measure(node,function(x,y,width,height,left,top){
_this.setState({
hierarchy:[],
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:props?props.style:{}}});});});




var hideSub=agent.sub('hideHighlight',function(){
if(_this.state.inspected === null){
return;}


_hideWait = setTimeout(function(){
_this.setState({
inspected:null});},

100);});

this._subs = [hlSub,hideSub];

agent.on('shutdown',function(){
_this.setState({devtoolsAgent:null});
_this._subs = null;});

this.setState({
devtoolsAgent:agent});}},{key:'setSelection',value:



function setSelection(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this2.setState({
inspected:{
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}},

selection:i});});}},{key:'onTouchInstance',value:




function onTouchInstance(instance,frame,pointerY){
if(this.state.devtoolsAgent){
this.state.devtoolsAgent.selectFromReactInstance(instance,true);}

var hierarchy=InspectorUtils.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
var props=publicInstance.props || {};
this.setState({
panelPos:pointerY > Dimensions.get('window').height / 2?'top':'bottom',
selection:hierarchy.length - 1,
hierarchy:hierarchy,
inspected:{
style:props.style || {},
frame:frame}});}},{key:'setPerfing',value:




function setPerfing(val){
this.setState({
perfing:val,
inspecting:false,
inspected:null});}},{key:'setInspecting',value:



function setInspecting(val){
this.setState({
inspecting:val,
inspected:null});}},{key:'render',value:



function render(){
var panelContainerStyle=this.state.panelPos === 'bottom'?{bottom:0}:{top:0};
return (
React.createElement(View,{style:styles.container,pointerEvents:'box-none'},
this.state.inspecting && 
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspected:this.state.inspected,
inspectedViewTag:this.props.inspectedViewTag,
onTouchInstance:this.onTouchInstance.bind(this)}),

React.createElement(View,{style:[styles.panelContainer,panelContainerStyle]},
React.createElement(InspectorPanel,{
devtoolsIsOpen:!!this.state.devtoolsAgent,
inspecting:this.state.inspecting,
perfing:this.state.perfing,
setPerfing:this.setPerfing.bind(this),
setInspecting:this.setInspecting.bind(this),
inspected:this.state.inspected,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection.bind(this)}))));}}]);return Inspector;})(React.Component);







var styles=StyleSheet.create({
container:{
position:'absolute',
backgroundColor:'transparent',
top:0,
left:0,
right:0,
bottom:0},

panelContainer:{
position:'absolute',
left:0,
right:0}});



module.exports = Inspector;
});
__d('InspectorOverlay',["Dimensions","InspectorUtils","React","StyleSheet","NativeModules","View","ElementBox"],function(global, require, module, exports) {  'use strict';












var Dimensions=require('Dimensions');
var InspectorUtils=require('InspectorUtils');
var React=require('React');
var StyleSheet=require('StyleSheet');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');

var PropTypes=React.PropTypes;





var InspectorOverlay=React.createClass({displayName:'InspectorOverlay',
propTypes:{
inspected:PropTypes.shape({
frame:PropTypes.object,
style:PropTypes.any}),

inspectedViewTag:PropTypes.number,
onTouchInstance:PropTypes.func.isRequired},


findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=InspectorUtils.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

_this.props.onTouchInstance(instance,{left:left,top:top,width:width,height:height},locationY);});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=null;
if(this.props.inspected){
content = React.createElement(ElementBox,{frame:this.props.inspected.frame,style:this.props.inspected.style});}


return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{height:Dimensions.get('window').height}]},
content));}});





var styles=StyleSheet.create({
inspector:{
backgroundColor:'transparent',
position:'absolute',
left:0,
top:0,
right:0}});



module.exports = InspectorOverlay;
});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){_inherits(ElementBox,_React$Component);function ElementBox(){_classCallCheck(this,ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype),'constructor',this).apply(this,arguments);}_createClass(ElementBox,[{key:'render',value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top,
left:frameStyle.left - margin.left,
height:frameStyle.height + margin.top + margin.bottom,
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right,
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;
});
__d('BorderBox',["React","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){_inherits(BorderBox,_React$Component);function BorderBox(){_classCallCheck(this,BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype),'constructor',this).apply(this,arguments);}_createClass(BorderBox,[{key:'render',value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;
});
__d('resolveBoxStyle',[],function(global, require, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;
});
__d('InspectorPanel',["React","StyleSheet","Text","View","ElementProperties","PerformanceOverlay","TouchableHighlight"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var ElementProperties=require('ElementProperties');
var PerformanceOverlay=require('PerformanceOverlay');
var TouchableHighlight=require('TouchableHighlight');

var PropTypes=React.PropTypes;var 

InspectorPanel=(function(_React$Component){_inherits(InspectorPanel,_React$Component);function InspectorPanel(){_classCallCheck(this,InspectorPanel);_get(Object.getPrototypeOf(InspectorPanel.prototype),'constructor',this).apply(this,arguments);}_createClass(InspectorPanel,[{key:'renderWaiting',value:
function renderWaiting(){
if(this.props.inspecting){
return (
React.createElement(Text,{style:styles.waitingText},'Tap something to inspect it'));}




return React.createElement(Text,{style:styles.waitingText},'Nothing is inspected');}},{key:'render',value:


function render(){
var contents;
if(this.props.inspected){
contents = 
React.createElement(ElementProperties,{
style:this.props.inspected.style,
frame:this.props.inspected.frame,
hierarchy:this.props.hierarchy,
selection:this.props.selection,
setSelection:this.props.setSelection});}else 


if(this.props.perfing){
contents = 
React.createElement(PerformanceOverlay,null);}else 

{
contents = 
React.createElement(View,{style:styles.waiting},
this.renderWaiting());}



return (
React.createElement(View,{style:styles.container},
!this.props.devtoolsIsOpen && contents,
React.createElement(View,{style:styles.buttonRow},
React.createElement(Button,{
title:'Inspect',
pressed:this.props.inspecting,
onClick:this.props.setInspecting}),

React.createElement(Button,{title:'Perf',
pressed:this.props.perfing,
onClick:this.props.setPerfing}))));}}]);return InspectorPanel;})(React.Component);







InspectorPanel.propTypes = {
devtoolsIsOpen:PropTypes.bool,
inspecting:PropTypes.bool,
setInspecting:PropTypes.func,
inspected:PropTypes.object,
perfing:PropTypes.bool,
setPerfing:PropTypes.func};var 


Button=(function(_React$Component2){_inherits(Button,_React$Component2);function Button(){_classCallCheck(this,Button);_get(Object.getPrototypeOf(Button.prototype),'constructor',this).apply(this,arguments);}_createClass(Button,[{key:'render',value:
function render(){var _this=this;
return (
React.createElement(TouchableHighlight,{onPress:function(){return _this.props.onClick(!_this.props.pressed);},style:[
styles.button,
this.props.pressed && styles.buttonPressed]},

React.createElement(Text,{style:styles.buttonText},this.props.title)));}}]);return Button;})(React.Component);





var styles=StyleSheet.create({
buttonRow:{
flexDirection:'row'},

button:{
backgroundColor:'rgba(0, 0, 0, 0.3)',
margin:2,
height:30,
justifyContent:'center',
alignItems:'center'},

buttonPressed:{
backgroundColor:'rgba(255, 255, 255, 0.3)'},

buttonText:{
textAlign:'center',
color:'white',
margin:5},

container:{
backgroundColor:'rgba(0, 0, 0, 0.7)'},

waiting:{
height:100},

waitingText:{
fontSize:20,
textAlign:'center',
marginVertical:20}});



module.exports = InspectorPanel;
});
__d('ElementProperties',["BoxInspector","ReactPropTypes","React","StyleInspector","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","flattenStyle","mapWithSeparator"],function(global, require, module, exports) {  'use strict';












var BoxInspector=require('BoxInspector');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleInspector=require('StyleInspector');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({displayName:'ElementProperties',
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.oneOfType([
PropTypes.object,
PropTypes.array,
PropTypes.number])},



render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i === selection && styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports = ElementProperties;
});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=(function(_React$Component){_inherits(BoxInspector,_React$Component);function BoxInspector(){_classCallCheck(this,BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxInspector,[{key:'render',value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin',style) || blank;
var padding=style && resolveBoxStyle('padding',style) || blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){_inherits(BoxContainer,_React$Component2);function BoxContainer(){_classCallCheck(this,BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype),'constructor',this).apply(this,arguments);}_createClass(BoxContainer,[{key:'render',value:
function render(){
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports = BoxInspector;
});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){_inherits(StyleInspector,_React$Component);function StyleInspector(){_classCallCheck(this,StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype),'constructor',this).apply(this,arguments);}_createClass(StyleInspector,[{key:'render',value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports = StyleInspector;
});
__d('mapWithSeparator',[],function(global, require, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i < array.length;i++) {
results.push(valueFunction(array[i],i,array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;
});
__d('PerformanceOverlay',["PerformanceLogger","React","StyleSheet","Text","View"],function(global, require, module, exports) {  'use strict';












var PerformanceLogger=require('PerformanceLogger');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var PerformanceOverlay=React.createClass({displayName:'PerformanceOverlay',
render:function(){
var perfLogs=PerformanceLogger.getTimespans();
var items=[];

for(var key in perfLogs) {
if(perfLogs[key].totalTime){
items.push(
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[styles.text,styles.label]},key),
React.createElement(Text,{style:[styles.text,styles.totalTime]},
perfLogs[key].totalTime + 'ms')));}}






return (
React.createElement(View,{style:styles.container},
items));}});





var styles=StyleSheet.create({
container:{
height:100,
paddingTop:10},

label:{
flex:1},

row:{
flexDirection:'row',
paddingHorizontal:10},

text:{
color:'white',
fontSize:12},

totalTime:{
paddingRight:100}});



module.exports = PerformanceOverlay;
});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","rebound/rebound.js","stringifySafe","Dimensions"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound.js');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({displayName:'WarningRow',
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning)),


React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({displayName:'WarningBoxOpened',
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')'," ");}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose,
style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss')),



React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored,
style:styles.yellowBoxButton},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))));}});









var canMountWarningBox=true;

var WarningBox=React.createClass({displayName:'WarningBox',
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;
});
__d('AsyncStorage',["NativeModules"],function(global, require, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;
});
__d('setupDevtools',["flattenStyle","ReactCurrentOwner","ReactInstanceHandles","ReactNativeMount","ReactReconciler","ReactNativeTextComponent"],function(global, require, module, exports) {  'use strict';












function setupDevtools(){
var messageListeners=[];
var closeListeners=[];
var ws=new window.WebSocket('ws://localhost:8081/devtools');

var FOR_BACKEND={
resolveRNStyle:require('flattenStyle'),
wall:{
listen:function(fn){
messageListeners.push(fn);},

onClose:function(fn){
closeListeners.push(fn);},

send:function(data){
ws.send(JSON.stringify(data));}}};



ws.onclose = function(){
console.warn('devtools socket closed');
closeListeners.forEach(function(fn){return fn();});};

ws.onerror = function(error){
console.warn('devtools socket errored',error);
closeListeners.forEach(function(fn){return fn();});};

ws.onopen = function(){
tryToConnect();};


function tryToConnect(){
ws.send('attach:agent');
var _interval=setInterval(function(){return ws.send('attach:agent');},500);
ws.onmessage = function(evt){
if(evt.data.indexOf('eval:') === 0){
clearInterval(_interval);
initialize(evt.data.slice('eval:'.length));}};}




function initialize(text){
try{

eval(text);}
catch(e) {
console.error('Failed to eval' + e.message);
return;}

window.__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:require('ReactCurrentOwner'),
InstanceHandles:require('ReactInstanceHandles'),
Mount:require('ReactNativeMount'),
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});

ws.onmessage = handleMessage;}


function handleMessage(evt){
var data;
try{
data = JSON.parse(evt.data);}
catch(e) {
return console.error('failed to parse json: ' + evt.data);}


if(data.$close || data.$error){
closeListeners.forEach(function(fn){return fn();});
window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit('shutdown');
tryToConnect();
return;}

if(data.$open){
return;}

messageListeners.forEach(function(fn){
try{
fn(data);}
catch(e) {



console.log(data);
throw e;}});}}





module.exports = setupDevtools;
});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;
});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;
});
__d('DOMProperty',["invariant"],function(global, require, module, exports) {  'use strict';













var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,





























injectDOMPropertyConfig:function(domPropertyConfig){
var Injection=DOMPropertyInjection;
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNamespaces=domPropertyConfig.DOMAttributeNamespaces || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.properties.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


var lowerCased=propName.toLowerCase();
var propConfig=Properties[propName];

var propertyInfo={
attributeName:lowerCased,
attributeNamespace:null,
propertyName:propName,
mutationMethod:null,

mustUseAttribute:checkMask(propConfig,Injection.MUST_USE_ATTRIBUTE),
mustUseProperty:checkMask(propConfig,Injection.MUST_USE_PROPERTY),
hasSideEffects:checkMask(propConfig,Injection.HAS_SIDE_EFFECTS),
hasBooleanValue:checkMask(propConfig,Injection.HAS_BOOLEAN_VALUE),
hasNumericValue:checkMask(propConfig,Injection.HAS_NUMERIC_VALUE),
hasPositiveNumericValue:
checkMask(propConfig,Injection.HAS_POSITIVE_NUMERIC_VALUE),
hasOverloadedBooleanValue:
checkMask(propConfig,Injection.HAS_OVERLOADED_BOOLEAN_VALUE)};


invariant(
!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty,
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects,
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + 
propertyInfo.hasOverloadedBooleanValue <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);


if(__DEV__){
DOMProperty.getPossibleStandardName[lowerCased] = propName;}


if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
propertyInfo.attributeName = attributeName;
if(__DEV__){
DOMProperty.getPossibleStandardName[attributeName] = propName;}}



if(DOMAttributeNamespaces.hasOwnProperty(propName)){
propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];}


if(DOMPropertyNames.hasOwnProperty(propName)){
propertyInfo.propertyName = DOMPropertyNames[propName];}


if(DOMMutationMethods.hasOwnProperty(propName)){
propertyInfo.mutationMethod = DOMMutationMethods[propName];}


DOMProperty.properties[propName] = propertyInfo;}}};



var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





































properties:{},






getPossibleStandardName:__DEV__?{}:null,




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;
});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;
});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","validateDOMNesting","warning"],function(global, require, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var validateDOMNesting=require('validateDOMNesting');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;
var DOCUMENT_FRAGMENT_NODE_TYPE=11;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}







function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}







function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context){
if(__DEV__){
if(context === emptyObject){
context = {};}

var tag=container.nodeName.toLowerCase();
context[validateDOMNesting.ancestorInfoContextKey] = 
validateDOMNesting.updatedAncestorInfo(null,tag,null);}

var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,context);

componentInstance._renderedComponent._topLevelWrapper = componentInstance;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup,
context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup,
context);

ReactUpdates.ReactReconcileTransaction.release(transaction);}











function unmountComponentFromNode(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}}








var TopLevelWrapper=function(){};
TopLevelWrapper.prototype.render = function(){

return this.props;};




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup,
context)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup,
context);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},















renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
parentComponent != null && parentComponent._reactInternalInstance != null,
'parentComponent must be a valid React Component');

return ReactMount._renderSubtreeIntoContainer(
parentComponent,
nextElement,
container,
callback);},



_renderSubtreeIntoContainer:function(parentComponent,nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



warning(
!container || !container.tagName || 
container.tagName.toUpperCase() !== 'BODY',
'render(): Rendering components directly into document.body is ' + 
'discouraged, since its children are often manipulated by third-party ' + 
'scripts and browser extensions. This may lead to subtle ' + 
'reconciliation issues. Try rendering into a container element created ' + 
'for your app.');


var nextWrappedElement=new ReactElement(
TopLevelWrapper,
null,
null,
null,
nextElement);


var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevWrappedElement=prevComponent._currentElement;
var prevElement=prevWrappedElement.props;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextWrappedElement,
container,
callback).
_renderedComponent.getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;
var component=ReactMount._renderNewRootComponent(
nextWrappedElement,
container,
shouldReuseMarkup,
parentComponent != null?
parentComponent._reactInternalInstance._processChildContext(
parentComponent._reactInternalInstance._context):

emptyObject).
_renderedComponent.getPublicInstance();
if(callback){
callback.call(component);}

return component;},















render:function(nextElement,container,callback){
return ReactMount._renderSubtreeIntoContainer(null,nextElement,container,callback);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from render ' + 
'is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate. Check the render method of %s.',
ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 
'ReactCompositeComponent');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactUpdates.batchedUpdates(
unmountComponentFromNode,
component,
container);

delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},









findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
warning(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');

var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container: %s',
rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE || 
container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;
});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=
EventPluginRegistry.registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0;i < dependencies.length;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;
});
__d('ViewportMetrics',[],function(global, require, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;
});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}


/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;
});
__d('ReactMarkupChecksum',["adler32"],function(global, require, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;
});
__d('adler32',[],function(global, require, module, exports) {  'use strict';












var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;
});
__d('containsNode',["isTextNode"],function(global, require, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;
});
__d('isTextNode',["isNode"],function(global, require, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;
});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){






node.innerHTML = String.fromCharCode(0xFEFF) + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;
});
__d('validateDOMNesting',["Object.assign","emptyFunction","warning"],function(global, require, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var warning=require('warning');

var validateDOMNesting=emptyFunction;

if(__DEV__){












var specialTags=[
'address','applet','area','article','aside','base','basefont',
'bgsound','blockquote','body','br','button','caption','center','col',
'colgroup','dd','details','dir','div','dl','dt','embed','fieldset',
'figcaption','figure','footer','form','frame','frameset','h1','h2',
'h3','h4','h5','h6','head','header','hgroup','hr','html','iframe',
'img','input','isindex','li','link','listing','main','marquee',
'menu','menuitem','meta','nav','noembed','noframes','noscript',
'object','ol','p','param','plaintext','pre','script','section',
'select','source','style','summary','table','tbody','td','template',
'textarea','tfoot','th','thead','title','tr','track','ul','wbr',
'xmp'];



var inScopeTags=[
'applet','caption','html','table','td','th','marquee','object',
'template',




'foreignObject','desc','title'];



var buttonScopeTags=inScopeTags.concat(['button']);


var impliedEndTags=
['dd','dt','li','option','optgroup','p','rp','rt'];

var emptyAncestorInfo={
parentTag:null,

formTag:null,
aTagInScope:null,
buttonTagInScope:null,
nobrTagInScope:null,
pTagInButtonScope:null,

listItemTagAutoclosing:null,
dlItemTagAutoclosing:null};


var updatedAncestorInfo=function(oldInfo,tag,instance){
var ancestorInfo=assign({},oldInfo || emptyAncestorInfo);
var info={tag:tag,instance:instance};

if(inScopeTags.indexOf(tag) !== -1){
ancestorInfo.aTagInScope = null;
ancestorInfo.buttonTagInScope = null;
ancestorInfo.nobrTagInScope = null;}

if(buttonScopeTags.indexOf(tag) !== -1){
ancestorInfo.pTagInButtonScope = null;}




if(
specialTags.indexOf(tag) !== -1 && 
tag !== 'address' && tag !== 'div' && tag !== 'p')
{
ancestorInfo.listItemTagAutoclosing = null;
ancestorInfo.dlItemTagAutoclosing = null;}


ancestorInfo.parentTag = info;

if(tag === 'form'){
ancestorInfo.formTag = info;}

if(tag === 'a'){
ancestorInfo.aTagInScope = info;}

if(tag === 'button'){
ancestorInfo.buttonTagInScope = info;}

if(tag === 'nobr'){
ancestorInfo.nobrTagInScope = info;}

if(tag === 'p'){
ancestorInfo.pTagInButtonScope = info;}

if(tag === 'li'){
ancestorInfo.listItemTagAutoclosing = info;}

if(tag === 'dd' || tag === 'dt'){
ancestorInfo.dlItemTagAutoclosing = info;}


return ancestorInfo;};





var isTagValidWithParent=function(tag,parentTag){

switch(parentTag){

case 'select':
return tag === 'option' || tag === 'optgroup' || tag === '#text';
case 'optgroup':
return tag === 'option' || tag === '#text';


case 'option':
return tag === '#text';







case 'tr':
return (
tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'tbody':
case 'thead':
case 'tfoot':
return (
tag === 'tr' || tag === 'style' || tag === 'script' || 
tag === 'template');



case 'colgroup':
return tag === 'col' || tag === 'template';


case 'table':
return (
tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || 
tag === 'tfoot' || tag === 'thead' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'head':
return (
tag === 'base' || tag === 'basefont' || tag === 'bgsound' || 
tag === 'link' || tag === 'meta' || tag === 'title' || 
tag === 'noscript' || tag === 'noframes' || tag === 'style' || 
tag === 'script' || tag === 'template');



case 'html':
return tag === 'head' || tag === 'body';}





switch(tag){
case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return (
parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && 
parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6');


case 'rp':
case 'rt':
return impliedEndTags.indexOf(parentTag) === -1;

case 'caption':
case 'col':
case 'colgroup':
case 'frame':
case 'head':
case 'tbody':
case 'td':
case 'tfoot':
case 'th':
case 'thead':
case 'tr':




return parentTag == null;}


return true;};





var findInvalidAncestorForTag=function(tag,ancestorInfo){
switch(tag){
case 'address':
case 'article':
case 'aside':
case 'blockquote':
case 'center':
case 'details':
case 'dialog':
case 'dir':
case 'div':
case 'dl':
case 'fieldset':
case 'figcaption':
case 'figure':
case 'footer':
case 'header':
case 'hgroup':
case 'main':
case 'menu':
case 'nav':
case 'ol':
case 'p':
case 'section':
case 'summary':
case 'ul':

case 'pre':
case 'listing':

case 'table':

case 'hr':

case 'xmp':

case 'h1':
case 'h2':
case 'h3':
case 'h4':
case 'h5':
case 'h6':
return ancestorInfo.pTagInButtonScope;

case 'form':
return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

case 'li':
return ancestorInfo.listItemTagAutoclosing;

case 'dd':
case 'dt':
return ancestorInfo.dlItemTagAutoclosing;

case 'button':
return ancestorInfo.buttonTagInScope;

case 'a':


return ancestorInfo.aTagInScope;

case 'nobr':
return ancestorInfo.nobrTagInScope;}


return null;};






var findOwnerStack=function(instance){
if(!instance){
return [];}


var stack=[];

do {

stack.push(instance);}while(
instance = instance._currentElement._owner);
stack.reverse();
return stack;};


var didWarn={};

validateDOMNesting = function(childTag,childInstance,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;

var invalidParent=
isTagValidWithParent(childTag,parentTag)?null:parentInfo;
var invalidAncestor=
invalidParent?null:findInvalidAncestorForTag(childTag,ancestorInfo);
var problematic=invalidParent || invalidAncestor;

if(problematic){
var ancestorTag=problematic.tag;
var ancestorInstance=problematic.instance;

var childOwner=childInstance && childInstance._currentElement._owner;
var ancestorOwner=
ancestorInstance && ancestorInstance._currentElement._owner;

var childOwners=findOwnerStack(childOwner);
var ancestorOwners=findOwnerStack(ancestorOwner);

var minStackLen=Math.min(childOwners.length,ancestorOwners.length);
var i;

var deepestCommon=-1;
for(i = 0;i < minStackLen;i++) {
if(childOwners[i] === ancestorOwners[i]){
deepestCommon = i;}else 
{
break;}}



var UNKNOWN='(unknown)';
var childOwnerNames=childOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ancestorOwnerNames=ancestorOwners.slice(deepestCommon + 1).map(
function(inst){return inst.getName() || UNKNOWN;});

var ownerInfo=[].concat(


deepestCommon !== -1?
childOwners[deepestCommon].getName() || UNKNOWN:
[],
ancestorOwnerNames,
ancestorTag,

invalidAncestor?['...']:[],
childOwnerNames,
childTag).
join(' > ');

var warnKey=
!!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
if(didWarn[warnKey]){
return;}

didWarn[warnKey] = true;

if(invalidParent){
var info='';
if(ancestorTag === 'table' && childTag === 'tr'){
info += 
' Add a <tbody> to your code to match the DOM tree generated by ' + 
'the browser.';}

warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 
'See %s.%s',
childTag,
ancestorTag,
ownerInfo,
info);}else 

{
warning(
false,
'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + 
'<%s>. See %s.',
childTag,
ancestorTag,
ownerInfo);}}};





validateDOMNesting.ancestorInfoContextKey = 
'__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;


validateDOMNesting.isTagValidInContext = function(tag,ancestorInfo){
ancestorInfo = ancestorInfo || emptyAncestorInfo;
var parentInfo=ancestorInfo.parentTag;
var parentTag=parentInfo && parentInfo.tag;
return (
isTagValidWithParent(tag,parentTag) && 
!findInvalidAncestorForTag(tag,ancestorInfo));};}




module.exports = validateDOMNesting;
});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to subscribe to unknown event: "%s"',type);

if(type === 'change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},


currentState:RCTAppState && RCTAppState.initialAppState};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;
});
__d('BackAndroid',["warning"],function(global, require, module, exports) {  'use strict';














var warning=require('warning');

function platformWarn(){
warning(false,'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn,
addEventListener:platformWarn,
removeEventListener:platformWarn};


module.exports = BackAndroid;
});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS),




mimeTypes:ReactPropTypes.arrayOf(ReactPropTypes.string)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 





CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:



















function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;
});
__d('ImagePickerIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTImagePicker=require('NativeModules').ImagePickerIOS;

var ImagePickerIOS={
canRecordVideos:function(callback){
return RCTImagePicker.canRecordVideos(callback);},

canUseCamera:function(callback){
return RCTImagePicker.canUseCamera(callback);},

openCameraDialog:function(config,successCallback,cancelCallback){
config = _extends({
videoMode:false},
config);

return RCTImagePicker.openCameraDialog(config,successCallback,cancelCallback);},

openSelectDialog:function(config,successCallback,cancelCallback){
config = _extends({
showImages:true,
showVideos:false},
config);

return RCTImagePicker.openSelectDialog(config,successCallback,cancelCallback);}};



module.exports = ImagePickerIOS;
});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true,
keyboard:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(
config,onAnimationDidEnd || function(){},function(){});}



function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var Presets={
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}};











var LayoutAnimation={














configureNext:configureNext,



create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:Presets,
easeInEaseOut:configureNext.bind(
null,Presets.easeInEaseOut),

linear:configureNext.bind(
null,Presets.linear),

spring:configureNext.bind(
null,Presets.spring)};



module.exports = LayoutAnimation;
});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","Map","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var Map=require('Map');
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 





























































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);

_notifHandlers.set(handler,listener);}},{key:'removeEventListener',value:





function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:






function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;
});
__d('NetInfo',["Map","NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTNetInfo=NativeModules.NetInfo;

var DEVICE_REACHABILITY_EVENT='networkDidChange';






















































































































var _subscriptions=new Map();

var NetInfo={
addEventListener:function(
eventName,
handler)
{
var listener=RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_info);});


_subscriptions.set(handler,listener);},


removeEventListener:function(
eventName,
handler)
{
var listener=_subscriptions.get(handler);
if(!listener){
return;}

listener.remove();
_subscriptions.delete(handler);},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);},

reject);});},




isConnected:{},

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions=new Map();

NetInfo.isConnected = {
addEventListener:function(
eventName,
handler)
{
var listener=function(connection){
handler(_isConnected(connection));};

_isConnectedSubscriptions.set(handler,listener);
NetInfo.addEventListener(
eventName,
listener);},



removeEventListener:function(
eventName,
handler)
{
var listener=_isConnectedSubscriptions.get(handler);
NetInfo.removeEventListener(
eventName,
listener);

_isConnectedSubscriptions.delete(handler);},


fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;
});
__d('PushNotificationIOS',["Map","RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Map=require('Map');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers=new Map();
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){_createClass(PushNotificationIOS,null,[{key:'presentLocalNotification',value:













function presentLocalNotification(details){
RCTPushNotificationManager.presentLocalNotification(details);}},{key:'scheduleLocalNotification',value:











function scheduleLocalNotification(details){
RCTPushNotificationManager.scheduleLocalNotification(details);}},{key:'setApplicationIconBadgeNumber',value:





function setApplicationIconBadgeNumber(number){
RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:





function getApplicationIconBadgeNumber(callback){
RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:













function addEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener;
if(type === 'notification'){
listener = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
function(notifData){
handler(new PushNotificationIOS(notifData));});}else 


if(type === 'register'){
listener = RCTDeviceEventEmitter.addListener(
NOTIF_REGISTER_EVENT,
function(registrationInfo){
handler(registrationInfo.deviceToken);});}



_notifHandlers.set(handler,listener);}},{key:'requestPermissions',value:
















function requestPermissions(permissions)



{
var requestedPermissions={};
if(permissions){
requestedPermissions = {
alert:!!permissions.alert,
badge:!!permissions.badge,
sound:!!permissions.sound};}else 

{
requestedPermissions = {
alert:true,
badge:true,
sound:true};}


RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'abandonPermissions',value:










function abandonPermissions(){
RCTPushNotificationManager.abandonPermissions();}},{key:'checkPermissions',value:










function checkPermissions(callback){
invariant(
typeof callback === 'function',
'Must provide a valid callback');

RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'notification' || type === 'register',
'PushNotificationIOS only supports `notification` and `register` events');

var listener=_notifHandlers.get(handler);
if(!listener){
return;}

listener.remove();
_notifHandlers.delete(handler);}},{key:'popInitialNotification',value:










function popInitialNotification(){
var initialNotification=_initialNotification && 
new PushNotificationIOS(_initialNotification);
_initialNotification = null;
return initialNotification;}}]);







function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;
});
__d('Settings',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTSettingsManager=require('NativeModules').SettingsManager;

var invariant=require('invariant');

var subscriptions=[];

var Settings={
_settings:RCTSettingsManager && RCTSettingsManager.settings,

get:function(key){
return this._settings[key];},


set:function(settings){
this._settings = Object.assign(this._settings,settings);
RCTSettingsManager.setValues(settings);},


watchKeys:function(keys,callback){
if(typeof keys === 'string'){
keys = [keys];}


invariant(
Array.isArray(keys),
'keys should be a string or array of strings');


var sid=subscriptions.length;
subscriptions.push({keys:keys,callback:callback});
return sid;},


clearWatch:function(watchId){
if(watchId < subscriptions.length){
subscriptions[watchId] = {keys:[],callback:null};}},



_sendObservations:function(body){var _this=this;
Object.keys(body).forEach(function(key){
var newValue=body[key];
var didChange=_this._settings[key] !== newValue;
_this._settings[key] = newValue;

if(didChange){
subscriptions.forEach(function(sub){
if(sub.keys.indexOf(key) !== -1 && sub.callback){
sub.callback();}});}});}};







RCTDeviceEventEmitter.addListener(
'settingsUpdated',
Settings._sendObservations.bind(Settings));


module.exports = Settings;
});
__d('StatusBarIOS',["NativeModules"],function(global, require, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden,animation);},


setNetworkActivityIndicatorVisible:function(visible){
RCTStatusBarManager.setNetworkActivityIndicatorVisible(visible);}};



module.exports = StatusBarIOS;
});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;
});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;
});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;
});
__d('ReactLink',["React"],function(global, require, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;
});
__d('ReactStateSetters',[],function(global, require, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;
});
__d('ReactComponentWithPureRenderMixin',["shallowCompare"],function(global, require, module, exports) {  'use strict';












var shallowCompare=require('shallowCompare');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return shallowCompare(this,nextProps,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;
});
__d('shallowCompare',["shallowEqual"],function(global, require, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');





function shallowCompare(instance,nextProps,nextState){
return (
!shallowEqual(instance.props,nextProps) || 
!shallowEqual(instance.state,nextState));}



module.exports = shallowCompare;
});
__d('shallowEqual',[],function(global, require, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}


if(typeof objA !== 'object' || objA === null || 
typeof objB !== 'object' || objB === null){
return false;}


var keysA=Object.keys(objA);
var keysB=Object.keys(objB);

if(keysA.length !== keysB.length){
return false;}



var bHasOwnProperty=Object.prototype.hasOwnProperty.bind(objB);
for(var i=0;i < keysA.length;i++) {
if(!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]){
return false;}}



return true;}


module.exports = shallowEqual;
});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;
});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign","emptyObject","findDOMNode","invariant"],function(global, require, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var findDOMNode=require('findDOMNode');
var invariant=require('invariant');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}





function findAllInRenderedTreeInternal(inst,test){
if(!inst || !inst.getPublicInstance){
return [];}

var publicInst=inst.getPublicInstance();
var ret=test(publicInst)?[publicInst]:[];
if(ReactTestUtils.isDOMComponent(publicInst)){
var renderedChildren=inst._renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

ret = ret.concat(
findAllInRenderedTreeInternal(
renderedChildren[key],
test));}}else 



if(ReactTestUtils.isCompositeComponent(publicInst)){
ret = ret.concat(
findAllInRenderedTreeInternal(inst._renderedComponent,test));}


return ret;}







var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.nodeType === 1 && inst.tagName);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
if(ReactTestUtils.isDOMComponent(inst)){


return false;}

return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
if(!ReactTestUtils.isCompositeComponent(inst)){
return false;}

var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return constructor === type;},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
var internalInstance=ReactInstanceMap.get(inst);
var constructor=internalInstance.
_currentElement.
type;

return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

invariant(
ReactTestUtils.isCompositeComponent(inst),
'findAllInRenderedTree(...): instance must be a composite component');

return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst),test);},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
if(ReactTestUtils.isDOMComponent(inst)){
var instClassName=React.findDOMNode(inst).className;
return (
instClassName && 
('' + instClassName).split(/\s+/).indexOf(className) !== -1);}


return false;});},









findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType + 
' (found ' + all.length + ')');}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || "div";

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
findDOMNode(comp),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
if(!context){
context = emptyObject;}

var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = findDOMNode(domComponentOrNode);}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var dispatchConfig=
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
dispatchConfig,
ReactMount.getID(node),
fakeNativeEvent,
node);

assign(event,eventData);

if(dispatchConfig.phasedRegistrationNames){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
{
EventPropagators.accumulateDirectDispatches(event);}


ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;
});
__d('findDOMNode',["ReactCurrentOwner","ReactInstanceMap","ReactMount","invariant","warning"],function(global, require, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');

var invariant=require('invariant');
var warning=require('warning');







function findDOMNode(componentOrElement){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing getDOMNode or findDOMNode inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrElement == null){
return null;}

if(componentOrElement.nodeType === 1){
return componentOrElement;}

if(ReactInstanceMap.has(componentOrElement)){
return ReactMount.getNodeFromInstance(componentOrElement);}

invariant(
componentOrElement.render == null || 
typeof componentOrElement.render !== 'function',
'Component (with keys: %s) contains `render` method ' + 
'but is not mounted in the DOM',
Object.keys(componentOrElement));

invariant(
false,
'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
Object.keys(componentOrElement));}



module.exports = findDOMNode;
});
__d('Ionicons',["createIconSet"],function(global, require, module, exports) {  'use strict';







var createIconSet=require('createIconSet');
var glyphMap={
"alert":61697,
"alert-circled":61696,
"android-add":62151,
"android-add-circle":62297,
"android-alarm-clock":62298,
"android-alert":62299,
"android-apps":62300,
"android-archive":62153,
"android-arrow-back":62154,
"android-arrow-down":62301,
"android-arrow-dropdown":62303,
"android-arrow-dropdown-circle":62302,
"android-arrow-dropleft":62305,
"android-arrow-dropleft-circle":62304,
"android-arrow-dropright":62307,
"android-arrow-dropright-circle":62306,
"android-arrow-dropup":62309,
"android-arrow-dropup-circle":62308,
"android-arrow-forward":62223,
"android-arrow-up":62310,
"android-attach":62311,
"android-bar":62312,
"android-bicycle":62313,
"android-boat":62314,
"android-bookmark":62315,
"android-bulb":62316,
"android-bus":62317,
"android-calendar":62161,
"android-call":62162,
"android-camera":62163,
"android-cancel":62318,
"android-car":62319,
"android-cart":62320,
"android-chat":62164,
"android-checkbox":62324,
"android-checkbox-blank":62321,
"android-checkbox-outline":62323,
"android-checkbox-outline-blank":62322,
"android-checkmark-circle":62325,
"android-clipboard":62326,
"android-close":62167,
"android-cloud":62330,
"android-cloud-circle":62327,
"android-cloud-done":62328,
"android-cloud-outline":62329,
"android-color-palette":62331,
"android-compass":62332,
"android-contact":62168,
"android-contacts":62169,
"android-contract":62333,
"android-create":62334,
"android-delete":62335,
"android-desktop":62336,
"android-document":62337,
"android-done":62339,
"android-done-all":62338,
"android-download":62173,
"android-drafts":62340,
"android-exit":62341,
"android-expand":62342,
"android-favorite":62344,
"android-favorite-outline":62343,
"android-film":62345,
"android-folder":62176,
"android-folder-open":62346,
"android-funnel":62347,
"android-globe":62348,
"android-hand":62179,
"android-hangout":62349,
"android-happy":62350,
"android-home":62351,
"android-image":62180,
"android-laptop":62352,
"android-list":62353,
"android-locate":62185,
"android-lock":62354,
"android-mail":62187,
"android-map":62355,
"android-menu":62356,
"android-microphone":62188,
"android-microphone-off":62357,
"android-more-horizontal":62358,
"android-more-vertical":62359,
"android-navigate":62360,
"android-notifications":62363,
"android-notifications-none":62361,
"android-notifications-off":62362,
"android-open":62364,
"android-options":62365,
"android-people":62366,
"android-person":62368,
"android-person-add":62367,
"android-phone-landscape":62369,
"android-phone-portrait":62370,
"android-pin":62371,
"android-plane":62372,
"android-playstore":62192,
"android-print":62373,
"android-radio-button-off":62374,
"android-radio-button-on":62375,
"android-refresh":62376,
"android-remove":62196,
"android-remove-circle":62377,
"android-restaurant":62378,
"android-sad":62379,
"android-search":62197,
"android-send":62198,
"android-settings":62199,
"android-share":62200,
"android-share-alt":62380,
"android-star":62204,
"android-star-half":62381,
"android-star-outline":62382,
"android-stopwatch":62205,
"android-subway":62383,
"android-sunny":62384,
"android-sync":62385,
"android-textsms":62386,
"android-time":62387,
"android-train":62388,
"android-unlock":62389,
"android-upload":62390,
"android-volume-down":62391,
"android-volume-mute":62392,
"android-volume-off":62393,
"android-volume-up":62394,
"android-walk":62395,
"android-warning":62396,
"android-watch":62397,
"android-wifi":62213,
"aperture":62227,
"archive":61698,
"arrow-down-a":61699,
"arrow-down-b":61700,
"arrow-down-c":61701,
"arrow-expand":62046,
"arrow-graph-down-left":62047,
"arrow-graph-down-right":62048,
"arrow-graph-up-left":62049,
"arrow-graph-up-right":62050,
"arrow-left-a":61702,
"arrow-left-b":61703,
"arrow-left-c":61704,
"arrow-move":62051,
"arrow-resize":62052,
"arrow-return-left":62053,
"arrow-return-right":62054,
"arrow-right-a":61705,
"arrow-right-b":61706,
"arrow-right-c":61707,
"arrow-shrink":62055,
"arrow-swap":62056,
"arrow-up-a":61708,
"arrow-up-b":61709,
"arrow-up-c":61710,
"asterisk":62228,
"at":61711,
"backspace":62399,
"backspace-outline":62398,
"bag":61712,
"battery-charging":61713,
"battery-empty":61714,
"battery-full":61715,
"battery-half":61716,
"battery-low":61717,
"beaker":62057,
"beer":62058,
"bluetooth":61718,
"bonfire":62229,
"bookmark":62059,
"bowtie":62400,
"briefcase":62060,
"bug":62142,
"calculator":62061,
"calendar":61719,
"camera":61720,
"card":61721,
"cash":62230,
"chatbox":61723,
"chatbox-working":61722,
"chatboxes":61724,
"chatbubble":61726,
"chatbubble-working":61725,
"chatbubbles":61727,
"checkmark":61730,
"checkmark-circled":61728,
"checkmark-round":61729,
"chevron-down":61731,
"chevron-left":61732,
"chevron-right":61733,
"chevron-up":61734,
"clipboard":61735,
"clock":62062,
"close":61738,
"close-circled":61736,
"close-round":61737,
"closed-captioning":62231,
"cloud":61739,
"code":62065,
"code-download":62063,
"code-working":62064,
"coffee":62066,
"compass":62067,
"compose":61740,
"connection-bars":62068,
"contrast":62069,
"crop":62401,
"cube":62232,
"disc":61741,
"document":61743,
"document-text":61742,
"drag":61744,
"earth":62070,
"easel":62402,
"edit":62143,
"egg":62071,
"eject":61745,
"email":61746,
"email-unread":62403,
"erlenmeyer-flask":62405,
"erlenmeyer-flask-bubbles":62404,
"eye":61747,
"eye-disabled":62214,
"female":62072,
"filing":61748,
"film-marker":61749,
"fireball":62233,
"flag":62073,
"flame":62234,
"flash":61751,
"flash-off":61750,
"folder":61753,
"fork":62074,
"fork-repo":62144,
"forward":61754,
"funnel":62235,
"gear-a":61757,
"gear-b":61758,
"grid":61759,
"hammer":62075,
"happy":62236,
"happy-outline":62406,
"headphone":61760,
"heart":61761,
"heart-broken":62237,
"help":61763,
"help-buoy":62076,
"help-circled":61762,
"home":61764,
"icecream":62077,
"image":61767,
"images":61768,
"information":61770,
"information-circled":61769,
"ionic":61771,
"ios-alarm":62408,
"ios-alarm-outline":62407,
"ios-albums":62410,
"ios-albums-outline":62409,
"ios-americanfootball":62412,
"ios-americanfootball-outline":62411,
"ios-analytics":62414,
"ios-analytics-outline":62413,
"ios-arrow-back":62415,
"ios-arrow-down":62416,
"ios-arrow-forward":62417,
"ios-arrow-left":62418,
"ios-arrow-right":62419,
"ios-arrow-thin-down":62420,
"ios-arrow-thin-left":62421,
"ios-arrow-thin-right":62422,
"ios-arrow-thin-up":62423,
"ios-arrow-up":62424,
"ios-at":62426,
"ios-at-outline":62425,
"ios-barcode":62428,
"ios-barcode-outline":62427,
"ios-baseball":62430,
"ios-baseball-outline":62429,
"ios-basketball":62432,
"ios-basketball-outline":62431,
"ios-bell":62434,
"ios-bell-outline":62433,
"ios-body":62436,
"ios-body-outline":62435,
"ios-bolt":62438,
"ios-bolt-outline":62437,
"ios-book":62440,
"ios-book-outline":62439,
"ios-bookmarks":62442,
"ios-bookmarks-outline":62441,
"ios-box":62444,
"ios-box-outline":62443,
"ios-briefcase":62446,
"ios-briefcase-outline":62445,
"ios-browsers":62448,
"ios-browsers-outline":62447,
"ios-calculator":62450,
"ios-calculator-outline":62449,
"ios-calendar":62452,
"ios-calendar-outline":62451,
"ios-camera":62454,
"ios-camera-outline":62453,
"ios-cart":62456,
"ios-cart-outline":62455,
"ios-chatboxes":62458,
"ios-chatboxes-outline":62457,
"ios-chatbubble":62460,
"ios-chatbubble-outline":62459,
"ios-checkmark":62463,
"ios-checkmark-empty":62461,
"ios-checkmark-outline":62462,
"ios-circle-filled":62464,
"ios-circle-outline":62465,
"ios-clock":62467,
"ios-clock-outline":62466,
"ios-close":62470,
"ios-close-empty":62468,
"ios-close-outline":62469,
"ios-cloud":62476,
"ios-cloud-download":62472,
"ios-cloud-download-outline":62471,
"ios-cloud-outline":62473,
"ios-cloud-upload":62475,
"ios-cloud-upload-outline":62474,
"ios-cloudy":62480,
"ios-cloudy-night":62478,
"ios-cloudy-night-outline":62477,
"ios-cloudy-outline":62479,
"ios-cog":62482,
"ios-cog-outline":62481,
"ios-color-filter":62484,
"ios-color-filter-outline":62483,
"ios-color-wand":62486,
"ios-color-wand-outline":62485,
"ios-compose":62488,
"ios-compose-outline":62487,
"ios-contact":62490,
"ios-contact-outline":62489,
"ios-copy":62492,
"ios-copy-outline":62491,
"ios-crop":62494,
"ios-crop-strong":62493,
"ios-download":62496,
"ios-download-outline":62495,
"ios-drag":62497,
"ios-email":62499,
"ios-email-outline":62498,
"ios-eye":62501,
"ios-eye-outline":62500,
"ios-fastforward":62503,
"ios-fastforward-outline":62502,
"ios-filing":62505,
"ios-filing-outline":62504,
"ios-film":62507,
"ios-film-outline":62506,
"ios-flag":62509,
"ios-flag-outline":62508,
"ios-flame":62511,
"ios-flame-outline":62510,
"ios-flask":62513,
"ios-flask-outline":62512,
"ios-flower":62515,
"ios-flower-outline":62514,
"ios-folder":62517,
"ios-folder-outline":62516,
"ios-football":62519,
"ios-football-outline":62518,
"ios-game-controller-a":62521,
"ios-game-controller-a-outline":62520,
"ios-game-controller-b":62523,
"ios-game-controller-b-outline":62522,
"ios-gear":62525,
"ios-gear-outline":62524,
"ios-glasses":62527,
"ios-glasses-outline":62526,
"ios-grid-view":62529,
"ios-grid-view-outline":62528,
"ios-heart":62531,
"ios-heart-outline":62530,
"ios-help":62534,
"ios-help-empty":62532,
"ios-help-outline":62533,
"ios-home":62536,
"ios-home-outline":62535,
"ios-infinite":62538,
"ios-infinite-outline":62537,
"ios-information":62541,
"ios-information-empty":62539,
"ios-information-outline":62540,
"ios-ionic-outline":62542,
"ios-keypad":62544,
"ios-keypad-outline":62543,
"ios-lightbulb":62546,
"ios-lightbulb-outline":62545,
"ios-list":62548,
"ios-list-outline":62547,
"ios-location":62550,
"ios-location-outline":62549,
"ios-locked":62552,
"ios-locked-outline":62551,
"ios-loop":62554,
"ios-loop-strong":62553,
"ios-medical":62556,
"ios-medical-outline":62555,
"ios-medkit":62558,
"ios-medkit-outline":62557,
"ios-mic":62561,
"ios-mic-off":62559,
"ios-mic-outline":62560,
"ios-minus":62564,
"ios-minus-empty":62562,
"ios-minus-outline":62563,
"ios-monitor":62566,
"ios-monitor-outline":62565,
"ios-moon":62568,
"ios-moon-outline":62567,
"ios-more":62570,
"ios-more-outline":62569,
"ios-musical-note":62571,
"ios-musical-notes":62572,
"ios-navigate":62574,
"ios-navigate-outline":62573,
"ios-nutrition":62576,
"ios-nutrition-outline":62575,
"ios-paper":62578,
"ios-paper-outline":62577,
"ios-paperplane":62580,
"ios-paperplane-outline":62579,
"ios-partlysunny":62582,
"ios-partlysunny-outline":62581,
"ios-pause":62584,
"ios-pause-outline":62583,
"ios-paw":62586,
"ios-paw-outline":62585,
"ios-people":62588,
"ios-people-outline":62587,
"ios-person":62590,
"ios-person-outline":62589,
"ios-personadd":62592,
"ios-personadd-outline":62591,
"ios-photos":62594,
"ios-photos-outline":62593,
"ios-pie":62596,
"ios-pie-outline":62595,
"ios-pint":62598,
"ios-pint-outline":62597,
"ios-play":62600,
"ios-play-outline":62599,
"ios-plus":62603,
"ios-plus-empty":62601,
"ios-plus-outline":62602,
"ios-pricetag":62605,
"ios-pricetag-outline":62604,
"ios-pricetags":62607,
"ios-pricetags-outline":62606,
"ios-printer":62609,
"ios-printer-outline":62608,
"ios-pulse":62611,
"ios-pulse-strong":62610,
"ios-rainy":62613,
"ios-rainy-outline":62612,
"ios-recording":62615,
"ios-recording-outline":62614,
"ios-redo":62617,
"ios-redo-outline":62616,
"ios-refresh":62620,
"ios-refresh-empty":62618,
"ios-refresh-outline":62619,
"ios-reload":62621,
"ios-reverse-camera":62623,
"ios-reverse-camera-outline":62622,
"ios-rewind":62625,
"ios-rewind-outline":62624,
"ios-rose":62627,
"ios-rose-outline":62626,
"ios-search":62629,
"ios-search-strong":62628,
"ios-settings":62631,
"ios-settings-strong":62630,
"ios-shuffle":62633,
"ios-shuffle-strong":62632,
"ios-skipbackward":62635,
"ios-skipbackward-outline":62634,
"ios-skipforward":62637,
"ios-skipforward-outline":62636,
"ios-snowy":62638,
"ios-speedometer":62640,
"ios-speedometer-outline":62639,
"ios-star":62643,
"ios-star-half":62641,
"ios-star-outline":62642,
"ios-stopwatch":62645,
"ios-stopwatch-outline":62644,
"ios-sunny":62647,
"ios-sunny-outline":62646,
"ios-telephone":62649,
"ios-telephone-outline":62648,
"ios-tennisball":62651,
"ios-tennisball-outline":62650,
"ios-thunderstorm":62653,
"ios-thunderstorm-outline":62652,
"ios-time":62655,
"ios-time-outline":62654,
"ios-timer":62657,
"ios-timer-outline":62656,
"ios-toggle":62659,
"ios-toggle-outline":62658,
"ios-trash":62661,
"ios-trash-outline":62660,
"ios-undo":62663,
"ios-undo-outline":62662,
"ios-unlocked":62665,
"ios-unlocked-outline":62664,
"ios-upload":62667,
"ios-upload-outline":62666,
"ios-videocam":62669,
"ios-videocam-outline":62668,
"ios-volume-high":62670,
"ios-volume-low":62671,
"ios-wineglass":62673,
"ios-wineglass-outline":62672,
"ios-world":62675,
"ios-world-outline":62674,
"ipad":61945,
"iphone":61946,
"ipod":61947,
"jet":62101,
"key":62102,
"knife":62103,
"laptop":61948,
"leaf":61949,
"levels":62104,
"lightbulb":62105,
"link":61950,
"load-a":62106,
"load-b":62107,
"load-c":62108,
"load-d":62109,
"location":61951,
"lock-combination":62676,
"locked":61952,
"log-in":62110,
"log-out":62111,
"loop":61953,
"magnet":62112,
"male":62113,
"man":61954,
"map":61955,
"medkit":62114,
"merge":62271,
"mic-a":61956,
"mic-b":61957,
"mic-c":61958,
"minus":61961,
"minus-circled":61959,
"minus-round":61960,
"model-s":62145,
"monitor":61962,
"more":61963,
"mouse":62272,
"music-note":61964,
"navicon":61966,
"navicon-round":61965,
"navigate":62115,
"network":62273,
"no-smoking":62146,
"nuclear":62116,
"outlet":62274,
"paintbrush":62677,
"paintbucket":62678,
"paper-airplane":62147,
"paperclip":61967,
"pause":61968,
"person":61971,
"person-add":61969,
"person-stalker":61970,
"pie-graph":62117,
"pin":62118,
"pinpoint":62119,
"pizza":62120,
"plane":61972,
"planet":62275,
"play":61973,
"playstation":62218,
"plus":61976,
"plus-circled":61974,
"plus-round":61975,
"podium":62276,
"pound":61977,
"power":62121,
"pricetag":62122,
"pricetags":62123,
"printer":61978,
"pull-request":62277,
"qr-scanner":62278,
"quote":62279,
"radio-waves":62124,
"record":61979,
"refresh":61980,
"reply":61982,
"reply-all":61981,
"ribbon-a":62280,
"ribbon-b":62281,
"sad":62282,
"sad-outline":62679,
"scissors":62283,
"search":61983,
"settings":62125,
"share":61984,
"shuffle":61985,
"skip-backward":61986,
"skip-forward":61987,
"social-android":61989,
"social-android-outline":61988,
"social-angular":62681,
"social-angular-outline":62680,
"social-apple":61991,
"social-apple-outline":61990,
"social-bitcoin":62127,
"social-bitcoin-outline":62126,
"social-buffer":61993,
"social-buffer-outline":61992,
"social-chrome":62683,
"social-chrome-outline":62682,
"social-codepen":62685,
"social-codepen-outline":62684,
"social-css3":62687,
"social-css3-outline":62686,
"social-designernews":61995,
"social-designernews-outline":61994,
"social-dribbble":61997,
"social-dribbble-outline":61996,
"social-dropbox":61999,
"social-dropbox-outline":61998,
"social-euro":62689,
"social-euro-outline":62688,
"social-facebook":62001,
"social-facebook-outline":62000,
"social-foursquare":62285,
"social-foursquare-outline":62284,
"social-freebsd-devil":62148,
"social-github":62003,
"social-github-outline":62002,
"social-google":62287,
"social-google-outline":62286,
"social-googleplus":62005,
"social-googleplus-outline":62004,
"social-hackernews":62007,
"social-hackernews-outline":62006,
"social-html5":62691,
"social-html5-outline":62690,
"social-instagram":62289,
"social-instagram-outline":62288,
"social-javascript":62693,
"social-javascript-outline":62692,
"social-linkedin":62009,
"social-linkedin-outline":62008,
"social-markdown":62694,
"social-nodejs":62695,
"social-octocat":62696,
"social-pinterest":62129,
"social-pinterest-outline":62128,
"social-python":62697,
"social-reddit":62011,
"social-reddit-outline":62010,
"social-rss":62013,
"social-rss-outline":62012,
"social-sass":62698,
"social-skype":62015,
"social-skype-outline":62014,
"social-snapchat":62700,
"social-snapchat-outline":62699,
"social-tumblr":62017,
"social-tumblr-outline":62016,
"social-tux":62149,
"social-twitch":62702,
"social-twitch-outline":62701,
"social-twitter":62019,
"social-twitter-outline":62018,
"social-usd":62291,
"social-usd-outline":62290,
"social-vimeo":62021,
"social-vimeo-outline":62020,
"social-whatsapp":62704,
"social-whatsapp-outline":62703,
"social-windows":62023,
"social-windows-outline":62022,
"social-wordpress":62025,
"social-wordpress-outline":62024,
"social-yahoo":62027,
"social-yahoo-outline":62026,
"social-yen":62706,
"social-yen-outline":62705,
"social-youtube":62029,
"social-youtube-outline":62028,
"soup-can":62708,
"soup-can-outline":62707,
"speakerphone":62130,
"speedometer":62131,
"spoon":62132,
"star":62030,
"stats-bars":62133,
"steam":62219,
"stop":62031,
"thermometer":62134,
"thumbsdown":62032,
"thumbsup":62033,
"toggle":62293,
"toggle-filled":62292,
"transgender":62709,
"trash-a":62034,
"trash-b":62035,
"trophy":62294,
"tshirt":62711,
"tshirt-outline":62710,
"umbrella":62135,
"university":62295,
"unlocked":62036,
"upload":62037,
"usb":62136,
"videocamera":62038,
"volume-high":62039,
"volume-low":62040,
"volume-medium":62041,
"volume-mute":62042,
"wand":62296,
"waterdrop":62043,
"wifi":62044,
"wineglass":62137,
"woman":62045,
"wrench":62138,
"xbox":62220};


var Ionicons=createIconSet(glyphMap,'Ionicons','Fonts/Ionicons.ttf');

module.exports = Ionicons;
module.exports.glyphMap = glyphMap;
});
__d('createIconSet',["lodash/index.js","react-native/Libraries/react-native/react-native.js","StyleSheetPropType","flattenStyle","ViewStylePropTypes","TextStylePropTypes","TypefaceTextView"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};





var _=require('lodash/index.js');
var React=require('react-native/Libraries/react-native/react-native.js');var 

View=







React.View;var Text=React.Text;var StyleSheet=React.StyleSheet;var TabBarIOS=React.TabBarIOS;var requireNativeComponent=React.requireNativeComponent;var NativeModules=React.NativeModules;var Platform=React.Platform;var processColor=React.processColor;

var NativeIconAPI=NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;
var StyleSheetPropType=require('StyleSheetPropType');
var flattenStyle=require('flattenStyle');
var ViewStylePropTypes=require('ViewStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');

var DEFAULT_ICON_SIZE=12;
var TAB_BAR_ICON_SIZE=30;
var DEFAULT_ICON_COLOR='black';

var TypefaceTextView;

if(Platform.OS === 'android'){
TypefaceTextView = require('TypefaceTextView');}


function createIconSet(glyphMap,fontFamily,fontFile){
var styles=StyleSheet.create({
container:{
overflow:'hidden',
backgroundColor:'transparent',
flexDirection:'row',
justifyContent:'flex-start',
alignItems:'center'}});



var Icon=React.createClass({displayName:'Icon',
propTypes:{
name:React.PropTypes.oneOf(Object.keys(glyphMap)).isRequired,
size:React.PropTypes.number,
color:React.PropTypes.string,
style:StyleSheetPropType(TextStylePropTypes)},


setNativeProps:function(nativeProps){
this._root.setNativeProps(nativeProps);},


render:function(){var _this=this;

var name=this.props.name;
var glyph=glyphMap[name] || '?';
if(typeof glyph === 'number'){
glyph = String.fromCharCode(glyph);}


var containerStyle=_.pick(flattenStyle([styles.container,this.props.style]),Object.keys(ViewStylePropTypes));

var textStyle=_.pick(
flattenStyle([this.props.style]),
Object.keys(TextStylePropTypes));


var size=this.props.size || textStyle.fontSize || DEFAULT_ICON_SIZE;
var color=this.props.color || textStyle.color || DEFAULT_ICON_COLOR;

textStyle.fontSize = size;
textStyle.lineHeight = size;
textStyle.height = size;
textStyle.color = color;

var icon;


if(Platform.OS === 'android'){
if(!textStyle.width){

textStyle.width = size;}

icon = React.createElement(TypefaceTextView,{style:textStyle,fontFile:fontFile},glyph);}else 
{
textStyle.fontFamily = fontFamily;
icon = React.createElement(Text,{style:textStyle},glyph);}


return (
React.createElement(View,_extends({ref:function(component){return _this._root = component;}},this.props,{style:containerStyle}),
icon,
this.props.children));}});





var imageSourceCache={};

var getImageSource=function(name,size,color){
if(!NativeIconAPI){
if(Platform.OS === 'android'){
throw new Error('RNVectorIconsModule not available, did you properly integrate the module?');}

throw new Error('RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a?');}


var glyph=glyphMap[name] || '?';
if(typeof glyph === 'number'){
glyph = String.fromCharCode(glyph);}

size = size || DEFAULT_ICON_SIZE;
color = color || DEFAULT_ICON_COLOR;

if(processColor){
color = processColor(color);}


var cacheKey=glyph + ':' + size + ':' + color;

return new Promise(function(resolve,reject){
var cached=imageSourceCache[cacheKey];
if(typeof cached !== 'undefined'){
if(!cached || cached instanceof Error){reject(cached);}
return resolve({uri:cached});}

NativeIconAPI.getImageForFont(Platform.OS === 'android'?fontFile:fontFamily,glyph,size,color,function(err,image){
if(typeof err === 'string'){
err = new Error(err);}

imageSourceCache[cacheKey] = image || err || false;
if(!err && image){
return resolve({uri:image});}

reject(err);});});};





var TabBarItem=React.createClass({displayName:'TabBarItem',
propTypes:{
iconName:React.PropTypes.oneOf(Object.keys(glyphMap)).isRequired,
selectedIconName:React.PropTypes.oneOf(Object.keys(glyphMap)),
iconSize:React.PropTypes.number},


updateIconSources:function(){var _this2=this;
var size=this.props.iconSize || TAB_BAR_ICON_SIZE;
if(this.props.iconName){
getImageSource(this.props.iconName,size).then(function(icon){return _this2.setState({icon:icon});});}

if(this.props.selectedIconName){
getImageSource(this.props.selectedIconName,size).then(function(selectedIcon){return _this2.setState({selectedIcon:selectedIcon});});}},



componentWillMount:function(){
this.updateIconSources();},


componentWillReceiveProps:function(nextProps){
var keys=Object.keys(TabBarItem.propTypes);
if(!_.isEqual(_.pick(nextProps,keys),_.pick(this.props,keys))){
this.updateIconSources();}},



render:function(){
return React.createElement(TabBarIOS.Item,_extends({},this.props,this.state));}});



Icon.TabBarItem = TabBarItem;
Icon.getImageSource = getImageSource;

return Icon;}
;

module.exports = createIconSet;
});
__d('lodash/index.js',[],function(global, require, module, exports) {  /**
 * @license
 * lodash 3.10.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -d -o ./index.js`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function(){


var undefined;


var VERSION='3.10.1';


var BIND_FLAG=1,
BIND_KEY_FLAG=2,
CURRY_BOUND_FLAG=4,
CURRY_FLAG=8,
CURRY_RIGHT_FLAG=16,
PARTIAL_FLAG=32,
PARTIAL_RIGHT_FLAG=64,
ARY_FLAG=128,
REARG_FLAG=256;


var DEFAULT_TRUNC_LENGTH=30,
DEFAULT_TRUNC_OMISSION='...';


var HOT_COUNT=150,
HOT_SPAN=16;


var LARGE_ARRAY_SIZE=200;


var LAZY_FILTER_FLAG=1,
LAZY_MAP_FLAG=2;


var FUNC_ERROR_TEXT='Expected a function';


var PLACEHOLDER='__lodash_placeholder__';


var argsTag='[object Arguments]',
arrayTag='[object Array]',
boolTag='[object Boolean]',
dateTag='[object Date]',
errorTag='[object Error]',
funcTag='[object Function]',
mapTag='[object Map]',
numberTag='[object Number]',
objectTag='[object Object]',
regexpTag='[object RegExp]',
setTag='[object Set]',
stringTag='[object String]',
weakMapTag='[object WeakMap]';

var arrayBufferTag='[object ArrayBuffer]',
float32Tag='[object Float32Array]',
float64Tag='[object Float64Array]',
int8Tag='[object Int8Array]',
int16Tag='[object Int16Array]',
int32Tag='[object Int32Array]',
uint8Tag='[object Uint8Array]',
uint8ClampedTag='[object Uint8ClampedArray]',
uint16Tag='[object Uint16Array]',
uint32Tag='[object Uint32Array]';


var reEmptyStringLeading=/\b__p \+= '';/g,
reEmptyStringMiddle=/\b(__p \+=) '' \+/g,
reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;


var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#96);/g,
reUnescapedHtml=/[&<>"'`]/g,
reHasEscapedHtml=RegExp(reEscapedHtml.source),
reHasUnescapedHtml=RegExp(reUnescapedHtml.source);


var reEscape=/<%-([\s\S]+?)%>/g,
reEvaluate=/<%([\s\S]+?)%>/g,
reInterpolate=/<%=([\s\S]+?)%>/g;


var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
reIsPlainProp=/^\w*$/,
rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;





var reRegExpChars=/^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
reHasRegExpChars=RegExp(reRegExpChars.source);


var reComboMark=/[\u0300-\u036f\ufe20-\ufe23]/g;


var reEscapeChar=/\\(\\)?/g;


var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;


var reFlags=/\w*$/;


var reHasHexPrefix=/^0[xX]/;


var reIsHostCtor=/^\[object .+?Constructor\]$/;


var reIsUint=/^\d+$/;


var reLatin1=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;


var reNoMatch=/($^)/;


var reUnescapedString=/['\n\r\u2028\u2029\\]/g;


var reWords=(function(){
var upper='[A-Z\\xc0-\\xd6\\xd8-\\xde]',
lower='[a-z\\xdf-\\xf6\\xf8-\\xff]+';

return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+','g');})();



var contextProps=[
'Array','ArrayBuffer','Date','Error','Float32Array','Float64Array',
'Function','Int8Array','Int16Array','Int32Array','Math','Number',
'Object','RegExp','Set','String','_','clearTimeout','isFinite',
'parseFloat','parseInt','setTimeout','TypeError','Uint8Array',
'Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap'];



var templateCounter=-1;


var typedArrayTags={};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = 
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = 
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = 
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = 
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = 
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = 
typedArrayTags[dateTag] = typedArrayTags[errorTag] = 
typedArrayTags[funcTag] = typedArrayTags[mapTag] = 
typedArrayTags[numberTag] = typedArrayTags[objectTag] = 
typedArrayTags[regexpTag] = typedArrayTags[setTag] = 
typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;


var cloneableTags={};
cloneableTags[argsTag] = cloneableTags[arrayTag] = 
cloneableTags[arrayBufferTag] = cloneableTags[boolTag] = 
cloneableTags[dateTag] = cloneableTags[float32Tag] = 
cloneableTags[float64Tag] = cloneableTags[int8Tag] = 
cloneableTags[int16Tag] = cloneableTags[int32Tag] = 
cloneableTags[numberTag] = cloneableTags[objectTag] = 
cloneableTags[regexpTag] = cloneableTags[stringTag] = 
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = 
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = 
cloneableTags[mapTag] = cloneableTags[setTag] = 
cloneableTags[weakMapTag] = false;


var deburredLetters={
'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A',
'\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a',
'\xc7':'C','\xe7':'c',
'\xd0':'D','\xf0':'d',
'\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E',
'\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e',
'\xcC':'I','\xcd':'I','\xce':'I','\xcf':'I',
'\xeC':'i','\xed':'i','\xee':'i','\xef':'i',
'\xd1':'N','\xf1':'n',
'\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O',
'\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o',
'\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U',
'\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u',
'\xdd':'Y','\xfd':'y','\xff':'y',
'\xc6':'Ae','\xe6':'ae',
'\xde':'Th','\xfe':'th',
'\xdf':'ss'};



var htmlEscapes={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
"'":'&#39;',
'`':'&#96;'};



var htmlUnescapes={
'&amp;':'&',
'&lt;':'<',
'&gt;':'>',
'&quot;':'"',
'&#39;':"'",
'&#96;':'`'};



var objectTypes={
'function':true,
'object':true};



var regexpEscapes={
'0':'x30','1':'x31','2':'x32','3':'x33','4':'x34',
'5':'x35','6':'x36','7':'x37','8':'x38','9':'x39',
'A':'x41','B':'x42','C':'x43','D':'x44','E':'x45','F':'x46',
'a':'x61','b':'x62','c':'x63','d':'x64','e':'x65','f':'x66',
'n':'x6e','r':'x72','t':'x74','u':'x75','v':'x76','x':'x78'};



var stringEscapes={
'\\':'\\',
"'":"'",
'\n':'n',
'\r':'r',
'\u2028':'u2028',
'\u2029':'u2029'};



var freeExports=objectTypes[typeof exports] && exports && !exports.nodeType && exports;


var freeModule=objectTypes[typeof module] && module && !module.nodeType && module;


var freeGlobal=freeExports && freeModule && typeof global == 'object' && global && global.Object && global;


var freeSelf=objectTypes[typeof self] && self && self.Object && self;


var freeWindow=objectTypes[typeof window] && window && window.Object && window;


var moduleExports=freeModule && freeModule.exports === freeExports && freeExports;







var root=freeGlobal || freeWindow !== (this && this.window) && freeWindow || freeSelf || this;












function baseCompareAscending(value,other){
if(value !== other){
var valIsNull=value === null,
valIsUndef=value === undefined,
valIsReflexive=value === value;

var othIsNull=other === null,
othIsUndef=other === undefined,
othIsReflexive=other === other;

if(value > other && !othIsNull || !valIsReflexive || 
valIsNull && !othIsUndef && othIsReflexive || 
valIsUndef && othIsReflexive){
return 1;}

if(value < other && !valIsNull || !othIsReflexive || 
othIsNull && !valIsUndef && valIsReflexive || 
othIsUndef && valIsReflexive){
return -1;}}


return 0;}












function baseFindIndex(array,predicate,fromRight){
var length=array.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
if(predicate(array[index],index,array)){
return index;}}


return -1;}











function baseIndexOf(array,value,fromIndex){
if(value !== value){
return indexOfNaN(array,fromIndex);}

var index=fromIndex - 1,
length=array.length;

while(++index < length) {
if(array[index] === value){
return index;}}


return -1;}










function baseIsFunction(value){


return typeof value == 'function' || false;}










function baseToString(value){
return value == null?'':value + '';}











function charsLeftIndex(string,chars){
var index=-1,
length=string.length;

while(++index < length && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function charsRightIndex(string,chars){
var index=string.length;

while(index-- && chars.indexOf(string.charAt(index)) > -1) {}
return index;}











function compareAscending(object,other){
return baseCompareAscending(object.criteria,other.criteria) || object.index - other.index;}
















function compareMultiple(object,other,orders){
var index=-1,
objCriteria=object.criteria,
othCriteria=other.criteria,
length=objCriteria.length,
ordersLength=orders.length;

while(++index < length) {
var result=baseCompareAscending(objCriteria[index],othCriteria[index]);
if(result){
if(index >= ordersLength){
return result;}

var order=orders[index];
return result * (order === 'asc' || order === true?1:-1);}}









return object.index - other.index;}









function deburrLetter(letter){
return deburredLetters[letter];}









function escapeHtmlChar(chr){
return htmlEscapes[chr];}











function escapeRegExpChar(chr,leadingChar,whitespaceChar){
if(leadingChar){
chr = regexpEscapes[chr];}else 
if(whitespaceChar){
chr = stringEscapes[chr];}

return '\\' + chr;}









function escapeStringChar(chr){
return '\\' + stringEscapes[chr];}











function indexOfNaN(array,fromIndex,fromRight){
var length=array.length,
index=fromIndex + (fromRight?0:-1);

while(fromRight?index--:++index < length) {
var other=array[index];
if(other !== other){
return index;}}


return -1;}









function isObjectLike(value){
return !!value && typeof value == 'object';}










function isSpace(charCode){
return charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160 || charCode == 5760 || charCode == 6158 || 
charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279);}











function replaceHolders(array,placeholder){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
if(array[index] === placeholder){
array[index] = PLACEHOLDER;
result[++resIndex] = index;}}


return result;}











function sortedUniq(array,iteratee){
var seen,
index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(!index || seen !== computed){
seen = computed;
result[++resIndex] = value;}}


return result;}










function trimmedLeftIndex(string){
var index=-1,
length=string.length;

while(++index < length && isSpace(string.charCodeAt(index))) {}
return index;}










function trimmedRightIndex(string){
var index=string.length;

while(index-- && isSpace(string.charCodeAt(index))) {}
return index;}









function unescapeHtmlChar(chr){
return htmlUnescapes[chr];}







































function runInContext(context){




context = context?_.defaults(root.Object(),context,_.pick(root,contextProps)):root;


var Array=context.Array,
Date=context.Date,
Error=context.Error,
Function=context.Function,
Math=context.Math,
Number=context.Number,
Object=context.Object,
RegExp=context.RegExp,
String=context.String,
TypeError=context.TypeError;


var arrayProto=Array.prototype,
objectProto=Object.prototype,
stringProto=String.prototype;


var fnToString=Function.prototype.toString;


var hasOwnProperty=objectProto.hasOwnProperty;


var idCounter=0;





var objToString=objectProto.toString;


var oldDash=root._;


var reIsNative=RegExp('^' + 
fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,'\\$&').
replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?') + '$');



var ArrayBuffer=context.ArrayBuffer,
clearTimeout=context.clearTimeout,
parseFloat=context.parseFloat,
pow=Math.pow,
propertyIsEnumerable=objectProto.propertyIsEnumerable,
Set=getNative(context,'Set'),
setTimeout=context.setTimeout,
splice=arrayProto.splice,
Uint8Array=context.Uint8Array,
WeakMap=getNative(context,'WeakMap');


var nativeCeil=Math.ceil,
nativeCreate=getNative(Object,'create'),
nativeFloor=Math.floor,
nativeIsArray=getNative(Array,'isArray'),
nativeIsFinite=context.isFinite,
nativeKeys=getNative(Object,'keys'),
nativeMax=Math.max,
nativeMin=Math.min,
nativeNow=getNative(Date,'now'),
nativeParseInt=context.parseInt,
nativeRandom=Math.random;


var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,
POSITIVE_INFINITY=Number.POSITIVE_INFINITY;


var MAX_ARRAY_LENGTH=4294967295,
MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH - 1,
HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH >>> 1;





var MAX_SAFE_INTEGER=9007199254740991;


var metaMap=WeakMap && new WeakMap();


var realNames={};



































































































function lodash(value){
if(isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)){
if(value instanceof LodashWrapper){
return value;}

if(hasOwnProperty.call(value,'__chain__') && hasOwnProperty.call(value,'__wrapped__')){
return wrapperClone(value);}}


return new LodashWrapper(value);}







function baseLodash(){}











function LodashWrapper(value,chainAll,actions){
this.__wrapped__ = value;
this.__actions__ = actions || [];
this.__chain__ = !!chainAll;}









var support=lodash.support = {};










lodash.templateSettings = {







'escape':reEscape,







'evaluate':reEvaluate,







'interpolate':reInterpolate,







'variable':'',







'imports':{







'_':lodash}};











function LazyWrapper(value){
this.__wrapped__ = value;
this.__actions__ = [];
this.__dir__ = 1;
this.__filtered__ = false;
this.__iteratees__ = [];
this.__takeCount__ = POSITIVE_INFINITY;
this.__views__ = [];}










function lazyClone(){
var result=new LazyWrapper(this.__wrapped__);
result.__actions__ = arrayCopy(this.__actions__);
result.__dir__ = this.__dir__;
result.__filtered__ = this.__filtered__;
result.__iteratees__ = arrayCopy(this.__iteratees__);
result.__takeCount__ = this.__takeCount__;
result.__views__ = arrayCopy(this.__views__);
return result;}










function lazyReverse(){
if(this.__filtered__){
var result=new LazyWrapper(this);
result.__dir__ = -1;
result.__filtered__ = true;}else 
{
result = this.clone();
result.__dir__ *= -1;}

return result;}










function lazyValue(){
var array=this.__wrapped__.value(),
dir=this.__dir__,
isArr=isArray(array),
isRight=dir < 0,
arrLength=isArr?array.length:0,
view=getView(0,arrLength,this.__views__),
start=view.start,
end=view.end,
length=end - start,
index=isRight?end:start - 1,
iteratees=this.__iteratees__,
iterLength=iteratees.length,
resIndex=0,
takeCount=nativeMin(length,this.__takeCount__);

if(!isArr || arrLength < LARGE_ARRAY_SIZE || arrLength == length && takeCount == length){
return baseWrapperValue(isRight && isArr?array.reverse():array,this.__actions__);}

var result=[];

outer: 
while(length-- && resIndex < takeCount) {
index += dir;

var iterIndex=-1,
value=array[index];

while(++iterIndex < iterLength) {
var data=iteratees[iterIndex],
iteratee=data.iteratee,
type=data.type,
computed=iteratee(value);

if(type == LAZY_MAP_FLAG){
value = computed;}else 
if(!computed){
if(type == LAZY_FILTER_FLAG){
continue outer;}else 
{
break outer;}}}



result[resIndex++] = value;}

return result;}












function MapCache(){
this.__data__ = {};}











function mapDelete(key){
return this.has(key) && delete this.__data__[key];}











function mapGet(key){
return key == '__proto__'?undefined:this.__data__[key];}











function mapHas(key){
return key != '__proto__' && hasOwnProperty.call(this.__data__,key);}












function mapSet(key,value){
if(key != '__proto__'){
this.__data__[key] = value;}

return this;}











function SetCache(values){
var length=values?values.length:0;

this.data = {'hash':nativeCreate(null),'set':new Set()};
while(length--) {
this.push(values[length]);}}












function cacheIndexOf(cache,value){
var data=cache.data,
result=typeof value == 'string' || isObject(value)?data.set.has(value):data.hash[value];

return result?0:-1;}










function cachePush(value){
var data=this.data;
if(typeof value == 'string' || isObject(value)){
data.set.add(value);}else 
{
data.hash[value] = true;}}













function arrayConcat(array,other){
var index=-1,
length=array.length,
othIndex=-1,
othLength=other.length,
result=Array(length + othLength);

while(++index < length) {
result[index] = array[index];}

while(++othIndex < othLength) {
result[index++] = other[othIndex];}

return result;}










function arrayCopy(source,array){
var index=-1,
length=source.length;

array || (array = Array(length));
while(++index < length) {
array[index] = source[index];}

return array;}











function arrayEach(array,iteratee){
var index=-1,
length=array.length;

while(++index < length) {
if(iteratee(array[index],index,array) === false){
break;}}


return array;}











function arrayEachRight(array,iteratee){
var length=array.length;

while(length--) {
if(iteratee(array[length],length,array) === false){
break;}}


return array;}












function arrayEvery(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(!predicate(array[index],index,array)){
return false;}}


return true;}













function arrayExtremum(array,iteratee,comparator,exValue){
var index=-1,
length=array.length,
computed=exValue,
result=computed;

while(++index < length) {
var value=array[index],
current=+iteratee(value);

if(comparator(current,computed)){
computed = current;
result = value;}}


return result;}











function arrayFilter(array,predicate){
var index=-1,
length=array.length,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result[++resIndex] = value;}}


return result;}











function arrayMap(array,iteratee){
var index=-1,
length=array.length,
result=Array(length);

while(++index < length) {
result[index] = iteratee(array[index],index,array);}

return result;}










function arrayPush(array,values){
var index=-1,
length=values.length,
offset=array.length;

while(++index < length) {
array[offset + index] = values[index];}

return array;}














function arrayReduce(array,iteratee,accumulator,initFromArray){
var index=-1,
length=array.length;

if(initFromArray && length){
accumulator = array[++index];}

while(++index < length) {
accumulator = iteratee(accumulator,array[index],index,array);}

return accumulator;}














function arrayReduceRight(array,iteratee,accumulator,initFromArray){
var length=array.length;
if(initFromArray && length){
accumulator = array[--length];}

while(length--) {
accumulator = iteratee(accumulator,array[length],length,array);}

return accumulator;}












function arraySome(array,predicate){
var index=-1,
length=array.length;

while(++index < length) {
if(predicate(array[index],index,array)){
return true;}}


return false;}











function arraySum(array,iteratee){
var length=array.length,
result=0;

while(length--) {
result += +iteratee(array[length]) || 0;}

return result;}










function assignDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:objectValue;}















function assignOwnDefaults(objectValue,sourceValue,key,object){
return objectValue === undefined || !hasOwnProperty.call(object,key)?
sourceValue:
objectValue;}













function assignWith(object,source,customizer){
var index=-1,
props=keys(source),
length=props.length;

while(++index < length) {
var key=props[index],
value=object[key],
result=customizer(value,source[key],key,object,source);

if((result === result?result !== value:value === value) || 
value === undefined && !(key in object)){
object[key] = result;}}


return object;}











function baseAssign(object,source){
return source == null?
object:
baseCopy(source,keys(source),object);}











function baseAt(collection,props){
var index=-1,
isNil=collection == null,
isArr=!isNil && isArrayLike(collection),
length=isArr?collection.length:0,
propsLength=props.length,
result=Array(propsLength);

while(++index < propsLength) {
var key=props[index];
if(isArr){
result[index] = isIndex(key,length)?collection[key]:undefined;}else 
{
result[index] = isNil?undefined:collection[key];}}


return result;}











function baseCopy(source,props,object){
object || (object = {});

var index=-1,
length=props.length;

while(++index < length) {
var key=props[index];
object[key] = source[key];}

return object;}












function baseCallback(func,thisArg,argCount){
var type=typeof func;
if(type == 'function'){
return thisArg === undefined?
func:
bindCallback(func,thisArg,argCount);}

if(func == null){
return identity;}

if(type == 'object'){
return baseMatches(func);}

return thisArg === undefined?
property(func):
baseMatchesProperty(func,thisArg);}
















function baseClone(value,isDeep,customizer,key,object,stackA,stackB){
var result;
if(customizer){
result = object?customizer(value,key,object):customizer(value);}

if(result !== undefined){
return result;}

if(!isObject(value)){
return value;}

var isArr=isArray(value);
if(isArr){
result = initCloneArray(value);
if(!isDeep){
return arrayCopy(value,result);}}else 

{
var tag=objToString.call(value),
isFunc=tag == funcTag;

if(tag == objectTag || tag == argsTag || isFunc && !object){
result = initCloneObject(isFunc?{}:value);
if(!isDeep){
return baseAssign(result,value);}}else 

{
return cloneableTags[tag]?
initCloneByTag(value,tag,isDeep):
object?value:{};}}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == value){
return stackB[length];}}



stackA.push(value);
stackB.push(result);


(isArr?arrayEach:baseForOwn)(value,function(subValue,key){
result[key] = baseClone(subValue,isDeep,customizer,key,value,stackA,stackB);});

return result;}










var baseCreate=(function(){
function object(){}
return function(prototype){
if(isObject(prototype)){
object.prototype = prototype;
var result=new object();
object.prototype = undefined;}

return result || {};};})();













function baseDelay(func,wait,args){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return setTimeout(function(){func.apply(undefined,args);},wait);}











function baseDifference(array,values){
var length=array?array.length:0,
result=[];

if(!length){
return result;}

var index=-1,
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
cache=isCommon && values.length >= LARGE_ARRAY_SIZE?createCache(values):null,
valuesLength=values.length;

if(cache){
indexOf = cacheIndexOf;
isCommon = false;
values = cache;}

outer: 
while(++index < length) {
var value=array[index];

if(isCommon && value === value){
var valuesIndex=valuesLength;
while(valuesIndex--) {
if(values[valuesIndex] === value){
continue outer;}}


result.push(value);}else 

if(indexOf(values,value,0) < 0){
result.push(value);}}


return result;}











var baseEach=createBaseEach(baseForOwn);










var baseEachRight=createBaseEach(baseForOwnRight,true);











function baseEvery(collection,predicate){
var result=true;
baseEach(collection,function(value,index,collection){
result = !!predicate(value,index,collection);
return result;});

return result;}














function baseExtremum(collection,iteratee,comparator,exValue){
var computed=exValue,
result=computed;

baseEach(collection,function(value,index,collection){
var current=+iteratee(value,index,collection);
if(comparator(current,computed) || current === exValue && current === result){
computed = current;
result = value;}});


return result;}












function baseFill(array,value,start,end){
var length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end >>> 0;
start >>>= 0;

while(start < length) {
array[start++] = value;}

return array;}











function baseFilter(collection,predicate){
var result=[];
baseEach(collection,function(value,index,collection){
if(predicate(value,index,collection)){
result.push(value);}});


return result;}















function baseFind(collection,predicate,eachFunc,retKey){
var result;
eachFunc(collection,function(value,key,collection){
if(predicate(value,key,collection)){
result = retKey?key:value;
return false;}});


return result;}













function baseFlatten(array,isDeep,isStrict,result){
result || (result = []);

var index=-1,
length=array.length;

while(++index < length) {
var value=array[index];
if(isObjectLike(value) && isArrayLike(value) && (
isStrict || isArray(value) || isArguments(value))){
if(isDeep){

baseFlatten(value,isDeep,isStrict,result);}else 
{
arrayPush(result,value);}}else 

if(!isStrict){
result[result.length] = value;}}


return result;}














var baseFor=createBaseFor();











var baseForRight=createBaseFor(true);










function baseForIn(object,iteratee){
return baseFor(object,iteratee,keysIn);}











function baseForOwn(object,iteratee){
return baseFor(object,iteratee,keys);}











function baseForOwnRight(object,iteratee){
return baseForRight(object,iteratee,keys);}











function baseFunctions(object,props){
var index=-1,
length=props.length,
resIndex=-1,
result=[];

while(++index < length) {
var key=props[index];
if(isFunction(object[key])){
result[++resIndex] = key;}}


return result;}












function baseGet(object,path,pathKey){
if(object == null){
return;}

if(pathKey !== undefined && pathKey in toObject(object)){
path = [pathKey];}

var index=0,
length=path.length;

while(object != null && index < length) {
object = object[path[index++]];}

return index && index == length?object:undefined;}















function baseIsEqual(value,other,customizer,isLoose,stackA,stackB){
if(value === other){
return true;}

if(value == null || other == null || !isObject(value) && !isObjectLike(other)){
return value !== value && other !== other;}

return baseIsEqualDeep(value,other,baseIsEqual,customizer,isLoose,stackA,stackB);}

















function baseIsEqualDeep(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objIsArr=isArray(object),
othIsArr=isArray(other),
objTag=arrayTag,
othTag=arrayTag;

if(!objIsArr){
objTag = objToString.call(object);
if(objTag == argsTag){
objTag = objectTag;}else 
if(objTag != objectTag){
objIsArr = isTypedArray(object);}}


if(!othIsArr){
othTag = objToString.call(other);
if(othTag == argsTag){
othTag = objectTag;}else 
if(othTag != objectTag){
othIsArr = isTypedArray(other);}}


var objIsObj=objTag == objectTag,
othIsObj=othTag == objectTag,
isSameTag=objTag == othTag;

if(isSameTag && !(objIsArr || objIsObj)){
return equalByTag(object,other,objTag);}

if(!isLoose){
var objIsWrapped=objIsObj && hasOwnProperty.call(object,'__wrapped__'),
othIsWrapped=othIsObj && hasOwnProperty.call(other,'__wrapped__');

if(objIsWrapped || othIsWrapped){
return equalFunc(objIsWrapped?object.value():object,othIsWrapped?other.value():other,customizer,isLoose,stackA,stackB);}}


if(!isSameTag){
return false;}



stackA || (stackA = []);
stackB || (stackB = []);

var length=stackA.length;
while(length--) {
if(stackA[length] == object){
return stackB[length] == other;}}



stackA.push(object);
stackB.push(other);

var result=(objIsArr?equalArrays:equalObjects)(object,other,equalFunc,customizer,isLoose,stackA,stackB);

stackA.pop();
stackB.pop();

return result;}












function baseIsMatch(object,matchData,customizer){
var index=matchData.length,
length=index,
noCustomizer=!customizer;

if(object == null){
return !length;}

object = toObject(object);
while(index--) {
var data=matchData[index];
if(noCustomizer && data[2]?
data[1] !== object[data[0]]:
!(data[0] in object))
{
return false;}}


while(++index < length) {
data = matchData[index];
var key=data[0],
objValue=object[key],
srcValue=data[1];

if(noCustomizer && data[2]){
if(objValue === undefined && !(key in object)){
return false;}}else 

{
var result=customizer?customizer(objValue,srcValue,key):undefined;
if(!(result === undefined?baseIsEqual(srcValue,objValue,customizer,true):result)){
return false;}}}



return true;}











function baseMap(collection,iteratee){
var index=-1,
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value,key,collection){
result[++index] = iteratee(value,key,collection);});

return result;}









function baseMatches(source){
var matchData=getMatchData(source);
if(matchData.length == 1 && matchData[0][2]){
var key=matchData[0][0],
value=matchData[0][1];

return function(object){
if(object == null){
return false;}

return object[key] === value && (value !== undefined || key in toObject(object));};}


return function(object){
return baseIsMatch(object,matchData);};}











function baseMatchesProperty(path,srcValue){
var isArr=isArray(path),
isCommon=isKey(path) && isStrictComparable(srcValue),
pathKey=path + '';

path = toPath(path);
return function(object){
if(object == null){
return false;}

var key=pathKey;
object = toObject(object);
if((isArr || !isCommon) && !(key in object)){
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

key = last(path);
object = toObject(object);}

return object[key] === srcValue?
srcValue !== undefined || key in object:
baseIsEqual(srcValue,object[key],undefined,true);};}















function baseMerge(object,source,customizer,stackA,stackB){
if(!isObject(object)){
return object;}

var isSrcArr=isArrayLike(source) && (isArray(source) || isTypedArray(source)),
props=isSrcArr?undefined:keys(source);

arrayEach(props || source,function(srcValue,key){
if(props){
key = srcValue;
srcValue = source[key];}

if(isObjectLike(srcValue)){
stackA || (stackA = []);
stackB || (stackB = []);
baseMergeDeep(object,source,key,baseMerge,customizer,stackA,stackB);}else 

{
var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;}

if((result !== undefined || isSrcArr && !(key in object)) && (
isCommon || (result === result?result !== value:value === value))){
object[key] = result;}}});



return object;}

















function baseMergeDeep(object,source,key,mergeFunc,customizer,stackA,stackB){
var length=stackA.length,
srcValue=source[key];

while(length--) {
if(stackA[length] == srcValue){
object[key] = stackB[length];
return;}}


var value=object[key],
result=customizer?customizer(value,srcValue,key,object,source):undefined,
isCommon=result === undefined;

if(isCommon){
result = srcValue;
if(isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))){
result = isArray(value)?
value:
isArrayLike(value)?arrayCopy(value):[];}else 

if(isPlainObject(srcValue) || isArguments(srcValue)){
result = isArguments(value)?
toPlainObject(value):
isPlainObject(value)?value:{};}else 

{
isCommon = false;}}




stackA.push(srcValue);
stackB.push(result);

if(isCommon){

object[key] = mergeFunc(result,srcValue,customizer,stackA,stackB);}else 
if(result === result?result !== value:value === value){
object[key] = result;}}










function baseProperty(key){
return function(object){
return object == null?undefined:object[key];};}










function basePropertyDeep(path){
var pathKey=path + '';
path = toPath(path);
return function(object){
return baseGet(object,path,pathKey);};}












function basePullAt(array,indexes){
var length=array?indexes.length:0;
while(length--) {
var index=indexes[length];
if(index != previous && isIndex(index)){
var previous=index;
splice.call(array,index,1);}}


return array;}











function baseRandom(min,max){
return min + nativeFloor(nativeRandom() * (max - min + 1));}
















function baseReduce(collection,iteratee,accumulator,initFromCollection,eachFunc){
eachFunc(collection,function(value,index,collection){
accumulator = initFromCollection?(
initFromCollection = false,value):
iteratee(accumulator,value,index,collection);});

return accumulator;}










var baseSetData=!metaMap?identity:function(func,data){
metaMap.set(func,data);
return func;};











function baseSlice(array,start,end){
var index=-1,
length=array.length;

start = start == null?0:+start || 0;
if(start < 0){
start = -start > length?0:length + start;}

end = end === undefined || end > length?length:+end || 0;
if(end < 0){
end += length;}

length = start > end?0:end - start >>> 0;
start >>>= 0;

var result=Array(length);
while(++index < length) {
result[index] = array[index + start];}

return result;}












function baseSome(collection,predicate){
var result;

baseEach(collection,function(value,index,collection){
result = predicate(value,index,collection);
return !result;});

return !!result;}












function baseSortBy(array,comparer){
var length=array.length;

array.sort(comparer);
while(length--) {
array[length] = array[length].value;}

return array;}











function baseSortByOrder(collection,iteratees,orders){
var callback=getCallback(),
index=-1;

iteratees = arrayMap(iteratees,function(iteratee){return callback(iteratee);});

var result=baseMap(collection,function(value){
var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});
return {'criteria':criteria,'index':++index,'value':value};});


return baseSortBy(result,function(object,other){
return compareMultiple(object,other,orders);});}












function baseSum(collection,iteratee){
var result=0;
baseEach(collection,function(value,index,collection){
result += +iteratee(value,index,collection) || 0;});

return result;}











function baseUniq(array,iteratee){
var index=-1,
indexOf=getIndexOf(),
length=array.length,
isCommon=indexOf == baseIndexOf,
isLarge=isCommon && length >= LARGE_ARRAY_SIZE,
seen=isLarge?createCache():null,
result=[];

if(seen){
indexOf = cacheIndexOf;
isCommon = false;}else 
{
isLarge = false;
seen = iteratee?[]:result;}

outer: 
while(++index < length) {
var value=array[index],
computed=iteratee?iteratee(value,index,array):value;

if(isCommon && value === value){
var seenIndex=seen.length;
while(seenIndex--) {
if(seen[seenIndex] === computed){
continue outer;}}


if(iteratee){
seen.push(computed);}

result.push(value);}else 

if(indexOf(seen,computed,0) < 0){
if(iteratee || isLarge){
seen.push(computed);}

result.push(value);}}


return result;}












function baseValues(object,props){
var index=-1,
length=props.length,
result=Array(length);

while(++index < length) {
result[index] = object[props[index]];}

return result;}













function baseWhile(array,predicate,isDrop,fromRight){
var length=array.length,
index=fromRight?length:-1;

while((fromRight?index--:++index < length) && predicate(array[index],index,array)) {}
return isDrop?
baseSlice(array,fromRight?0:index,fromRight?index + 1:length):
baseSlice(array,fromRight?index + 1:0,fromRight?length:index);}












function baseWrapperValue(value,actions){
var result=value;
if(result instanceof LazyWrapper){
result = result.value();}

var index=-1,
length=actions.length;

while(++index < length) {
var action=actions[index];
result = action.func.apply(action.thisArg,arrayPush([result],action.args));}

return result;}













function binaryIndex(array,value,retHighest){
var low=0,
high=array?array.length:low;

if(typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH){
while(low < high) {
var mid=low + high >>> 1,
computed=array[mid];

if((retHighest?computed <= value:computed < value) && computed !== null){
low = mid + 1;}else 
{
high = mid;}}


return high;}

return binaryIndexBy(array,value,identity,retHighest);}















function binaryIndexBy(array,value,iteratee,retHighest){
value = iteratee(value);

var low=0,
high=array?array.length:0,
valIsNaN=value !== value,
valIsNull=value === null,
valIsUndef=value === undefined;

while(low < high) {
var mid=nativeFloor((low + high) / 2),
computed=iteratee(array[mid]),
isDef=computed !== undefined,
isReflexive=computed === computed;

if(valIsNaN){
var setLow=isReflexive || retHighest;}else 
if(valIsNull){
setLow = isReflexive && isDef && (retHighest || computed != null);}else 
if(valIsUndef){
setLow = isReflexive && (retHighest || isDef);}else 
if(computed == null){
setLow = false;}else 
{
setLow = retHighest?computed <= value:computed < value;}

if(setLow){
low = mid + 1;}else 
{
high = mid;}}


return nativeMin(high,MAX_ARRAY_INDEX);}












function bindCallback(func,thisArg,argCount){
if(typeof func != 'function'){
return identity;}

if(thisArg === undefined){
return func;}

switch(argCount){
case 1:return function(value){
return func.call(thisArg,value);};

case 3:return function(value,index,collection){
return func.call(thisArg,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(thisArg,accumulator,value,index,collection);};

case 5:return function(value,other,key,object,source){
return func.call(thisArg,value,other,key,object,source);};}


return function(){
return func.apply(thisArg,arguments);};}










function bufferClone(buffer){
var result=new ArrayBuffer(buffer.byteLength),
view=new Uint8Array(result);

view.set(new Uint8Array(buffer));
return result;}












function composeArgs(args,partials,holders){
var holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
leftIndex=-1,
leftLength=partials.length,
result=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
result[leftIndex] = partials[leftIndex];}

while(++argsIndex < holdersLength) {
result[holders[argsIndex]] = args[argsIndex];}

while(argsLength--) {
result[leftIndex++] = args[argsIndex++];}

return result;}












function composeArgsRight(args,partials,holders){
var holdersIndex=-1,
holdersLength=holders.length,
argsIndex=-1,
argsLength=nativeMax(args.length - holdersLength,0),
rightIndex=-1,
rightLength=partials.length,
result=Array(argsLength + rightLength);

while(++argsIndex < argsLength) {
result[argsIndex] = args[argsIndex];}

var offset=argsIndex;
while(++rightIndex < rightLength) {
result[offset + rightIndex] = partials[rightIndex];}

while(++holdersIndex < holdersLength) {
result[offset + holders[holdersIndex]] = args[argsIndex++];}

return result;}










function createAggregator(setter,initializer){
return function(collection,iteratee,thisArg){
var result=initializer?initializer():{};
iteratee = getCallback(iteratee,thisArg,3);

if(isArray(collection)){
var index=-1,
length=collection.length;

while(++index < length) {
var value=collection[index];
setter(result,value,iteratee(value,index,collection),collection);}}else 

{
baseEach(collection,function(value,key,collection){
setter(result,value,iteratee(value,key,collection),collection);});}


return result;};}










function createAssigner(assigner){
return restParam(function(object,sources){
var index=-1,
length=object == null?0:sources.length,
customizer=length > 2?sources[length - 2]:undefined,
guard=length > 2?sources[2]:undefined,
thisArg=length > 1?sources[length - 1]:undefined;

if(typeof customizer == 'function'){
customizer = bindCallback(customizer,thisArg,5);
length -= 2;}else 
{
customizer = typeof thisArg == 'function'?thisArg:undefined;
length -= customizer?1:0;}

if(guard && isIterateeCall(sources[0],sources[1],guard)){
customizer = length < 3?undefined:customizer;
length = 1;}

while(++index < length) {
var source=sources[index];
if(source){
assigner(object,source,customizer);}}


return object;});}











function createBaseEach(eachFunc,fromRight){
return function(collection,iteratee){
var length=collection?getLength(collection):0;
if(!isLength(length)){
return eachFunc(collection,iteratee);}

var index=fromRight?length:-1,
iterable=toObject(collection);

while(fromRight?index--:++index < length) {
if(iteratee(iterable[index],index,iterable) === false){
break;}}


return collection;};}










function createBaseFor(fromRight){
return function(object,iteratee,keysFunc){
var iterable=toObject(object),
props=keysFunc(object),
length=props.length,
index=fromRight?length:-1;

while(fromRight?index--:++index < length) {
var key=props[index];
if(iteratee(iterable[key],key,iterable) === false){
break;}}


return object;};}












function createBindWrapper(func,thisArg){
var Ctor=createCtorWrapper(func);

function wrapper(){
var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(thisArg,arguments);}

return wrapper;}









function createCache(values){
return nativeCreate && Set?new SetCache(values):null;}










function createCompounder(callback){
return function(string){
var index=-1,
array=words(deburr(string)),
length=array.length,
result='';

while(++index < length) {
result = callback(result,array[index],index);}

return result;};}











function createCtorWrapper(Ctor){
return function(){



var args=arguments;
switch(args.length){
case 0:return new Ctor();
case 1:return new Ctor(args[0]);
case 2:return new Ctor(args[0],args[1]);
case 3:return new Ctor(args[0],args[1],args[2]);
case 4:return new Ctor(args[0],args[1],args[2],args[3]);
case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);
case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);
case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}

var thisBinding=baseCreate(Ctor.prototype),
result=Ctor.apply(thisBinding,args);



return isObject(result)?result:thisBinding;};}










function createCurry(flag){
function curryFunc(func,arity,guard){
if(guard && isIterateeCall(func,arity,guard)){
arity = undefined;}

var result=createWrapper(func,flag,undefined,undefined,undefined,undefined,undefined,arity);
result.placeholder = curryFunc.placeholder;
return result;}

return curryFunc;}










function createDefaults(assigner,customizer){
return restParam(function(args){
var object=args[0];
if(object == null){
return object;}

args.push(customizer);
return assigner.apply(undefined,args);});}











function createExtremum(comparator,exValue){
return function(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
if(iteratee.length == 1){
collection = isArray(collection)?collection:toIterable(collection);
var result=arrayExtremum(collection,iteratee,comparator,exValue);
if(!(collection.length && result === exValue)){
return result;}}


return baseExtremum(collection,iteratee,comparator,exValue);};}











function createFind(eachFunc,fromRight){
return function(collection,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
if(isArray(collection)){
var index=baseFindIndex(collection,predicate,fromRight);
return index > -1?collection[index]:undefined;}

return baseFind(collection,predicate,eachFunc);};}










function createFindIndex(fromRight){
return function(array,predicate,thisArg){
if(!(array && array.length)){
return -1;}

predicate = getCallback(predicate,thisArg,3);
return baseFindIndex(array,predicate,fromRight);};}










function createFindKey(objectFunc){
return function(object,predicate,thisArg){
predicate = getCallback(predicate,thisArg,3);
return baseFind(object,predicate,objectFunc,true);};}










function createFlow(fromRight){
return function(){
var wrapper,
length=arguments.length,
index=fromRight?length:-1,
leftIndex=0,
funcs=Array(length);

while(fromRight?index--:++index < length) {
var func=funcs[leftIndex++] = arguments[index];
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper'){
wrapper = new LodashWrapper([],true);}}


index = wrapper?-1:length;
while(++index < length) {
func = funcs[index];

var funcName=getFuncName(func),
data=funcName == 'wrapper'?getData(func):undefined;

if(data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1){
wrapper = wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else 
{
wrapper = func.length == 1 && isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}


return function(){
var args=arguments,
value=args[0];

if(wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE){
return wrapper.plant(value).value();}

var index=0,
result=length?funcs[index].apply(this,args):value;

while(++index < length) {
result = funcs[index].call(this,result);}

return result;};};}












function createForEach(arrayFunc,eachFunc){
return function(collection,iteratee,thisArg){
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee):
eachFunc(collection,bindCallback(iteratee,thisArg,3));};}










function createForIn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee,keysIn);};}










function createForOwn(objectFunc){
return function(object,iteratee,thisArg){
if(typeof iteratee != 'function' || thisArg !== undefined){
iteratee = bindCallback(iteratee,thisArg,3);}

return objectFunc(object,iteratee);};}










function createObjectMapper(isMapKeys){
return function(object,iteratee,thisArg){
var result={};
iteratee = getCallback(iteratee,thisArg,3);

baseForOwn(object,function(value,key,object){
var mapped=iteratee(value,key,object);
key = isMapKeys?mapped:key;
value = isMapKeys?value:mapped;
result[key] = value;});

return result;};}










function createPadDir(fromRight){
return function(string,length,chars){
string = baseToString(string);
return (fromRight?string:'') + createPadding(string,length,chars) + (fromRight?'':string);};}










function createPartial(flag){
var partialFunc=restParam(function(func,partials){
var holders=replaceHolders(partials,partialFunc.placeholder);
return createWrapper(func,flag,undefined,partials,holders);});

return partialFunc;}










function createReduce(arrayFunc,eachFunc){
return function(collection,iteratee,accumulator,thisArg){
var initFromArray=arguments.length < 3;
return typeof iteratee == 'function' && thisArg === undefined && isArray(collection)?
arrayFunc(collection,iteratee,accumulator,initFromArray):
baseReduce(collection,getCallback(iteratee,thisArg,4),accumulator,initFromArray,eachFunc);};}




















function createHybridWrapper(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){
var isAry=bitmask & ARY_FLAG,
isBind=bitmask & BIND_FLAG,
isBindKey=bitmask & BIND_KEY_FLAG,
isCurry=bitmask & CURRY_FLAG,
isCurryBound=bitmask & CURRY_BOUND_FLAG,
isCurryRight=bitmask & CURRY_RIGHT_FLAG,
Ctor=isBindKey?undefined:createCtorWrapper(func);

function wrapper(){


var length=arguments.length,
index=length,
args=Array(length);

while(index--) {
args[index] = arguments[index];}

if(partials){
args = composeArgs(args,partials,holders);}

if(partialsRight){
args = composeArgsRight(args,partialsRight,holdersRight);}

if(isCurry || isCurryRight){
var placeholder=wrapper.placeholder,
argsHolders=replaceHolders(args,placeholder);

length -= argsHolders.length;
if(length < arity){
var newArgPos=argPos?arrayCopy(argPos):undefined,
newArity=nativeMax(arity - length,0),
newsHolders=isCurry?argsHolders:undefined,
newHoldersRight=isCurry?undefined:argsHolders,
newPartials=isCurry?args:undefined,
newPartialsRight=isCurry?undefined:args;

bitmask |= isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;
bitmask &= ~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);

if(!isCurryBound){
bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);}

var newData=[func,bitmask,thisArg,newPartials,newsHolders,newPartialsRight,newHoldersRight,newArgPos,ary,newArity],
result=createHybridWrapper.apply(undefined,newData);

if(isLaziable(func)){
setData(result,newData);}

result.placeholder = placeholder;
return result;}}


var thisBinding=isBind?thisArg:this,
fn=isBindKey?thisBinding[func]:func;

if(argPos){
args = reorder(args,argPos);}

if(isAry && ary < args.length){
args.length = ary;}

if(this && this !== root && this instanceof wrapper){
fn = Ctor || createCtorWrapper(func);}

return fn.apply(thisBinding,args);}

return wrapper;}












function createPadding(string,length,chars){
var strLength=string.length;
length = +length;

if(strLength >= length || !nativeIsFinite(length)){
return '';}

var padLength=length - strLength;
chars = chars == null?' ':chars + '';
return repeat(chars,nativeCeil(padLength / chars.length)).slice(0,padLength);}














function createPartialWrapper(func,bitmask,thisArg,partials){
var isBind=bitmask & BIND_FLAG,
Ctor=createCtorWrapper(func);

function wrapper(){


var argsIndex=-1,
argsLength=arguments.length,
leftIndex=-1,
leftLength=partials.length,
args=Array(leftLength + argsLength);

while(++leftIndex < leftLength) {
args[leftIndex] = partials[leftIndex];}

while(argsLength--) {
args[leftIndex++] = arguments[++argsIndex];}

var fn=this && this !== root && this instanceof wrapper?Ctor:func;
return fn.apply(isBind?thisArg:this,args);}

return wrapper;}









function createRound(methodName){
var func=Math[methodName];
return function(number,precision){
precision = precision === undefined?0:+precision || 0;
if(precision){
precision = pow(10,precision);
return func(number * precision) / precision;}

return func(number);};}










function createSortedIndex(retHighest){
return function(array,value,iteratee,thisArg){
var callback=getCallback(iteratee);
return iteratee == null && callback === baseCallback?
binaryIndex(array,value,retHighest):
binaryIndexBy(array,value,callback(iteratee,thisArg,1),retHighest);};}




























function createWrapper(func,bitmask,thisArg,partials,holders,argPos,ary,arity){
var isBindKey=bitmask & BIND_KEY_FLAG;
if(!isBindKey && typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=partials?partials.length:0;
if(!length){
bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
partials = holders = undefined;}

length -= holders?holders.length:0;
if(bitmask & PARTIAL_RIGHT_FLAG){
var partialsRight=partials,
holdersRight=holders;

partials = holders = undefined;}

var data=isBindKey?undefined:getData(func),
newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];

if(data){
mergeData(newData,data);
bitmask = newData[1];
arity = newData[9];}

newData[9] = arity == null?
isBindKey?0:func.length:
nativeMax(arity - length,0) || 0;

if(bitmask == BIND_FLAG){
var result=createBindWrapper(newData[0],newData[2]);}else 
if((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length){
result = createPartialWrapper.apply(undefined,newData);}else 
{
result = createHybridWrapper.apply(undefined,newData);}

var setter=data?baseSetData:setData;
return setter(result,newData);}
















function equalArrays(array,other,equalFunc,customizer,isLoose,stackA,stackB){
var index=-1,
arrLength=array.length,
othLength=other.length;

if(arrLength != othLength && !(isLoose && othLength > arrLength)){
return false;}


while(++index < arrLength) {
var arrValue=array[index],
othValue=other[index],
result=customizer?customizer(isLoose?othValue:arrValue,isLoose?arrValue:othValue,index):undefined;

if(result !== undefined){
if(result){
continue;}

return false;}


if(isLoose){
if(!arraySome(other,function(othValue){
return arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB);}))
{
return false;}}else 

if(!(arrValue === othValue || equalFunc(arrValue,othValue,customizer,isLoose,stackA,stackB))){
return false;}}


return true;}















function equalByTag(object,other,tag){
switch(tag){
case boolTag:
case dateTag:


return +object == +other;

case errorTag:
return object.name == other.name && object.message == other.message;

case numberTag:

return object != +object?
other != +other:
object == +other;

case regexpTag:
case stringTag:


return object == other + '';}

return false;}
















function equalObjects(object,other,equalFunc,customizer,isLoose,stackA,stackB){
var objProps=keys(object),
objLength=objProps.length,
othProps=keys(other),
othLength=othProps.length;

if(objLength != othLength && !isLoose){
return false;}

var index=objLength;
while(index--) {
var key=objProps[index];
if(!(isLoose?key in other:hasOwnProperty.call(other,key))){
return false;}}


var skipCtor=isLoose;
while(++index < objLength) {
key = objProps[index];
var objValue=object[key],
othValue=other[key],
result=customizer?customizer(isLoose?othValue:objValue,isLoose?objValue:othValue,key):undefined;


if(!(result === undefined?equalFunc(objValue,othValue,customizer,isLoose,stackA,stackB):result)){
return false;}

skipCtor || (skipCtor = key == 'constructor');}

if(!skipCtor){
var objCtor=object.constructor,
othCtor=other.constructor;


if(objCtor != othCtor && (
'constructor' in object && 'constructor' in other) && 
!(typeof objCtor == 'function' && objCtor instanceof objCtor && 
typeof othCtor == 'function' && othCtor instanceof othCtor)){
return false;}}


return true;}











function getCallback(func,thisArg,argCount){
var result=lodash.callback || callback;
result = result === callback?baseCallback:result;
return argCount?result(func,thisArg,argCount):result;}









var getData=!metaMap?noop:function(func){
return metaMap.get(func);};









function getFuncName(func){
var result=func.name,
array=realNames[result],
length=array?array.length:0;

while(length--) {
var data=array[length],
otherFunc=data.func;
if(otherFunc == null || otherFunc == func){
return data.name;}}


return result;}











function getIndexOf(collection,target,fromIndex){
var result=lodash.indexOf || indexOf;
result = result === indexOf?baseIndexOf:result;
return collection?result(collection,target,fromIndex):result;}












var getLength=baseProperty('length');








function getMatchData(object){
var result=pairs(object),
length=result.length;

while(length--) {
result[length][2] = isStrictComparable(result[length][1]);}

return result;}










function getNative(object,key){
var value=object == null?undefined:object[key];
return isNative(value)?value:undefined;}












function getView(start,end,transforms){
var index=-1,
length=transforms.length;

while(++index < length) {
var data=transforms[index],
size=data.size;

switch(data.type){
case 'drop':start += size;break;
case 'dropRight':end -= size;break;
case 'take':end = nativeMin(end,start + size);break;
case 'takeRight':start = nativeMax(start,end - size);break;}}


return {'start':start,'end':end};}









function initCloneArray(array){
var length=array.length,
result=new array.constructor(length);


if(length && typeof array[0] == 'string' && hasOwnProperty.call(array,'index')){
result.index = array.index;
result.input = array.input;}

return result;}









function initCloneObject(object){
var Ctor=object.constructor;
if(!(typeof Ctor == 'function' && Ctor instanceof Ctor)){
Ctor = Object;}

return new Ctor();}














function initCloneByTag(object,tag,isDeep){
var Ctor=object.constructor;
switch(tag){
case arrayBufferTag:
return bufferClone(object);

case boolTag:
case dateTag:
return new Ctor(+object);

case float32Tag:case float64Tag:
case int8Tag:case int16Tag:case int32Tag:
case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
var buffer=object.buffer;
return new Ctor(isDeep?bufferClone(buffer):buffer,object.byteOffset,object.length);

case numberTag:
case stringTag:
return new Ctor(object);

case regexpTag:
var result=new Ctor(object.source,reFlags.exec(object));
result.lastIndex = object.lastIndex;}

return result;}











function invokePath(object,path,args){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
path = last(path);}

var func=object == null?object:object[path];
return func == null?undefined:func.apply(object,args);}









function isArrayLike(value){
return value != null && isLength(getLength(value));}










function isIndex(value,length){
value = typeof value == 'number' || reIsUint.test(value)?+value:-1;
length = length == null?MAX_SAFE_INTEGER:length;
return value > -1 && value % 1 == 0 && value < length;}











function isIterateeCall(value,index,object){
if(!isObject(object)){
return false;}

var type=typeof index;
if(type == 'number'?
isArrayLike(object) && isIndex(index,object.length):
type == 'string' && index in object){
var other=object[index];
return value === value?value === other:other !== other;}

return false;}










function isKey(value,object){
var type=typeof value;
if(type == 'string' && reIsPlainProp.test(value) || type == 'number'){
return true;}

if(isArray(value)){
return false;}

var result=!reIsDeepProp.test(value);
return result || object != null && value in toObject(object);}









function isLaziable(func){
var funcName=getFuncName(func);
if(!(funcName in LazyWrapper.prototype)){
return false;}

var other=lodash[funcName];
if(func === other){
return true;}

var data=getData(other);
return !!data && func === data[0];}











function isLength(value){
return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;}










function isStrictComparable(value){
return value === value && !isObject(value);}

















function mergeData(data,source){
var bitmask=data[1],
srcBitmask=source[1],
newBitmask=bitmask | srcBitmask,
isCommon=newBitmask < ARY_FLAG;

var isCombo=
srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG || 
srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8] || 
srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG;


if(!(isCommon || isCombo)){
return data;}


if(srcBitmask & BIND_FLAG){
data[2] = source[2];

newBitmask |= bitmask & BIND_FLAG?0:CURRY_BOUND_FLAG;}


var value=source[3];
if(value){
var partials=data[3];
data[3] = partials?composeArgs(partials,value,source[4]):arrayCopy(value);
data[4] = partials?replaceHolders(data[3],PLACEHOLDER):arrayCopy(source[4]);}


value = source[5];
if(value){
partials = data[5];
data[5] = partials?composeArgsRight(partials,value,source[6]):arrayCopy(value);
data[6] = partials?replaceHolders(data[5],PLACEHOLDER):arrayCopy(source[6]);}


value = source[7];
if(value){
data[7] = arrayCopy(value);}


if(srcBitmask & ARY_FLAG){
data[8] = data[8] == null?source[8]:nativeMin(data[8],source[8]);}


if(data[9] == null){
data[9] = source[9];}


data[0] = source[0];
data[1] = newBitmask;

return data;}










function mergeDefaults(objectValue,sourceValue){
return objectValue === undefined?sourceValue:merge(objectValue,sourceValue,mergeDefaults);}











function pickByArray(object,props){
object = toObject(object);

var index=-1,
length=props.length,
result={};

while(++index < length) {
var key=props[index];
if(key in object){
result[key] = object[key];}}


return result;}











function pickByCallback(object,predicate){
var result={};
baseForIn(object,function(value,key,object){
if(predicate(value,key,object)){
result[key] = value;}});


return result;}












function reorder(array,indexes){
var arrLength=array.length,
length=nativeMin(indexes.length,arrLength),
oldArray=arrayCopy(array);

while(length--) {
var index=indexes[length];
array[length] = isIndex(index,arrLength)?oldArray[index]:undefined;}

return array;}















var setData=(function(){
var count=0,
lastCalled=0;

return function(key,value){
var stamp=now(),
remaining=HOT_SPAN - (stamp - lastCalled);

lastCalled = stamp;
if(remaining > 0){
if(++count >= HOT_COUNT){
return key;}}else 

{
count = 0;}

return baseSetData(key,value);};})();











function shimKeys(object){
var props=keysIn(object),
propsLength=props.length,
length=propsLength && object.length;

var allowIndexes=!!length && isLength(length) && (
isArray(object) || isArguments(object));

var index=-1,
result=[];

while(++index < propsLength) {
var key=props[index];
if(allowIndexes && isIndex(key,length) || hasOwnProperty.call(object,key)){
result.push(key);}}


return result;}









function toIterable(value){
if(value == null){
return [];}

if(!isArrayLike(value)){
return values(value);}

return isObject(value)?value:Object(value);}









function toObject(value){
return isObject(value)?value:Object(value);}









function toPath(value){
if(isArray(value)){
return value;}

var result=[];
baseToString(value).replace(rePropName,function(match,number,quote,string){
result.push(quote?string.replace(reEscapeChar,'$1'):number || match);});

return result;}









function wrapperClone(wrapper){
return wrapper instanceof LazyWrapper?
wrapper.clone():
new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__,arrayCopy(wrapper.__actions__));}
























function chunk(array,size,guard){
if(guard?isIterateeCall(array,size,guard):size == null){
size = 1;}else 
{
size = nativeMax(nativeFloor(size) || 1,1);}

var index=0,
length=array?array.length:0,
resIndex=-1,
result=Array(nativeCeil(length / size));

while(index < length) {
result[++resIndex] = baseSlice(array,index,index += size);}

return result;}
















function compact(array){
var index=-1,
length=array?array.length:0,
resIndex=-1,
result=[];

while(++index < length) {
var value=array[index];
if(value){
result[++resIndex] = value;}}


return result;}


















var difference=restParam(function(array,values){
return isObjectLike(array) && isArrayLike(array)?
baseDifference(array,baseFlatten(values,false,true)):
[];});


























function drop(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,n < 0?0:n);}


























function dropRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,0,n < 0?0:n);}



















































function dropRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true,true):
[];}



















































function dropWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),true):
[];}






























function fill(array,value,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(start && typeof start != 'number' && isIterateeCall(array,value,start)){
start = 0;
end = length;}

return baseFill(array,value,start,end);}


















































var findIndex=createFindIndex();

















































var findLastIndex=createFindIndex(true);


















function first(array){
return array?array[0]:undefined;}






















function flatten(array,isDeep,guard){
var length=array?array.length:0;
if(guard && isIterateeCall(array,isDeep,guard)){
isDeep = false;}

return length?baseFlatten(array,isDeep):[];}















function flattenDeep(array){
var length=array?array.length:0;
return length?baseFlatten(array,true):[];}






























function indexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

if(typeof fromIndex == 'number'){
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex;}else 
if(fromIndex){
var index=binaryIndex(array,value);
if(index < length && (
value === value?value === array[index]:array[index] !== array[index])){
return index;}

return -1;}

return baseIndexOf(array,value,fromIndex || 0);}















function initial(array){
return dropRight(array,1);}
















var intersection=restParam(function(arrays){
var othLength=arrays.length,
othIndex=othLength,
caches=Array(length),
indexOf=getIndexOf(),
isCommon=indexOf == baseIndexOf,
result=[];

while(othIndex--) {
var value=arrays[othIndex] = isArrayLike(value = arrays[othIndex])?value:[];
caches[othIndex] = isCommon && value.length >= 120?createCache(othIndex && value):null;}

var array=arrays[0],
index=-1,
length=array?array.length:0,
seen=caches[0];

outer: 
while(++index < length) {
value = array[index];
if((seen?cacheIndexOf(seen,value):indexOf(result,value,0)) < 0){
var othIndex=othLength;
while(--othIndex) {
var cache=caches[othIndex];
if((cache?cacheIndexOf(cache,value):indexOf(arrays[othIndex],value,0)) < 0){
continue outer;}}


if(seen){
seen.push(value);}

result.push(value);}}


return result;});















function last(array){
var length=array?array.length:0;
return length?array[length - 1]:undefined;}



























function lastIndexOf(array,value,fromIndex){
var length=array?array.length:0;
if(!length){
return -1;}

var index=length;
if(typeof fromIndex == 'number'){
index = (fromIndex < 0?nativeMax(length + fromIndex,0):nativeMin(fromIndex || 0,length - 1)) + 1;}else 
if(fromIndex){
index = binaryIndex(array,value,true) - 1;
var other=array[index];
if(value === value?value === other:other !== other){
return index;}

return -1;}

if(value !== value){
return indexOfNaN(array,index,true);}

while(index--) {
if(array[index] === value){
return index;}}


return -1;}























function pull(){
var args=arguments,
array=args[0];

if(!(array && array.length)){
return array;}

var index=0,
indexOf=getIndexOf(),
length=args.length;

while(++index < length) {
var fromIndex=0,
value=args[index];

while((fromIndex = indexOf(array,value,fromIndex)) > -1) {
splice.call(array,fromIndex,1);}}


return array;}



























var pullAt=restParam(function(array,indexes){
indexes = baseFlatten(indexes);

var result=baseAt(array,indexes);
basePullAt(array,indexes.sort(baseCompareAscending));
return result;});









































function remove(array,predicate,thisArg){
var result=[];
if(!(array && array.length)){
return result;}

var index=-1,
indexes=[],
length=array.length;

predicate = getCallback(predicate,thisArg,3);
while(++index < length) {
var value=array[index];
if(predicate(value,index,array)){
result.push(value);
indexes.push(index);}}


basePullAt(array,indexes);
return result;}
















function rest(array){
return drop(array,1);}
















function slice(array,start,end){
var length=array?array.length:0;
if(!length){
return [];}

if(end && typeof end != 'number' && isIterateeCall(array,start,end)){
start = 0;
end = length;}

return baseSlice(array,start,end);}


















































var sortedIndex=createSortedIndex();





















var sortedLastIndex=createSortedIndex(true);

























function take(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

return baseSlice(array,0,n < 0?0:n);}


























function takeRight(array,n,guard){
var length=array?array.length:0;
if(!length){
return [];}

if(guard?isIterateeCall(array,n,guard):n == null){
n = 1;}

n = length - (+n || 0);
return baseSlice(array,n < 0?0:n);}



















































function takeRightWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3),false,true):
[];}



















































function takeWhile(array,predicate,thisArg){
return array && array.length?
baseWhile(array,getCallback(predicate,thisArg,3)):
[];}

















var union=restParam(function(arrays){
return baseUniq(baseFlatten(arrays,false,true));});



















































function uniq(array,isSorted,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

if(isSorted != null && typeof isSorted != 'boolean'){
thisArg = iteratee;
iteratee = isIterateeCall(array,isSorted,thisArg)?undefined:isSorted;
isSorted = false;}

var callback=getCallback();
if(!(iteratee == null && callback === baseCallback)){
iteratee = callback(iteratee,thisArg,3);}

return isSorted && getIndexOf() == baseIndexOf?
sortedUniq(array,iteratee):
baseUniq(array,iteratee);}




















function unzip(array){
if(!(array && array.length)){
return [];}

var index=-1,
length=0;

array = arrayFilter(array,function(group){
if(isArrayLike(group)){
length = nativeMax(group.length,length);
return true;}});


var result=Array(length);
while(++index < length) {
result[index] = arrayMap(array,baseProperty(index));}

return result;}






















function unzipWith(array,iteratee,thisArg){
var length=array?array.length:0;
if(!length){
return [];}

var result=unzip(array);
if(iteratee == null){
return result;}

iteratee = bindCallback(iteratee,thisArg,4);
return arrayMap(result,function(group){
return arrayReduce(group,iteratee,undefined,true);});}



















var without=restParam(function(array,values){
return isArrayLike(array)?
baseDifference(array,values):
[];});
















function xor(){
var index=-1,
length=arguments.length;

while(++index < length) {
var array=arguments[index];
if(isArrayLike(array)){
var result=result?
arrayPush(baseDifference(result,array),baseDifference(array,result)):
array;}}


return result?baseUniq(result):[];}

















var zip=restParam(unzip);






















function zipObject(props,values){
var index=-1,
length=props?props.length:0,
result={};

if(length && !values && !isArray(props[0])){
values = [];}

while(++index < length) {
var key=props[index];
if(values){
result[key] = values[index];}else 
if(key){
result[key[0]] = key[1];}}


return result;}



















var zipWith=restParam(function(arrays){
var length=arrays.length,
iteratee=length > 2?arrays[length - 2]:undefined,
thisArg=length > 1?arrays[length - 1]:undefined;

if(length > 2 && typeof iteratee == 'function'){
length -= 2;}else 
{
iteratee = length > 1 && typeof thisArg == 'function'?(--length,thisArg):undefined;
thisArg = undefined;}

arrays.length = length;
return unzipWith(arrays,iteratee,thisArg);});






























function chain(value){
var result=lodash(value);
result.__chain__ = true;
return result;}

























function tap(value,interceptor,thisArg){
interceptor.call(thisArg,value);
return value;}























function thru(value,interceptor,thisArg){
return interceptor.call(thisArg,value);}



























function wrapperChain(){
return chain(this);}



























function wrapperCommit(){
return new LodashWrapper(this.value(),this.__chain__);}






















var wrapperConcat=restParam(function(values){
values = baseFlatten(values);
return this.thru(function(array){
return arrayConcat(isArray(array)?array:[toObject(array)],values);});});


























function wrapperPlant(value){
var result,
parent=this;

while(parent instanceof baseLodash) {
var clone=wrapperClone(parent);
if(result){
previous.__wrapped__ = clone;}else 
{
result = clone;}

var previous=clone;
parent = parent.__wrapped__;}

previous.__wrapped__ = value;
return result;}






















function wrapperReverse(){
var value=this.__wrapped__;

var interceptor=function(value){
return wrapped && wrapped.__dir__ < 0?value:value.reverse();};

if(value instanceof LazyWrapper){
var wrapped=value;
if(this.__actions__.length){
wrapped = new LazyWrapper(this);}

wrapped = wrapped.reverse();
wrapped.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});
return new LodashWrapper(wrapped,this.__chain__);}

return this.thru(interceptor);}














function wrapperToString(){
return this.value() + '';}















function wrapperValue(){
return baseWrapperValue(this.__wrapped__,this.__actions__);}
























var at=restParam(function(collection,props){
return baseAt(collection,baseFlatten(props));});











































var countBy=createAggregator(function(result,value,key){
hasOwnProperty.call(result,key)?++result[key]:result[key] = 1;});


















































function every(collection,predicate,thisArg){
var func=isArray(collection)?arrayEvery:baseEvery;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}



















































function filter(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,predicate);}




















































var find=createFind(baseEach);




















var findLast=createFind(baseEachRight,true);






























function findWhere(collection,source){
return find(collection,baseMatches(source));}
































var forEach=createForEach(arrayEach,baseEach);




















var forEachRight=createForEach(arrayEachRight,baseEachRight);











































var groupBy=createAggregator(function(result,value,key){
if(hasOwnProperty.call(result,key)){
result[key].push(value);}else 
{
result[key] = [value];}});
































function includes(collection,target,fromIndex,guard){
var length=collection?getLength(collection):0;
if(!isLength(length)){
collection = values(collection);
length = collection.length;}

if(typeof fromIndex != 'number' || guard && isIterateeCall(target,fromIndex,guard)){
fromIndex = 0;}else 
{
fromIndex = fromIndex < 0?nativeMax(length + fromIndex,0):fromIndex || 0;}

return typeof collection == 'string' || !isArray(collection) && isString(collection)?
fromIndex <= length && collection.indexOf(target,fromIndex) > -1:
!!length && getIndexOf(collection,target,fromIndex) > -1;}
















































var indexBy=createAggregator(function(result,value,key){
result[key] = value;});
























var invoke=restParam(function(collection,path,args){
var index=-1,
isFunc=typeof path == 'function',
isProp=isKey(path),
result=isArrayLike(collection)?Array(collection.length):[];

baseEach(collection,function(value){
var func=isFunc?path:isProp && value != null?value[path]:undefined;
result[++index] = func?func.apply(value,args):invokePath(value,path,args);});

return result;});


























































function map(collection,iteratee,thisArg){
var func=isArray(collection)?arrayMap:baseMap;
iteratee = getCallback(iteratee,thisArg,3);
return func(collection,iteratee);}





























































var partition=createAggregator(function(result,value,key){
result[key?0:1].push(value);},
function(){return [[],[]];});
























function pluck(collection,path){
return map(collection,property(path));}







































var reduce=createReduce(arrayReduce,baseEach);























var reduceRight=createReduce(arrayReduceRight,baseEachRight);





































function reject(collection,predicate,thisArg){
var func=isArray(collection)?arrayFilter:baseFilter;
predicate = getCallback(predicate,thisArg,3);
return func(collection,function(value,index,collection){
return !predicate(value,index,collection);});}





















function sample(collection,n,guard){
if(guard?isIterateeCall(collection,n,guard):n == null){
collection = toIterable(collection);
var length=collection.length;
return length > 0?collection[baseRandom(0,length - 1)]:undefined;}

var index=-1,
result=toArray(collection),
length=result.length,
lastIndex=length - 1;

n = nativeMin(n < 0?0:+n || 0,length);
while(++index < n) {
var rand=baseRandom(index,lastIndex),
value=result[rand];

result[rand] = result[index];
result[index] = value;}

result.length = n;
return result;}
















function shuffle(collection){
return sample(collection,POSITIVE_INFINITY);}






















function size(collection){
var length=collection?getLength(collection):0;
return isLength(length)?length:keys(collection).length;}



















































function some(collection,predicate,thisArg){
var func=isArray(collection)?arraySome:baseSome;
if(thisArg && isIterateeCall(collection,predicate,thisArg)){
predicate = undefined;}

if(typeof predicate != 'function' || thisArg !== undefined){
predicate = getCallback(predicate,thisArg,3);}

return func(collection,predicate);}


















































function sortBy(collection,iteratee,thisArg){
if(collection == null){
return [];}

if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

var index=-1;
iteratee = getCallback(iteratee,thisArg,3);

var result=baseMap(collection,function(value,key,collection){
return {'criteria':iteratee(value,key,collection),'index':++index,'value':value};});

return baseSortBy(result,compareAscending);}





































var sortByAll=restParam(function(collection,iteratees){
if(collection == null){
return [];}

var guard=iteratees[2];
if(guard && isIterateeCall(iteratees[0],iteratees[1],guard)){
iteratees.length = 1;}

return baseSortByOrder(collection,baseFlatten(iteratees),[]);});




































function sortByOrder(collection,iteratees,orders,guard){
if(collection == null){
return [];}

if(guard && isIterateeCall(iteratees,orders,guard)){
orders = undefined;}

if(!isArray(iteratees)){
iteratees = iteratees == null?[]:[iteratees];}

if(!isArray(orders)){
orders = orders == null?[]:[orders];}

return baseSortByOrder(collection,iteratees,orders);}































function where(collection,source){
return filter(collection,baseMatches(source));}


















var now=nativeNow || function(){
return new Date().getTime();};



























function after(n,func){
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


n = nativeIsFinite(n = +n)?n:0;
return function(){
if(--n < 1){
return func.apply(this,arguments);}};}




















function ary(func,n,guard){
if(guard && isIterateeCall(func,n,guard)){
n = undefined;}

n = func && n == null?func.length:nativeMax(+n || 0,0);
return createWrapper(func,ARY_FLAG,undefined,undefined,undefined,undefined,n);}


















function before(n,func){
var result;
if(typeof func != 'function'){
if(typeof n == 'function'){
var temp=n;
n = func;
func = temp;}else 
{
throw new TypeError(FUNC_ERROR_TEXT);}}


return function(){
if(--n > 0){
result = func.apply(this,arguments);}

if(n <= 1){
func = undefined;}

return result;};}






































var bind=restParam(function(func,thisArg,partials){
var bitmask=BIND_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bind.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(func,bitmask,thisArg,partials,holders);});






























var bindAll=restParam(function(object,methodNames){
methodNames = methodNames.length?baseFlatten(methodNames):functions(object);

var index=-1,
length=methodNames.length;

while(++index < length) {
var key=methodNames[index];
object[key] = createWrapper(object[key],BIND_FLAG,object);}

return object;});














































var bindKey=restParam(function(object,key,partials){
var bitmask=BIND_FLAG | BIND_KEY_FLAG;
if(partials.length){
var holders=replaceHolders(partials,bindKey.placeholder);
bitmask |= PARTIAL_FLAG;}

return createWrapper(key,bitmask,object,partials,holders);});










































var curry=createCurry(CURRY_FLAG);






































var curryRight=createCurry(CURRY_RIGHT_FLAG);
































































function debounce(func,wait,options){
var args,
maxTimeoutId,
result,
stamp,
thisArg,
timeoutId,
trailingCall,
lastCalled=0,
maxWait=false,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

wait = wait < 0?0:+wait || 0;
if(options === true){
var leading=true;
trailing = false;}else 
if(isObject(options)){
leading = !!options.leading;
maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0,wait);
trailing = 'trailing' in options?!!options.trailing:trailing;}


function cancel(){
if(timeoutId){
clearTimeout(timeoutId);}

if(maxTimeoutId){
clearTimeout(maxTimeoutId);}

lastCalled = 0;
maxTimeoutId = timeoutId = trailingCall = undefined;}


function complete(isCalled,id){
if(id){
clearTimeout(id);}

maxTimeoutId = timeoutId = trailingCall = undefined;
if(isCalled){
lastCalled = now();
result = func.apply(thisArg,args);
if(!timeoutId && !maxTimeoutId){
args = thisArg = undefined;}}}




function delayed(){
var remaining=wait - (now() - stamp);
if(remaining <= 0 || remaining > wait){
complete(trailingCall,maxTimeoutId);}else 
{
timeoutId = setTimeout(delayed,remaining);}}



function maxDelayed(){
complete(trailing,timeoutId);}


function debounced(){
args = arguments;
stamp = now();
thisArg = this;
trailingCall = trailing && (timeoutId || !leading);

if(maxWait === false){
var leadingCall=leading && !timeoutId;}else 
{
if(!maxTimeoutId && !leading){
lastCalled = stamp;}

var remaining=maxWait - (stamp - lastCalled),
isCalled=remaining <= 0 || remaining > maxWait;

if(isCalled){
if(maxTimeoutId){
maxTimeoutId = clearTimeout(maxTimeoutId);}

lastCalled = stamp;
result = func.apply(thisArg,args);}else 

if(!maxTimeoutId){
maxTimeoutId = setTimeout(maxDelayed,remaining);}}


if(isCalled && timeoutId){
timeoutId = clearTimeout(timeoutId);}else 

if(!timeoutId && wait !== maxWait){
timeoutId = setTimeout(delayed,wait);}

if(leadingCall){
isCalled = true;
result = func.apply(thisArg,args);}

if(isCalled && !timeoutId && !maxTimeoutId){
args = thisArg = undefined;}

return result;}

debounced.cancel = cancel;
return debounced;}



















var defer=restParam(function(func,args){
return baseDelay(func,1,args);});




















var delay=restParam(function(func,wait,args){
return baseDelay(func,wait,args);});






















var flow=createFlow();





















var flowRight=createFlow(true);




















































function memoize(func,resolver){
if(typeof func != 'function' || resolver && typeof resolver != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

var memoized=function(){
var args=arguments,
key=resolver?resolver.apply(this,args):args[0],
cache=memoized.cache;

if(cache.has(key)){
return cache.get(key);}

var result=func.apply(this,args);
memoized.cache = cache.set(key,result);
return result;};

memoized.cache = new memoize.Cache();
return memoized;}

































var modArgs=restParam(function(func,transforms){
transforms = baseFlatten(transforms);
if(typeof func != 'function' || !arrayEvery(transforms,baseIsFunction)){
throw new TypeError(FUNC_ERROR_TEXT);}

var length=transforms.length;
return restParam(function(args){
var index=nativeMin(args.length,length);
while(index--) {
args[index] = transforms[index](args[index]);}

return func.apply(this,args);});});






















function negate(predicate){
if(typeof predicate != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(){
return !predicate.apply(this,arguments);};}




















function once(func){
return before(2,func);}


































var partial=createPartial(PARTIAL_FLAG);
































var partialRight=createPartial(PARTIAL_RIGHT_FLAG);





























var rearg=restParam(function(func,indexes){
return createWrapper(func,REARG_FLAG,undefined,undefined,undefined,baseFlatten(indexes));});
























function restParam(func,start){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

start = nativeMax(start === undefined?func.length - 1:+start || 0,0);
return function(){
var args=arguments,
index=-1,
length=nativeMax(args.length - start,0),
rest=Array(length);

while(++index < length) {
rest[index] = args[start + index];}

switch(start){
case 0:return func.call(this,rest);
case 1:return func.call(this,args[0],rest);
case 2:return func.call(this,args[0],args[1],rest);}

var otherArgs=Array(start + 1);
index = -1;
while(++index < start) {
otherArgs[index] = args[index];}

otherArgs[start] = rest;
return func.apply(this,otherArgs);};}


































function spread(func){
if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

return function(array){
return func.apply(this,array);};}










































function throttle(func,wait,options){
var leading=true,
trailing=true;

if(typeof func != 'function'){
throw new TypeError(FUNC_ERROR_TEXT);}

if(options === false){
leading = false;}else 
if(isObject(options)){
leading = 'leading' in options?!!options.leading:leading;
trailing = 'trailing' in options?!!options.trailing:trailing;}

return debounce(func,wait,{'leading':leading,'maxWait':+wait,'trailing':trailing});}























function wrap(value,wrapper){
wrapper = wrapper == null?identity:wrapper;
return createWrapper(wrapper,PARTIAL_FLAG,undefined,[value],[]);}























































function clone(value,isDeep,customizer,thisArg){
if(isDeep && typeof isDeep != 'boolean' && isIterateeCall(value,isDeep,customizer)){
isDeep = false;}else 

if(typeof isDeep == 'function'){
thisArg = customizer;
customizer = isDeep;
isDeep = false;}

return typeof customizer == 'function'?
baseClone(value,isDeep,bindCallback(customizer,thisArg,1)):
baseClone(value,isDeep);}















































function cloneDeep(value,customizer,thisArg){
return typeof customizer == 'function'?
baseClone(value,true,bindCallback(customizer,thisArg,1)):
baseClone(value,true);}






















function gt(value,other){
return value > other;}






















function gte(value,other){
return value >= other;}


















function isArguments(value){
return isObjectLike(value) && isArrayLike(value) && 
hasOwnProperty.call(value,'callee') && !propertyIsEnumerable.call(value,'callee');}


















var isArray=nativeIsArray || function(value){
return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;};


















function isBoolean(value){
return value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag;}


















function isDate(value){
return isObjectLike(value) && objToString.call(value) == dateTag;}


















function isElement(value){
return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);}





























function isEmpty(value){
if(value == null){
return true;}

if(isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) || 
isObjectLike(value) && isFunction(value.splice))){
return !value.length;}

return !keys(value).length;}














































function isEqual(value,other,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
var result=customizer?customizer(value,other):undefined;
return result === undefined?baseIsEqual(value,other,customizer):!!result;}



















function isError(value){
return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;}





























function isFinite(value){
return typeof value == 'number' && nativeIsFinite(value);}


















function isFunction(value){



return isObject(value) && objToString.call(value) == funcTag;}






















function isObject(value){


var type=typeof value;
return !!value && (type == 'object' || type == 'function');}









































function isMatch(object,source,customizer,thisArg){
customizer = typeof customizer == 'function'?bindCallback(customizer,thisArg,3):undefined;
return baseIsMatch(object,getMatchData(source),customizer);}



























function isNaN(value){


return isNumber(value) && value != +value;}


















function isNative(value){
if(value == null){
return false;}

if(isFunction(value)){
return reIsNative.test(fnToString.call(value));}

return isObjectLike(value) && reIsHostCtor.test(value);}


















function isNull(value){
return value === null;}
























function isNumber(value){
return typeof value == 'number' || isObjectLike(value) && objToString.call(value) == numberTag;}
































function isPlainObject(value){
var Ctor;


if(!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) || 
!hasOwnProperty.call(value,'constructor') && (Ctor = value.constructor,typeof Ctor == 'function' && !(Ctor instanceof Ctor))){
return false;}




var result;



baseForIn(value,function(subValue,key){
result = key;});

return result === undefined || hasOwnProperty.call(value,result);}


















function isRegExp(value){
return isObject(value) && objToString.call(value) == regexpTag;}


















function isString(value){
return typeof value == 'string' || isObjectLike(value) && objToString.call(value) == stringTag;}


















function isTypedArray(value){
return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];}


















function isUndefined(value){
return value === undefined;}






















function lt(value,other){
return value < other;}






















function lte(value,other){
return value <= other;}

















function toArray(value){
var length=value?getLength(value):0;
if(!isLength(length)){
return values(value);}

if(!length){
return [];}

return arrayCopy(value);}

























function toPlainObject(value){
return baseCopy(value,keysIn(value));}




















































var merge=createAssigner(baseMerge);

































var assign=createAssigner(function(object,source,customizer){
return customizer?
assignWith(object,source,customizer):
baseAssign(object,source);});




































function create(prototype,properties,guard){
var result=baseCreate(prototype);
if(guard && isIterateeCall(prototype,properties,guard)){
properties = undefined;}

return properties?baseAssign(result,properties):result;}




















var defaults=createDefaults(assign,assignDefaults);



















var defaultsDeep=createDefaults(merge,mergeDefaults);

















































var findKey=createFindKey(baseForOwn);

















































var findLastKey=createFindKey(baseForOwnRight);




























var forIn=createForIn(baseFor);


























var forInRight=createForIn(baseForRight);




























var forOwn=createForOwn(baseForOwn);


























var forOwnRight=createForOwn(baseForOwnRight);
















function functions(object){
return baseFunctions(object,keysIn(object));}


























function get(object,path,defaultValue){
var result=object == null?undefined:baseGet(object,toPath(path),path + '');
return result === undefined?defaultValue:result;}
























function has(object,path){
if(object == null){
return false;}

var result=hasOwnProperty.call(object,path);
if(!result && !isKey(path)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
if(object == null){
return false;}

path = last(path);
result = hasOwnProperty.call(object,path);}

return result || isLength(object.length) && isIndex(path,object.length) && (
isArray(object) || isArguments(object));}

























function invert(object,multiValue,guard){
if(guard && isIterateeCall(object,multiValue,guard)){
multiValue = undefined;}

var index=-1,
props=keys(object),
length=props.length,
result={};

while(++index < length) {
var key=props[index],
value=object[key];

if(multiValue){
if(hasOwnProperty.call(result,value)){
result[value].push(key);}else 
{
result[value] = [key];}}else 


{
result[value] = key;}}


return result;}





























var keys=!nativeKeys?shimKeys:function(object){
var Ctor=object == null?undefined:object.constructor;
if(typeof Ctor == 'function' && Ctor.prototype === object || 
typeof object != 'function' && isArrayLike(object)){
return shimKeys(object);}

return isObject(object)?nativeKeys(object):[];};
























function keysIn(object){
if(object == null){
return [];}

if(!isObject(object)){
object = Object(object);}

var length=object.length;
length = length && isLength(length) && (
isArray(object) || isArguments(object)) && length || 0;

var Ctor=object.constructor,
index=-1,
isProto=typeof Ctor == 'function' && Ctor.prototype === object,
result=Array(length),
skipIndexes=length > 0;

while(++index < length) {
result[index] = index + '';}

for(var key in object) {
if(!(skipIndexes && isIndex(key,length)) && 
!(key == 'constructor' && (isProto || !hasOwnProperty.call(object,key)))){
result.push(key);}}


return result;}






















var mapKeys=createObjectMapper(true);










































var mapValues=createObjectMapper();
























var omit=restParam(function(object,props){
if(object == null){
return {};}

if(typeof props[0] != 'function'){
var props=arrayMap(baseFlatten(props),String);
return pickByArray(object,baseDifference(keysIn(object),props));}

var predicate=bindCallback(props[0],props[1],3);
return pickByCallback(object,function(value,key,object){
return !predicate(value,key,object);});});

















function pairs(object){
object = toObject(object);

var index=-1,
props=keys(object),
length=props.length,
result=Array(length);

while(++index < length) {
var key=props[index];
result[index] = [key,object[key]];}

return result;}




























var pick=restParam(function(object,props){
if(object == null){
return {};}

return typeof props[0] == 'function'?
pickByCallback(object,bindCallback(props[0],props[1],3)):
pickByArray(object,baseFlatten(props));});






























function result(object,path,defaultValue){
var result=object == null?undefined:object[path];
if(result === undefined){
if(object != null && !isKey(path,object)){
path = toPath(path);
object = path.length == 1?object:baseGet(object,baseSlice(path,0,-1));
result = object == null?undefined:object[last(path)];}

result = result === undefined?defaultValue:result;}

return isFunction(result)?result.call(object):result;}

























function set(object,path,value){
if(object == null){
return object;}

var pathKey=path + '';
path = object[pathKey] != null || isKey(path,object)?[pathKey]:toPath(path);

var index=-1,
length=path.length,
lastIndex=length - 1,
nested=object;

while(nested != null && ++index < length) {
var key=path[index];
if(isObject(nested)){
if(index == lastIndex){
nested[key] = value;}else 
if(nested[key] == null){
nested[key] = isIndex(path[index + 1])?[]:{};}}


nested = nested[key];}

return object;}































function transform(object,iteratee,accumulator,thisArg){
var isArr=isArray(object) || isTypedArray(object);
iteratee = getCallback(iteratee,thisArg,4);

if(accumulator == null){
if(isArr || isObject(object)){
var Ctor=object.constructor;
if(isArr){
accumulator = isArray(object)?new Ctor():[];}else 
{
accumulator = baseCreate(isFunction(Ctor)?Ctor.prototype:undefined);}}else 

{
accumulator = {};}}


(isArr?arrayEach:baseForOwn)(object,function(value,index,object){
return iteratee(accumulator,value,index,object);});

return accumulator;}



























function values(object){
return baseValues(object,keys(object));}

























function valuesIn(object){
return baseValues(object,keysIn(object));}



































function inRange(value,start,end){
start = +start || 0;
if(end === undefined){
end = start;
start = 0;}else 
{
end = +end || 0;}

return value >= nativeMin(start,end) && value < nativeMax(start,end);}





























function random(min,max,floating){
if(floating && isIterateeCall(min,max,floating)){
max = floating = undefined;}

var noMin=min == null,
noMax=max == null;

if(floating == null){
if(noMax && typeof min == 'boolean'){
floating = min;
min = 1;}else 

if(typeof max == 'boolean'){
floating = max;
noMax = true;}}


if(noMin && noMax){
max = 1;
noMax = false;}

min = +min || 0;
if(noMax){
max = min;
min = 0;}else 
{
max = +max || 0;}

if(floating || min % 1 || max % 1){
var rand=nativeRandom();
return nativeMin(min + rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1))),max);}

return baseRandom(min,max);}























var camelCase=createCompounder(function(result,word,index){
word = word.toLowerCase();
return result + (index?word.charAt(0).toUpperCase() + word.slice(1):word);});















function capitalize(string){
string = baseToString(string);
return string && string.charAt(0).toUpperCase() + string.slice(1);}
















function deburr(string){
string = baseToString(string);
return string && string.replace(reLatin1,deburrLetter).replace(reComboMark,'');}























function endsWith(string,target,position){
string = baseToString(string);
target = target + '';

var length=string.length;
position = position === undefined?
length:
nativeMin(position < 0?0:+position || 0,length);

position -= target.length;
return position >= 0 && string.indexOf(target,position) == position;}


































function escape(string){

string = baseToString(string);
return string && reHasUnescapedHtml.test(string)?
string.replace(reUnescapedHtml,escapeHtmlChar):
string;}
















function escapeRegExp(string){
string = baseToString(string);
return string && reHasRegExpChars.test(string)?
string.replace(reRegExpChars,escapeRegExpChar):
string || '(?:)';}





















var kebabCase=createCompounder(function(result,word,index){
return result + (index?'-':'') + word.toLowerCase();});
























function pad(string,length,chars){
string = baseToString(string);
length = +length;

var strLength=string.length;
if(strLength >= length || !nativeIsFinite(length)){
return string;}

var mid=(length - strLength) / 2,
leftLength=nativeFloor(mid),
rightLength=nativeCeil(mid);

chars = createPadding('',rightLength,chars);
return chars.slice(0,leftLength) + string + chars;}
























var padLeft=createPadDir();























var padRight=createPadDir(true);
























function parseInt(string,radix,guard){



if(guard?isIterateeCall(string,radix,guard):radix == null){
radix = 0;}else 
if(radix){
radix = +radix;}

string = trim(string);
return nativeParseInt(string,radix || (reHasHexPrefix.test(string)?16:10));}






















function repeat(string,n){
var result='';
string = baseToString(string);
n = +n;
if(n < 1 || !string || !nativeIsFinite(n)){
return result;}



do {
if(n % 2){
result += string;}

n = nativeFloor(n / 2);
string += string;}while(
n);

return result;}





















var snakeCase=createCompounder(function(result,word,index){
return result + (index?'_':'') + word.toLowerCase();});





















var startCase=createCompounder(function(result,word,index){
return result + (index?' ':'') + (word.charAt(0).toUpperCase() + word.slice(1));});























function startsWith(string,target,position){
string = baseToString(string);
position = position == null?
0:
nativeMin(position < 0?0:+position || 0,string.length);

return string.lastIndexOf(target,position) == position;}


































































































function template(string,options,otherOptions){


var settings=lodash.templateSettings;

if(otherOptions && isIterateeCall(string,options,otherOptions)){
options = otherOptions = undefined;}

string = baseToString(string);
options = assignWith(baseAssign({},otherOptions || options),settings,assignOwnDefaults);

var imports=assignWith(baseAssign({},options.imports),settings.imports,assignOwnDefaults),
importsKeys=keys(imports),
importsValues=baseValues(imports,importsKeys);

var isEscaping,
isEvaluating,
index=0,
interpolate=options.interpolate || reNoMatch,
source="__p += '";


var reDelimiters=RegExp(
(options.escape || reNoMatch).source + '|' + 
interpolate.source + '|' + 
(interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + 
(options.evaluate || reNoMatch).source + '|$',
'g');


var sourceURL='//# sourceURL=' + (
'sourceURL' in options?
options.sourceURL:
'lodash.templateSources[' + ++templateCounter + ']') + 
'\n';

string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){
interpolateValue || (interpolateValue = esTemplateValue);


source += string.slice(index,offset).replace(reUnescapedString,escapeStringChar);


if(escapeValue){
isEscaping = true;
source += "' +\n__e(" + escapeValue + ") +\n'";}

if(evaluateValue){
isEvaluating = true;
source += "';\n" + evaluateValue + ";\n__p += '";}

if(interpolateValue){
source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";}

index = offset + match.length;



return match;});


source += "';\n";



var variable=options.variable;
if(!variable){
source = 'with (obj) {\n' + source + '\n}\n';}


source = (isEvaluating?source.replace(reEmptyStringLeading,''):source).
replace(reEmptyStringMiddle,'$1').
replace(reEmptyStringTrailing,'$1;');


source = 'function(' + (variable || 'obj') + ') {\n' + (
variable?
'':
'obj || (obj = {});\n') + 

"var __t, __p = ''" + (
isEscaping?
', __e = _.escape':
'') + (

isEvaluating?
', __j = Array.prototype.join;\n' + 
"function print() { __p += __j.call(arguments, '') }\n":
';\n') + 

source + 
'return __p\n}';

var result=attempt(function(){
return Function(importsKeys,sourceURL + 'return ' + source).apply(undefined,importsValues);});




result.source = source;
if(isError(result)){
throw result;}

return result;}























function trim(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string),trimmedRightIndex(string) + 1);}

chars = chars + '';
return string.slice(charsLeftIndex(string,chars),charsRightIndex(string,chars) + 1);}




















function trimLeft(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(trimmedLeftIndex(string));}

return string.slice(charsLeftIndex(string,chars + ''));}




















function trimRight(string,chars,guard){
var value=string;
string = baseToString(string);
if(!string){
return string;}

if(guard?isIterateeCall(value,chars,guard):chars == null){
return string.slice(0,trimmedRightIndex(string) + 1);}

return string.slice(0,charsRightIndex(string,chars + '') + 1);}










































function trunc(string,options,guard){
if(guard && isIterateeCall(string,options,guard)){
options = undefined;}

var length=DEFAULT_TRUNC_LENGTH,
omission=DEFAULT_TRUNC_OMISSION;

if(options != null){
if(isObject(options)){
var separator='separator' in options?options.separator:separator;
length = 'length' in options?+options.length || 0:length;
omission = 'omission' in options?baseToString(options.omission):omission;}else 
{
length = +options || 0;}}


string = baseToString(string);
if(length >= string.length){
return string;}

var end=length - omission.length;
if(end < 1){
return omission;}

var result=string.slice(0,end);
if(separator == null){
return result + omission;}

if(isRegExp(separator)){
if(string.slice(end).search(separator)){
var match,
newEnd,
substring=string.slice(0,end);

if(!separator.global){
separator = RegExp(separator.source,(reFlags.exec(separator) || '') + 'g');}

separator.lastIndex = 0;
while(match = separator.exec(substring)) {
newEnd = match.index;}

result = result.slice(0,newEnd == null?end:newEnd);}}else 

if(string.indexOf(separator,end) != end){
var index=result.lastIndexOf(separator);
if(index > -1){
result = result.slice(0,index);}}


return result + omission;}




















function unescape(string){
string = baseToString(string);
return string && reHasEscapedHtml.test(string)?
string.replace(reEscapedHtml,unescapeHtmlChar):
string;}




















function words(string,pattern,guard){
if(guard && isIterateeCall(string,pattern,guard)){
pattern = undefined;}

string = baseToString(string);
return string.match(pattern || reWords) || [];}
























var attempt=restParam(function(func,args){
try{
return func.apply(undefined,args);}
catch(e) {
return isError(e)?e:new Error(e);}});









































function callback(func,thisArg,guard){
if(guard && isIterateeCall(func,thisArg,guard)){
thisArg = undefined;}

return isObjectLike(func)?
matches(func):
baseCallback(func,thisArg);}


















function constant(value){
return function(){
return value;};}


















function identity(value){
return value;}



























function matches(source){
return baseMatches(baseClone(source,true));}


























function matchesProperty(path,srcValue){
return baseMatchesProperty(path,baseClone(srcValue,true));}

























var method=restParam(function(path,args){
return function(object){
return invokePath(object,path,args);};});

























var methodOf=restParam(function(object,args){
return function(path){
return invokePath(object,path,args);};});







































function mixin(object,source,options){
if(options == null){
var isObj=isObject(source),
props=isObj?keys(source):undefined,
methodNames=props && props.length?baseFunctions(source,props):undefined;

if(!(methodNames?methodNames.length:isObj)){
methodNames = false;
options = source;
source = object;
object = this;}}


if(!methodNames){
methodNames = baseFunctions(source,keys(source));}

var chain=true,
index=-1,
isFunc=isFunction(object),
length=methodNames.length;

if(options === false){
chain = false;}else 
if(isObject(options) && 'chain' in options){
chain = options.chain;}

while(++index < length) {
var methodName=methodNames[index],
func=source[methodName];

object[methodName] = func;
if(isFunc){
object.prototype[methodName] = (function(func){
return function(){
var chainAll=this.__chain__;
if(chain || chainAll){
var result=object(this.__wrapped__),
actions=result.__actions__ = arrayCopy(this.__actions__);

actions.push({'func':func,'args':arguments,'thisArg':object});
result.__chain__ = chainAll;
return result;}

return func.apply(object,arrayPush([this.value()],arguments));};})(

func);}}


return object;}














function noConflict(){
root._ = oldDash;
return this;}
















function noop(){}

























function property(path){
return isKey(path)?baseProperty(path):basePropertyDeep(path);}






















function propertyOf(object){
return function(path){
return baseGet(object,toPath(path),path + '');};}




































function range(start,end,step){
if(step && isIterateeCall(start,end,step)){
end = step = undefined;}

start = +start || 0;
step = step == null?1:+step || 0;

if(end == null){
end = start;
start = 0;}else 
{
end = +end || 0;}



var index=-1,
length=nativeMax(nativeCeil((end - start) / (step || 1)),0),
result=Array(length);

while(++index < length) {
result[index] = start;
start += step;}

return result;}





























function times(n,iteratee,thisArg){
n = nativeFloor(n);



if(n < 1 || !nativeIsFinite(n)){
return [];}

var index=-1,
result=Array(nativeMin(n,MAX_ARRAY_LENGTH));

iteratee = bindCallback(iteratee,thisArg,1);
while(++index < n) {
if(index < MAX_ARRAY_LENGTH){
result[index] = iteratee(index);}else 
{
iteratee(index);}}


return result;}


















function uniqueId(prefix){
var id=++idCounter;
return baseToString(prefix) + id;}


















function add(augend,addend){
return (+augend || 0) + (+addend || 0);}






















var ceil=createRound('ceil');





















var floor=createRound('floor');
















































var max=createExtremum(gt,NEGATIVE_INFINITY);
















































var min=createExtremum(lt,POSITIVE_INFINITY);





















var round=createRound('round');

































function sum(collection,iteratee,thisArg){
if(thisArg && isIterateeCall(collection,iteratee,thisArg)){
iteratee = undefined;}

iteratee = getCallback(iteratee,thisArg,3);
return iteratee.length == 1?
arraySum(isArray(collection)?collection:toIterable(collection),iteratee):
baseSum(collection,iteratee);}





lodash.prototype = baseLodash.prototype;

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;


MapCache.prototype['delete'] = mapDelete;
MapCache.prototype.get = mapGet;
MapCache.prototype.has = mapHas;
MapCache.prototype.set = mapSet;


SetCache.prototype.push = cachePush;


memoize.Cache = MapCache;


lodash.after = after;
lodash.ary = ary;
lodash.assign = assign;
lodash.at = at;
lodash.before = before;
lodash.bind = bind;
lodash.bindAll = bindAll;
lodash.bindKey = bindKey;
lodash.callback = callback;
lodash.chain = chain;
lodash.chunk = chunk;
lodash.compact = compact;
lodash.constant = constant;
lodash.countBy = countBy;
lodash.create = create;
lodash.curry = curry;
lodash.curryRight = curryRight;
lodash.debounce = debounce;
lodash.defaults = defaults;
lodash.defaultsDeep = defaultsDeep;
lodash.defer = defer;
lodash.delay = delay;
lodash.difference = difference;
lodash.drop = drop;
lodash.dropRight = dropRight;
lodash.dropRightWhile = dropRightWhile;
lodash.dropWhile = dropWhile;
lodash.fill = fill;
lodash.filter = filter;
lodash.flatten = flatten;
lodash.flattenDeep = flattenDeep;
lodash.flow = flow;
lodash.flowRight = flowRight;
lodash.forEach = forEach;
lodash.forEachRight = forEachRight;
lodash.forIn = forIn;
lodash.forInRight = forInRight;
lodash.forOwn = forOwn;
lodash.forOwnRight = forOwnRight;
lodash.functions = functions;
lodash.groupBy = groupBy;
lodash.indexBy = indexBy;
lodash.initial = initial;
lodash.intersection = intersection;
lodash.invert = invert;
lodash.invoke = invoke;
lodash.keys = keys;
lodash.keysIn = keysIn;
lodash.map = map;
lodash.mapKeys = mapKeys;
lodash.mapValues = mapValues;
lodash.matches = matches;
lodash.matchesProperty = matchesProperty;
lodash.memoize = memoize;
lodash.merge = merge;
lodash.method = method;
lodash.methodOf = methodOf;
lodash.mixin = mixin;
lodash.modArgs = modArgs;
lodash.negate = negate;
lodash.omit = omit;
lodash.once = once;
lodash.pairs = pairs;
lodash.partial = partial;
lodash.partialRight = partialRight;
lodash.partition = partition;
lodash.pick = pick;
lodash.pluck = pluck;
lodash.property = property;
lodash.propertyOf = propertyOf;
lodash.pull = pull;
lodash.pullAt = pullAt;
lodash.range = range;
lodash.rearg = rearg;
lodash.reject = reject;
lodash.remove = remove;
lodash.rest = rest;
lodash.restParam = restParam;
lodash.set = set;
lodash.shuffle = shuffle;
lodash.slice = slice;
lodash.sortBy = sortBy;
lodash.sortByAll = sortByAll;
lodash.sortByOrder = sortByOrder;
lodash.spread = spread;
lodash.take = take;
lodash.takeRight = takeRight;
lodash.takeRightWhile = takeRightWhile;
lodash.takeWhile = takeWhile;
lodash.tap = tap;
lodash.throttle = throttle;
lodash.thru = thru;
lodash.times = times;
lodash.toArray = toArray;
lodash.toPlainObject = toPlainObject;
lodash.transform = transform;
lodash.union = union;
lodash.uniq = uniq;
lodash.unzip = unzip;
lodash.unzipWith = unzipWith;
lodash.values = values;
lodash.valuesIn = valuesIn;
lodash.where = where;
lodash.without = without;
lodash.wrap = wrap;
lodash.xor = xor;
lodash.zip = zip;
lodash.zipObject = zipObject;
lodash.zipWith = zipWith;


lodash.backflow = flowRight;
lodash.collect = map;
lodash.compose = flowRight;
lodash.each = forEach;
lodash.eachRight = forEachRight;
lodash.extend = assign;
lodash.iteratee = callback;
lodash.methods = functions;
lodash.object = zipObject;
lodash.select = filter;
lodash.tail = rest;
lodash.unique = uniq;


mixin(lodash,lodash);




lodash.add = add;
lodash.attempt = attempt;
lodash.camelCase = camelCase;
lodash.capitalize = capitalize;
lodash.ceil = ceil;
lodash.clone = clone;
lodash.cloneDeep = cloneDeep;
lodash.deburr = deburr;
lodash.endsWith = endsWith;
lodash.escape = escape;
lodash.escapeRegExp = escapeRegExp;
lodash.every = every;
lodash.find = find;
lodash.findIndex = findIndex;
lodash.findKey = findKey;
lodash.findLast = findLast;
lodash.findLastIndex = findLastIndex;
lodash.findLastKey = findLastKey;
lodash.findWhere = findWhere;
lodash.first = first;
lodash.floor = floor;
lodash.get = get;
lodash.gt = gt;
lodash.gte = gte;
lodash.has = has;
lodash.identity = identity;
lodash.includes = includes;
lodash.indexOf = indexOf;
lodash.inRange = inRange;
lodash.isArguments = isArguments;
lodash.isArray = isArray;
lodash.isBoolean = isBoolean;
lodash.isDate = isDate;
lodash.isElement = isElement;
lodash.isEmpty = isEmpty;
lodash.isEqual = isEqual;
lodash.isError = isError;
lodash.isFinite = isFinite;
lodash.isFunction = isFunction;
lodash.isMatch = isMatch;
lodash.isNaN = isNaN;
lodash.isNative = isNative;
lodash.isNull = isNull;
lodash.isNumber = isNumber;
lodash.isObject = isObject;
lodash.isPlainObject = isPlainObject;
lodash.isRegExp = isRegExp;
lodash.isString = isString;
lodash.isTypedArray = isTypedArray;
lodash.isUndefined = isUndefined;
lodash.kebabCase = kebabCase;
lodash.last = last;
lodash.lastIndexOf = lastIndexOf;
lodash.lt = lt;
lodash.lte = lte;
lodash.max = max;
lodash.min = min;
lodash.noConflict = noConflict;
lodash.noop = noop;
lodash.now = now;
lodash.pad = pad;
lodash.padLeft = padLeft;
lodash.padRight = padRight;
lodash.parseInt = parseInt;
lodash.random = random;
lodash.reduce = reduce;
lodash.reduceRight = reduceRight;
lodash.repeat = repeat;
lodash.result = result;
lodash.round = round;
lodash.runInContext = runInContext;
lodash.size = size;
lodash.snakeCase = snakeCase;
lodash.some = some;
lodash.sortedIndex = sortedIndex;
lodash.sortedLastIndex = sortedLastIndex;
lodash.startCase = startCase;
lodash.startsWith = startsWith;
lodash.sum = sum;
lodash.template = template;
lodash.trim = trim;
lodash.trimLeft = trimLeft;
lodash.trimRight = trimRight;
lodash.trunc = trunc;
lodash.unescape = unescape;
lodash.uniqueId = uniqueId;
lodash.words = words;


lodash.all = every;
lodash.any = some;
lodash.contains = includes;
lodash.eq = isEqual;
lodash.detect = find;
lodash.foldl = reduce;
lodash.foldr = reduceRight;
lodash.head = first;
lodash.include = includes;
lodash.inject = reduce;

mixin(lodash,(function(){
var source={};
baseForOwn(lodash,function(func,methodName){
if(!lodash.prototype[methodName]){
source[methodName] = func;}});


return source;})(),
false);




lodash.sample = sample;

lodash.prototype.sample = function(n){
if(!this.__chain__ && n == null){
return sample(this.value());}

return this.thru(function(value){
return sample(value,n);});};












lodash.VERSION = VERSION;


arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){
lodash[methodName].placeholder = lodash;});



arrayEach(['drop','take'],function(methodName,index){
LazyWrapper.prototype[methodName] = function(n){
var filtered=this.__filtered__;
if(filtered && !index){
return new LazyWrapper(this);}

n = n == null?1:nativeMax(nativeFloor(n) || 0,0);

var result=this.clone();
if(filtered){
result.__takeCount__ = nativeMin(result.__takeCount__,n);}else 
{
result.__views__.push({'size':n,'type':methodName + (result.__dir__ < 0?'Right':'')});}

return result;};


LazyWrapper.prototype[methodName + 'Right'] = function(n){
return this.reverse()[methodName](n).reverse();};});




arrayEach(['filter','map','takeWhile'],function(methodName,index){
var type=index + 1,
isFilter=type != LAZY_MAP_FLAG;

LazyWrapper.prototype[methodName] = function(iteratee,thisArg){
var result=this.clone();
result.__iteratees__.push({'iteratee':getCallback(iteratee,thisArg,1),'type':type});
result.__filtered__ = result.__filtered__ || isFilter;
return result;};});




arrayEach(['first','last'],function(methodName,index){
var takeName='take' + (index?'Right':'');

LazyWrapper.prototype[methodName] = function(){
return this[takeName](1).value()[0];};});




arrayEach(['initial','rest'],function(methodName,index){
var dropName='drop' + (index?'':'Right');

LazyWrapper.prototype[methodName] = function(){
return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});




arrayEach(['pluck','where'],function(methodName,index){
var operationName=index?'filter':'map',
createCallback=index?baseMatches:property;

LazyWrapper.prototype[methodName] = function(value){
return this[operationName](createCallback(value));};});



LazyWrapper.prototype.compact = function(){
return this.filter(identity);};


LazyWrapper.prototype.reject = function(predicate,thisArg){
predicate = getCallback(predicate,thisArg,1);
return this.filter(function(value){
return !predicate(value);});};



LazyWrapper.prototype.slice = function(start,end){
start = start == null?0:+start || 0;

var result=this;
if(result.__filtered__ && (start > 0 || end < 0)){
return new LazyWrapper(result);}

if(start < 0){
result = result.takeRight(-start);}else 
if(start){
result = result.drop(start);}

if(end !== undefined){
end = +end || 0;
result = end < 0?result.dropRight(-end):result.take(end - start);}

return result;};


LazyWrapper.prototype.takeRightWhile = function(predicate,thisArg){
return this.reverse().takeWhile(predicate,thisArg).reverse();};


LazyWrapper.prototype.toArray = function(){
return this.take(POSITIVE_INFINITY);};



baseForOwn(LazyWrapper.prototype,function(func,methodName){
var checkIteratee=/^(?:filter|map|reject)|While$/.test(methodName),
retUnwrapped=/^(?:first|last)$/.test(methodName),
lodashFunc=lodash[retUnwrapped?'take' + (methodName == 'last'?'Right':''):methodName];

if(!lodashFunc){
return;}

lodash.prototype[methodName] = function(){
var args=retUnwrapped?[1]:arguments,
chainAll=this.__chain__,
value=this.__wrapped__,
isHybrid=!!this.__actions__.length,
isLazy=value instanceof LazyWrapper,
iteratee=args[0],
useLazy=isLazy || isArray(value);

if(useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1){

isLazy = useLazy = false;}

var interceptor=function(value){
return retUnwrapped && chainAll?
lodashFunc(value,1)[0]:
lodashFunc.apply(undefined,arrayPush([value],args));};


var action={'func':thru,'args':[interceptor],'thisArg':undefined},
onlyLazy=isLazy && !isHybrid;

if(retUnwrapped && !chainAll){
if(onlyLazy){
value = value.clone();
value.__actions__.push(action);
return func.call(value);}

return lodashFunc.call(undefined,this.value())[0];}

if(!retUnwrapped && useLazy){
value = onlyLazy?value:new LazyWrapper(this);
var result=func.apply(value,args);
result.__actions__.push(action);
return new LodashWrapper(result,chainAll);}

return this.thru(interceptor);};});




arrayEach(['join','pop','push','replace','shift','sort','splice','split','unshift'],function(methodName){
var func=(/^(?:replace|split)$/.test(methodName)?stringProto:arrayProto)[methodName],
chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',
retUnwrapped=/^(?:join|pop|replace|shift)$/.test(methodName);

lodash.prototype[methodName] = function(){
var args=arguments;
if(retUnwrapped && !this.__chain__){
return func.apply(this.value(),args);}

return this[chainName](function(value){
return func.apply(value,args);});};});





baseForOwn(LazyWrapper.prototype,function(func,methodName){
var lodashFunc=lodash[methodName];
if(lodashFunc){
var key=lodashFunc.name,
names=realNames[key] || (realNames[key] = []);

names.push({'name':methodName,'func':lodashFunc});}});



realNames[createHybridWrapper(undefined,BIND_KEY_FLAG).name] = [{'name':'wrapper','func':undefined}];


LazyWrapper.prototype.clone = lazyClone;
LazyWrapper.prototype.reverse = lazyReverse;
LazyWrapper.prototype.value = lazyValue;


lodash.prototype.chain = wrapperChain;
lodash.prototype.commit = wrapperCommit;
lodash.prototype.concat = wrapperConcat;
lodash.prototype.plant = wrapperPlant;
lodash.prototype.reverse = wrapperReverse;
lodash.prototype.toString = wrapperToString;
lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;


lodash.prototype.collect = lodash.prototype.map;
lodash.prototype.head = lodash.prototype.first;
lodash.prototype.select = lodash.prototype.filter;
lodash.prototype.tail = lodash.prototype.rest;

return lodash;}





var _=runInContext();


if(typeof define == 'function' && typeof define.amd == 'object' && define.amd){




root._ = _;



define(function(){
return _;});}else 



if(freeExports && freeModule){

if(moduleExports){
(freeModule.exports = _)._ = _;}else 


{
freeExports._ = _;}}else 


{

root._ = _;}}).

call(this);
});
__d('TypefaceTextView',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';var _require=









require('react-native/Libraries/react-native/react-native.js');var PropTypes=_require.PropTypes;var requireNativeComponent=_require.requireNativeComponent;

var iface={
name:'TypefaceTextView',
propTypes:{
fontFile:PropTypes.string,
numberOfLines:PropTypes.number}};



module.exports = requireNativeComponent('RNTypefaceTextView',iface);
});
__d('FoodOracle/Preference.js',["react-native/Libraries/react-native/react-native.js","FoodOracle/PreferenceView.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var PreferenceView=require('FoodOracle/PreferenceView.js');var 


StyleSheet=




React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var Component=React.Component;var View=React.View;var Text=React.Text;

var styles=StyleSheet.create({
container:{
flex:1}});var 



Preference=(function(_Component){_inherits(Preference,_Component);function Preference(){_classCallCheck(this,Preference);_get(Object.getPrototypeOf(Preference.prototype),'constructor',this).apply(this,arguments);}_createClass(Preference,[{key:'render',value:
function render(){
return (
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'rgba(114,192,253,1)',
tintColor:'rgba(20,50,87,1)',
titleTextColor:'rgba(20,50,87,1)',
initialRoute:{
leftButtonTitle:'>>>',
title:'Preference',
component:PreferenceView}}));}}]);return Preference;})(Component);






module.exports = Preference;
});
__d('FoodOracle/PreferenceView.js',["react-native/Libraries/react-native/react-native.js","react-native-fm-picker/index.js","FoodOracle/DB.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var FMPicker=require('react-native-fm-picker/index.js');
var DB=require('FoodOracle/DB.js');var 


StyleSheet=









React.StyleSheet;var Image=React.Image;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var ListView=React.ListView;var Text=React.Text;var Component=React.Component;var PickerIOS=React.PickerIOS;var PickerItemIOS=React.PickerItemIOS;var TouchableOpacity=React.TouchableOpacity;

var styles=StyleSheet.create({
container:{
flex:1,
justifyContent:'center',
alignItems:'center',
marginTop:65,
backgroundColor:'rgba(72,187,236,0.3)'},

instruction:{
fontSize:18,
fontFamily:'Arial',
color:'rgba(20,50,87,1)',
marginTop:20},

selectionText:{
fontSize:20,
fontFamily:'Arial',
color:'rgba(20,50,87,1)'},

display:{
fontSize:30,
fontFamily:'Arial',
marginTop:20,
color:'rgba(20,50,87,1)'}});



var PickerItemIOS=PickerIOS.Item;

var options=['none','american','italian','mexican','french','southwestern','indian',
'chinese','english','mediterranean','greek','spanish','german','thai','moroccan',
'irish','japanese','cuban','hawaiin','swedish','portugese'];var 

PreferenceView=(function(_Component){_inherits(PreferenceView,_Component);
function PreferenceView(props){var _this=this;_classCallCheck(this,PreferenceView);
_get(Object.getPrototypeOf(PreferenceView.prototype),'constructor',this).call(this,props);
this.state = {
cuisine:''};

DB.preferences.get({key:'cuisine'},function(result){
if(result.length == 0){
DB.preferences.add({key:'cuisine',value:'none'},function(result){
console.log(result);
_this.setState({cuisine:result[0].value});});}


console.log(result);
_this.setState({cuisine:result[0].value});});}_createClass(PreferenceView,[{key:'render',value:



function render(){var _this2=this;
return (
React.createElement(View,{style:styles.container},
React.createElement(Text,{style:styles.selectionText},'Current cuisine choice:'),

React.createElement(Text,{style:styles.display},' ',this.state.cuisine,' '),
React.createElement(Text,{
style:styles.instruction,
onPress:function(){
_this2.refs.picker.show();}},'Click here to change choice'),



React.createElement(FMPicker,{ref:'picker',
options:options,
onSubmit:function(option){
_this2.setState({cuisine:option});
DB.preferences.update({key:"cuisine"},{value:option},
function(result){console.log(result);});}})));}}]);return PreferenceView;})(Component);







module.exports = PreferenceView;
});
__d('react-native-fm-picker/index.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';


var React=require('react-native/Libraries/react-native/react-native.js');var 

StyleSheet=






React.StyleSheet;var Text=React.Text;var View=React.View;var TouchableOpacity=React.TouchableOpacity;var Modal=React.Modal;var PickerIOS=React.PickerIOS;var PickerItemIOS=React.PickerItemIOS;

var SCREEN_WIDTH=require('Dimensions').get('window').width;

var Component=React.createClass({displayName:'Component',
show:function(){
this.setState({modalVisible:true});},

getInitialState:function(){
return {
options:this.props.options,
labels:this.props.labels || this.props.options,
color:this.props.color || 'rgba(20,50,87,1)',
modalVisible:false,
selectedOption:this.props.options[0]};},


render:function(){var _this=this;
return (
React.createElement(Modal,{
animated:true,
transparent:true,
visible:this.state.modalVisible},
React.createElement(View,{style:styles.basicContainer},
React.createElement(View,{style:styles.modalContainer},
React.createElement(View,{style:styles.buttonView},
React.createElement(TouchableOpacity,{onPress:function(){
_this.setState({modalVisible:false});}},

React.createElement(Text,{style:{color:this.state.color}},'Cancel')),

React.createElement(TouchableOpacity,{onPress:function(){
if(_this.props.onSubmit)_this.props.onSubmit(_this.state.selectedOption);
_this.setState({modalVisible:false});}},

React.createElement(Text,{style:{color:this.state.color}},'Confirm'))),


React.createElement(View,{style:styles.mainBox},

React.createElement(PickerIOS,{
ref:'picker',
style:styles.bottomPicker,
selectedValue:this.state.selectedOption,
onValueChange:function(option){return _this.setState({selectedOption:option});}},

this.state.options.map(function(option,i){
var label=_this.state.labels[i] || option;
return (
React.createElement(PickerItemIOS,{
value:option,
label:label,
style:{color:_this.state.color}}));})))))));}});













var styles=StyleSheet.create({
basicContainer:{
flex:1,
justifyContent:'center',
alignItems:'center'},

modalContainer:{
position:'absolute',
bottom:0,
right:0,
left:0,
width:SCREEN_WIDTH,
justifyContent:'center',
alignItems:'center',
padding:0,
backgroundColor:'rgba(114,192,253,1)',
color:'#FFFFFF'},

buttonView:{
width:SCREEN_WIDTH,
padding:8,
borderTopWidth:0.5,
borderTopColor:'#48BBEC',
justifyContent:'space-between',
flexDirection:'row'},

bottomPicker:{
width:SCREEN_WIDTH,
fontSize:18,
color:'#FFFFFF'},

item:{
color:'#FFFFFF'},

mainBox:{}});



module.exports = Component;
});
__d('FoodOracle/DB.js',["react-native-db-models/index.js"],function(global, require, module, exports) {  var RNDBModel=require('react-native-db-models/index.js');

var DB={
"dictionary":new RNDBModel.create_db('dictionary'),
"favourites":new RNDBModel.create_db('favourites'),
"ingredients":new RNDBModel.create_db('ingredients'),
"preferences":new RNDBModel.create_db('preferences')};


module.exports = DB;
});
__d('react-native-db-models/index.js',["react-native-db-models/asyncstore.js","eventemitter3/index.js"],function(global, require, module, exports) {  'use strict';

var ReactNativeStore=require('react-native-db-models/asyncstore.js');
var Events=require('eventemitter3/index.js');
var RNDBModel={};
RNDBModel.DBEvents = new Events();

RNDBModel.create_db = function(db){
var me=this;
me.db_name = db;






me.get = function(query_data,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
var results=collection.where(query_data).find();
if(callback){
callback(results);}});};









me.get_id = function(id,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
var results=collection.get(id);
if(callback){
callback(results);}});};








me.get_all = function(callback){
ReactNativeStore.table(me.db_name).then(function(collection){
var results=collection.databaseData[me.db_name];
if(callback){
callback(results);}});};









me.add = function(data_to_add,callback){
ReactNativeStore.table(me.db_name).then(function(collection){

collection.add(data_to_add,function(added_data_id){
if(callback){
callback(added_data_id);}

RNDBModel.DBEvents.emit("all");});});};









me.add_all = function(data_to_add,callback){
if(data_to_add.length <= 0)return null;

var added_data=[];

var addItem=function(data_to_add){
if(data_to_add.length == 0 && callback){return callback(added_data);}
var data=data_to_add.pop();

me.add(data,function(data_added){
addItem(data_to_add);
added_data.push(data_added);});};



addItem(data_to_add);};







me.remove = function(query_data,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.where(query_data).remove(function(data_removed){
if(callback){
callback(data_removed);}});});};










me.remove_id = function(id,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.removeById(id,function(data_removed){
if(callback){
callback(data_removed);}

RNDBModel.DBEvents.emit("all");});});};








me.erase_db = function(callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.remove(function(data_removed){
if(callback){
callback(data_removed);}

RNDBModel.DBEvents.emit("all");});});};









me.update = function(query_data,replace_data,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.where(query_data).update(replace_data,function(data){
if(callback){
callback(data);}

RNDBModel.DBEvents.emit("all");});});};










me.update_id = function(id,replace_data,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.updateById(id,replace_data,function(data){
if(callback){
callback(data);}

RNDBModel.DBEvents.emit("all");});});};









me.remove_id = function(id,callback){
ReactNativeStore.table(me.db_name).then(function(collection){
collection.removeById(id,function(data_removed){
if(callback){
callback(data_removed);}

RNDBModel.DBEvents.emit("all");});});};};






module.exports = RNDBModel;
});
__d('react-native-db-models/asyncstore.js',["react-native/Libraries/react-native/react-native.js","promise-es6/lib/index.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var Promise=require('promise-es6/lib/index.js').Promise;

var AsyncStorage=React.AsyncStorage;

var reactNativeStore={};
var dbName="db_store";

var Model=function(tableName,databaseData){
this.tableName = tableName;
this.databaseData = databaseData;
this._where = null;
this._limit = 100;
this._offset = 0;
return this;};



reactNativeStore.createDataBase = function(){
var self=this;
return new Promise(function(resolve,reject){

AsyncStorage.setItem(dbName,JSON.stringify({}),function(err){
if(err){
reject(err);}else 
{
resolve();}});});};







reactNativeStore.saveTable = function(tableName,tableData){
var self=this;
return new Promise(function(resolve,reject){

self.getItem(dbName).then(function(databaseData){
databaseData[tableName] = tableData || {
'totalrows':0,
'autoinc':1,
'rows':{}};

AsyncStorage.setItem(dbName,JSON.stringify(databaseData),function(err){
if(err){
reject(err);}else 
{
resolve(databaseData);}});});});};








reactNativeStore.table = function(tableName){
var self=this;
return new Promise(function(resolve,reject){
return self.getItem(dbName).then(function(databaseData){

if(!databaseData)
self.createDataBase().then(function(){
self.saveTable(tableName).then(function(databaseData){
var model=new Model(tableName,databaseData?databaseData:{});
resolve(model);});});else 


{

if(!databaseData[tableName]){
self.saveTable(tableName).then(function(databaseData){
var model=new Model(tableName,databaseData?databaseData:{});
resolve(model);});}else 

{
var model=new Model(tableName,databaseData?databaseData:{});
resolve(model);}}});});};






reactNativeStore.getItem = function(key){
return new Promise(function(resolve,reject){
AsyncStorage.getItem(key,function(err,res){
if(err){
reject(err);}else 
{
resolve(JSON.parse(res));}});});};






Model.prototype.where = function(data){
this._where = data || null;
return this;};



Model.prototype.limit = function(data){
this._limit = data || 100;
return this;};


Model.prototype.offset = function(data){
this._offset = data || 0;
return this;};


Model.prototype.init = function(){
this.where();
this.limit();
this.offset();
return this;};


Model.prototype.update = function(data,callback){
var me=this;
var results=[];
var rows=this.databaseData[this.tableName]["rows"];

var hasParams=false;
if(this._where){
hasParams = true;}

if(hasParams){
for(var row in rows) {

var isMatch=true;

for(var key in this._where) {
if(rows[row][key] != this._where[key]){
isMatch = false;}}



if(isMatch){

results.push(this.databaseData[this.tableName]["rows"][row]["_id"]);
for(var i in data) {
this.databaseData[this.tableName]["rows"][row][i] = data[i];}}}




reactNativeStore.saveTable(this.tableName,this.databaseData[this.tableName]).then(function(data){
if(callback){
callback(data);}},

function(err){
if(callback){
callback(err);}});


this.init();}else 

{
if(callback){
callback(null);}}};




Model.prototype.updateById = function(id,data,callback){

this.where({
_id:id});


return this.update(data,callback);};


Model.prototype.remove = function(callback){

var results=[];
var rows=this.databaseData[this.tableName]["rows"];
var deleted_ids=[];
var hasParams=false;
if(this._where){
hasParams = true;}

var counter=0;
if(hasParams){
for(var row in rows) {
var isMatch=true;

for(var key in this._where) {

if(rows[row][key] != this._where[key]){
isMatch = false;}}


if(isMatch){
counter += 1;
deleted_ids.push(this.databaseData[this.tableName]["rows"][row]['_id']);
delete this.databaseData[this.tableName]["rows"][row];
this.databaseData[this.tableName]["totalrows"]--;}}}else 




{
counter = 0;
for(var row in rows) {
counter += 1;
deleted_ids.push(this.databaseData[this.tableName]["rows"][row]['_id']);
delete this.databaseData[this.tableName]["rows"][row];
this.databaseData[this.tableName]["totalrows"]--;}}


this.init();

if(counter === deleted_ids.length && callback){
reactNativeStore.saveTable(this.tableName,this.databaseData[this.tableName]).then(function(data){
if(callback){
var return_data={
results:data,
deleted_ids:deleted_ids};

callback(return_data);}},

function(err){
results.push(err);
if(callback){
var return_data={
error:err,
deleted_ids:deleted_ids};

callback(return_data);}});}else 



if(callback && deleted_ids.length === 0){
callback(null);}};




Model.prototype.removeById = function(id,callback){

this.where({
_id:id});


return this.remove(callback);};


Model.prototype.add = function(data,callback){
var autoinc=this.databaseData[this.tableName].autoinc;
data._id = autoinc;
this.databaseData[this.tableName].rows[autoinc] = data;
this.databaseData[this.tableName].autoinc += 1;
this.databaseData[this.tableName].totalrows += 1;
reactNativeStore.saveTable(this.tableName,this.databaseData[this.tableName]).then(function(added_data){
if(callback){
callback(data);}},

function(err){
if(callback){
callback(err);}});



this.init();};


Model.prototype.get = function(id){
this.where({
_id:id});

return this.find(1);};


Model.prototype.find = function(){

var results=[];
var rows=this.databaseData[this.tableName]["rows"];

var hasParams=false;
if(this._where){
hasParams = true;}


if(hasParams){
for(var row in rows) {
var isMatch=false;
for(var key in this._where) {
if(rows[row][key] == this._where[key]){
isMatch = true;}else 
{
isMatch = false;
break;}}



if(isMatch){
results.push(rows[row]);}}}else 


{
for(var row in rows) {
results.push(rows[row]);}}



if(typeof this._limit == 'number'){
return results.slice(this._offset,this._limit + this._offset);}else 
{
this.init();
return results;}};






module.exports = reactNativeStore;
});
__d('promise-es6/lib/index.js',["promise-es6/lib/utils.js"],function(global, require, module, exports) {  var 
utils=require('promise-es6/lib/utils.js');



var _global=(function(){return this;}).call();





exports.install = function(){
if(!_global.Promise){
_global.Promise = Promise;}};






exports.uninstall = function(){
if(_global.Promise && _global.Promise === Promise){
_global.Promise = void 0;
delete _global.Promise;}};






var PENDING=void 0;
var UNFULFILLED=0;
var FULFILLED=1;
var FAILED=2;






var Promise=exports.Promise = function(callback){

if(typeof callback !== 'function'){
throw new TypeError('Promise constructor takes a function argument');}



if(!(this instanceof Promise)){
throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');}


var self=this;


utils.defineProperty(this,'funcs',{
enumerable:false,
configurable:false,
writable:false,
value:[]});



utils.defineProperty(this,'value',{
enumerable:false,
configurable:true,
writable:false,
value:void 0});



try{
callback(resolve,reject);}
catch(err) {
reject(err);}



function resolve(value){
resolvePromise(self,value);}



function reject(value){
rejectPromise(self,value);}};












Promise.prototype.then = function(onResolve,onReject){
var self=this;


var promise=new Promise(function(){});


if(this.state){
setImmediate(function(){
invokeFunction(self,promise,self.state === FULFILLED?onResolve:onReject);});}else 




{
this.funcs.push(promise,onResolve,onReject);}


return promise;};








Promise.prototype.catch = function(onReject){
return this.then(null,onReject);};











Promise.resolve = function(value){
try{
var then=utils.thenable(value);}
catch(err) {
return new Promise(autoResolve);}


var callback=then?
function(resolve,reject){
then.call(value,resolve,reject);}:

autoResolve;

function autoResolve(resolve){
resolve(value);}


return new Promise(callback);};








Promise.reject = function(reason){
return new Promise(function(resolve,reject){
reject(reason);});};









Promise.all = function(promises){
return new Promise(function(resolve,reject){
if(!Array.isArray(promises)){
resolve([]);
return;}


var values=[];
var finished=false;
var remaining=promises.length;

promises.forEach(function(promise,index){
var then=utils.thenable(promise);

if(!then){
onResolve(promise);
return;}


then.call(promise,
function onResolve(value){
remaining--;
values[index] = value;
checkIfFinished();},

function onReject(reason){
finished = true;
reject(reason);});});




function checkIfFinished(){
if(!finished && !remaining){
finished = true;
resolve(values);}}});};












Promise.race = function(promises){
var promise=new Promise(function(){});

promises.forEach(function(childPromise){
childPromise.then(
function(value){
resolvePromise(promise,value);},

function(value){
rejectPromise(promise,value);});});




return promise;};











function resolvePromise(promise,value){
if(!handleThenable(promise,value)){
fulfillPromise(promise,value);}}











function handleThenable(promise,value){
var done,then;


try{
if(!(then = utils.thenable(value))){
return false;}}

catch(err) {
rejectPromise(promise,err);
return true;}



if(promise === value){
rejectPromise(promise,new TypeError('Circular resolution of promises'));
return true;}


try{

then.call(value,
function(subValue){
if(!done){
done = true;


if(value === subValue){
rejectPromise(promise,new TypeError('Circular resolution of promises'));
return;}


resolvePromise(promise,subValue);}},


function(subValue){
if(!done){
done = true;

rejectPromise(promise,subValue);}});}



catch(err) {
if(!done){
done = true;

rejectPromise(promise,err);}}



return true;}









function fulfillPromise(promise,value){
if(promise.state !== PENDING){return;}

setValue(promise,value);
setState(promise,UNFULFILLED);

setImmediate(function(){
setState(promise,FULFILLED);
invokeFunctions(promise);});}










function rejectPromise(promise,value){
if(promise.state !== PENDING){return;}

setValue(promise,value);
setState(promise,UNFULFILLED);

setImmediate(function(){
setState(promise,FAILED);
invokeFunctions(promise);});}










function setState(promise,state){
utils.defineProperty(promise,'state',{
enumerable:false,



configurable:!state,
writable:false,
value:state});}










function setValue(promise,value){
utils.defineProperty(promise,'value',{
enumerable:false,
configurable:false,
writable:false,
value:value});}









function invokeFunctions(promise){
var funcs=promise.funcs;

for(var i=0,c=funcs.length;i < c;i += 3) {
invokeFunction(promise,funcs[i],funcs[i + promise.state]);}




promise.funcs.length = 0;}










function invokeFunction(promise,child,func){
var value=promise.value;
var state=promise.state;


if(typeof func === 'function'){
try{
value = func(value);}
catch(err) {
rejectPromise(child,err);
return;}


resolvePromise(child,value);}else 


if(state === FULFILLED){
resolvePromise(child,value);}else 


if(state === FAILED){
rejectPromise(child,value);}}
});
__d('promise-es6/lib/utils.js',[],function(global, require, module, exports) {  var 
_global=(function(){return this;}).call();




exports.thenable = function(value){
if(value && (typeof value === 'object' || typeof value === 'function')){
try{
var then=value.then;}
catch(err) {
throw err;}


if(typeof then === 'function'){
return then;}}



return false;};






exports.defineProperty = function(obj,prop,opts){
if(Object.defineProperty){
try{
return Object.defineProperty(obj,prop,opts);}
catch(err) {}}


if(opts.value){
obj[prop] = opts.value;}};






if(!_global.setImmediate){
_global.setImmediate = function(func){
setTimeout(func,0);};}



exports.log = function(obj){
console.log(
require('util').inspect(obj,{
colors:true,
showHidden:true,
depth:2}));};
});
__d('eventemitter3/index.js',[],function(global, require, module, exports) {  'use strict';









var prefix=typeof Object.create !== 'function'?'~':false;









function EE(fn,context,once){
this.fn = fn;
this.context = context;
this.once = once || false;}









function EventEmitter(){}







EventEmitter.prototype._events = undefined;









EventEmitter.prototype.listeners = function listeners(event,exists){
var evt=prefix?prefix + event:event,
available=this._events && this._events[evt];

if(exists)return !!available;
if(!available)return [];
if(available.fn)return [available.fn];

for(var i=0,l=available.length,ee=new Array(l);i < l;i++) {
ee[i] = available[i].fn;}


return ee;};









EventEmitter.prototype.emit = function emit(event,a1,a2,a3,a4,a5){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return false;

var listeners=this._events[evt],
len=arguments.length,
args,
i;

if('function' === typeof listeners.fn){
if(listeners.once)this.removeListener(event,listeners.fn,undefined,true);

switch(len){
case 1:return (listeners.fn.call(listeners.context),true);
case 2:return (listeners.fn.call(listeners.context,a1),true);
case 3:return (listeners.fn.call(listeners.context,a1,a2),true);
case 4:return (listeners.fn.call(listeners.context,a1,a2,a3),true);
case 5:return (listeners.fn.call(listeners.context,a1,a2,a3,a4),true);
case 6:return (listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),true);}


for(i = 1,args = new Array(len - 1);i < len;i++) {
args[i - 1] = arguments[i];}


listeners.fn.apply(listeners.context,args);}else 
{
var length=listeners.length,
j;

for(i = 0;i < length;i++) {
if(listeners[i].once)this.removeListener(event,listeners[i].fn,undefined,true);

switch(len){
case 1:listeners[i].fn.call(listeners[i].context);break;
case 2:listeners[i].fn.call(listeners[i].context,a1);break;
case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;
default:
if(!args)for(j = 1,args = new Array(len - 1);j < len;j++) {
args[j - 1] = arguments[j];}


listeners[i].fn.apply(listeners[i].context,args);}}}




return true;};










EventEmitter.prototype.on = function on(event,fn,context){
var listener=new EE(fn,context || this),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};










EventEmitter.prototype.once = function once(event,fn,context){
var listener=new EE(fn,context || this,true),
evt=prefix?prefix + event:event;

if(!this._events)this._events = prefix?{}:Object.create(null);
if(!this._events[evt])this._events[evt] = listener;else 
{
if(!this._events[evt].fn)this._events[evt].push(listener);else 
this._events[evt] = [
this._events[evt],listener];}



return this;};











EventEmitter.prototype.removeListener = function removeListener(event,fn,context,once){
var evt=prefix?prefix + event:event;

if(!this._events || !this._events[evt])return this;

var listeners=this._events[evt],
events=[];

if(fn){
if(listeners.fn){
if(
listeners.fn !== fn || 
once && !listeners.once || 
context && listeners.context !== context)
{
events.push(listeners);}}else 

{
for(var i=0,length=listeners.length;i < length;i++) {
if(
listeners[i].fn !== fn || 
once && !listeners[i].once || 
context && listeners[i].context !== context)
{
events.push(listeners[i]);}}}}








if(events.length){
this._events[evt] = events.length === 1?events[0]:events;}else 
{
delete this._events[evt];}


return this;};








EventEmitter.prototype.removeAllListeners = function removeAllListeners(event){
if(!this._events)return this;

if(event)delete this._events[prefix?prefix + event:event];else 
this._events = prefix?{}:Object.create(null);

return this;};





EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;




EventEmitter.prototype.setMaxListeners = function setMaxListeners(){
return this;};





EventEmitter.prefixed = prefix;




if('undefined' !== typeof module){
module.exports = EventEmitter;}
});
__d('FoodOracle/Favourite.js',["react-native/Libraries/react-native/react-native.js","FoodOracle/FavouriteView.js","Ionicons"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var FavouriteView=require("FoodOracle/FavouriteView.js");
var Icon=require('Ionicons');var 


StyleSheet=



React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var View=React.View;var Text=React.Text;

var styles=StyleSheet.create({
container:{
flex:1}});






var Favourite=React.createClass({displayName:'Favourite',
render:function(){
return (



React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'rgba(114,192,253,1)',
tintColor:'rgba(20,50,87,1)',
titleTextColor:'rgba(20,50,87,1)',
initialRoute:{
leftButtonTitle:'>>>',
title:'CookBook',
component:FavouriteView}}));}});





module.exports = Favourite;
});
__d('FoodOracle/FavouriteView.js',["react-native/Libraries/react-native/react-native.js","Ionicons","FoodOracle/Fetch.js","FoodOracle/RecipeView.js","FoodOracle/DB.js","FoodOracle/Recommender.js","FoodOracle/SearchResults.js","Dimensions","react-native-refreshable-listview/index.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('Ionicons');
var Fetch=require('FoodOracle/Fetch.js');
var RecipeView=require('FoodOracle/RecipeView.js');
var DB=require('FoodOracle/DB.js');
var Recommender=require('FoodOracle/Recommender.js');
var SearchResults=require('FoodOracle/SearchResults.js');
var Dimensions=require('Dimensions');
var RefreshableListView=require('react-native-refreshable-listview/index.js');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;var 


Component=







React.Component;var StyleSheet=React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var View=React.View;var Text=React.Text;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;var TouchableOpacity=React.TouchableOpacity;

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'rgba(72,187,236,0.2)'},

topMargin:{
marginTop:65},


cellContainer:{
flexDirection:'row',
justifyContent:'flex-start',
backgroundColor:'rgba(72,187,236,0.2)',
padding:20,
width:width},

leftContainer:{
flex:4},

separator:{
height:2,
backgroundColor:'rgba(72,187,236,1)'},

buttonRemove:{
flex:1,
borderColor:'rgba(72,187,236,0.5)',
borderWidth:2,
borderRadius:8,
height:30,
width:90,
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

buttonText:{
fontSize:21,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

buttonContainerRight:{
flex:1,
alignSelf:'center',
marginRight:35},

buttonContainer:{
flex:0.0833,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent'},

buttonRecommend:{
flex:1,
borderColor:'rgba(72,187,236,0.5)',
borderWidth:3,
borderRadius:8,
alignSelf:'center',
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

flowRight:{
flexDirection:'row',
alignItems:'center',
marginLeft:10,
marginRight:10,
marginBottom:5,
height:49},


fillerView:{
height:49},


ingredientText:{
fontSize:23,
fontFamily:'Arial',
color:'rgba(20,56,86,1)'},

recipeSeparator:{
height:2,
width:120,
backgroundColor:'rgba(72,187,236,0.3)'},

extraText:{
fontSize:15,
fontFamily:'Arial',
color:'rgba(20,56,86,0.8)'}});



var resultCache={
recipes:false};


var sortByTime=function(item){
item.sort(compare);};


var compare=function(a,b){
if(a.totalTimeInSeconds < b.totalTimeInSeconds)
return -1;
if(a.totalTimeInSeconds > b.totalTimeInSeconds)
return 1;
return 0;};


var ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1 !== row2;}});



function addNewFavourite(recipeid,name,time,salty,sour,sweet,bitter,meaty,piquant){
DB.favourites.get({id:recipeid},function(result){
console.log(result);
if(result.length == 0){
DB.favourites.add({id:recipeid,recipeName:name,totalTimeInSeconds:time,saltyValue:salty,sourValue:sour,sweetValue:sweet,bitterValue:bitter,meatyValue:meaty,piquantValue:piquant},function(result){
console.log(result);});}else 


{
DB.favourites.update_id(result[0]._id,{recipeName:name,totalTimeInSeconds:time,saltyValue:salty,sourValue:sour,sweetValue:sweet,bitterValue:bitter,meatyValue:meaty,piquantValue:piquant},function(result){
console.log(result);});}});}var 








FavouriteView=(function(_Component){_inherits(FavouriteView,_Component);

function FavouriteView(props){_classCallCheck(this,FavouriteView);
_get(Object.getPrototypeOf(FavouriteView.prototype),'constructor',this).call(this,props);
this.state = {
isInitialized:false,
favourites:false};


this._refreshListView(function(){},[]);}_createClass(FavouriteView,[{key:'render',value:


function render(){var _this=this;
DB.preferences.get({key:'areFavoritesUpdated'},function(result){
if(result.length == 0){
DB.preferences.add({key:'areFavoritesUpdated',value:false},function(result){});}else 
if(result[0].value){
DB.preferences.update({key:'areFavoritesUpdated'},{value:false},function(result){
_this._refreshListView(function(){},[]);});}});



return (
React.createElement(View,{style:styles.container},
React.createElement(RefreshableListView,{
dataSource:ds.cloneWithRows(this.state.favourites),
renderRow:this.renderList.bind(this),
loadData:this._refreshListView.bind(this),
style:styles.listView,
automaticallyAdjustContentInsets:true,
refreshDescription:'Refreshing CookBook'}),

React.createElement(View,{style:styles.buttonContainer},
React.createElement(View,{style:styles.flowRight},
React.createElement(TouchableHighlight,{
style:styles.buttonRecommend,
underlayColor:'#99d9f4',
onPress:function(){return _this._onRecommendPress();}},
React.createElement(Text,{style:styles.buttonText},'Recommend Recipes')))),





React.createElement(View,{style:styles.fillerView})));}},{key:'renderList',value:




function renderList(recipe){var _this2=this;
return (
React.createElement(TouchableOpacity,{onPress:function(){return _this2.rowPressed(recipe.id);}},
React.createElement(View,null,
React.createElement(View,{style:styles.cellContainer},
React.createElement(View,{style:styles.leftContainer},
React.createElement(Text,{style:styles.ingredientText},recipe.recipeName),
React.createElement(View,{style:styles.recipeSeparator}),
React.createElement(Text,{style:styles.extraText},'Time: ',recipe.totalTimeInSeconds / 60,' Minutes')),

React.createElement(View,{style:styles.buttonContainerRight},
React.createElement(TouchableHighlight,{
style:styles.buttonRemove,
underlayColor:'#99d9f4',
onPress:function(){return _this2._onDeletePress(recipe.id);}},
React.createElement(Text,{style:styles.buttonText},'Remove')))),





React.createElement(View,{style:styles.separator}))));}},{key:'rowPressed',value:





function rowPressed(recipeID){
this._executeQuery(recipeID);}},{key:'_onDeletePress',value:



function _onDeletePress(recipeID){var _this3=this;
DB.favourites.remove({id:recipeID},function(result){
console.log('_onDeletePress');
console.log(result);
_this3._refreshListView(function(){},[]);});}},{key:'_onRecommendPress',value:



function _onRecommendPress(){
console.log('_onRecommendPress');
if(Object.keys(this.state.favourites).length != 0){
var recommender=new Recommender(this);
this._executeRecommenderQuery(recommender.calculateFlavorRanges(this.state.favourites));}}},{key:'_executeQuery',value:



function _executeQuery(query){
console.log('_executeQuery');
console.log(query);
var handler=function(self,responseData){
self._handleResponse(responseData);};

var errorHandler=function(error){
React.AlertIOS.alert(
'Error',
'There seems to be an issue connecting to the network.  ' + error);};


var fetch=new Fetch(this);
fetch.getRequest(encodeURIComponent(query),handler,errorHandler);}},{key:'_handleResponse',value:


function _handleResponse(response){
console.log('_handleResponse');
console.log(response);
this.props.navigator.push({
component:RecipeView,
passProps:{recipe:response}});}},{key:'_handleRecommenderResponse',value:



function _handleRecommenderResponse(response){
console.log('_handleRecommenderResponse');
var ids=[];
var x;
for(x in this.state.favourites) {
ids.push(this.state.favourites[x].id);}

var y;
for(y in response.matches) {
if(ids.indexOf(response.matches[y].id) != -1){
response.matches.splice(y,1);}}


this.props.navigator.push({
component:SearchResults,
passProps:{matches:response.matches}});}},{key:'_executeRecommenderQuery',value:



function _executeRecommenderQuery(query){
console.log('_executeRecommenderQuery');
console.log(query);
var handler=function(self,responseData){
resultCache.recipes = responseData.matches;
sortByTime(resultCache.recipes);
self._handleRecommenderResponse(responseData);};

var errorHandler=function(error){
React.AlertIOS.alert(
'Error',
'There seems to be an issue connecting to the network.  ' + error);};


var fetch=new Fetch(this);
fetch.recommendRequest(encodeURIComponent(query),handler,errorHandler);}},{key:'_refreshListView',value:


function _refreshListView(func,args){var _this4=this;
DB.favourites.get_all(function(result){
console.log('_refreshListView');
console.log(result);
_this4.setState({
isInitialized:true,
favourites:result.rows});

func.apply(_this4,args);});}}]);return FavouriteView;})(Component);


;



module.exports = FavouriteView;
});
__d('FoodOracle/Fetch.js',["FoodOracle/DB.js"],function(global, require, module, exports) {  var appID="a05ca702";
var appKey="7ce644115e75fa844afb42c6079fc6c8";
var baseURL="http://api.yummly.com/v1/api/recipes?";
var baseURLforGet="http://api.yummly.com/v1/api/recipe/";

var DB=require('FoodOracle/DB.js');

function Fetch(parentContext){

var subURL='_app_id=' + appID + '&_app_key=' + appKey;
this.parentContext = parentContext;

this.searchRequest = function(request,callback,errorHandler){
console.log(request);
DB.preferences.get({key:'cuisine'},function(result){
var cuisine;
if(result.length == 0){
cuisine = 'none';}else 
{
cuisine = result[0].value;}

if(cuisine != 'none'){
request = request + '%2C%20' + cuisine;}

var fetchURL=baseURL + subURL + '&q=' + request + '&requirePictures=true';

fetch(fetchURL).
then(function(response){return response.json();}).
then(function(responseData){
callback(parentContext,responseData);}).
catch(function(error){
errorHandler(error);});});};




this.getRequest = function(request,callback){
var fetchURL=baseURLforGet + request + '?' + subURL;
fetch(fetchURL).
then(function(response){return response.json();}).
then(function(responseData){
callback(parentContext,responseData);}).
catch(function(error){
errorHandler(error);});};



this.recommendRequest = function(request,callback){
DB.preferences.get({key:'cuisine'},function(result){
var cuisine;
if(result.length == 0){
cuisine = '';}else 
{
cuisine = '&q=' + result[0].value;}

var fetchURL=baseURL + subURL + cuisine + '&requirePictures=true' + request;
fetch(fetchURL).
then(function(response){return response.json();}).
then(function(responseData){
callback(parentContext,responseData);}).
catch(function(error){
errorHandler(error);});});};}





module.exports = Fetch;
});
__d('FoodOracle/RecipeView.js',["react-native/Libraries/react-native/react-native.js","NativeModules","Ionicons","RCTBrowser","Lightbox","FoodOracle/FavouriteView.js","FoodOracle/DB.js","Dimensions"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var KDSocialShare=require('NativeModules').KDSocialShare;
var Icon=require('Ionicons');
var Browser=require('RCTBrowser');
var Lightbox=require('Lightbox');
var Favourites=require('FoodOracle/FavouriteView.js');
var DB=require('FoodOracle/DB.js');
var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;var 


StyleSheet=






React.StyleSheet;var Image=React.Image;var View=React.View;var Text=React.Text;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var ListView=React.ListView;

var styles=StyleSheet.create({
container:{
flex:1,
marginTop:64,
justifyContent:'flex-start',
alignItems:'center',
backgroundColor:'rgba(72,187,236,0.3)'},


heading:{
backgroundColor:'#FFFFFF'},


separator:{
height:2,
backgroundColor:'rgba(72,187,236,1)'},


backdropImage:{
alignSelf:'stretch',
height:height / 3,
width:width},


backdropView:{
width:width / 2,
backgroundColor:'rgba(0,0,0,0.6)',
justifyContent:'center',
alignItems:'center',
borderColor:'#48BBEC',
borderWidth:1,
margin:10},



title:{
fontSize:20,
alignSelf:'center',
backgroundColor:'rgba(0,0,0,0)',
color:'white'},


ingredients:{
fontSize:20,
margin:5,
color:'rgba(20,56,86,1)',
paddingLeft:20,
paddingRight:20},


button:{
flex:1,
flexDirection:'row',
borderColor:'rgba(72,187,236,0.5)',
borderWidth:1,
height:height / 16,
width:width / 3,
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},


buttonText:{
fontSize:23,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

flowRightButtons:{

flexDirection:'row',
backgroundColor:'rgba(0,0,0,0)'},


flowRight:{
flexDirection:'row'},

cellContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
alignSelf:'center',
backgroundColor:'#F5FCFF',
width:width,
height:80,
backgroundColor:'rgba(0,0,0,0)'},


header:{
flex:1,
backgroundColor:'rgba(20,50,87,1)',
fontSize:25,
color:'white',
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
paddingLeft:25},


fillerView:{
height:49},

listPanel:{
flex:1}});var 



RecipeView=(function(_Component){_inherits(RecipeView,_Component);

function RecipeView(props){_classCallCheck(this,RecipeView);
_get(Object.getPrototypeOf(RecipeView.prototype),'constructor',this).call(this,props);
var ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1 !== row2;}});
var recipe=this.props.recipe;
this.state = {
dataSource:ds.cloneWithRows(recipe.ingredientLines)};}_createClass(RecipeView,[{key:'pressShare',value:



function pressShare(){
var object={};
var recipe=this.props.recipe;
object["link"] = recipe.source.sourceRecipeUrl;
object["imagelink"] = recipe.images["0"].hostedMediumUrl;

KDSocialShare.shareOnFacebook(object,
function(results){
console.log(results);});}},{key:'pressSource',value:




function pressSource(){
var recipe=this.props.recipe;
Browser.open(recipe.source.sourceRecipeUrl,{
navigationButtonsHidden:false,
showActionButton:false,
showPageTitles:true,
disableContextualPopupMenu:true,
hideWebViewBoundaries:true});}},{key:'pressSave',value:



function pressSave(){

var recipe=this.props.recipe;
var id=recipe.id;
var name=recipe.name;
var time=recipe.totalTimeInSeconds;
var salty=recipe.flavors.Salty;
var meaty=recipe.flavors.Meaty;
var bitter=recipe.flavors.Bitter;
var sour=recipe.flavors.Sour;
var sweet=recipe.flavors.Sweet;
var piquant=recipe.flavors.Piquant;

console.log(recipe.flavors.Salty);


this.addNewFavourite(id,name,time,salty,sour,sweet,bitter,meaty,piquant);}},{key:'render',value:


function render(){
var recipe=this.props.recipe;
console.log(recipe.images[0]['hostedLargeUrl']);
return (

React.createElement(View,{style:styles.container},

React.createElement(View,{style:styles.heading},
React.createElement(Lightbox,{navigator:this.navigator,
renderContent:function(){return (
React.createElement(Image,{style:styles.backdropImage,
source:{uri:recipe.images[0]['hostedLargeUrl']}}));}},

React.createElement(Image,{style:styles.backdropImage,
source:{uri:recipe.images[0]['hostedLargeUrl']}},
React.createElement(View,{style:styles.backdropView},
React.createElement(Text,{style:styles.title},recipe.name))))),






React.createElement(View,{style:styles.flowRightButtons},
React.createElement(TouchableHighlight,{
onPress:this.pressSource.bind(this),
style:styles.button,
underlayColor:'#99d9f4'},
React.createElement(View,{style:styles.flowRight},
React.createElement(Text,{style:styles.buttonText},'Cook '),
React.createElement(Icon,{name:'fork',size:26,color:'#FFFFFF'}),
React.createElement(Icon,{name:'knife',size:26,color:'#FFFFFF'}),
React.createElement(Icon,{name:'spoon',size:26,color:'#FFFFFF'}))),



React.createElement(TouchableHighlight,{
onPress:this.pressShare.bind(this),
style:styles.button,
underlayColor:'#99d9f4'},
React.createElement(View,{style:styles.flowRight},
React.createElement(Text,{style:styles.buttonText},'Share '),
React.createElement(Icon,{name:'social-facebook',size:26,color:'#FFFFFF'}))),



React.createElement(TouchableHighlight,{
onPress:this.pressSave.bind(this),
style:styles.button,
underlayColor:'#99d9f4'},
React.createElement(View,{style:styles.flowRight},
React.createElement(Text,{style:styles.buttonText},'Save '),
React.createElement(Icon,{name:'bookmark',size:26,color:'#FFFFFF'})))),



React.createElement(ListView,{
automaticallyAdjustContentInsets:false,
dataSource:this.state.dataSource,
renderRow:this.renderRow.bind(this)}),
React.createElement(View,{style:styles.fillerView})));}},{key:'renderRow',value:




function renderRow(ingredient){
return (
React.createElement(View,{style:styles.listPanel},
React.createElement(View,{style:styles.cellContainer},
React.createElement(Text,{style:styles.ingredients},ingredient)),

React.createElement(View,{style:styles.separator})));}},{key:'addNewFavourite',value:




function addNewFavourite(recipeid,name,time,salty,sour,sweet,bitter,meaty,piquant){
var updateFavorites=function(){
DB.favourites.get({id:recipeid},function(result){
console.log(result);
if(result.length == 0){
DB.favourites.add({id:recipeid,
recipeName:name,
totalTimeInSeconds:time,
saltyValue:salty,
sourValue:sour,
sweetValue:sweet,
bitterValue:bitter,
meatyValue:meaty,
piquantValue:piquant},
function(result){
console.log(result);});}else 



{
DB.favourites.update_id(result[0]._id,{recipeName:name,
totalTimeInSeconds:time,
saltyValue:salty,
sourValue:sour,
sweetValue:sweet,
bitterValue:bitter,
meatyValue:meaty,
piquantValue:piquant},function(result){
console.log(result);});}});};




DB.preferences.get({key:'areFavoritesUpdated'},function(result){
if(result.length == 0){
DB.preferences.add({key:'areFavoritesUpdated',value:true},function(result){
updateFavorites();});}else 

{
DB.preferences.update({key:'areFavoritesUpdated'},{value:true},function(result){
updateFavorites();});}});}}]);return RecipeView;})(Component);






module.exports = RecipeView;
});
__d('RCTBrowser',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';





var React=require('react-native/Libraries/react-native/react-native.js');var 


Browser=

React.NativeModules.Browser;

var RCTBrowserExport={
open:function(url){var options=arguments.length <= 1 || arguments[1] === undefined?{}:arguments[1];
Browser.presentUrl(url,options);}};



module.exports = RCTBrowserExport;
});
__d('Lightbox',["react-native/Libraries/react-native/react-native.js","react-timer-mixin/TimerMixin.js","LightboxOverlay"],function(global, require, module, exports) {  'use strict';




var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=





React.PropTypes;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var Animated=React.Animated;var Children=React.Children;var cloneElement=React.cloneElement;
var TimerMixin=require('react-timer-mixin/TimerMixin.js');

var LightboxOverlay=require('LightboxOverlay');

var Lightbox=React.createClass({displayName:'Lightbox',
mixins:[TimerMixin],

propTypes:{
activeProps:PropTypes.object,
renderHeader:PropTypes.func,
renderContent:PropTypes.func,
underlayColor:PropTypes.string,
onOpen:PropTypes.func,
onClose:PropTypes.func,
springConfig:PropTypes.shape({
tension:PropTypes.number,
friction:PropTypes.number}),

swipeToDismiss:PropTypes.bool},


getDefaultProps:function(){
return {
swipeToDismiss:true,
onOpen:function(){},
onClose:function(){}};},



getInitialState:function(){
return {
isOpen:false,
origin:{
x:0,
y:0,
width:0,
height:0},

layoutOpacity:new Animated.Value(1)};},



getContent:function(){
if(this.props.renderContent){
return this.props.renderContent();}else 
if(this.props.activeProps){
return cloneElement(
Children.only(this.props.children),
this.props.activeProps);}


return this.props.children;},


getOverlayProps:function(){
return {
isOpen:this.state.isOpen,
origin:this.state.origin,
renderHeader:this.props.renderHeader,
swipeToDismiss:this.props.swipeToDismiss,
springConfig:this.props.springConfig,
children:this.getContent(),
onClose:this.onClose};},



open:function(){var _this=this;
this._root.measure(function(ox,oy,width,height,px,py){
_this.props.onOpen();

_this.setState({
isOpen:_this.props.navigator?true:false,
isAnimating:true,
origin:{
width:width,
height:height,
x:px,
y:py}},

function(){
if(_this.props.navigator){
var route={
component:LightboxOverlay,
passProps:_this.getOverlayProps()};

var routes=_this.props.navigator.getCurrentRoutes();
routes.push(route);
_this.props.navigator.immediatelyResetRouteStack(routes);}else 
{
_this.setState({
isOpen:true});}


_this.setTimeout(function(){
_this.state.layoutOpacity.setValue(0);});});});},





close:function(){
throw new Error('Lightbox.close method is deprecated. Use renderHeader(close) prop instead.');},


onClose:function(){
this.state.layoutOpacity.setValue(1);
this.setState({
isOpen:false},
this.props.onClose);
if(this.props.navigator){
var routes=this.props.navigator.getCurrentRoutes();
routes.pop();
this.props.navigator.immediatelyResetRouteStack(routes);}},



render:function(){var _this2=this;

return (
React.createElement(View,{
ref:function(component){return _this2._root = component;},
style:this.props.style,
onLayout:function(){}},

React.createElement(Animated.View,{style:{opacity:this.state.layoutOpacity}},
React.createElement(TouchableHighlight,{
underlayColor:this.props.underlayColor,
onPress:this.open},

this.props.children)),


this.props.navigator?false:React.createElement(LightboxOverlay,this.getOverlayProps())));}});





module.exports = Lightbox;
});
__d('react-timer-mixin/TimerMixin.js',[],function(global, require, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(function(id){
GLOBAL.clearTimeout(id);});

this[_timeouts] = null;
this[_intervals] && this[_intervals].forEach(function(id){
GLOBAL.clearInterval(id);});

this[_intervals] = null;
this[_immediates] && this[_immediates].forEach(function(id){
GLOBAL.clearImmediate(id);});

this[_immediates] = null;
this[_rafs] && this[_rafs].forEach(function(id){
GLOBAL.cancelAnimationFrame(id);});

this[_rafs] = null;},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;
});
__d('LightboxOverlay',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=










React.PropTypes;var View=React.View;var Text=React.Text;var Animated=React.Animated;var StyleSheet=React.StyleSheet;var Dimensions=React.Dimensions;var PanResponder=React.PanResponder;var TouchableOpacity=React.TouchableOpacity;var StatusBarIOS=React.StatusBarIOS;var Modal=React.Modal;var Platform=React.Platform;

var WINDOW_HEIGHT=Dimensions.get('window').height;
var WINDOW_WIDTH=Dimensions.get('window').width;
var DRAG_DISMISS_THRESHOLD=150;
var STATUS_BAR_OFFSET=Platform.OS === 'android'?-25:0;

var LightboxOverlay=React.createClass({displayName:'LightboxOverlay',
propTypes:{
origin:PropTypes.shape({
x:PropTypes.number,
y:PropTypes.number,
width:PropTypes.number,
height:PropTypes.number}),

springConfig:PropTypes.shape({
tension:PropTypes.number,
friction:PropTypes.number}),

isOpen:PropTypes.bool,
renderHeader:PropTypes.func,
onOpen:PropTypes.func,
onClose:PropTypes.func,
swipeToDismiss:PropTypes.bool},


getInitialState:function(){
return {
isAnimating:false,
isPanning:false,
target:{
x:0,
y:0,
opacity:1},

pan:new Animated.Value(0),
openVal:new Animated.Value(0)};},



getDefaultProps:function(){
return {
springConfig:{tension:30,friction:7}};},



componentWillMount:function(){var _this=this;
this._panResponder = PanResponder.create({

onStartShouldSetPanResponder:function(evt,gestureState){return !_this.state.isAnimating;},
onStartShouldSetPanResponderCapture:function(evt,gestureState){return !_this.state.isAnimating;},
onMoveShouldSetPanResponder:function(evt,gestureState){return !_this.state.isAnimating;},
onMoveShouldSetPanResponderCapture:function(evt,gestureState){return !_this.state.isAnimating;},

onPanResponderGrant:function(evt,gestureState){
_this.state.pan.setValue(0);
_this.setState({isPanning:true});},

onPanResponderMove:Animated.event([
null,
{dy:this.state.pan}]),

onPanResponderTerminationRequest:function(evt,gestureState){return true;},
onPanResponderRelease:function(evt,gestureState){
if(Math.abs(gestureState.dy) > DRAG_DISMISS_THRESHOLD){
_this.setState({
isPanning:false,
target:{
y:gestureState.dy,
x:gestureState.dx,
opacity:1 - Math.abs(gestureState.dy / WINDOW_HEIGHT)}});


_this.close();}else 
{
Animated.spring(
_this.state.pan,_extends({
toValue:0},_this.props.springConfig)).
start(function(){_this.setState({isPanning:false});});}}});},





componentDidMount:function(){
if(this.props.isOpen){
this.open();}},



open:function(){var _this2=this;
if(StatusBarIOS){
StatusBarIOS.setHidden(true,'fade');}

this.state.pan.setValue(0);
this.setState({
isAnimating:true,
target:{
x:0,
y:0,
opacity:1}});



Animated.spring(
this.state.openVal,_extends({
toValue:1},this.props.springConfig)).
start(function(){return _this2.setState({isAnimating:false});});},


close:function(){var _this3=this;
if(StatusBarIOS){
StatusBarIOS.setHidden(false,'fade');}

this.setState({
isAnimating:true});

Animated.spring(
this.state.openVal,_extends({
toValue:0},this.props.springConfig)).
start(function(){
_this3.props.onClose();
_this3.setState({
isAnimating:false});});},




componentWillReceiveProps:function(props){
if(this.props.isOpen != props.isOpen && props.isOpen){
this.open();}},



render:function(){var _props=





this.props;var isOpen=_props.isOpen;var renderHeader=_props.renderHeader;var swipeToDismiss=_props.swipeToDismiss;var origin=_props.origin;var _state=






this.state;var isPanning=_state.isPanning;var isAnimating=_state.isAnimating;var openVal=_state.openVal;var target=_state.target;


var lightboxOpacityStyle={
opacity:openVal.interpolate({inputRange:[0,1],outputRange:[0,target.opacity]})};


var handlers;
if(swipeToDismiss){
handlers = this._panResponder.panHandlers;}


var dragStyle;
if(isPanning){
dragStyle = {
top:this.state.pan};

lightboxOpacityStyle.opacity = this.state.pan.interpolate({inputRange:[-WINDOW_HEIGHT,0,WINDOW_HEIGHT],outputRange:[0,1,0]});}


var openStyle=[styles.open,{
left:openVal.interpolate({inputRange:[0,1],outputRange:[origin.x,target.x]}),
top:openVal.interpolate({inputRange:[0,1],outputRange:[origin.y + STATUS_BAR_OFFSET,target.y + STATUS_BAR_OFFSET]}),
width:openVal.interpolate({inputRange:[0,1],outputRange:[origin.width,WINDOW_WIDTH]}),
height:openVal.interpolate({inputRange:[0,1],outputRange:[origin.height,WINDOW_HEIGHT]})}];


var background=React.createElement(Animated.View,{style:[styles.background,lightboxOpacityStyle]});
var header=React.createElement(Animated.View,{style:[styles.header,lightboxOpacityStyle]},renderHeader?
renderHeader(this.close):

React.createElement(TouchableOpacity,{onPress:this.close},
React.createElement(Text,{style:styles.closeButton},'×')));



var content=
React.createElement(Animated.View,_extends({style:[openStyle,dragStyle]},handlers),
this.props.children);


if(this.props.navigator){
return (
React.createElement(View,null,
background,
content,
header));}



return (
React.createElement(Modal,{visible:isOpen,transparent:true},
background,
content,
header));}});





var styles=StyleSheet.create({
background:{
position:'absolute',
top:0,
left:0,
width:WINDOW_WIDTH,
height:WINDOW_HEIGHT,
backgroundColor:'black'},

open:{
position:'absolute',
flex:1,
justifyContent:'center',

backgroundColor:'transparent'},

header:{
position:'absolute',
top:0,
left:0,
width:WINDOW_WIDTH,
backgroundColor:'transparent'},

closeButton:{
fontSize:35,
color:'white',
lineHeight:40,
width:40,
textAlign:'center',
shadowOffset:{
width:0,
height:0},

shadowRadius:1.5,
shadowColor:'black',
shadowOpacity:0.8}});



module.exports = LightboxOverlay;
});
__d('FoodOracle/Recommender.js',["FoodOracle/DB.js","mathjs/index.js"],function(global, require, module, exports) {  var DB=require('FoodOracle/DB.js');
var Math=require('mathjs/index.js');

function Recommender(parentContext){
this.parentContext = parentContext;

this.calculateFlavorRanges = function(favorites){

var saltyValues=[];
var sourValues=[];
var sweetValues=[];
var bitterValues=[];
var meatyValues=[];
var piquantValues=[];
var i;
for(i in favorites) {
if(favorites[i].saltyValue != undefined)saltyValues.push(favorites[i].saltyValue);
if(favorites[i].sourValue != undefined)sourValues.push(favorites[i].sourValue);
if(favorites[i].sweetValue != undefined)sweetValues.push(favorites[i].sweetValue);
if(favorites[i].bitterValue != undefined)bitterValues.push(favorites[i].bitterValue);
if(favorites[i].meatyValue != undefined)meatyValues.push(favorites[i].meatyValue);
if(favorites[i].piquantValue != undefined)piquantValues.push(favorites[i].piquantValue);}


var saltyMean=Math.mean(saltyValues);
var saltySTD=Math.std(saltyValues,'uncorrected');
var saltyMin=saltyMean - saltySTD;
if(saltyMin < 0){saltyMin = 0;}
var saltyMax=saltyMean + saltySTD;
if(saltyMax > 1){saltyMax = 1;}

var sourMean=Math.mean(sourValues);
var sourSTD=Math.std(sourValues,'uncorrected');
var sourMin=sourMean - sourSTD;
if(sourMin < 0){sourMin = 0;}
var sourMax=sourMean + sourSTD;
if(sourMax > 1){sourMax = 1;}

var sweetMean=Math.mean(sweetValues);
var sweetSTD=Math.std(sweetValues,'uncorrected');
var sweetMin=sweetMean - sweetSTD;
if(sweetMin < 0){sweetMin = 0;}
var sweetMax=sweetMean + sweetSTD;
if(sweetMax > 1){sweetMax = 1;}

var bitterMean=Math.mean(bitterValues);
var bitterSTD=Math.std(bitterValues,'uncorrected');
var bitterMin=bitterMean - bitterSTD;
if(bitterMin < 0){bitterMin = 0;}
var bitterMax=bitterMean + bitterSTD;
if(bitterMax > 1){bitterMax = 1;}

var meatyMean=Math.mean(meatyValues);
var meatySTD=Math.std(meatyValues,'uncorrected');
var meatyMin=meatyMean - meatySTD;
if(meatyMin < 0){meatyMin = 0;}
var meatyMax=meatyMean + meatySTD;
if(meatyMax > 1){meatyMax = 1;}

var piquantMean=Math.mean(piquantValues);
var piquantSTD=Math.std(piquantValues,'uncorrected');
var piquantMin=piquantMean - piquantSTD;
if(piquantMin < 0){piquantMin = 0;}
var piquantMax=piquantMean + piquantSTD;
if(piquantMax > 1){piquantMax = 1;}

var query='&flavor.salty.min=' + saltyMin + '&flavor.salty.max=' + saltyMax + 
'&flavor.sour.min=' + sourMin + '&flavor.sour.max=' + sourMax + 
'&flavor.sweet.min=' + sweetMin + '&flavor.sweet.max=' + sweetMax + 
'&flavor.bitter.min=' + bitterMin + '&flavor.bitter.max=' + bitterMax + 
'&flavor.meaty.min=' + meatyMin + '&flavor.meaty.max=' + meatyMax + 
'&flavor.piquant.min=' + piquantMin + '&flavor.piquant.max=' + piquantMax;
return query;};}



module.exports = Recommender;
});
__d('mathjs/index.js',["mathjs/core.js","mathjs/lib/index.js"],function(global, require, module, exports) {  var core=require('mathjs/core.js');
























function create(config){

var math=core.create(config);
math.create = create;


math['import'](require('mathjs/lib/index.js'));

return math;}



module.exports = create();
});
__d('mathjs/core.js',["mathjs/lib/core/core.js"],function(global, require, module, exports) {  module.exports = require('mathjs/lib/core/core.js');
});
__d('mathjs/lib/core/core.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/object.js","mathjs/lib/core/typed.js","mathjs/lib/utils/emitter.js","mathjs/lib/core/import.js","mathjs/lib/core/config.js"],function(global, require, module, exports) {  var isFactory=require('mathjs/lib/utils/object.js').isFactory;
var deepExtend=require('mathjs/lib/utils/object.js').deepExtend;
var typedFactory=require('mathjs/lib/core/typed.js');
var emitter=require('mathjs/lib/utils/emitter.js');

var importFactory=require('mathjs/lib/core/import.js');
var configFactory=require('mathjs/lib/core/config.js');



























exports.create = function create(options){

if(typeof Object.create !== 'function'){
throw new Error('ES5 not supported by this JavaScript engine. ' + 
'Please load the es5-shim and es5-sham library for compatibility.');}



var factories=[];
var instances=[];


var math=emitter.mixin({});
math.type = {};
math.expression = {
transform:Object.create(math)};



math.typed = typedFactory.create(math.type);


var _config={


epsilon:1e-14,


matrix:'matrix',


number:'number',


precision:64,





predictable:false};


if(options){

deepExtend(_config,options);}









function load(factory){
if(!isFactory(factory)){
throw new Error('Factory object with properties `type`, `name`, and `factory` expected');}


var index=factories.indexOf(factory);
var instance;
if(index === -1){

if(factory.math === true){

instance = factory.factory(math.type,_config,load,math.typed,math);}else 

{
instance = factory.factory(math.type,_config,load,math.typed);}



factories.push(factory);
instances.push(instance);}else 

{

instance = instances[index];}


return instance;}



math['import'] = load(importFactory);
math['config'] = load(configFactory);

return math;};
});
__d('mathjs/lib/utils/object.js',[],function(global, require, module, exports) {  'use strict';












exports.clone = function clone(x){
var type=typeof x;


if(type === 'number' || type === 'string' || type === 'boolean' || 
x === null || x === undefined){
return x;}



if(typeof x.clone === 'function'){
return x.clone();}



if(Array.isArray(x)){
return x.map(function(value){
return clone(value);});}



if(x instanceof Number)return new Number(x.valueOf());
if(x instanceof String)return new String(x.valueOf());
if(x instanceof Boolean)return new Boolean(x.valueOf());
if(x instanceof Date)return new Date(x.valueOf());
if(x && x.isBigNumber === true)return x;
if(x instanceof RegExp)throw new TypeError('Cannot clone ' + x);


var m={};
for(var key in x) {
if(x.hasOwnProperty(key)){
m[key] = clone(x[key]);}}


return m;};








exports.extend = function(a,b){
for(var prop in b) {
if(b.hasOwnProperty(prop)){
a[prop] = b[prop];}}


return a;};








exports.deepExtend = function deepExtend(a,b){

if(Array.isArray(b)){
throw new TypeError('Arrays are not supported by deepExtend');}


for(var prop in b) {
if(b.hasOwnProperty(prop)){
if(b[prop] && b[prop].constructor === Object){
if(a[prop] === undefined){
a[prop] = {};}

if(a[prop].constructor === Object){
deepExtend(a[prop],b[prop]);}else 

{
a[prop] = b[prop];}}else 

if(Array.isArray(b[prop])){
throw new TypeError('Arrays are not supported by deepExtend');}else 
{
a[prop] = b[prop];}}}



return a;};








exports.deepEqual = function deepEqual(a,b){
var prop,i,len;
if(Array.isArray(a)){
if(!Array.isArray(b)){
return false;}


if(a.length != b.length){
return false;}


for(i = 0,len = a.length;i < len;i++) {
if(!exports.deepEqual(a[i],b[i])){
return false;}}


return true;}else 

if(a instanceof Object){
if(Array.isArray(b) || !(b instanceof Object)){
return false;}


for(prop in a) {

if(!exports.deepEqual(a[prop],b[prop])){
return false;}}


for(prop in b) {

if(!exports.deepEqual(a[prop],b[prop])){
return false;}}


return true;}else 

{
return typeof a === typeof b && a == b;}};







exports.canDefineProperty = function(){

try{
if(Object.defineProperty){
Object.defineProperty({},'x',{get:function(){}});
return true;}}

catch(e) {}

return false;};












exports.lazy = function(object,prop,fn){
if(exports.canDefineProperty()){
var _uninitialized=true;
var _value;
Object.defineProperty(object,prop,{
get:function(){
if(_uninitialized){
_value = fn();
_uninitialized = false;}

return _value;},


set:function(value){
_value = value;
_uninitialized = false;},


configurable:true,
enumerable:true});}else 


{

object[prop] = fn();}};










exports.traverse = function(object,path){
var obj=object;

if(path){
var names=path.split('.');
for(var i=0;i < names.length;i++) {
var name=names[i];
if(!(name in obj)){
obj[name] = {};}

obj = obj[name];}}



return obj;};














exports.isFactory = function(object){
return object && typeof object.factory === 'function';};
});
__d('mathjs/lib/core/typed.js',["typed-function/typed-function.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  var typedFunction=require('typed-function/typed-function.js');
var digits=require('mathjs/lib/utils/number.js').digits;


var createTyped=function(){


createTyped = typedFunction.create;
return typedFunction;};







exports.create = function create(type){



var typed=createTyped();




typed.types = [
{name:'number',test:function(x){return typeof x === 'number';}},
{name:'Complex',test:function(x){return x && x.isComplex;}},
{name:'BigNumber',test:function(x){return x && x.isBigNumber;}},
{name:'Fraction',test:function(x){return x && x.isFraction;}},
{name:'Unit',test:function(x){return x && x.isUnit;}},
{name:'string',test:function(x){return typeof x === 'string';}},
{name:'Array',test:Array.isArray},
{name:'Matrix',test:function(x){return x && x.isMatrix;}},
{name:'DenseMatrix',test:function(x){return x && x.isDenseMatrix;}},
{name:'SparseMatrix',test:function(x){return x && x.isSparseMatrix;}},
{name:'ImmutableDenseMatrix',test:function(x){return x && x.isImmutableDenseMatrix;}},
{name:'Range',test:function(x){return x && x.isRange;}},
{name:'Index',test:function(x){return x && x.isIndex;}},
{name:'boolean',test:function(x){return typeof x === 'boolean';}},
{name:'ResultSet',test:function(x){return x && x.isResultSet;}},
{name:'Help',test:function(x){return x && x.isHelp;}},
{name:'function',test:function(x){return typeof x === 'function';}},
{name:'Date',test:function(x){return x instanceof Date;}},
{name:'RegExp',test:function(x){return x instanceof RegExp;}},
{name:'Object',test:function(x){return typeof x === 'object';}},
{name:'null',test:function(x){return x === null;}},
{name:'undefined',test:function(x){return x === undefined;}}];



typed.conversions = [
{
from:'number',
to:'BigNumber',
convert:function(x){

if(digits(x) > 15){
throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + 
'(value: ' + x + '). ' + 
'Use function bignumber(x) to convert to BigNumber.');}

return new type.BigNumber(x);}},

{
from:'number',
to:'Complex',
convert:function(x){
return new type.Complex(x,0);}},

{
from:'number',
to:'string',
convert:function(x){
return x + '';}},

{
from:'BigNumber',
to:'Complex',
convert:function(x){
return new type.Complex(x.toNumber(),0);}},

{
from:'number',
to:'Fraction',
convert:function(x){
if(digits(x) > 15){
throw new TypeError('Cannot implicitly convert a number with >15 significant digits to Fraction ' + 
'(value: ' + x + '). ' + 
'Use function fraction(x) to convert to Fraction.');}

return new type.Fraction(x);}},

{
from:'string',
to:'number',
convert:function(x){
var n=Number(x);
if(isNaN(n)){
throw new Error('Cannot convert "' + x + '" to a number');}

return n;}},

{
from:'boolean',
to:'number',
convert:function(x){
return +x;}},

{
from:'boolean',
to:'BigNumber',
convert:function(x){
return new type.BigNumber(+x);}},

{
from:'boolean',
to:'string',
convert:function(x){
return +x;}},

{
from:'null',
to:'number',
convert:function(){
return 0;}},

{
from:'null',
to:'string',
convert:function(){
return 'null';}},

{
from:'null',
to:'BigNumber',
convert:function(){
return new type.BigNumber(0);}},

{
from:'Array',
to:'Matrix',
convert:function(array){

return new type.DenseMatrix(array);}},

{
from:'Matrix',
to:'Array',
convert:function(matrix){
return matrix.valueOf();}}];




return typed;};
});
__d('typed-function/typed-function.js',[],function(global, require, module, exports) {  'use strict';








(function(factory){
if(typeof define === 'function' && define.amd){

define([],factory);}else 
if(typeof exports === 'object'){



module.exports = factory();}else 
{

window.typed = factory();}})(

function(){


function create(){






function getTypeTest(name){
var test;
for(var i=0;i < typed.types.length;i++) {
var entry=typed.types[i];
if(entry.name === name){
test = entry.test;
break;}}



if(!test){
var hint;
for(i = 0;i < typed.types.length;i++) {
entry = typed.types[i];
if(entry.name.toLowerCase() == name.toLowerCase()){
hint = entry.name;
break;}}



throw new Error('Unknown type "' + name + '"' + (
hint?'. Did you mean "' + hint + '"?':''));}

return test;}







function getName(fns){
var name='';

for(var i=0;i < fns.length;i++) {
var fn=fns[i];


if(fn.name != ''){
if(name == ''){
name = fn.name;}else 

if(name != fn.name){
var err=new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');
err.data = {
actual:fn.name,
expected:name};

throw err;}}}




return name;}

















function createError(fn,argCount,index,actual,expected){
var actualType=getTypeOf(actual);
var _expected=expected?expected.split(','):null;
var _fn=fn || 'unnamed';
var anyType=_expected && contains(_expected,'any');
var message;
var data={
fn:fn,
index:index,
actual:actual,
expected:_expected};


if(_expected){
if(argCount > index && !anyType){

message = 'Unexpected type of argument in function ' + _fn + 
' (expected: ' + _expected.join(' or ') + ', actual: ' + actualType + ', index: ' + index + ')';}else 

{

message = 'Too few arguments in function ' + _fn + 
' (expected: ' + _expected.join(' or ') + ', index: ' + index + ')';}}else 


{

message = 'Too many arguments in function ' + _fn + 
' (expected: ' + index + ', actual: ' + argCount + ')';}


var err=new TypeError(message);
err.data = data;
return err;}








function Refs(name){
this.name = name || 'refs';
this.categories = {};}








Refs.prototype.add = function(fn,category){
var cat=category || 'fn';
if(!this.categories[cat])this.categories[cat] = [];

var index=this.categories[cat].indexOf(fn);
if(index == -1){
index = this.categories[cat].length;
this.categories[cat].push(fn);}


return cat + index;};






Refs.prototype.toCode = function(){
var code=[];
var path=this.name + '.categories';
var categories=this.categories;

for(var cat in categories) {
if(categories.hasOwnProperty(cat)){
var category=categories[cat];

for(var i=0;i < category.length;i++) {
code.push('var ' + cat + i + ' = ' + path + '[\'' + cat + '\'][' + i + '];');}}}




return code.join('\n');};









function Param(types,varArgs){

if(typeof types === 'string'){

var _types=types.trim();
var _varArgs=_types.substr(0,3) === '...';
if(_varArgs){
_types = _types.substr(3);}

if(_types === ''){
this.types = ['any'];}else 

{
this.types = _types.split('|');
for(var i=0;i < this.types.length;i++) {
this.types[i] = this.types[i].trim();}}}else 



if(Array.isArray(types)){
this.types = types;}else 

if(types instanceof Param){
return types.clone();}else 

{
throw new Error('String or Array expected');}



this.conversions = [];



this.varArgs = _varArgs || varArgs || false;


this.anyType = this.types.indexOf('any') !== -1;}











Param.compare = function(a,b){

if(a.anyType)return 1;
if(b.anyType)return -1;

if(contains(a.types,'Object'))return 1;
if(contains(b.types,'Object'))return -1;

if(a.hasConversions()){
if(b.hasConversions()){
var i,ac,bc;

for(i = 0;i < a.conversions.length;i++) {
if(a.conversions[i] !== undefined){
ac = a.conversions[i];
break;}}



for(i = 0;i < b.conversions.length;i++) {
if(b.conversions[i] !== undefined){
bc = b.conversions[i];
break;}}



return typed.conversions.indexOf(ac) - typed.conversions.indexOf(bc);}else 

{
return 1;}}else 


{
if(b.hasConversions()){
return -1;}else 

{

var ai,bi;

for(i = 0;i < typed.types.length;i++) {
if(typed.types[i].name === a.types[0]){
ai = i;
break;}}



for(i = 0;i < typed.types.length;i++) {
if(typed.types[i].name === b.types[0]){
bi = i;
break;}}



return ai - bi;}}};









Param.prototype.overlapping = function(other){
for(var i=0;i < this.types.length;i++) {
if(contains(other.types,this.types[i])){
return true;}}


return false;};






Param.prototype.clone = function(){
var param=new Param(this.types.slice(),this.varArgs);
param.conversions = this.conversions.slice();
return param;};







Param.prototype.hasConversions = function(){
return this.conversions.length > 0;};








Param.prototype.contains = function(types){
for(var i=0;i < this.types.length;i++) {
if(types[this.types[i]]){
return true;}}


return false;};











Param.prototype.toString = function(toConversion){
var types=[];
var keys={};

for(var i=0;i < this.types.length;i++) {
var conversion=this.conversions[i];
var type=toConversion && conversion?conversion.to:this.types[i];
if(!(type in keys)){
keys[type] = true;
types.push(type);}}



return (this.varArgs?'...':'') + types.join('|');};










function Signature(params,fn){
var _params;
if(typeof params === 'string'){
_params = params !== ''?params.split(','):[];}else 

if(Array.isArray(params)){
_params = params;}else 

{
throw new Error('string or Array expected');}


this.params = new Array(_params.length);
for(var i=0;i < _params.length;i++) {
var param=new Param(_params[i]);
this.params[i] = param;
if(i === _params.length - 1){

this.varArgs = param.varArgs;}else 

{

if(param.varArgs){
throw new SyntaxError('Unexpected variable arguments operator "..."');}}}




this.fn = fn;}






Signature.prototype.clone = function(){
return new Signature(this.params.slice(),this.fn);};







Signature.prototype.expand = function(){
var signatures=[];

function recurse(signature,path){
if(path.length < signature.params.length){
var i,newParam,conversion;

var param=signature.params[path.length];
if(param.varArgs){

newParam = param.clone();



for(i = 0;i < typed.conversions.length;i++) {
conversion = typed.conversions[i];
if(!contains(param.types,conversion.from) && contains(param.types,conversion.to)){
var j=newParam.types.length;
newParam.types[j] = conversion.from;
newParam.conversions[j] = conversion;}}



recurse(signature,path.concat(newParam));}else 

{

for(i = 0;i < param.types.length;i++) {
recurse(signature,path.concat(new Param(param.types[i])));}



for(i = 0;i < typed.conversions.length;i++) {
conversion = typed.conversions[i];
if(!contains(param.types,conversion.from) && contains(param.types,conversion.to)){
newParam = new Param(conversion.from);
newParam.conversions[0] = conversion;
recurse(signature,path.concat(newParam));}}}}else 




{
signatures.push(new Signature(path,signature.fn));}}



recurse(this,[]);

return signatures;};












Signature.compare = function(a,b){
if(a.params.length > b.params.length)return 1;
if(a.params.length < b.params.length)return -1;


var i;
var len=a.params.length;
var ac=0;
var bc=0;
for(i = 0;i < len;i++) {
if(a.params[i].hasConversions())ac++;
if(b.params[i].hasConversions())bc++;}


if(ac > bc)return 1;
if(ac < bc)return -1;


for(i = 0;i < a.params.length;i++) {
var cmp=Param.compare(a.params[i],b.params[i]);
if(cmp !== 0){
return cmp;}}



return 0;};







Signature.prototype.hasConversions = function(){
for(var i=0;i < this.params.length;i++) {
if(this.params[i].hasConversions()){
return true;}}


return false;};








Signature.prototype.ignore = function(){

var types={};
for(var i=0;i < typed.ignore.length;i++) {
types[typed.ignore[i]] = true;}



for(i = 0;i < this.params.length;i++) {
if(this.params[i].contains(types)){
return true;}}



return false;};








Signature.prototype.toCode = function(refs,prefix){
var code=[];

var args=new Array(this.params.length);
for(var i=0;i < this.params.length;i++) {
var param=this.params[i];
var conversion=param.conversions[0];
if(param.varArgs){
args[i] = 'varArgs';}else 

if(conversion){
args[i] = refs.add(conversion.convert,'convert') + '(arg' + i + ')';}else 

{
args[i] = 'arg' + i;}}



var ref=this.fn?refs.add(this.fn,'signature'):undefined;
if(ref){
return prefix + 'return ' + ref + '(' + args.join(', ') + '); // signature: ' + this.params.join(', ');}


return code.join('\n');};






Signature.prototype.toString = function(){
return this.params.join(', ');};









function Node(path,signature,childs){
this.path = path || [];
this.param = path[path.length - 1] || null;
this.signature = signature || null;
this.childs = childs || [];}









Node.prototype.toCode = function(refs,prefix,anyType){

var code=[];

if(this.param){
var index=this.path.length - 1;
var conversion=this.param.conversions[0];
var comment='// type: ' + (conversion?
conversion.from + ' (convert to ' + conversion.to + ')':
this.param);


if(this.param.varArgs){
if(this.param.anyType){

code.push(prefix + 'if (arguments.length > ' + index + ') {');
code.push(prefix + '  var varArgs = [];');
code.push(prefix + '  for (var i = ' + index + '; i < arguments.length; i++) {');
code.push(prefix + '    varArgs.push(arguments[i]);');
code.push(prefix + '  }');
code.push(this.signature.toCode(refs,prefix + '  '));
code.push(prefix + '}');}else 

{

var getTests=(function(types,arg){
var tests=[];
for(var i=0;i < types.length;i++) {
tests[i] = refs.add(getTypeTest(types[i]),'test') + '(' + arg + ')';}

return tests.join(' || ');}).
bind(this);

var allTypes=this.param.types;
var exactTypes=[];
for(var i=0;i < allTypes.length;i++) {
if(this.param.conversions[i] === undefined){
exactTypes.push(allTypes[i]);}}



code.push(prefix + 'if (' + getTests(allTypes,'arg' + index) + ') { ' + comment);
code.push(prefix + '  var varArgs = [arg' + index + '];');
code.push(prefix + '  for (var i = ' + (index + 1) + '; i < arguments.length; i++) {');
code.push(prefix + '    if (' + getTests(exactTypes,'arguments[i]') + ') {');
code.push(prefix + '      varArgs.push(arguments[i]);');

for(var i=0;i < allTypes.length;i++) {
var conversion_i=this.param.conversions[i];
if(conversion_i){
var test=refs.add(getTypeTest(allTypes[i]),'test');
var convert=refs.add(conversion_i.convert,'convert');
code.push(prefix + '    }');
code.push(prefix + '    else if (' + test + '(arguments[i])) {');
code.push(prefix + '      varArgs.push(' + convert + '(arguments[i]));');}}


code.push(prefix + '    } else {');
code.push(prefix + '      throw createError(name, arguments.length, i, arguments[i], \'' + exactTypes.join(',') + '\');');
code.push(prefix + '    }');
code.push(prefix + '  }');
code.push(this.signature.toCode(refs,prefix + '  '));
code.push(prefix + '}');}}else 


{
if(this.param.anyType){

code.push(prefix + '// type: any');
code.push(this._innerCode(refs,prefix,anyType));}else 

{

var type=this.param.types[0];
var test=type !== 'any'?refs.add(getTypeTest(type),'test'):null;

code.push(prefix + 'if (' + test + '(arg' + index + ')) { ' + comment);
code.push(this._innerCode(refs,prefix + '  ',anyType));
code.push(prefix + '}');}}}else 



{

code.push(this._innerCode(refs,prefix,anyType));}


return code.join('\n');};











Node.prototype._innerCode = function(refs,prefix,anyType){
var code=[];
var i;

if(this.signature){
code.push(prefix + 'if (arguments.length === ' + this.path.length + ') {');
code.push(this.signature.toCode(refs,prefix + '  '));
code.push(prefix + '}');}


var nextAnyType;
for(i = 0;i < this.childs.length;i++) {
if(this.childs[i].param.anyType){
nextAnyType = this.childs[i];
break;}}



for(i = 0;i < this.childs.length;i++) {
code.push(this.childs[i].toCode(refs,prefix,nextAnyType));}


if(anyType && !this.param.anyType){
code.push(anyType.toCode(refs,prefix,nextAnyType));}


var exceptions=this._exceptions(refs,prefix);
if(exceptions){
code.push(exceptions);}


return code.join('\n');};









Node.prototype._exceptions = function(refs,prefix){
var index=this.path.length;

if(this.childs.length === 0){

return [
prefix + 'if (arguments.length > ' + index + ') {',
prefix + '  throw createError(name, arguments.length, ' + index + ', arguments[' + index + ']);',
prefix + '}'].
join('\n');}else 

{
var keys={};
var types=[];

for(var i=0;i < this.childs.length;i++) {
var node=this.childs[i];
if(node.param){
for(var j=0;j < node.param.types.length;j++) {
var type=node.param.types[j];
if(!(type in keys) && !node.param.conversions[j]){
keys[type] = true;
types.push(type);}}}}





return prefix + 'throw createError(name, arguments.length, ' + index + ', arguments[' + index + '], \'' + types.join(',') + '\');';}};








function parseSignatures(rawSignatures){

var signature;
var keys={};
var signatures=[];
var i;

for(var types in rawSignatures) {
if(rawSignatures.hasOwnProperty(types)){
var fn=rawSignatures[types];
signature = new Signature(types,fn);

if(signature.ignore()){
continue;}


var expanded=signature.expand();

for(i = 0;i < expanded.length;i++) {
var signature_i=expanded[i];
var key=signature_i.toString();
var existing=keys[key];
if(!existing){
keys[key] = signature_i;}else 

{
var cmp=Signature.compare(signature_i,existing);
if(cmp < 0){

keys[key] = signature_i;}else 

if(cmp === 0){
throw new Error('Signature "' + key + '" is defined twice');}}}}}








for(key in keys) {
if(keys.hasOwnProperty(key)){
signatures.push(keys[key]);}}




signatures.sort(function(a,b){
return Signature.compare(a,b);});




for(i = 0;i < signatures.length;i++) {
signature = signatures[i];

if(signature.varArgs){
var index=signature.params.length - 1;
var param=signature.params[index];

var t=0;
while(t < param.types.length) {
if(param.conversions[t]){
var type=param.types[t];

for(var j=0;j < signatures.length;j++) {
var other=signatures[j];
var p=other.params[index];

if(other !== signature && 
p && 
contains(p.types,type) && !p.conversions[index]){

param.types.splice(t,1);
param.conversions.splice(t,1);
t--;
break;}}}



t++;}}}




return signatures;}









function mapSignatures(signatures){
var normalized={};

for(var i=0;i < signatures.length;i++) {
var signature=signatures[i];
if(signature.fn && !signature.hasConversions()){
var params=signature.params.join(',');
normalized[params] = signature.fn;}}



return normalized;}








function parseTree(signatures,path){
var i,signature;
var index=path.length;
var nodeSignature;

var filtered=[];
for(i = 0;i < signatures.length;i++) {
signature = signatures[i];


if(signature.params.length === index && !nodeSignature){
nodeSignature = signature;}


if(signature.params[index] != undefined){
filtered.push(signature);}}




filtered.sort(function(a,b){
return Param.compare(a.params[index],b.params[index]);});



var entries=[];
for(i = 0;i < filtered.length;i++) {
signature = filtered[i];

var param=signature.params[index];


var existing=entries.filter(function(entry){
return entry.param.overlapping(param);})[
0];









if(existing){
if(existing.param.varArgs){
throw new Error('Conflicting types "' + existing.param + '" and "' + param + '"');}

existing.signatures.push(signature);}else 

{
entries.push({
param:param,
signatures:[signature]});}}





var childs=new Array(entries.length);
for(i = 0;i < entries.length;i++) {
var entry=entries[i];
childs[i] = parseTree(entry.signatures,path.concat(entry.param));}


return new Node(path,nodeSignature,childs);}







function getArgs(count){

var args=[];
for(var i=0;i < count;i++) {
args[i] = 'arg' + i;}


return args;}















function _typed(name,signatures){
var refs=new Refs();


var _signatures=parseSignatures(signatures);
if(_signatures.length == 0){
throw new Error('No signatures provided');}



var node=parseTree(_signatures,[]);






var code=[];
var _name=name || '';
var _args=getArgs(maxParams(_signatures));
code.push('function ' + _name + '(' + _args.join(', ') + ') {');
code.push('  "use strict";');
code.push('  var name = \'' + _name + '\';');
code.push(node.toCode(refs,'  '));
code.push('}');


var body=[
refs.toCode(),
'return ' + code.join('\n')].
join('\n');


var factory=new Function(refs.name,'createError',body);
var fn=factory(refs,createError);




fn.signatures = mapSignatures(_signatures);

return fn;}







function maxParams(signatures){
var max=0;

for(var i=0;i < signatures.length;i++) {
var len=signatures[i].params.length;
if(len > max){
max = len;}}



return max;}







function getTypeOf(x){
var obj;

for(var i=0;i < typed.types.length;i++) {
var entry=typed.types[i];

if(entry.name === 'Object'){

obj = entry;}else 

{
if(entry.test(x))return entry.name;}}




if(obj && obj.test(x))return obj.name;

return 'unknown';}








function contains(array,entry){
return array.indexOf(entry) !== -1;}



var types=[
{name:'number',test:function(x){return typeof x === 'number';}},
{name:'string',test:function(x){return typeof x === 'string';}},
{name:'boolean',test:function(x){return typeof x === 'boolean';}},
{name:'Function',test:function(x){return typeof x === 'function';}},
{name:'Array',test:Array.isArray},
{name:'Date',test:function(x){return x instanceof Date;}},
{name:'RegExp',test:function(x){return x instanceof RegExp;}},
{name:'Object',test:function(x){return typeof x === 'object';}},
{name:'null',test:function(x){return x === null;}},
{name:'undefined',test:function(x){return x === undefined;}}];



var config={};


var conversions=[];


var ignore=[];




var typed={
config:config,
types:types,
conversions:conversions,
ignore:ignore};










typed = _typed('typed',{
'Object':function(signatures){
var fns=[];
for(var signature in signatures) {
if(signatures.hasOwnProperty(signature)){
fns.push(signatures[signature]);}}


var name=getName(fns);

return _typed(name,signatures);},

'string, Object':_typed,

'...Function':function(fns){
var err;
var name=getName(fns);
var signatures={};

for(var i=0;i < fns.length;i++) {
var fn=fns[i];


if(!(typeof fn.signatures === 'object')){
err = new TypeError('Function is no typed-function (index: ' + i + ')');
err.data = {index:i};
throw err;}



for(var signature in fn.signatures) {
if(fn.signatures.hasOwnProperty(signature)){
if(signatures.hasOwnProperty(signature)){
if(fn.signatures[signature] !== signatures[signature]){
err = new Error('Signature "' + signature + '" is defined twice');
err.data = {signature:signature};
throw err;}}else 



{
signatures[signature] = fn.signatures[signature];}}}}





return _typed(name,signatures);}});



















function find(fn,signature){
if(!fn.signatures){
throw new TypeError('Function is no typed-function');}



var arr;
if(typeof signature === 'string'){
arr = signature.split(',');
for(var i=0;i < arr.length;i++) {
arr[i] = arr[i].trim();}}else 


if(Array.isArray(signature)){
arr = signature;}else 

{
throw new TypeError('String array or a comma separated string expected');}


var str=arr.join(',');


var match=fn.signatures[str];
if(match){
return match;}




throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');}







function convert(value,type){
var from=getTypeOf(value);


if(type === from){
return value;}


for(var i=0;i < typed.conversions.length;i++) {
var conversion=typed.conversions[i];
if(conversion.from === from && conversion.to === type){
return conversion.convert(value);}}



throw new Error('Cannot convert from ' + from + ' to ' + type);}



typed.config = config;
typed.types = types;
typed.conversions = conversions;
typed.ignore = ignore;
typed.create = create;
typed.find = find;
typed.convert = convert;


typed.addType = function(type){
if(!type || typeof type.name !== 'string' || typeof type.test !== 'function'){
throw new TypeError('Object with properties {name: string, test: function} expected');}


typed.types.push(type);};



typed.addConversion = function(conversion){
if(!conversion || 
typeof conversion.from !== 'string' || 
typeof conversion.to !== 'string' || 
typeof conversion.convert !== 'function'){
throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');}


typed.conversions.push(conversion);};


return typed;}


return create();});
});
__d('mathjs/lib/utils/number.js',["mathjs/lib/utils/NumberFormatter.js"],function(global, require, module, exports) {  'use strict';

var NumberFormatter=require('mathjs/lib/utils/NumberFormatter.js');






exports.isNumber = function(value){
return typeof value === 'number';};







exports.isInteger = function(value){
return isFinite(value)?
value == Math.round(value):
false;};








exports.sign = function(x){
if(x > 0){
return 1;}else 

if(x < 0){
return -1;}else 

{
return 0;}};



































































exports.format = function(value,options){
if(typeof options === 'function'){

return options(value);}



if(value === Infinity){
return 'Infinity';}else 

if(value === -Infinity){
return '-Infinity';}else 

if(isNaN(value)){
return 'NaN';}



var notation='auto';
var precision=undefined;

if(options){

if(options.notation){
notation = options.notation;}



if(exports.isNumber(options)){
precision = options;}else 

if(options.precision){
precision = options.precision;}}




switch(notation){
case 'fixed':
return exports.toFixed(value,precision);

case 'exponential':
return exports.toExponential(value,precision);

case 'auto':
return exports.
toPrecision(value,precision,options && options.exponential).


replace(/((\.\d*?)(0+))($|e)/,function(){
var digits=arguments[2];
var e=arguments[4];
return digits !== '.'?digits + e:e;});


default:
throw new Error('Unknown notation "' + notation + '". ' + 
'Choose "auto", "exponential", or "fixed".');}};











exports.toExponential = function(value,precision){
return new NumberFormatter(value).toExponential(precision);};








exports.toFixed = function(value,precision){
return new NumberFormatter(value).toFixed(precision);};











exports.toPrecision = function(value,precision,options){
return new NumberFormatter(value).toPrecision(precision,options);};













exports.digits = function(value){
return value.
toExponential().
replace(/e.*$/,'').
replace(/^0\.?0*|\./,'').
length;};





exports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;










exports.nearlyEqual = function(x,y,epsilon){

if(epsilon == null)return x == y;


if(x == y)return true;


if(isNaN(x) || isNaN(y))return false;


if(isFinite(x) && isFinite(y)){

var diff=Math.abs(x - y);
if(diff < exports.DBL_EPSILON){
return true;}else 

{

return diff <= Math.max(Math.abs(x),Math.abs(y)) * epsilon;}}




return false;};
});
__d('mathjs/lib/utils/NumberFormatter.js',[],function(global, require, module, exports) {  'use strict';






function NumberFormatter(value){

var match=String(value).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
if(!match){
throw new SyntaxError('Invalid number');}


var sign=match[1];
var coefficients=match[2];
var exponent=parseFloat(match[4] || '0');

var dot=coefficients.indexOf('.');
exponent += dot !== -1?dot - 1:coefficients.length - 1;

this.sign = sign;
this.coefficients = coefficients.
replace('.','').
replace(/^0*/,function(zeros){

exponent -= zeros.length;
return '';}).

replace(/0*$/,'').
split('').
map(function(d){
return parseInt(d);});


if(this.coefficients.length === 0){
this.coefficients.push(0);
exponent++;}


this.exponent = exponent;}







NumberFormatter.prototype.toFixed = function(precision){
var rounded=this.roundDigits(this.exponent + 1 + (precision || 0));
var c=rounded.coefficients;
var p=rounded.exponent + 1;


var pp=p + (precision || 0);
if(c.length < pp){
c = c.concat(zeros(pp - c.length));}



if(p < 0){
c = zeros(-p + 1).concat(c);
p = 1;}



if(precision){
c.splice(p,0,p === 0?'0.':'.');}


return this.sign + c.join('');};








NumberFormatter.prototype.toExponential = function(precision){

var rounded=precision?this.roundDigits(precision):this.clone();
var c=rounded.coefficients;
var e=rounded.exponent;


if(c.length < precision){
c = c.concat(zeros(precision - c.length));}



var first=c.shift();
return this.sign + first + (c.length > 0?'.' + c.join(''):'') + 
'e' + (e >= 0?'+':'') + e;};











NumberFormatter.prototype.toPrecision = function(precision,options){

var lower=options && options.lower !== undefined?options.lower:1e-3;
var upper=options && options.upper !== undefined?options.upper:1e+5;

var abs=Math.abs(Math.pow(10,this.exponent));
if(abs < lower || abs >= upper){

return this.toExponential(precision);}else 

{
var rounded=precision?this.roundDigits(precision):this.clone();
var c=rounded.coefficients;
var e=rounded.exponent;


if(c.length < precision){
c = c.concat(zeros(precision - c.length));}




c = c.concat(zeros(e - c.length + 1 + (
c.length < precision?precision - c.length:0)));


c = zeros(-e).concat(c);

var dot=e > 0?e:0;
if(dot < c.length - 1){
c.splice(dot + 1,0,'.');}


return this.sign + c.join('');}};







NumberFormatter.prototype.clone = function(){
var clone=new NumberFormatter('0');
clone.sign = this.sign;
clone.coefficients = this.coefficients.slice(0);
clone.exponent = this.exponent;
return clone;};








NumberFormatter.prototype.roundDigits = function(precision){
var rounded=this.clone();
var c=rounded.coefficients;


while(precision <= 0) {
c.unshift(0);
rounded.exponent++;
precision++;}


if(c.length > precision){
var removed=c.splice(precision,c.length - precision);

if(removed[0] >= 5){
var i=precision - 1;
c[i]++;
while(c[i] === 10) {
c.pop();
if(i === 0){
c.unshift(0);
rounded.exponent++;
i++;}

i--;
c[i]++;}}}




return rounded;};







function zeros(length){
var arr=[];
for(var i=0;i < length;i++) {
arr.push(0);}

return arr;}


module.exports = NumberFormatter;
});
__d('mathjs/lib/utils/emitter.js',["tiny-emitter/index.js"],function(global, require, module, exports) {  var Emitter=require('tiny-emitter/index.js');






exports.mixin = function(obj){

var emitter=new Emitter();


obj.on = emitter.on.bind(emitter);
obj.off = emitter.off.bind(emitter);
obj.once = emitter.once.bind(emitter);
obj.emit = emitter.emit.bind(emitter);

return obj;};
});
__d('tiny-emitter/index.js',[],function(global, require, module, exports) {  function E(){}




E.prototype = {
on:function(name,callback,ctx){
var e=this.e || (this.e = {});

(e[name] || (e[name] = [])).push({
fn:callback,
ctx:ctx});


return this;},


once:function(name,callback,ctx){
var self=this;
function listener(){
self.off(name,listener);
callback.apply(ctx,arguments);}
;

listener._ = callback;
return this.on(name,listener,ctx);},


emit:function(name){
var data=[].slice.call(arguments,1);
var evtArr=((this.e || (this.e = {}))[name] || []).slice();
var i=0;
var len=evtArr.length;

for(i;i < len;i++) {
evtArr[i].fn.apply(evtArr[i].ctx,data);}


return this;},


off:function(name,callback){
var e=this.e || (this.e = {});
var evts=e[name];
var liveEvents=[];

if(evts && callback){
for(var i=0,len=evts.length;i < len;i++) {
if(evts[i].fn !== callback && evts[i].fn._ !== callback)
liveEvents.push(evts[i]);}}







liveEvents.length?
e[name] = liveEvents:
delete e[name];

return this;}};



module.exports = E;
});
__d('mathjs/lib/core/import.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/object.js","mathjs/lib/utils/object.js","mathjs/lib/utils/object.js","mathjs/lib/error/ArgumentsError.js"],function(global, require, module, exports) {  'use strict';

var lazy=require('mathjs/lib/utils/object.js').lazy;
var isFactory=require('mathjs/lib/utils/object.js').isFactory;
var traverse=require('mathjs/lib/utils/object.js').traverse;
var extend=require('mathjs/lib/utils/object.js').extend;
var ArgumentsError=require('mathjs/lib/error/ArgumentsError.js');

function factory(type,config,load,typed,math){















































function math_import(object,options){
var num=arguments.length;
if(num != 1 && num != 2){
throw new ArgumentsError('import',num,1,2);}


if(!options){
options = {};}


if(isFactory(object)){
_importFactory(object,options);}else 


if(Array.isArray(object)){
object.forEach(function(entry){
math_import(entry,options);});}else 


if(typeof object === 'object'){

for(var name in object) {
if(object.hasOwnProperty(name)){
var value=object[name];
if(isSupportedType(value)){
_import(name,value,options);}else 

if(isFactory(object)){
_importFactory(object,options);}else 

{
math_import(value,options);}}}}else 




{
if(!options.silent){
throw new TypeError('Factory, Object, or Array expected');}}}











function _import(name,value,options){
if(options.wrap && typeof value === 'function'){

value = _wrap(value);}


if(isTypedFunction(math[name]) && isTypedFunction(value)){
if(options.override){

value = typed(name,value.signatures);}else 

{

value = typed(math[name],value);}


math[name] = value;
_importTransform(name,value);
math.emit('import',name,function resolver(){
return value;});

return;}


if(math[name] === undefined || options.override){
math[name] = value;
_importTransform(name,value);
math.emit('import',name,function resolver(){
return value;});

return;}


if(!options.silent){
throw new Error('Cannot import "' + name + '": already exists');}}



function _importTransform(name,value){
if(value && typeof value.transform === 'function'){
math.expression.transform[name] = value.transform;}}










function _wrap(fn){
var wrapper=function wrapper(){
var args=[];
for(var i=0,len=arguments.length;i < len;i++) {
var arg=arguments[i];
args[i] = arg && arg.valueOf();}

return fn.apply(math,args);};


if(fn.transform){
wrapper.transform = fn.transform;}


return wrapper;}








function _importFactory(factory,options){
if(typeof factory.name === 'string'){
var name=factory.name;
var namespace=factory.path?traverse(math,factory.path):math;
var existing=namespace.hasOwnProperty(name)?namespace[name]:undefined;

var resolver=function(){
var instance=load(factory);

if(isTypedFunction(existing) && isTypedFunction(instance)){
if(options.override){}else 


{

instance = typed(existing,instance);}


return instance;}


if(existing === undefined || options.override){
return instance;}


if(!options.silent){
throw new Error('Cannot import "' + name + '": already exists');}};



if(factory.lazy !== false){
lazy(namespace,name,resolver);}else 

{
namespace[name] = resolver();}


math.emit('import',name,resolver,factory.path);}else 

{


load(factory);}}









function isSupportedType(object){
return typeof object == 'function' || 
typeof object === 'number' || 
typeof object === 'string' || 
typeof object === 'boolean' || 
object === null || 
object && object.isUnit === true || 
object && object.isComplex === true;}







function isTypedFunction(fn){
return typeof fn === 'function' && typeof fn.signatures === 'object';}


return math_import;}


exports.math = true;
exports.name = 'import';
exports.factory = factory;
exports.lazy = true;
});
__d('mathjs/lib/error/ArgumentsError.js',[],function(global, require, module, exports) {  'use strict';










function ArgumentsError(fn,count,min,max){
if(!(this instanceof ArgumentsError)){
throw new SyntaxError('Constructor must be called with the new operator');}


this.fn = fn;
this.count = count;
this.min = min;
this.max = max;

this.message = 'Wrong number of arguments in function ' + fn + 
' (' + count + ' provided, ' + 
min + (max != undefined?'-' + max:'') + ' expected)';

this.stack = new Error().stack;}


ArgumentsError.prototype = new Error();
ArgumentsError.prototype.constructor = Error;
ArgumentsError.prototype.name = 'ArgumentsError';
ArgumentsError.prototype.isArgumentsError = true;

module.exports = ArgumentsError;
});
__d('mathjs/lib/core/config.js',["mathjs/lib/utils/object.js"],function(global, require, module, exports) {  'use strict';

var object=require('mathjs/lib/utils/object.js');

function factory(type,config,load,typed,math){



















return function _config(options){
if(options){
var prev=object.clone(config);


object.deepExtend(config,options);

var curr=object.clone(config);


math.emit('config',curr,prev);

return curr;}else 

{
return object.clone(config);}};}




exports.name = 'config';
exports.math = true;
exports.factory = factory;
});
__d('mathjs/lib/index.js',["mathjs/lib/type/index.js","mathjs/lib/constants.js","mathjs/lib/expression/index.js","mathjs/lib/function/index.js","mathjs/lib/json/index.js","mathjs/lib/error/index.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/type/index.js'),
require('mathjs/lib/constants.js'),
require('mathjs/lib/expression/index.js'),
require('mathjs/lib/function/index.js'),
require('mathjs/lib/json/index.js'),
require('mathjs/lib/error/index.js')];
});
__d('mathjs/lib/type/index.js',["mathjs/lib/type/bignumber/index.js","mathjs/lib/type/boolean.js","mathjs/lib/type/chain/index.js","mathjs/lib/type/complex/index.js","mathjs/lib/type/fraction/index.js","mathjs/lib/type/matrix/index.js","mathjs/lib/type/number.js","mathjs/lib/type/resultset/index.js","mathjs/lib/type/string.js","mathjs/lib/type/unit/index.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/type/bignumber/index.js'),
require('mathjs/lib/type/boolean.js'),
require('mathjs/lib/type/chain/index.js'),
require('mathjs/lib/type/complex/index.js'),
require('mathjs/lib/type/fraction/index.js'),
require('mathjs/lib/type/matrix/index.js'),
require('mathjs/lib/type/number.js'),
require('mathjs/lib/type/resultset/index.js'),
require('mathjs/lib/type/string.js'),
require('mathjs/lib/type/unit/index.js')];
});
__d('mathjs/lib/type/bignumber/index.js',["mathjs/lib/type/bignumber/BigNumber.js","mathjs/lib/type/bignumber/function/bignumber.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/bignumber/BigNumber.js'),


require('mathjs/lib/type/bignumber/function/bignumber.js')];
});
__d('mathjs/lib/type/bignumber/BigNumber.js',["decimal.js/decimal.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  var Decimal=require('decimal.js/decimal.js');
var digits=require('mathjs/lib/utils/number.js').digits;

function factory(type,config,load,typed,math){
var BigNumber=Decimal.constructor(config);




BigNumber.prototype.type = 'BigNumber';
BigNumber.prototype.isBigNumber = true;







BigNumber.prototype.toJSON = function(){
return {
mathjs:'BigNumber',
value:this.toString()};};









BigNumber.fromJSON = function(json){
return new BigNumber(json.value);};



math.on('config',function(curr,prev){
if(curr.precision !== prev.precision){
BigNumber.config({precision:curr.precision});}});



return BigNumber;}


exports.name = 'BigNumber';
exports.path = 'type';
exports.factory = factory;
exports.math = true;
});
__d('decimal.js/decimal.js',[],function(global, require, module, exports) {  ;
(function(global){
'use strict';











var convertBase,decimal,noConflict,
crypto=global['crypto'],
external=true,
id=0,
mathfloor=Math.floor,
mathpow=Math.pow,
outOfRange,
toString=Object.prototype.toString,
BASE=1e7,
LOGBASE=7,
NUMERALS='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',
P={},





EXP_LIMIT=9e15,





MAX_DIGITS=1E9,






INT_POW_LIMIT=3000,


LN10='2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058';









P['absoluteValue'] = P['abs'] = function(){
var x=new this['constructor'](this);

if(x['s'] < 0){
x['s'] = 1;}


return rnd(x);};








P['ceil'] = function(){

return rnd(new this['constructor'](this),this['e'] + 1,2);};











P['comparedTo'] = P['cmp'] = function(y,b){
var a,
x=this,
xc=x['c'],
yc=(id = -id,y = new x['constructor'](y,b),y['c']),
i=x['s'],
j=y['s'],
k=x['e'],
l=y['e'];


if(!i || !j){
return null;}


a = xc && !xc[0];
b = yc && !yc[0];


if(a || b){
return a?b?0:-j:i;}



if(i != j){
return i;}


a = i < 0;


if(!xc || !yc){
return k == l?0:!xc ^ a?1:-1;}



if(k != l){
return k > l ^ a?1:-1;}



for(i = -1,
j = (k = xc.length) < (l = yc.length)?k:l;
++i < j;) {

if(xc[i] != yc[i]){
return xc[i] > yc[i] ^ a?1:-1;}}




return k == l?0:k > l ^ a?1:-1;};







P['decimalPlaces'] = P['dp'] = function(){
var c,v,
n=null;

if(c = this['c']){
n = ((v = c.length - 1) - mathfloor(this['e'] / LOGBASE)) * LOGBASE;

if(v = c[v]){


for(;v % 10 == 0;v /= 10,n--);}


if(n < 0){
n = 0;}}



return n;};
























P['dividedBy'] = P['div'] = function(y,b){
id = 2;

return div(this,new this['constructor'](y,b));};









P['dividedToIntegerBy'] = P['divToInt'] = function(y,b){
var x=this,
Decimal=x['constructor'];
id = 18;

return rnd(
div(x,new Decimal(y,b),0,1,1),Decimal['precision'],Decimal['rounding']);};









P['equals'] = P['eq'] = function(n,b){
id = 3;

return this['cmp'](n,b) === 0;};









P['exponential'] = P['exp'] = function(){

return exp(this);};








P['floor'] = function(){

return rnd(new this['constructor'](this),this['e'] + 1,3);};








P['greaterThan'] = P['gt'] = function(n,b){
id = 4;

return this['cmp'](n,b) > 0;};








P['greaterThanOrEqualTo'] = P['gte'] = function(n,b){
id = 5;
b = this['cmp'](n,b);

return b == 1 || b === 0;};







P['isFinite'] = function(){

return !!this['c'];};







P['isInteger'] = P['isInt'] = function(){

return !!this['c'] && mathfloor(this['e'] / LOGBASE) > this['c'].length - 2;};







P['isNaN'] = function(){

return !this['s'];};







P['isNegative'] = P['isNeg'] = function(){

return this['s'] < 0;};







P['isZero'] = function(){

return !!this['c'] && this['c'][0] == 0;};







P['lessThan'] = P['lt'] = function(n,b){
id = 6;

return this['cmp'](n,b) < 0;};








P['lessThanOrEqualTo'] = P['lte'] = function(n,b){
id = 7;
b = this['cmp'](n,b);

return b == -1 || b === 0;};


































P['logarithm'] = P['log'] = function(base,b){
var base10,c,denom,i,inf,num,sd,sd10,r,
arg=this,
Decimal=arg['constructor'],
pr=Decimal['precision'],
rm=Decimal['rounding'],
guard=5;


if(base == null){
base = new Decimal(10);
base10 = true;}else 
{
id = 15;
base = new Decimal(base,b);
c = base['c'];


if(base['s'] < 0 || !c || !c[0] || !base['e'] && c[0] == 1 && c.length == 1){

return new Decimal(NaN);}

base10 = base['eq'](10);}

c = arg['c'];


if(arg['s'] < 0 || !c || !c[0] || !arg['e'] && c[0] == 1 && c.length == 1){

return new Decimal(c && !c[0]?-1 / 0:arg['s'] != 1?NaN:c?0:1 / 0);}






inf = base10 && (i = c[0],c.length > 1 || i != 1 && i != 10 && 
i != 1e2 && i != 1e3 && i != 1e4 && i != 1e5 && i != 1e6);









external = false;
sd = pr + guard;
sd10 = sd + 10;

num = ln(arg,sd);

if(base10){

if(sd10 > LN10.length){
ifExceptionsThrow(Decimal,1,sd10,'log');}

denom = new Decimal(LN10.slice(0,sd10));}else 
{
denom = ln(base,sd);}



r = div(num,denom,sd,1);

















if(checkRoundingDigits(r['c'],i = pr,rm)){

do {
sd += 10;
num = ln(arg,sd);

if(base10){
sd10 = sd + 10;

if(sd10 > LN10.length){
ifExceptionsThrow(Decimal,1,sd10,'log');}

denom = new Decimal(LN10.slice(0,sd10));}else 
{
denom = ln(base,sd);}


r = div(num,denom,sd,1);

if(!inf){


if(+coefficientToString(r['c']).slice(i + 1,i + 15) + 1 == 1e14){
r = rnd(r,pr + 1,0);}


break;}}while(

checkRoundingDigits(r['c'],i += 10,rm));}

external = true;

return rnd(r,pr,rm);};
























P['minus'] = function(y,b){
var t,i,j,xLTy,
x=this,
Decimal=x['constructor'],
a=x['s'];

id = 8;
y = new Decimal(y,b);
b = y['s'];


if(!a || !b){

return new Decimal(NaN);}



if(a != b){
y['s'] = -b;

return x['plus'](y);}


var xc=x['c'],
yc=y['c'],
e=mathfloor(y['e'] / LOGBASE),
k=mathfloor(x['e'] / LOGBASE),
pr=Decimal['precision'],
rm=Decimal['rounding'];

if(!k || !e){


if(!xc || !yc){

return xc?(y['s'] = -b,y):new Decimal(yc?x:NaN);}



if(!xc[0] || !yc[0]){


x = yc[0]?(y['s'] = -b,y):new Decimal(xc[0]?x:


rm == 3?-0:0);

return external?rnd(x,pr,rm):x;}}



xc = xc.slice();
i = xc.length;


if(a = k - e){

if(xLTy = a < 0){
a = -a;
t = xc;
i = yc.length;}else 
{
e = k;
t = yc;}


if((k = Math.ceil(pr / LOGBASE)) > i){
i = k;}








if(a > (i += 2)){
a = i;
t.length = 1;}


t.reverse();
for(b = a;b--;t.push(0));
t.reverse();}else 
{


if(xLTy = i < (j = yc.length)){
j = i;}


for(a = b = 0;b < j;b++) {

if(xc[b] != yc[b]){
xLTy = xc[b] < yc[b];

break;}}}





if(xLTy){
t = xc,xc = yc,yc = t;
y['s'] = -y['s'];}






if((b = -((j = xc.length) - yc.length)) > 0){

for(;b--;xc[j++] = 0);}



for(k = BASE - 1,b = yc.length;b > a;) {

if(xc[--b] < yc[b]){

for(i = b;i && !xc[--i];xc[i] = k);
--xc[i];
xc[b] += BASE;}

xc[b] -= yc[b];}



for(;xc[--j] == 0;xc.pop());


for(;xc[0] == 0;xc.shift(),--e);

if(!xc[0]){


xc = [e = 0];


y['s'] = rm == 3?-1:1;}


y['c'] = xc;


for(a = 1,b = xc[0];b >= 10;b /= 10,a++);
y['e'] = a + e * LOGBASE - 1;

return external?rnd(y,pr,rm):y;};



























P['modulo'] = P['mod'] = function(y,b){
var n,q,
x=this,
Decimal=x['constructor'],
m=Decimal['modulo'];

id = 9;
y = new Decimal(y,b);
b = y['s'];
n = !x['c'] || !b || y['c'] && !y['c'][0];





if(n || !y['c'] || x['c'] && !x['c'][0]){

return n?
new Decimal(NaN):
rnd(new Decimal(x),Decimal['precision'],Decimal['rounding']);}


external = false;

if(m == 9){



y['s'] = 1;
q = div(x,y,0,3,1);
y['s'] = b;
q['s'] *= b;}else 
{
q = div(x,y,0,m,1);}


q = q['times'](y);
external = true;

return x['minus'](q);};








P['naturalLogarithm'] = P['ln'] = function(){

return ln(this);};








P['negated'] = P['neg'] = function(){
var x=new this['constructor'](this);
x['s'] = -x['s'] || null;

return rnd(x);};
























P['plus'] = function(y,b){
var t,
x=this,
Decimal=x['constructor'],
a=x['s'];

id = 10;
y = new Decimal(y,b);
b = y['s'];


if(!a || !b){

return new Decimal(NaN);}



if(a != b){
y['s'] = -b;

return x['minus'](y);}


var xc=x['c'],
yc=y['c'],
e=mathfloor(y['e'] / LOGBASE),
k=mathfloor(x['e'] / LOGBASE),
pr=Decimal['precision'],
rm=Decimal['rounding'];

if(!k || !e){


if(!xc || !yc){


return new Decimal(a / 0);}



if(!xc[0] || !yc[0]){


x = yc[0]?y:new Decimal(xc[0]?x:a * 0);

return external?rnd(x,pr,rm):x;}}



xc = xc.slice();


if(a = k - e){

if(a < 0){
a = -a;
t = xc;
b = yc.length;}else 
{
e = k;
t = yc;
b = xc.length;}


if((k = Math.ceil(pr / LOGBASE)) > b){
b = k;}



if(a > ++b){
a = b;
t.length = 1;}


for(t.reverse();a--;t.push(0));
t.reverse();}



if(xc.length - yc.length < 0){
t = yc,yc = xc,xc = t;}



for(a = yc.length,b = 0,k = BASE;a;xc[a] %= k) {
b = (xc[--a] = xc[a] + yc[a] + b) / k | 0;}


if(b){
xc.unshift(b);
++e;}



for(a = xc.length;xc[--a] == 0;xc.pop());



y['c'] = xc;


for(a = 1,b = xc[0];b >= 10;b /= 10,a++);
y['e'] = a + e * LOGBASE - 1;

return external?rnd(y,pr,rm):y;};









P['precision'] = P['sd'] = function(z){
var n=null,
x=this;

if(z != n && z !== !!z && z !== 1 && z !== 0){


ifExceptionsThrow(x['constructor'],'argument',z,'precision',1);}


if(x['c']){
n = getCoeffLength(x['c']);

if(z && x['e'] + 1 > n){
n = x['e'] + 1;}}



return n;};








P['round'] = function(){
var x=this,
Decimal=x['constructor'];

return rnd(new Decimal(x),x['e'] + 1,Decimal['rounding']);};















P['squareRoot'] = P['sqrt'] = function(){
var m,n,sd,r,rep,t,
x=this,
c=x['c'],
s=x['s'],
e=x['e'],
Decimal=x['constructor'],
half=new Decimal(0.5);


if(s !== 1 || !c || !c[0]){

return new Decimal(!s || s < 0 && (!c || c[0])?NaN:c?x:1 / 0);}


external = false;


s = Math.sqrt(+x);





if(s == 0 || s == 1 / 0){
n = coefficientToString(c);

if((n.length + e) % 2 == 0){
n += '0';}


s = Math.sqrt(n);
e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);

if(s == 1 / 0){
n = '1e' + e;}else 
{
n = s.toExponential();
n = n.slice(0,n.indexOf('e') + 1) + e;}


r = new Decimal(n);}else 
{
r = new Decimal(s.toString());}


sd = (e = Decimal['precision']) + 3;


for(;;) {
t = r;
r = half['times'](t['plus'](div(x,t,sd + 2,1)));

if(coefficientToString(t['c']).slice(0,sd) === 
(n = coefficientToString(r['c'])).slice(0,sd)){
n = n.slice(sd - 3,sd + 1);





if(n == '9999' || !rep && n == '4999'){





if(!rep){
rnd(t,e + 1,0);

if(t['times'](t)['eq'](x)){
r = t;

break;}}


sd += 4;
rep = 1;}else 
{





if(! +n || ! +n.slice(1) && n.charAt(0) == '5'){


rnd(r,e + 1,1);
m = !r['times'](r)['eq'](x);}


break;}}}



external = true;

return rnd(r,e,Decimal['rounding'],m);};
























P['times'] = function(y,b){
var c,e,
x=this,
Decimal=x['constructor'],
xc=x['c'],
yc=(id = 11,y = new Decimal(y,b),y['c']),
i=mathfloor(x['e'] / LOGBASE),
j=mathfloor(y['e'] / LOGBASE),
a=x['s'];

b = y['s'];

y['s'] = a == b?1:-1;


if(!i && (!xc || !xc[0]) || !j && (!yc || !yc[0])){


return new Decimal(!a || !b || 


xc && !xc[0] && !yc || yc && !yc[0] && !xc?


NaN:


!xc || !yc?


y['s'] / 0:


y['s'] * 0);}


e = i + j;
a = xc.length;
b = yc.length;

if(a < b){


c = xc,xc = yc,yc = c;
j = a,a = b,b = j;}


for(j = a + b,c = [];j--;c.push(0));


for(i = b - 1;i > -1;i--) {
b = 0;

for(j = a + i;j > i;) {
b = c[j] + yc[i] * xc[j - i - 1] + b;
c[j--] = b % BASE | 0;
b = b / BASE | 0;}

c[j] = (c[j] + b) % BASE | 0;}


if(b){
++e;}else 
if(!c[0]){


c.shift();}



for(j = c.length;!c[--j];c.pop());
y['c'] = c;


for(a = 1,b = c[0];b >= 10;b /= 10,a++);
y['e'] = a + e * LOGBASE - 1;

return external?rnd(y,Decimal['precision'],Decimal['rounding']):y;};


















P['toDecimalPlaces'] = P['toDP'] = function(dp,rm){
var x=this;
x = new x['constructor'](x);

return dp == null || !checkArg(x,dp,'toDP')?
x:
rnd(x,(dp | 0) + x['e'] + 1,checkRM(x,rm,'toDP'));};



















P['toExponential'] = function(dp,rm){
var x=this;

return x['c']?
format(x,dp != null && checkArg(x,dp,'toExponential')?dp | 0:null,
dp != null && checkRM(x,rm,'toExponential'),1):
x.toString();};





















P['toFixed'] = function(dp,rm){
var str,
x=this,
Decimal=x['constructor'],
neg=Decimal['toExpNeg'],
pos=Decimal['toExpPos'];

if(dp != null){
dp = checkArg(x,dp,str = 'toFixed')?x['e'] + (dp | 0):null;
rm = checkRM(x,rm,str);}



Decimal['toExpNeg'] = -(Decimal['toExpPos'] = 1 / 0);

if(dp == null || !x['c']){
str = x.toString();}else 
{
str = format(x,dp,rm);



if(x['s'] < 0 && x['c']){


if(!x['c'][0]){
str = str.replace('-','');}else 


if(str.indexOf('-') < 0){
str = '-' + str;}}}



Decimal['toExpNeg'] = neg;
Decimal['toExpPos'] = pos;

return str;};























P['toFormat'] = function(dp,rm){
var x=this;

if(!x['c']){
return x.toString();}


var i,
isNeg=x['s'] < 0,
f=x['constructor']['format'],
groupSeparator=f['groupSeparator'],
g1=+f['groupSize'],
g2=+f['secondaryGroupSize'],
arr=x.toFixed(dp,rm).split('.'),
intPart=arr[0],
fractionPart=arr[1],
intDigits=isNeg?intPart.slice(1):intPart,
len=intDigits.length;

if(g2){
len -= (i = g1,g1 = g2,g2 = i);}


if(g1 > 0 && len > 0){
i = len % g1 || g1;
intPart = intDigits.substr(0,i);

for(;i < len;i += g1) {
intPart += groupSeparator + intDigits.substr(i,g1);}


if(g2 > 0){
intPart += groupSeparator + intDigits.slice(i);}


if(isNeg){
intPart = '-' + intPart;}}



return fractionPart?
intPart + f['decimalSeparator'] + ((g2 = +f['fractionGroupSize'])?
fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B','g'),
'$&' + f['fractionGroupSeparator']):
fractionPart):
intPart;};














P['toFraction'] = function(maxD){
var d0,d2,e,frac,n,n0,p,q,
x=this,
Decimal=x['constructor'],
n1=d0 = new Decimal(Decimal['ONE']),
d1=n0 = new Decimal(0),
xc=x['c'],
d=new Decimal(d1);


if(!xc){

return x.toString();}


e = d['e'] = getCoeffLength(xc) - x['e'] - 1;
d['c'][0] = mathpow(10,(p = e % LOGBASE) < 0?LOGBASE + p:p);


if(maxD == null || 


(!(id = 12,n = new Decimal(maxD))['s'] || (


outOfRange = n['cmp'](n1) < 0 || !n['c']) || 


Decimal['errors'] && mathfloor(n['e'] / LOGBASE) < n['c'].length - 1) && 



!ifExceptionsThrow(Decimal,'max denominator',maxD,'toFraction',0) || 


(maxD = n)['cmp'](d) > 0){


maxD = e > 0?d:n1;}


external = false;
n = new Decimal(coefficientToString(xc));
p = Decimal['precision'];
Decimal['precision'] = e = xc.length * LOGBASE * 2;

for(;;) {
q = div(n,d,0,1,1);
d2 = d0['plus'](q['times'](d1));

if(d2['cmp'](maxD) == 1){

break;}

d0 = d1;
d1 = d2;

n1 = n0['plus'](q['times'](d2 = n1));
n0 = d2;

d = n['minus'](q['times'](d2 = d));
n = d2;}


d2 = div(maxD['minus'](d0),d1,0,1,1);
n0 = n0['plus'](d2['times'](n1));
d0 = d0['plus'](d2['times'](d1));
n0['s'] = n1['s'] = x['s'];


frac = div(n1,d1,e,1)['minus'](x)['abs']()['cmp'](
div(n0,d0,e,1)['minus'](x)['abs']()) < 1?
[n1 + '',d1 + '']:
[n0 + '',d0 + ''];

external = true;
Decimal['precision'] = p;

return frac;};


























P['toNearest'] = function(n,rm){
var x=this,
Decimal=x['constructor'];

x = new Decimal(x);

if(n == null){
n = new Decimal(Decimal['ONE']);
rm = Decimal['rounding'];}else 
{
id = 17;
n = new Decimal(n);
rm = checkRM(x,rm,'toNearest');}



if(n['c']){


if(x['c']){

if(n['c'][0]){
external = false;
x = div(x,n,0,rm < 4?[4,5,7,8][rm]:rm,1)['times'](n);
external = true;
rnd(x);}else 
{
x['c'] = [x['e'] = 0];}}}else 




if(x['s']){


if(n['s']){
n['s'] = x['s'];}

x = n;}


return x;};







P['toNumber'] = function(){
var x=this;


return +x || (x['s']?0 * x['s']:NaN);};


















































P['toPower'] = P['pow'] = function(y,b){
var a,e,n,r,
x=this,
Decimal=x['constructor'],
s=x['s'],
yN=+(id = 13,y = new Decimal(y,b)),
i=yN < 0?-yN:yN,
pr=Decimal['precision'],
rm=Decimal['rounding'];


if(!x['c'] || !y['c'] || (n = !x['c'][0]) || !y['c'][0]){


return new Decimal(mathpow(n?s * 0:+x,yN));}


x = new Decimal(x);
a = x['c'].length;


if(!x['e'] && x['c'][0] == x['s'] && a == 1){

return x;}


b = y['c'].length - 1;


if(!y['e'] && y['c'][0] == y['s'] && !b){
r = rnd(x,pr,rm);}else 
{
e = mathfloor(y['e'] / LOGBASE);
n = e >= b;


if(!n && s < 0){
r = new Decimal(NaN);}else 
{





if(n && a * LOGBASE * i < INT_POW_LIMIT){
r = intPow(Decimal,x,i);

if(y['s'] < 0){

return Decimal['ONE']['div'](r);}}else 

{


s = s < 0 && y['c'][Math.max(e,b)] & 1?-1:1;

b = mathpow(+x,yN);







e = b == 0 || !isFinite(b)?
mathfloor(yN * (Math.log('0.' + coefficientToString(x['c'])) / 
Math.LN10 + x['e'] + 1)):
new Decimal(b + '')['e'];




if(e > Decimal['maxE'] + 1 || e < Decimal['minE'] - 1){

return new Decimal(e > 0?s / 0:0);}


external = false;
Decimal['rounding'] = x['s'] = 1;








i = Math.min(12,(e + '').length);


r = exp(y['times'](ln(x,pr + i)),pr);


r = rnd(r,pr + 5,1);





if(checkRoundingDigits(r['c'],pr,rm)){
e = pr + 10;


r = rnd(exp(y['times'](ln(x,e + i)),e),e + 5,1);





if(+coefficientToString(r['c']).slice(pr + 1,pr + 15) + 1 == 1e14){
r = rnd(r,pr + 1,0);}}



r['s'] = s;
external = true;
Decimal['rounding'] = rm;}


r = rnd(r,pr,rm);}}



return r;};






















P['toPrecision'] = function(sd,rm){
var x=this;

return sd != null && checkArg(x,sd,'toPrecision',1) && x['c']?
format(x,--sd | 0,checkRM(x,rm,'toPrecision'),2):
x.toString();};
















P['toSignificantDigits'] = P['toSD'] = function(d,rm){
var x=this,
Decimal=x['constructor'];

x = new Decimal(x);

return d == null || !checkArg(x,d,'toSD',1)?
rnd(x,Decimal['precision'],Decimal['rounding']):
rnd(x,d | 0,checkRM(x,rm,'toSD'));};















P['toString'] = function(b){
var u,str,strL,
x=this,
Decimal=x['constructor'],
xe=x['e'];


if(xe === null){
str = x['s']?'Infinity':'NaN';}else 


if(b === u && (xe <= Decimal['toExpNeg'] || xe >= Decimal['toExpPos'])){

return format(x,null,Decimal['rounding'],1);}else 
{
str = coefficientToString(x['c']);


if(xe < 0){


for(;++xe;str = '0' + str);
str = '0.' + str;}else 


if((strL = str.length,xe > 0)){

if(++xe > strL){


for(xe -= strL;xe--;str += '0');}else 

if(xe < strL){
str = str.slice(0,xe) + '.' + str.slice(xe);}}else 



{
u = str.charAt(0);

if(strL > 1){
str = u + '.' + str.slice(1);}else 


if(u == '0'){

return u;}}



if(b != null){

if(!(outOfRange = !(b >= 2 && b < 65)) && (
b == (b | 0) || !Decimal['errors'])){
str = convertBase(Decimal,str,b | 0,10,x['s']);


if(str == '0'){

return str;}}else 

{



ifExceptionsThrow(Decimal,'base',b,'toString',0);}}}




return x['s'] < 0?'-' + str:str;};







P['truncated'] = P['trunc'] = function(){

return rnd(new this['constructor'](this),this['e'] + 1,1);};









P['valueOf'] = P['toJSON'] = function(){

return this.toString();};



































function coefficientToString(a){
var s,z,
i=1,
j=a.length,
r=a[0] + '';

for(;i < j;i++) {
s = a[i] + '';

for(z = LOGBASE - s.length;z--;) {
s = '0' + s;}


r += s;}



for(j = r.length;r.charCodeAt(--j) === 48;);

return r.slice(0,j + 1 || 1);}


















function checkRoundingDigits(c,i,rm,repeating){
var ci,k,n,r,rd;


for(k = 1,n = c[0];n >= 10;n /= 10,k++);

n = i - k;


if(n < 0){
n += LOGBASE;
ci = 0;}else 
{
ci = Math.ceil((n + 1) / LOGBASE);
n %= LOGBASE;}


k = mathpow(10,LOGBASE - n);
rd = c[ci] % k | 0;

if(repeating == null){

if(n < 3){

if(n == 0){
rd = rd / 100 | 0;}else 
if(n == 1){
rd = rd / 10 | 0;}


r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;}else 
{
r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && 
(c[ci + 1] / k / 100 | 0) == mathpow(10,n - 2) - 1 || 
(rd == k / 2 || rd == 0) && (c[ci + 1] / k / 100 | 0) == 0;}}else 

{

if(n < 4){

if(n == 0){
rd = rd / 1000 | 0;}else 
if(n == 1){
rd = rd / 100 | 0;}else 
if(n == 2){
rd = rd / 10 | 0;}


r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;}else 
{
r = ((repeating || rm < 4) && rd + 1 == k || 
!repeating && rm > 3 && rd + 1 == k / 2) && 
(c[ci + 1] / k / 1000 | 0) == mathpow(10,n - 3) - 1;}}



return r;}






function checkRM(x,rm,method){
var Decimal=x['constructor'];

return rm == null || ((outOfRange = rm < 0 || rm > 8) || 
rm !== 0 && (Decimal['errors']?parseInt:parseFloat)(rm) != rm) && 
!ifExceptionsThrow(Decimal,'rounding mode',rm,method,0)?
Decimal['rounding']:rm | 0;}






function checkArg(x,n,method,min){
var Decimal=x['constructor'];

return !(outOfRange = n < (min || 0) || n >= MAX_DIGITS + 1) && (





n === 0 || (Decimal['errors']?parseInt:parseFloat)(n) == n) || 
ifExceptionsThrow(Decimal,'argument',n,method,0);}






convertBase = (function(){






function toBaseOut(str,baseIn,baseOut){
var j,
arr=[0],
arrL,
i=0,
strL=str.length;

for(;i < strL;) {
for(arrL = arr.length;arrL--;arr[arrL] *= baseIn);
arr[j = 0] += NUMERALS.indexOf(str.charAt(i++));

for(;j < arr.length;j++) {

if(arr[j] > baseOut - 1){

if(arr[j + 1] == null){
arr[j + 1] = 0;}

arr[j + 1] += arr[j] / baseOut | 0;
arr[j] %= baseOut;}}}




return arr.reverse();}


return function(Decimal,str,baseOut,baseIn,sign){
var e,j,r,x,xc,y,
i=str.indexOf('.'),
pr=Decimal['precision'],
rm=Decimal['rounding'];

if(baseIn < 37){
str = str.toLowerCase();}



if(i >= 0){
str = str.replace('.','');
y = new Decimal(baseIn);
x = intPow(Decimal,y,str.length - i);






y['c'] = toBaseOut(x.toFixed(),10,baseOut);
y['e'] = y['c'].length;}



xc = toBaseOut(str,baseIn,baseOut);
e = j = xc.length;


for(;xc[--j] == 0;xc.pop());

if(!xc[0]){

return '0';}


if(i < 0){
e--;}else 
{
x['c'] = xc;
x['e'] = e;


x['s'] = sign;
x = div(x,y,pr,rm,0,baseOut);
xc = x['c'];
r = x['r'];
e = x['e'];}



i = xc[pr];
j = baseOut / 2;
r = r || xc[pr + 1] != null;

if(rm < 4?
(i != null || r) && (rm == 0 || rm == (sign < 0?3:2)):
i > j || i == j && (rm == 4 || r || rm == 6 && xc[pr - 1] & 1 || 
rm == (sign < 0?8:7))){

xc.length = pr;


for(--baseOut;++xc[--pr] > baseOut;) {
xc[pr] = 0;

if(!pr){
++e;
xc.unshift(1);}}}else 


{
xc.length = pr;}



for(j = xc.length;!xc[--j];);


for(i = 0,str = '';i <= j;str += NUMERALS.charAt(xc[i++]));


if(e < 0){


for(;++e;str = '0' + str);

str = '0.' + str;}else 


{
i = str.length;

if(++e > i){


for(e -= i;e--;str += '0');}else 

if(e < i){
str = str.slice(0,e) + '.' + str.slice(e);}}




return str;};})();








var div=(function(){


function multiplyInteger(x,k,base){
var temp,
carry=0,
i=x.length;

for(x = x.slice();i--;) {
temp = x[i] * k + carry;
x[i] = temp % base | 0;
carry = temp / base | 0;}


if(carry){
x.unshift(carry);}


return x;}


function compare(a,b,aL,bL){
var i,cmp;

if(aL != bL){
cmp = aL > bL?1:-1;}else 
{

for(i = cmp = 0;i < aL;i++) {

if(a[i] != b[i]){
cmp = a[i] > b[i]?1:-1;

break;}}}




return cmp;}


function subtract(a,b,aL,base){
var i=0;


for(;aL--;) {
a[aL] -= i;
i = a[aL] < b[aL]?1:0;
a[aL] = i * base + a[aL] - b[aL];}



for(;!a[0] && a.length > 1;a.shift());}



return function(x,y,pr,rm,dp,base){
var cmp,e,i,logbase,more,n,prod,prodL,q,qc,rem,remL,rem0,t,xi,xL,yc0,
yL,yz,
Decimal=x['constructor'],
s=x['s'] == y['s']?1:-1,
xc=x['c'],
yc=y['c'];


if(!xc || !xc[0] || !yc || !yc[0]){

return new Decimal(


!x['s'] || !y['s'] || (xc?yc && xc[0] == yc[0]:!yc)?NaN:


xc && xc[0] == 0 || !yc?s * 0:s / 0);}



if(base){
logbase = 1;
e = x['e'] - y['e'];}else 
{
base = BASE;
logbase = LOGBASE;
e = mathfloor(x['e'] / logbase) - mathfloor(y['e'] / logbase);}


yL = yc.length;
xL = xc.length;
q = new Decimal(s);
qc = q['c'] = [];



for(i = 0;yc[i] == (xc[i] || 0);i++);

if(yc[i] > (xc[i] || 0)){
e--;}


if(pr == null){
s = pr = Decimal['precision'];
rm = Decimal['rounding'];}else 
if(dp){
s = pr + (x['e'] - y['e']) + 1;}else 
{
s = pr;}


if(s < 0){
qc.push(1);
more = true;}else 
{


s = s / logbase + 2 | 0;
i = 0;


if(yL == 1){
n = 0;
yc = yc[0];
s++;


for(;(i < xL || n) && s--;i++) {
t = n * base + (xc[i] || 0);
qc[i] = t / yc | 0;
n = t % yc | 0;}


more = n || i < xL;}else 


{


n = base / (yc[0] + 1) | 0;

if(n > 1){
yc = multiplyInteger(yc,n,base);
xc = multiplyInteger(xc,n,base);
yL = yc.length;
xL = xc.length;}


xi = yL;
rem = xc.slice(0,yL);
remL = rem.length;


for(;remL < yL;rem[remL++] = 0);

yz = yc.slice();
yz.unshift(0);
yc0 = yc[0];

if(yc[1] >= base / 2){
yc0++;}


do {
n = 0;


cmp = compare(yc,rem,yL,remL);


if(cmp < 0){


rem0 = rem[0];

if(yL != remL){
rem0 = rem0 * base + (rem[1] || 0);}



n = rem0 / yc0 | 0;











if(n > 1){

if(n >= base){
n = base - 1;}



prod = multiplyInteger(yc,n,base);
prodL = prod.length;
remL = rem.length;


cmp = compare(prod,rem,prodL,remL);


if(cmp == 1){
n--;


subtract(prod,yL < prodL?yz:yc,prodL,base);}}else 

{




if(n == 0){
cmp = n = 1;}

prod = yc.slice();}

prodL = prod.length;

if(prodL < remL){
prod.unshift(0);}



subtract(rem,prod,remL,base);


if(cmp == -1){
remL = rem.length;


cmp = compare(yc,rem,yL,remL);


if(cmp < 1){
n++;


subtract(rem,yL < remL?yz:yc,remL,base);}}



remL = rem.length;}else 

if(cmp === 0){
n++;
rem = [0];}



qc[i++] = n;


if(cmp && rem[0]){
rem[remL++] = xc[xi] || 0;}else 
{
rem = [xc[xi]];
remL = 1;}}while(


(xi++ < xL || rem[0] != null) && s--);

more = rem[0] != null;}



if(!qc[0]){
qc.shift();}}




if(logbase == 1){
q['e'] = e;
q['r'] = +more;}else 
{


for(i = 1,s = qc[0];s >= 10;s /= 10,i++);
q['e'] = i + e * logbase - 1;

rnd(q,dp?pr + q['e'] + 1:pr,rm,more);}


return q;};})();
































function exp(x,pr){
var denom,guard,j,pow,sd,sum,t,
rep=0,
i=0,
k=0,
Decimal=x['constructor'],
one=Decimal['ONE'],
rm=Decimal['rounding'],
precision=Decimal['precision'];


if(!x['c'] || !x['c'][0] || x['e'] > 17){

return new Decimal(x['c']?
!x['c'][0]?one:x['s'] < 0?0:1 / 0:
x['s']?x['s'] < 0?0:x:NaN);}


if(pr == null){















external = false;
sd = precision;}else 
{
sd = pr;}


t = new Decimal(0.03125);


while(x['e'] > -2) {


x = x['times'](t);
k += 5;}






guard = Math.log(mathpow(2,k)) / Math.LN10 * 2 + 5 | 0;
sd += guard;

denom = pow = sum = new Decimal(one);
Decimal['precision'] = sd;

for(;;) {
pow = rnd(pow['times'](x),sd,1);
denom = denom['times'](++i);
t = sum['plus'](div(pow,denom,sd,1));

if(coefficientToString(t['c']).slice(0,sd) === 
coefficientToString(sum['c']).slice(0,sd)){
j = k;

while(j--) {
sum = rnd(sum['times'](sum),sd,1);}











if(pr == null){

if(rep < 3 && checkRoundingDigits(sum['c'],sd - guard,rm,rep)){
Decimal['precision'] = sd += 10;
denom = pow = t = new Decimal(one);
i = 0;
rep++;}else 
{

return rnd(sum,Decimal['precision'] = precision,rm,external = true);}}else 

{
Decimal['precision'] = precision;

return sum;}}


sum = t;}}












function format(n,i,j,k){
var s,z,
Decimal=n['constructor'],
e=(n = new Decimal(n))['e'];


if(i == null){
j = 0;}else 
{
rnd(n,++i,j);


j = k?i:i + n['e'] - e;}


e = n['e'];
s = coefficientToString(n['c']);








if(k == 1 || k == 2 && (i <= e || e <= Decimal['toExpNeg'])){


for(;s.length < j;s += '0');

if(s.length > 1){
s = s.charAt(0) + '.' + s.slice(1);}


s += (e < 0?'e':'e+') + e;}else 


{
k = s.length;


if(e < 0){
z = j - k;


for(;++e;s = '0' + s);
s = '0.' + s;}else 


{

if(++e > k){
z = j - e;


for(e -= k;e--;s += '0');

if(z > 0){
s += '.';}}else 


{
z = j - k;

if(e < k){
s = s.slice(0,e) + '.' + s.slice(e);}else 
if(z > 0){
s += '.';}}}





if(z > 0){

for(;z--;s += '0');}}



return n['s'] < 0 && n['c'][0]?'-' + s:s;}



function getCoeffLength(c){
var v=c.length - 1,
n=v * LOGBASE + 1;

if(v = c[v]){


for(;v % 10 == 0;v /= 10,n--);


for(v = c[0];v >= 10;v /= 10,n++);}


return n;}






function ifExceptionsThrow(Decimal,message,arg,method,more){

if(Decimal['errors']){
var error=new Error((method || [
'new Decimal','cmp','div','eq','gt','gte','lt','lte','minus','mod',
'plus','times','toFraction','pow','random','log','sqrt','toNearest','divToInt'][
id?id < 0?-id:id:1 / id < 0?1:0]) + '() ' + ([
'number type has more than 15 significant digits','LN10 out of digits'][message] || 
message + ([outOfRange?' out of range':' not an integer',
' not a boolean or binary digit'][more] || '')) + ': ' + arg);

error['name'] = 'Decimal Error';
outOfRange = id = 0;

throw error;}}









function intPow(Decimal,x,i){
var r=new Decimal(Decimal['ONE']);

for(external = false;;) {

if(i & 1){
r = r['times'](x);}

i >>= 1;

if(!i){

break;}

x = x['times'](x);}

external = true;

return r;}















function ln(y,pr){
var c,c0,denom,e,num,rep,sd,sum,t,x1,x2,
n=1,
guard=10,
x=y,
xc=x['c'],
Decimal=x['constructor'],
one=Decimal['ONE'],
rm=Decimal['rounding'],
precision=Decimal['precision'];


if(x['s'] < 0 || !xc || !xc[0] || !x['e'] && xc[0] == 1 && xc.length == 1){

return new Decimal(xc && !xc[0]?-1 / 0:x['s'] != 1?NaN:xc?0:x);}


if(pr == null){
external = false;
sd = precision;}else 
{
sd = pr;}


Decimal['precision'] = sd += guard;

c = coefficientToString(xc);
c0 = c.charAt(0);

if(Math.abs(e = x['e']) < 1.5e15){














while(c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
x = x['times'](y);
c = coefficientToString(x['c']);
c0 = c.charAt(0);
n++;}


e = x['e'];

if(c0 > 1){
x = new Decimal('0.' + c);
e++;}else 
{
x = new Decimal(c0 + '.' + c.slice(1));}}else 

{






x = new Decimal(c0 + '.' + c.slice(1));

if(sd + 2 > LN10.length){
ifExceptionsThrow(Decimal,1,sd + 2,'ln');}


x = ln(x,sd - guard)['plus'](
new Decimal(LN10.slice(0,sd + 2))['times'](e + ''));


Decimal['precision'] = precision;

return pr == null?rnd(x,precision,rm,external = true):x;}



x1 = x;







sum = num = x = div(x['minus'](one),x['plus'](one),sd,1);
x2 = rnd(x['times'](x),sd,1);
denom = 3;

for(;;) {
num = rnd(num['times'](x2),sd,1);
t = sum['plus'](div(num,new Decimal(denom),sd,1));

if(coefficientToString(t['c']).slice(0,sd) === 
coefficientToString(sum['c']).slice(0,sd)){
sum = sum['times'](2);






if(e !== 0){

if(sd + 2 > LN10.length){
ifExceptionsThrow(Decimal,1,sd + 2,'ln');}


sum = sum['plus'](
new Decimal(LN10.slice(0,sd + 2))['times'](e + ''));}



sum = div(sum,new Decimal(n),sd,1);











if(pr == null){

if(checkRoundingDigits(sum['c'],sd - guard,rm,rep)){
Decimal['precision'] = sd += guard;
t = num = x = div(x1['minus'](one),x1['plus'](one),sd,1);
x2 = rnd(x['times'](x),sd,1);
denom = rep = 1;}else 
{

return rnd(sum,Decimal['precision'] = precision,rm,external = true);}}else 

{
Decimal['precision'] = precision;

return sum;}}



sum = t;
denom += 2;}}







function rnd(x,sd,rm,r){
var digits,i,j,k,n,rd,xc,xci,
Decimal=x['constructor'];


out: if(sd != null){


if(!(xc = x['c'])){

return x;}













for(digits = 1,k = xc[0];k >= 10;k /= 10,digits++);

i = sd - digits;


if(i < 0){
i += LOGBASE;
j = sd;
n = xc[xci = 0];


rd = n / mathpow(10,digits - j - 1) % 10 | 0;}else 
{
xci = Math.ceil((i + 1) / LOGBASE);

if(xci >= xc.length){

if(r){


for(;xc.length <= xci;xc.push(0));

n = rd = 0;
digits = 1;
i %= LOGBASE;
j = i - LOGBASE + 1;}else 
{

break out;}}else 

{
n = k = xc[xci];


for(digits = 1;k >= 10;k /= 10,digits++);


i %= LOGBASE;



j = i - LOGBASE + digits;



rd = j < 0?0:mathfloor(n / mathpow(10,digits - j - 1) % 10);}}



r = r || sd < 0 || 

xc[xci + 1] != null || (j < 0?n:n % mathpow(10,digits - j - 1));







r = rm < 4?
(rd || r) && (rm == 0 || rm == (x['s'] < 0?3:2)):
rd > 5 || rd == 5 && (rm == 4 || r || 

rm == 6 && (i > 0?j > 0?n / mathpow(10,digits - j):0:xc[xci - 1]) % 10 & 1 || 
rm == (x['s'] < 0?8:7));

if(sd < 1 || !xc[0]){
xc.length = 0;

if(r){


sd -= x['e'] + 1;


xc[0] = mathpow(10,(LOGBASE - sd % LOGBASE) % LOGBASE);
x['e'] = -sd || 0;}else 
{


xc[0] = x['e'] = 0;}


return x;}




if(i == 0){
xc.length = xci;
k = 1;
xci--;}else 
{
xc.length = xci + 1;
k = mathpow(10,LOGBASE - i);



xc[xci] = j > 0?(n / mathpow(10,digits - j) % mathpow(10,j) | 0) * k:0;}



if(r){

for(;;) {


if(xci == 0){


for(i = 1,j = xc[0];j >= 10;j /= 10,i++);

j = xc[0] += k;

for(k = 1;j >= 10;j /= 10,k++);


if(i != k){
x['e']++;

if(xc[0] == BASE){
xc[0] = 1;}}



break;}else 
{
xc[xci] += k;

if(xc[xci] != BASE){

break;}


xc[xci--] = 0;
k = 1;}}}





for(i = xc.length;xc[--i] === 0;xc.pop());}


if(external){


if(x['e'] > Decimal['maxE']){


x['c'] = x['e'] = null;}else 


if(x['e'] < Decimal['minE']){


x['c'] = [x['e'] = 0];}}



return x;}



decimal = (function(){














































































































function config(obj){
var p,u,v,
Decimal=this,
c='config',
parse=Decimal['errors']?parseInt:parseFloat;

if(obj == u || typeof obj != 'object' && 

!ifExceptionsThrow(Decimal,'object expected',obj,c)){

return Decimal;}



if((v = obj[p = 'precision']) != u){

if(!(outOfRange = v < 1 || v > MAX_DIGITS) && parse(v) == v){
Decimal[p] = v | 0;}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'rounding']) != u){

if(!(outOfRange = v < 0 || v > 8) && parse(v) == v){
Decimal[p] = v | 0;}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'toExpNeg']) != u){

if(!(outOfRange = v < -EXP_LIMIT || v > 0) && parse(v) == v){
Decimal[p] = mathfloor(v);}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'toExpPos']) != u){

if(!(outOfRange = v < 0 || v > EXP_LIMIT) && parse(v) == v){
Decimal[p] = mathfloor(v);}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'minE']) != u){

if(!(outOfRange = v < -EXP_LIMIT || v > 0) && parse(v) == v){
Decimal[p] = mathfloor(v);}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'maxE']) != u){

if(!(outOfRange = v < 0 || v > EXP_LIMIT) && parse(v) == v){
Decimal[p] = mathfloor(v);}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((v = obj[p = 'errors']) != u){

if(v === !!v || v === 1 || v === 0){
outOfRange = id = 0;
Decimal[p] = !!v;}else 
{


ifExceptionsThrow(Decimal,p,v,c,1);}}




if((v = obj[p = 'crypto']) != u){

if(v === !!v || v === 1 || v === 0){
Decimal[p] = !!(v && crypto && typeof crypto == 'object');}else 
{


ifExceptionsThrow(Decimal,p,v,c,1);}}




if((v = obj[p = 'modulo']) != u){

if(!(outOfRange = v < 0 || v > 9) && parse(v) == v){
Decimal[p] = v | 0;}else 
{



ifExceptionsThrow(Decimal,p,v,c,0);}}




if((obj = obj[p = 'format']) != u){

if(typeof obj == 'object'){
Decimal[p] = obj;}else 
{


ifExceptionsThrow(Decimal,'format object expected',obj,c);}}



return Decimal;}


















function exp(n){return new this(n)['exp']();}



















function ln(n){return new this(n)['ln']();}












function log(x,y){return new this(x)['log'](y);}





function maxOrMin(Decimal,args,ltgt){
var m,n,
i=0;

if(toString.call(args[0]) == '[object Array]'){
args = args[0];}


m = new Decimal(args[0]);

for(;++i < args.length;) {
n = new Decimal(args[i]);

if(!n['s']){
m = n;

break;}else 
if(m[ltgt](n)){
m = n;}}



return m;}









function max(){return maxOrMin(this,arguments,'lt');}








function min(){return maxOrMin(this,arguments,'gt');}





var parseDecimal=(function(){
var isValid=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
trim=String.prototype.trim || 
function(){return this.replace(/^\s+|\s+$/g,'');};

return function(Decimal,x,n,b){
var d,e,i,isNum,orig,valid;

if(typeof n != 'string'){


n = (isNum = typeof n == 'number' || toString.call(n) == '[object Number]') && 
n === 0 && 1 / n < 0?'-0':n + '';}

orig = n;

if(b == null && isValid.test(n)){


x['s'] = n.charCodeAt(0) === 45?(n = n.slice(1),-1):1;}else 


{





if(b == 10){

return rnd(new Decimal(n),Decimal['precision'],Decimal['rounding']);}


n = trim.call(n).replace(/^\+(?!-)/,'');

x['s'] = n.charCodeAt(0) === 45?(n = n.replace(/^-(?!-)/,''),-1):1;

if(b != null){

if((b == (b | 0) || !Decimal['errors']) && 
!(outOfRange = !(b >= 2 && b < 65))){
d = '[' + NUMERALS.slice(0,b = b | 0) + ']+';


n = n.replace(/\.$/,'').replace(/^\./,'0.');


if(valid = new RegExp(
'^' + d + '(?:\\.' + d + ')?$',b < 37?'i':'').test(n)){

if(isNum){

if(n.replace(/^0\.0*|\./,'').length > 15){


ifExceptionsThrow(Decimal,0,orig);}



isNum = !isNum;}

n = convertBase(Decimal,n,10,b,x['s']);}else 

if(n != 'Infinity' && n != 'NaN'){


ifExceptionsThrow(Decimal,'not a base ' + b + ' number',orig);
n = 'NaN';}}else 

{



ifExceptionsThrow(Decimal,'base',b,0,0);


valid = isValid.test(n);}}else 

{
valid = isValid.test(n);}


if(!valid){


x['c'] = x['e'] = null;


if(n != 'Infinity'){


if(n != 'NaN'){


ifExceptionsThrow(Decimal,'not a number',orig);}

x['s'] = null;}

id = 0;

return x;}}




if((e = n.indexOf('.')) > -1){
n = n.replace('.','');}



if((i = n.search(/e/i)) > 0){


if(e < 0){
e = i;}

e += +n.slice(i + 1);
n = n.substring(0,i);}else 

if(e < 0){


e = n.length;}



for(i = 0;n.charCodeAt(i) === 48;i++);


for(b = n.length;n.charCodeAt(--b) === 48;);

n = n.slice(i,b + 1);

if(n){
b = n.length;


if(isNum && b > 15){


ifExceptionsThrow(Decimal,0,orig);}


x['e'] = e = e - i - 1;
x['c'] = [];





i = (e + 1) % LOGBASE;

if(e < 0){
i += LOGBASE;}



if(i < b){

if(i){
x['c'].push(+n.slice(0,i));}


for(b -= LOGBASE;i < b;) {
x['c'].push(+n.slice(i,i += LOGBASE));}


n = n.slice(i);
i = LOGBASE - n.length;}else 
{
i -= b;}


for(;i--;n += '0');

x['c'].push(+n);

if(external){


if(x['e'] > Decimal['maxE']){


x['c'] = x['e'] = null;}else 


if(x['e'] < Decimal['minE']){


x['c'] = [x['e'] = 0];}}}else 


{


x['c'] = [x['e'] = 0];}

id = 0;

return x;};})();











function pow(x,y){return new this(x)['pow'](y);}










function random(dp){
var a,n,v,
i=0,
r=[],
Decimal=this,
rand=new Decimal(Decimal['ONE']);

if(dp == null || !checkArg(rand,dp,'random')){
dp = Decimal['precision'];}else 
{
dp |= 0;}


n = Math.ceil(dp / LOGBASE);

if(Decimal['crypto']){


if(crypto && crypto['getRandomValues']){

a = crypto['getRandomValues'](new Uint32Array(n));

for(;i < n;) {
v = a[i];



if(v >= 4.29e9){

a[i] = crypto['getRandomValues'](new Uint32Array(1))[0];}else 
{



r[i++] = v % 1e7;}}}else 




if(crypto && crypto['randomBytes']){


a = crypto['randomBytes'](n *= 4);

for(;i < n;) {


v = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (
(a[i + 3] & 0x7f) << 24);


if(v >= 2.14e9){
crypto['randomBytes'](4).copy(a,i);}else 
{



r.push(v % 1e7);
i += 4;}}


i = n / 4;}else 

{
ifExceptionsThrow(Decimal,'crypto unavailable',crypto,'random');}}




if(!i){

for(;i < n;) {
r[i++] = Math.random() * 1e7 | 0;}}



n = r[--i];
dp %= LOGBASE;


if(n && dp){
v = mathpow(10,LOGBASE - dp);
r[i] = (n / v | 0) * v;}



for(;r[i] === 0;i--) {
r.pop();}



if(i < 0){
r = [n = 0];}else 
{
n = -1;


for(;r[0] === 0;) {
r.shift();
n -= LOGBASE;}



for(i = 1,v = r[0];v >= 10;) {
v /= 10;
i++;}



if(i < LOGBASE){
n -= LOGBASE - i;}}



rand['e'] = n;
rand['c'] = r;

return rand;}

































function sqrt(n){return new this(n)['sqrt']();}
























function decimalFactory(obj){









function Decimal(n,b){
var x=this;


if(!(x instanceof Decimal)){
ifExceptionsThrow(Decimal,'Decimal called without new',n);

return new Decimal(n,b);}




x['constructor'] = Decimal;


if(n instanceof Decimal){

if(b == null){
id = 0;
x['s'] = n['s'];
x['e'] = n['e'];
x['c'] = (n = n['c'])?n.slice():n;

return x;}else 
if(b == 10){

return rnd(new Decimal(n),Decimal['precision'],Decimal['rounding']);}else 
{
n += '';}}



return parseDecimal(Decimal,x,n,b);}















Decimal['precision'] = 20;


















Decimal['rounding'] = 4;



















Decimal['modulo'] = 1;



Decimal['toExpNeg'] = -7;



Decimal['toExpPos'] = 21;



Decimal['minE'] = -EXP_LIMIT;



Decimal['maxE'] = EXP_LIMIT;


Decimal['errors'] = true;


Decimal['crypto'] = false;


Decimal.format = {
decimalSeparator:'.',
groupSeparator:',',
groupSize:3,
secondaryGroupSize:0,
fractionGroupSeparator:'\xA0',
fractionGroupSize:0};






Decimal.prototype = P;

Decimal['ONE'] = new Decimal(1);








Decimal['ROUND_UP'] = 0;
Decimal['ROUND_DOWN'] = 1;
Decimal['ROUND_CEIL'] = 2;
Decimal['ROUND_FLOOR'] = 3;
Decimal['ROUND_HALF_UP'] = 4;
Decimal['ROUND_HALF_DOWN'] = 5;
Decimal['ROUND_HALF_EVEN'] = 6;
Decimal['ROUND_HALF_CEIL'] = 7;
Decimal['ROUND_HALF_FLOOR'] = 8;


Decimal['EUCLID'] = 9;














Decimal['config'] = config;
Decimal['constructor'] = decimalFactory;
Decimal['exp'] = exp;
Decimal['ln'] = ln;
Decimal['log'] = log;
Decimal['max'] = max;
Decimal['min'] = min;
Decimal['pow'] = pow;
Decimal['sqrt'] = sqrt;
Decimal['random'] = random;

if(obj != null){
Decimal['config'](obj);}


return Decimal;}


return decimalFactory();})();







if(typeof define == 'function' && define.amd){

define(function(){
return decimal;});}else 



if(typeof module != 'undefined' && module.exports){
module.exports = decimal;

if(!crypto){

try{
crypto = require('crypto');}
catch(e) {}}}else 



{
noConflict = global['Decimal'];

decimal['noConflict'] = function(){
global['Decimal'] = noConflict;

return decimal;};


global['Decimal'] = decimal;}})(

this);
});
__d('mathjs/lib/type/bignumber/function/bignumber.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){

























var bignumber=typed('bignumber',{
'':function(){
return new type.BigNumber(0);},


'number':function(x){

return new type.BigNumber(x + '');},


'string':function(x){
return new type.BigNumber(x);},


'BigNumber':function(x){

return x;},


'Array | Matrix':function(x){
return deepMap(x,bignumber);}});



bignumber.toTex = {
0:'0',
1:'\\left(${args[0]}\\right)'};


return bignumber;}


exports.name = 'bignumber';
exports.factory = factory;
});
__d('mathjs/lib/utils/collection/deepMap.js',[],function(global, require, module, exports) {  'use strict';













module.exports = function deepMap(array,callback,skipZeros){
if(array && typeof array.map === 'function'){

return array.map(function(x){
return deepMap(x,callback,skipZeros);});}else 


{
return callback(array);}};
});
__d('mathjs/lib/type/boolean.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var bool=typed('bool',{
'':function(){
return false;},


'boolean':function(x){
return x;},


'number':function(x){
return !!x;},


'BigNumber':function(x){
return !x.isZero();},


'string':function(x){

var lcase=x.toLowerCase();
if(lcase === 'true'){
return true;}else 

if(lcase === 'false'){
return false;}



var num=Number(x);
if(x != '' && !isNaN(num)){
return !!num;}


throw new Error('Cannot convert "' + x + '" to a boolean');},


'Array | Matrix':function(x){
return deepMap(x,bool);}});



return bool;}


exports.name = 'boolean';
exports.factory = factory;
});
__d('mathjs/lib/type/chain/index.js',["mathjs/lib/type/chain/Chain.js","mathjs/lib/type/chain/function/chain.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/chain/Chain.js'),


require('mathjs/lib/type/chain/function/chain.js')];
});
__d('mathjs/lib/type/chain/Chain.js',["mathjs/lib/utils/string.js","mathjs/lib/utils/object.js"],function(global, require, module, exports) {  'use strict';

var format=require('mathjs/lib/utils/string.js').format;
var lazy=require('mathjs/lib/utils/object.js').lazy;

function factory(type,config,load,typed,math){


















function Chain(value){
if(!(this instanceof Chain)){
throw new SyntaxError('Constructor must be called with the new operator');}


if(value && value.isChain){
this.value = value.value;}else 

{
this.value = value;}}






Chain.prototype.type = 'Chain';
Chain.prototype.isChain = true;






Chain.prototype.done = function(){
return this.value;};







Chain.prototype.valueOf = function(){
return this.value;};






Chain.prototype.toString = function(){
return format(this.value);};









function createProxy(name,fn){
if(typeof fn === 'function'){
Chain.prototype[name] = chainify(fn);}}










function createLazyProxy(name,resolver){
lazy(Chain.prototype,name,function outerResolver(){
var fn=resolver();
if(typeof fn === 'function'){
return chainify(fn);}


return undefined;});}









function chainify(fn){
return function(){
var args=[this.value];
for(var i=0;i < arguments.length;i++) {
args[i + 1] = arguments[i];}


return new Chain(fn.apply(fn,args));};}

















Chain.createProxy = function(arg0,arg1){
if(typeof arg0 === 'string'){

createProxy(arg0,arg1);}else 

{

for(var prop in arg0) {
if(arg0.hasOwnProperty(prop)){
createProxy(prop,arg0[prop]);}}}};






Chain.createProxy(math);


math.on('import',function(name,resolver,path){
if(path === undefined){

createLazyProxy(name,resolver);}});



return Chain;}


exports.name = 'Chain';
exports.path = 'type';
exports.factory = factory;
exports.math = true;
exports.lazy = false;
});
__d('mathjs/lib/utils/string.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/formatter.js"],function(global, require, module, exports) {  'use strict';

var formatNumber=require('mathjs/lib/utils/number.js').format;
var formatBigNumber=require('mathjs/lib/utils/bignumber/formatter.js').format;






exports.isString = function(value){
return typeof value === 'string';};







exports.endsWith = function(text,search){
var start=text.length - search.length;
var end=text.length;
return text.substring(start,end) === search;};

























exports.format = function(value,options){
if(typeof value === 'number'){
return formatNumber(value,options);}


if(value && value.isBigNumber === true){
return formatBigNumber(value,options);}


if(value && value.isFraction === true){
if(!options || options.fraction !== 'decimal'){

return value.s * value.n + '/' + value.d;}else 

{

return value.toString();}}



if(Array.isArray(value)){
return formatArray(value,options);}


if(exports.isString(value)){
return '"' + value + '"';}


if(typeof value === 'function'){
return value.syntax?value.syntax + '':'function';}


if(typeof value === 'object'){
if(typeof value.format === 'function'){
return value.format(options);}else 

{
return value.toString();}}



return String(value);};












function formatArray(array,options){
if(Array.isArray(array)){
var str='[';
var len=array.length;
for(var i=0;i < len;i++) {
if(i != 0){
str += ', ';}

str += formatArray(array[i],options);}

str += ']';
return str;}else 

{
return exports.format(array,options);}}
});
__d('mathjs/lib/utils/bignumber/formatter.js',[],function(global, require, module, exports) {  exports.































































format = function(value,options){
if(typeof options === 'function'){

return options(value);}



if(!value.isFinite()){
return value.isNaN()?'NaN':value.gt(0)?'Infinity':'-Infinity';}



var notation='auto';
var precision=undefined;

if(options !== undefined){

if(options.notation){
notation = options.notation;}



if(typeof options === 'number'){
precision = options;}else 

if(options.precision){
precision = options.precision;}}




switch(notation){
case 'fixed':
return exports.toFixed(value,precision);

case 'exponential':
return exports.toExponential(value,precision);

case 'auto':


var lower=1e-3;
var upper=1e5;
if(options && options.exponential){
if(options.exponential.lower !== undefined){
lower = options.exponential.lower;}

if(options.exponential.upper !== undefined){
upper = options.exponential.upper;}}




var oldConfig={
toExpNeg:value.constructor.toExpNeg,
toExpPos:value.constructor.toExpPos};


value.constructor.config({
toExpNeg:Math.round(Math.log(lower) / Math.LN10),
toExpPos:Math.round(Math.log(upper) / Math.LN10)});



if(value.isZero())return '0';


var str;
var abs=value.abs();
if(abs.gte(lower) && abs.lt(upper)){

str = value.toSignificantDigits(precision).toFixed();}else 

{

str = exports.toExponential(value,precision);}



return str.replace(/((\.\d*?)(0+))($|e)/,function(){
var digits=arguments[2];
var e=arguments[4];
return digits !== '.'?digits + e:e;});


default:
throw new Error('Unknown notation "' + notation + '". ' + 
'Choose "auto", "exponential", or "fixed".');}};











exports.toExponential = function(value,precision){
if(precision !== undefined){
return value.toExponential(precision - 1);}else 

{
return value.toExponential();}};









exports.toFixed = function(value,precision){
return value.toFixed(precision || 0);};
});
__d('mathjs/lib/type/chain/function/chain.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){



































return typed('chain',{
'':function(){
return new type.Chain();},


'any':function(value){
return new type.Chain(value);}});}




exports.name = 'chain';
exports.factory = factory;
});
__d('mathjs/lib/type/complex/index.js',["mathjs/lib/type/complex/Complex.js","mathjs/lib/type/complex/function/complex.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/complex/Complex.js'),


require('mathjs/lib/type/complex/function/complex.js')];
});
__d('mathjs/lib/type/complex/Complex.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/number.js","mathjs/lib/type/unit/Unit.js"],function(global, require, module, exports) {  'use strict';

var isNumber=require('mathjs/lib/utils/number.js').isNumber;
var format=require('mathjs/lib/utils/number.js').format;

function factory(type,config,load,typed){

var Unit=load(require('mathjs/lib/type/unit/Unit.js'));




















function Complex(re,im){
if(!(this instanceof Complex)){
throw new SyntaxError('Constructor must be called with the new operator');}


switch(arguments.length){
case 0:
this.re = 0;
this.im = 0;
break;

case 1:
var arg=arguments[0];
if(typeof arg === 'object'){
if('re' in arg && 'im' in arg){
var construct=new Complex(arg.re,arg.im);
this.re = construct.re;
this.im = construct.im;
break;}else 
if('r' in arg && 'phi' in arg){
var construct=Complex.fromPolar(arg.r,arg.phi);
this.re = construct.re;
this.im = construct.im;
break;}}


throw new SyntaxError('Object with the re and im or r and phi properties expected.');

case 2:
if(!isNumber(re) || !isNumber(im)){
throw new TypeError('Two numbers expected in Complex constructor');}

this.re = re;
this.im = im;
break;

default:
throw new SyntaxError('One, two or three arguments expected in Complex constructor');}}






Complex.prototype.isComplex = true;
Complex.prototype.type = 'Complex';


var text,index,c;

function skipWhitespace(){
while(c == ' ' || c == '\t') {
next();}}



function isDigitDot(c){
return c >= '0' && c <= '9' || c == '.';}


function isDigit(c){
return c >= '0' && c <= '9';}


function next(){
index++;
c = text.charAt(index);}


function revert(oldIndex){
index = oldIndex;
c = text.charAt(index);}


function parseNumber(){
var number='';
var oldIndex;
oldIndex = index;

if(c == '+'){
next();}else 

if(c == '-'){
number += c;
next();}


if(!isDigitDot(c)){

revert(oldIndex);
return null;}



if(c == '.'){
number += c;
next();
if(!isDigit(c)){

revert(oldIndex);
return null;}}else 


{
while(isDigit(c)) {
number += c;
next();}

if(c == '.'){
number += c;
next();}}


while(isDigit(c)) {
number += c;
next();}



if(c == 'E' || c == 'e'){
number += c;
next();

if(c == '+' || c == '-'){
number += c;
next();}



if(!isDigit(c)){

revert(oldIndex);
return null;}


while(isDigit(c)) {
number += c;
next();}}



return number;}


function parseComplex(){

var cnext=text.charAt(index + 1);
if(c == 'I' || c == 'i'){
next();
return '1';}else 

if((c == '+' || c == '-') && (cnext == 'I' || cnext == 'i')){
var number=c == '+'?'1':'-1';
next();
next();
return number;}


return null;}


function unexpectedEnd(){
return new SyntaxError('End of string expected, got "' + text.substr(index) + '"');}









Complex.parse = function(str){
text = str;
index = -1;
c = '';

if(typeof text !== 'string'){
throw new TypeError('Invalid argument in Complex.parse, string expected');}


next();
skipWhitespace();
var first=parseNumber();
if(first){
if(c == 'I' || c == 'i'){

next();
skipWhitespace();
if(c){

throw unexpectedEnd();}


return new Complex(0,Number(first));}else 

{

skipWhitespace();
var separator=c;
if(separator != '+' && separator != '-'){

skipWhitespace();
if(c){

throw unexpectedEnd();}


return new Complex(Number(first),0);}else 

{

next();
skipWhitespace();
var second=parseNumber();
if(second){
if(c != 'I' && c != 'i'){

throw new SyntaxError('Character "i" expected, got "' + c + '"');}

next();}else 

{
second = parseComplex();
if(!second){

throw new SyntaxError('Imaginary part expected');}}



if(separator == '-'){
if(second[0] == '-'){
second = '+' + second.substring(1);}else 

{
second = '-' + second;}}



next();
skipWhitespace();
if(c){

throw unexpectedEnd();}


return new Complex(Number(first),Number(second));}}}else 



{

first = parseComplex();
if(first){
skipWhitespace();
if(c){

throw unexpectedEnd();}


return new Complex(0,Number(first));}}



throw new SyntaxError('Could not parse: "' + str + '" as complex number');};













Complex.fromPolar = function(args){
switch(arguments.length){
case 1:
var arg=arguments[0];
if(typeof arg === 'object'){
return Complex.fromPolar(arg.r,arg.phi);}

throw new TypeError('Input has to be an object with r and phi keys.');

case 2:
var r=arguments[0],
phi=arguments[1];
if(isNumber(r)){
if(phi && phi.isUnit && phi.hasBase(Unit.BASE_UNITS.ANGLE)){

phi = phi.toNumber('rad');}


if(isNumber(phi)){
return new Complex(r * Math.cos(phi),r * Math.sin(phi));}


throw new TypeError('Phi is not a number nor an angle unit.');}else 
{
throw new TypeError('Radius r is not a number.');}


default:
throw new SyntaxError('Wrong number of arguments in function fromPolar');}};








Complex.prototype.toPolar = function(){
return {
r:Math.sqrt(this.re * this.re + this.im * this.im),
phi:Math.atan2(this.im,this.re)};};







Complex.prototype.clone = function(){
return new Complex(this.re,this.im);};









Complex.prototype.equals = function(other){
return this.re === other.re && this.im === other.im;};











Complex.prototype.format = function(options){
var str='';
var im=this.im;
var re=this.re;
var strRe=format(this.re,options);
var strIm=format(this.im,options);


var precision=isNumber(options)?options:options?options.precision:null;
if(precision !== null){
var epsilon=Math.pow(10,-precision);
if(Math.abs(re / im) < epsilon){
re = 0;}

if(Math.abs(im / re) < epsilon){
im = 0;}}



if(im == 0){

str = strRe;}else 

if(re == 0){

if(im == 1){
str = 'i';}else 

if(im == -1){
str = '-i';}else 

{
str = strIm + 'i';}}else 


{

if(im > 0){
if(im == 1){
str = strRe + ' + i';}else 

{
str = strRe + ' + ' + strIm + 'i';}}else 


{
if(im == -1){
str = strRe + ' - i';}else 

{
str = strRe + ' - ' + strIm.substring(1) + 'i';}}}




return str;};






Complex.prototype.toString = function(){
return this.format();};







Complex.prototype.toJSON = function(){
return {
mathjs:'Complex',
re:this.re,
im:this.im};};











Complex.fromJSON = function(json){
return new Complex(json);};






Complex.prototype.valueOf = Complex.prototype.toString;

return Complex;}


exports.name = 'Complex';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/unit/Unit.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/string.js"],function(global, require, module, exports) {  'use strict';

var format=require('mathjs/lib/utils/number.js').format;
var endsWith=require('mathjs/lib/utils/string.js').endsWith;


function factory(type,config,load,typed){


















function Unit(value,name){
if(!(this instanceof Unit)){
throw new Error('Constructor must be called with the new operator');}


if(value != undefined && typeof value !== 'number'){
throw new TypeError('First parameter in Unit constructor must be a number');}

if(name != undefined && (typeof name !== 'string' || name == '')){
throw new TypeError('Second parameter in Unit constructor must be a string');}


if(name != undefined){
var u=Unit.parse(name);
this.units = u.units;
this.dimensions = u.dimensions;}else 

{
this.units = [
{
unit:UNIT_NONE,
prefix:PREFIX_NONE,
power:0}];


this.dimensions = [0,0,0,0,0,0,0,0,0];}


this.value = value != undefined?this._normalize(value):null;

this.fixPrefix = false;





this.isUnitListSimplified = true;}






Unit.prototype.type = 'Unit';
Unit.prototype.isUnit = true;


var text,index,c;

function skipWhitespace(){
while(c == ' ' || c == '\t') {
next();}}



function isDigitDot(c){
return c >= '0' && c <= '9' || c == '.';}


function isDigit(c){
return c >= '0' && c <= '9';}


function next(){
index++;
c = text.charAt(index);}


function revert(oldIndex){
index = oldIndex;
c = text.charAt(index);}


function parseNumber(){
var number='';
var oldIndex;
oldIndex = index;

if(c == '+'){
next();}else 

if(c == '-'){
number += c;
next();}


if(!isDigitDot(c)){

revert(oldIndex);
return null;}



if(c == '.'){
number += c;
next();
if(!isDigit(c)){

revert(oldIndex);
return null;}}else 


{
while(isDigit(c)) {
number += c;
next();}

if(c == '.'){
number += c;
next();}}


while(isDigit(c)) {
number += c;
next();}



if(c == 'E' || c == 'e'){


var tentativeNumber='';
var tentativeIndex=index;

tentativeNumber += c;
next();

if(c == '+' || c == '-'){
tentativeNumber += c;
next();}



if(!isDigit(c)){

revert(tentativeIndex);
return number;}



number = number + tentativeNumber;
while(isDigit(c)) {
number += c;
next();}}



return number;}


function parseUnit(){
var unitName='';


var code=text.charCodeAt(index);
while(code >= 48 && code <= 57 || 
code >= 65 && code <= 90 || 
code >= 97 && code <= 122) {
unitName += c;
next();
code = text.charCodeAt(index);}



code = unitName.charCodeAt(0);
if(code >= 65 && code <= 90 || 
code >= 97 && code <= 122){
return unitName || null;}else 

{
return null;}}



function parseCharacter(toFind){
if(c === toFind){
next();
return toFind;}else 

{
return null;}}









Unit.parse = function(str){
text = str;
index = -1;
c = '';

if(typeof text !== 'string'){
throw new TypeError('Invalid argument in Unit.parse, string expected');}


var unit=new Unit();
unit.units = [];














next();
skipWhitespace();

var valueStr=parseNumber();
var value=null;
if(valueStr){
value = parseFloat(valueStr);}

skipWhitespace();


var powerMultiplierCurrent=1;
var expectingUnit=false;


var powerMultiplierStack=[];


var powerMultiplierStackProduct=1;

while(true) {
skipWhitespace();



while(c === '(') {
powerMultiplierStack.push(powerMultiplierCurrent);
powerMultiplierStackProduct *= powerMultiplierCurrent;
powerMultiplierCurrent = 1;
next();
skipWhitespace();}



if(c){
var oldC=c;
var uStr=parseUnit();
if(uStr == null){
throw new SyntaxError('Unexpected "' + oldC + '" in "' + text + '" at index ' + index.toString());}}else 


{

break;}



var res=_findUnit(uStr);
if(res == null){

throw new SyntaxError('Unit "' + uStr + '" not found.');}


var power=powerMultiplierCurrent * powerMultiplierStackProduct;

skipWhitespace();
if(parseCharacter('^')){
skipWhitespace();
var p=parseNumber();
if(p == null){

throw new SyntaxError('In "' + str + '", "^" must be followed by a floating-point number');}

power *= p;}



unit.units.push({
unit:res.unit,
prefix:res.prefix,
power:power});

for(var i=0;i < BASE_DIMENSIONS.length;i++) {
unit.dimensions[i] += res.unit.dimensions[i] * power;}




skipWhitespace();
while(c === ')') {
if(powerMultiplierStack.length === 0){
throw new SyntaxError('Unmatched ")" in "' + text + '" at index ' + index.toString());}

powerMultiplierStackProduct /= powerMultiplierStack.pop();
next();
skipWhitespace();}




expectingUnit = false;

if(parseCharacter('*')){

powerMultiplierCurrent = 1;
expectingUnit = true;}else 

if(parseCharacter('/')){

powerMultiplierCurrent = -1;
expectingUnit = true;}else 

{

powerMultiplierCurrent = 1;}



var baseDim=res.unit.base.key;
UNIT_SYSTEMS.auto[baseDim] = {
unit:res.unit,
prefix:res.prefix};}




skipWhitespace();
if(c){
throw new SyntaxError('Could not parse: "' + str + '"');}



if(expectingUnit){
throw new SyntaxError('Trailing characters: "' + str + '"');}



if(powerMultiplierStack.length !== 0){
throw new SyntaxError('Unmatched "(" in "' + text + '"');}



if(unit.units.length == 0){
throw new SyntaxError('"' + str + '" contains no units');}


unit.value = value != undefined?unit._normalize(value):null;
return unit;};






Unit.prototype.clone = function(){
var clone=new Unit();

for(var p in this) {
if(this.hasOwnProperty(p)){
clone[p] = this[p];}}



clone.dimensions = this.dimensions.slice(0);
clone.units = [];
for(var i=0;i < this.units.length;i++) {
clone.units[i] = {};
for(var p in this.units[i]) {
if(this.units[i].hasOwnProperty(p)){
clone.units[i][p] = this.units[i][p];}}}




return clone;};






Unit.prototype._isDerived = function(){
if(this.units.length === 0){
return false;}

return this.units.length > 1 || Math.abs(this.units[0].power - 1.0) > 1e-15;};








Unit.prototype._normalize = function(value){
if(this.units.length === 0){
return value;}else 

if(this._isDerived()){


var res=value;
for(var i=0;i < this.units.length;i++) {
res = res * Math.pow(this.units[i].unit.value * this.units[i].prefix.value,this.units[i].power);}

return res;}else 

{

return (value + this.units[0].unit.offset) * this.units[0].unit.value * this.units[0].prefix.value;}};










Unit.prototype._denormalize = function(value,prefixValue){
if(this.units.length === 0){
return value;}else 

if(this._isDerived()){



var res=value;
for(var i=0;i < this.units.length;i++) {
res = res / Math.pow(this.units[i].unit.value * this.units[i].prefix.value,this.units[i].power);}

return res;}else 

{

if(prefixValue == undefined){
return value / this.units[0].unit.value / this.units[0].prefix.value - this.units[0].unit.offset;}else 

{
return value / this.units[0].unit.value / prefixValue - this.units[0].unit.offset;}}};











function _findUnit(str){
for(var name in UNITS) {
if(UNITS.hasOwnProperty(name)){
if(endsWith(str,name)){
var unit=UNITS[name];
var prefixLen=str.length - name.length;
var prefixName=str.substring(0,prefixLen);
var prefix=unit.prefixes[prefixName];
if(prefix !== undefined){

return {
unit:unit,
prefix:prefix};}}}}






return null;}









Unit.isValuelessUnit = function(name){
return _findUnit(name) != null;};







Unit.prototype.hasBase = function(base){


for(var i=0;i < BASE_DIMENSIONS.length;i++) {
if(Math.abs(this.dimensions[i] - base.dimensions[i]) > 1e-12){
return false;}}


return true;};









Unit.prototype.equalBase = function(other){

for(var i=0;i < BASE_DIMENSIONS.length;i++) {
if(Math.abs(this.dimensions[i] - other.dimensions[i]) > 1e-12){
return false;}}


return true;};







Unit.prototype.equals = function(other){
return this.equalBase(other) && this.value == other.value;};







Unit.prototype.multiply = function(other){

var res=this.clone();

for(var i=0;i < BASE_DIMENSIONS.length;i++) {
res.dimensions[i] = this.dimensions[i] + other.dimensions[i];}



for(var i=0;i < other.units.length;i++) {
var inverted=JSON.parse(JSON.stringify(other.units[i]));
res.units.push(inverted);}



if(this.value != null || other.value != null){
var valThis=this.value == null?this._normalize(1):this.value;
var valOther=other.value == null?other._normalize(1):other.value;
res.value = valThis * valOther;}else 

{
res.value = null;}



res.isUnitListSimplified = false;
return res;};







Unit.prototype.divide = function(other){
var res=this.clone();

for(var i=0;i < BASE_DIMENSIONS.length;i++) {
res.dimensions[i] = this.dimensions[i] - other.dimensions[i];}



for(var i=0;i < other.units.length;i++) {

var inverted=JSON.parse(JSON.stringify(other.units[i]));
inverted.power = -inverted.power;
res.units.push(inverted);}



if(this.value != null || other.value != null){
var valThis=this.value == null?this._normalize(1):this.value;
var valOther=other.value == null?other._normalize(1):other.value;
res.value = valThis / valOther;}else 

{
res.value = null;}



res.isUnitListSimplified = false;
return res;};







Unit.prototype.pow = function(p){
var res=this.clone();

for(var i=0;i < BASE_DIMENSIONS.length;i++) {
res.dimensions[i] = this.dimensions[i] * p;}



for(var i=0;i < res.units.length;i++) {
res.units[i].power *= p;}


if(res.value != null){
res.value = Math.pow(res.value,p);}else 

{
res.value = null;}



res.isUnitListSimplified = false;
return res;};








Unit.prototype.to = function(valuelessUnit){

var other;
var value=this.value == null?this._normalize(1):this.value;
if(typeof valuelessUnit === 'string'){

other = Unit.parse(valuelessUnit);
if(!this.equalBase(other)){
throw new Error('Units do not match');}

if(other.value !== null){
throw new Error('Cannot convert to a unit with a value');}


other.value = value;
other.fixPrefix = true;
other.isUnitListSimplified = true;
return other;}else 

if(valuelessUnit && valuelessUnit.isUnit){
if(!this.equalBase(valuelessUnit)){
throw new Error('Units do not match');}

if(valuelessUnit.value !== null){
throw new Error('Cannot convert to a unit with a value');}

other = valuelessUnit.clone();
other.value = value;
other.fixPrefix = true;
other.isUnitListSimplified = true;
return other;}else 

{
throw new Error('String or Unit expected as parameter');}};








Unit.prototype.toNumber = function(valuelessUnit){
var other=this.to(valuelessUnit);
if(other._isDerived()){
return other._denormalize(other.value);}else 

{
return other._denormalize(other.value,other.units[0].prefix.value);}};








Unit.prototype.toString = function(){
return this.format();};







Unit.prototype.toJSON = function(){
return {
mathjs:'Unit',
value:this._denormalize(this.value),
unit:this.formatUnits(),
fixPrefix:this.fixPrefix};};









Unit.fromJSON = function(json){
var unit=new Unit(json.value,json.unit);
unit.fixPrefix = json.fixPrefix || false;
return unit;};






Unit.prototype.valueOf = Unit.prototype.toString;





Unit.prototype.simplifyUnitListLazy = function(){

if(this.isUnitListSimplified || this.value == null){
return;}


var proposedUnitList=[];


var matchingBase;
for(var key in currentUnitSystem) {
if(this.hasBase(BASE_UNITS[key])){
matchingBase = key;
break;}}



if(matchingBase === 'NONE')
{
this.units = [];}else 

{
var matchingUnit;
if(matchingBase){

if(currentUnitSystem.hasOwnProperty(matchingBase)){
matchingUnit = currentUnitSystem[matchingBase];}}



var value;
var str;
if(matchingUnit){
this.units = [{
unit:matchingUnit.unit,
prefix:matchingUnit.prefix,
power:1.0}];}else 


{



for(var i=0;i < BASE_DIMENSIONS.length;i++) {
var baseDim=BASE_DIMENSIONS[i];
if(Math.abs(this.dimensions[i]) > 1e-12){
proposedUnitList.push({
unit:currentUnitSystem[baseDim].unit,
prefix:currentUnitSystem[baseDim].prefix,
power:this.dimensions[i]});}}





if(proposedUnitList.length < this.units.length){

this.units = proposedUnitList;}}}




this.isUnitListSimplified = true;};






Unit.prototype.formatUnits = function(){


this.simplifyUnitListLazy();

var strNum="";
var strDen="";
var nNum=0;
var nDen=0;

for(var i=0;i < this.units.length;i++) {
if(this.units[i].power > 0){
nNum++;
strNum += " " + this.units[i].prefix.name + this.units[i].unit.name;
if(Math.abs(this.units[i].power - 1.0) > 1e-15){
strNum += "^" + this.units[i].power;}}else 


if(this.units[i].power < 0){
nDen++;}}



if(nDen > 0){
for(var i=0;i < this.units.length;i++) {
if(this.units[i].power < 0){
if(nNum > 0){
strDen += " " + this.units[i].prefix.name + this.units[i].unit.name;
if(Math.abs(this.units[i].power + 1.0) > 1e-15){
strDen += "^" + -this.units[i].power;}}else 


{
strDen += " " + this.units[i].prefix.name + this.units[i].unit.name;
strDen += "^" + this.units[i].power;}}}}





strNum = strNum.substr(1);
strDen = strDen.substr(1);


if(nNum > 1 && nDen > 0){
strNum = "(" + strNum + ")";}

if(nDen > 1 && nNum > 0){
strDen = "(" + strDen + ")";}


var str=strNum;
if(nNum > 0 && nDen > 0){
str += " / ";}

str += strDen;

return str;};










Unit.prototype.format = function(options){


this.simplifyUnitListLazy();



if(this.units.length === 1 && !this.fixPrefix){


if(Math.abs(this.units[0].power - Math.round(this.units[0].power)) < 1e-14){

var bestPrefix=this._bestPrefix();
this.units[0].prefix = bestPrefix;}}



var value=this._denormalize(this.value);
var str=this.value !== null?format(value,options):'';
var unitStr=this.formatUnits();
if(unitStr.length > 0 && str.length > 0){
str += " ";}

str += unitStr;

return str;};








































Unit.prototype._bestPrefix = function(){
if(this.units.length !== 1){
throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");}

if(Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14){
throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");}







var absValue=Math.abs(this.value);
var bestPrefix=this.units[0].prefix;
if(absValue === 0){
return bestPrefix;}

var power=this.units[0].power;
var bestDiff=Math.abs(
Math.log(absValue / Math.pow(bestPrefix.value * this.units[0].unit.value,power)) / Math.LN10 - 1.2);

var prefixes=this.units[0].unit.prefixes;
for(var p in prefixes) {
if(prefixes.hasOwnProperty(p)){
var prefix=prefixes[p];
if(prefix.scientific){

var diff=Math.abs(
Math.log(absValue / Math.pow(prefix.value * this.units[0].unit.value,power)) / Math.LN10 - 1.2);

if(diff < bestDiff || 
diff === bestDiff && prefix.name.length < bestPrefix.name.length){


bestPrefix = prefix;
bestDiff = diff;}}}}





return bestPrefix;};


var PREFIXES={
NONE:{
'':{name:'',value:1,scientific:true}},

SHORT:{
'':{name:'',value:1,scientific:true},

'da':{name:'da',value:1e1,scientific:false},
'h':{name:'h',value:1e2,scientific:false},
'k':{name:'k',value:1e3,scientific:true},
'M':{name:'M',value:1e6,scientific:true},
'G':{name:'G',value:1e9,scientific:true},
'T':{name:'T',value:1e12,scientific:true},
'P':{name:'P',value:1e15,scientific:true},
'E':{name:'E',value:1e18,scientific:true},
'Z':{name:'Z',value:1e21,scientific:true},
'Y':{name:'Y',value:1e24,scientific:true},

'd':{name:'d',value:1e-1,scientific:false},
'c':{name:'c',value:1e-2,scientific:false},
'm':{name:'m',value:1e-3,scientific:true},
'u':{name:'u',value:1e-6,scientific:true},
'n':{name:'n',value:1e-9,scientific:true},
'p':{name:'p',value:1e-12,scientific:true},
'f':{name:'f',value:1e-15,scientific:true},
'a':{name:'a',value:1e-18,scientific:true},
'z':{name:'z',value:1e-21,scientific:true},
'y':{name:'y',value:1e-24,scientific:true}},

LONG:{
'':{name:'',value:1,scientific:true},

'deca':{name:'deca',value:1e1,scientific:false},
'hecto':{name:'hecto',value:1e2,scientific:false},
'kilo':{name:'kilo',value:1e3,scientific:true},
'mega':{name:'mega',value:1e6,scientific:true},
'giga':{name:'giga',value:1e9,scientific:true},
'tera':{name:'tera',value:1e12,scientific:true},
'peta':{name:'peta',value:1e15,scientific:true},
'exa':{name:'exa',value:1e18,scientific:true},
'zetta':{name:'zetta',value:1e21,scientific:true},
'yotta':{name:'yotta',value:1e24,scientific:true},

'deci':{name:'deci',value:1e-1,scientific:false},
'centi':{name:'centi',value:1e-2,scientific:false},
'milli':{name:'milli',value:1e-3,scientific:true},
'micro':{name:'micro',value:1e-6,scientific:true},
'nano':{name:'nano',value:1e-9,scientific:true},
'pico':{name:'pico',value:1e-12,scientific:true},
'femto':{name:'femto',value:1e-15,scientific:true},
'atto':{name:'atto',value:1e-18,scientific:true},
'zepto':{name:'zepto',value:1e-21,scientific:true},
'yocto':{name:'yocto',value:1e-24,scientific:true}},

SQUARED:{
'':{name:'',value:1,scientific:true},

'da':{name:'da',value:1e2,scientific:false},
'h':{name:'h',value:1e4,scientific:false},
'k':{name:'k',value:1e6,scientific:true},
'M':{name:'M',value:1e12,scientific:true},
'G':{name:'G',value:1e18,scientific:true},
'T':{name:'T',value:1e24,scientific:true},
'P':{name:'P',value:1e30,scientific:true},
'E':{name:'E',value:1e36,scientific:true},
'Z':{name:'Z',value:1e42,scientific:true},
'Y':{name:'Y',value:1e48,scientific:true},

'd':{name:'d',value:1e-2,scientific:false},
'c':{name:'c',value:1e-4,scientific:false},
'm':{name:'m',value:1e-6,scientific:true},
'u':{name:'u',value:1e-12,scientific:true},
'n':{name:'n',value:1e-18,scientific:true},
'p':{name:'p',value:1e-24,scientific:true},
'f':{name:'f',value:1e-30,scientific:true},
'a':{name:'a',value:1e-36,scientific:true},
'z':{name:'z',value:1e-42,scientific:true},
'y':{name:'y',value:1e-48,scientific:true}},

CUBIC:{
'':{name:'',value:1,scientific:true},

'da':{name:'da',value:1e3,scientific:false},
'h':{name:'h',value:1e6,scientific:false},
'k':{name:'k',value:1e9,scientific:true},
'M':{name:'M',value:1e18,scientific:true},
'G':{name:'G',value:1e27,scientific:true},
'T':{name:'T',value:1e36,scientific:true},
'P':{name:'P',value:1e45,scientific:true},
'E':{name:'E',value:1e54,scientific:true},
'Z':{name:'Z',value:1e63,scientific:true},
'Y':{name:'Y',value:1e72,scientific:true},

'd':{name:'d',value:1e-3,scientific:false},
'c':{name:'c',value:1e-6,scientific:false},
'm':{name:'m',value:1e-9,scientific:true},
'u':{name:'u',value:1e-18,scientific:true},
'n':{name:'n',value:1e-27,scientific:true},
'p':{name:'p',value:1e-36,scientific:true},
'f':{name:'f',value:1e-45,scientific:true},
'a':{name:'a',value:1e-54,scientific:true},
'z':{name:'z',value:1e-63,scientific:true},
'y':{name:'y',value:1e-72,scientific:true}},

BINARY_SHORT:{
'':{name:'',value:1,scientific:true},
'k':{name:'k',value:1e3,scientific:true},
'M':{name:'M',value:1e6,scientific:true},
'G':{name:'G',value:1e9,scientific:true},
'T':{name:'T',value:1e12,scientific:true},
'P':{name:'P',value:1e15,scientific:true},
'E':{name:'E',value:1e18,scientific:true},
'Z':{name:'Z',value:1e21,scientific:true},
'Y':{name:'Y',value:1e24,scientific:true},

'Ki':{name:'Ki',value:1024,scientific:true},
'Mi':{name:'Mi',value:Math.pow(1024,2),scientific:true},
'Gi':{name:'Gi',value:Math.pow(1024,3),scientific:true},
'Ti':{name:'Ti',value:Math.pow(1024,4),scientific:true},
'Pi':{name:'Pi',value:Math.pow(1024,5),scientific:true},
'Ei':{name:'Ei',value:Math.pow(1024,6),scientific:true},
'Zi':{name:'Zi',value:Math.pow(1024,7),scientific:true},
'Yi':{name:'Yi',value:Math.pow(1024,8),scientific:true}},

BINARY_LONG:{
'':{name:'',value:1,scientific:true},
'kilo':{name:'kilo',value:1e3,scientific:true},
'mega':{name:'mega',value:1e6,scientific:true},
'giga':{name:'giga',value:1e9,scientific:true},
'tera':{name:'tera',value:1e12,scientific:true},
'peta':{name:'peta',value:1e15,scientific:true},
'exa':{name:'exa',value:1e18,scientific:true},
'zetta':{name:'zetta',value:1e21,scientific:true},
'yotta':{name:'yotta',value:1e24,scientific:true},

'kibi':{name:'kibi',value:1024,scientific:true},
'mebi':{name:'mebi',value:Math.pow(1024,2),scientific:true},
'gibi':{name:'gibi',value:Math.pow(1024,3),scientific:true},
'tebi':{name:'tebi',value:Math.pow(1024,4),scientific:true},
'pebi':{name:'pebi',value:Math.pow(1024,5),scientific:true},
'exi':{name:'exi',value:Math.pow(1024,6),scientific:true},
'zebi':{name:'zebi',value:Math.pow(1024,7),scientific:true},
'yobi':{name:'yobi',value:Math.pow(1024,8),scientific:true}},

BTU:{
'':{name:'',value:1,scientific:true},
'MM':{name:'MM',value:1e6,scientific:true}}};




PREFIXES.SHORTLONG = {};
for(var key in PREFIXES.SHORT) {
if(PREFIXES.SHORT.hasOwnProperty(key)){
PREFIXES.SHORTLONG[key] = PREFIXES.SHORT[key];}}


for(var key in PREFIXES.LONG) {
if(PREFIXES.LONG.hasOwnProperty(key)){
PREFIXES.SHORTLONG[key] = PREFIXES.LONG[key];}}



var PREFIX_NONE={name:'',value:1,scientific:true};

















var BASE_DIMENSIONS=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"];

var BASE_UNITS={
NONE:{
dimensions:[0,0,0,0,0,0,0,0,0]},

MASS:{
dimensions:[1,0,0,0,0,0,0,0,0]},

LENGTH:{
dimensions:[0,1,0,0,0,0,0,0,0]},

TIME:{
dimensions:[0,0,1,0,0,0,0,0,0]},

CURRENT:{
dimensions:[0,0,0,1,0,0,0,0,0]},

TEMPERATURE:{
dimensions:[0,0,0,0,1,0,0,0,0]},

LUMINOUS_INTENSITY:{
dimensions:[0,0,0,0,0,1,0,0,0]},

AMOUNT_OF_SUBSTANCE:{
dimensions:[0,0,0,0,0,0,1,0,0]},


FORCE:{
dimensions:[1,1,-2,0,0,0,0,0,0]},

SURFACE:{
dimensions:[0,2,0,0,0,0,0,0,0]},

VOLUME:{
dimensions:[0,3,0,0,0,0,0,0,0]},

ENERGY:{
dimensions:[1,2,-2,0,0,0,0,0,0]},

POWER:{
dimensions:[1,2,-3,0,0,0,0,0,0]},

PRESSURE:{
dimensions:[1,-1,-2,0,0,0,0,0,0]},


ELECTRIC_CHARGE:{
dimensions:[0,0,1,1,0,0,0,0,0]},

ELECTRIC_CAPACITANCE:{
dimensions:[-1,-2,4,2,0,0,0,0,0]},

ELECTRIC_POTENTIAL:{
dimensions:[1,2,-3,-1,0,0,0,0,0]},

ELECTRIC_RESISTANCE:{
dimensions:[1,2,-3,-2,0,0,0,0,0]},

ELECTRIC_INDUCTANCE:{
dimensions:[1,2,-2,-2,0,0,0,0,0]},

ELECTRIC_CONDUCTANCE:{
dimensions:[-1,-2,3,2,0,0,0,0,0]},

MAGNETIC_FLUX:{
dimensions:[1,2,-2,-1,0,0,0,0,0]},

MAGNETIC_FLUX_DENSITY:{
dimensions:[1,0,-2,-1,0,0,0,0,0]},



ANGLE:{
dimensions:[0,0,0,0,0,0,0,1,0]},

BIT:{
dimensions:[0,0,0,0,0,0,0,0,1]}};



for(var key in BASE_UNITS) {
BASE_UNITS[key].key = key;}


var BASE_UNIT_NONE={};

var UNIT_NONE={name:'',base:BASE_UNIT_NONE,value:1,offset:0,dimensions:[0,0,0,0,0,0,0,0,0]};

var UNITS={

meter:{
name:'meter',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

inch:{
name:'inch',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.0254,
offset:0},

foot:{
name:'foot',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.3048,
offset:0},

yard:{
name:'yard',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.9144,
offset:0},

mile:{
name:'mile',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:1609.344,
offset:0},

link:{
name:'link',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.201168,
offset:0},

rod:{
name:'rod',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:5.029210,
offset:0},

chain:{
name:'chain',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:20.1168,
offset:0},

angstrom:{
name:'angstrom',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:1e-10,
offset:0},


m:{
name:'m',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

'in':{
name:'in',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.0254,
offset:0},

ft:{
name:'ft',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.3048,
offset:0},

yd:{
name:'yd',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.9144,
offset:0},

mi:{
name:'mi',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:1609.344,
offset:0},

li:{
name:'li',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.201168,
offset:0},

rd:{
name:'rd',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:5.029210,
offset:0},

ch:{
name:'ch',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:20.1168,
offset:0},

mil:{
name:'mil',
base:BASE_UNITS.LENGTH,
prefixes:PREFIXES.NONE,
value:0.0000254,
offset:0},



m2:{
name:'m2',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.SQUARED,
value:1,
offset:0},

sqin:{
name:'sqin',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:0.00064516,
offset:0},

sqft:{
name:'sqft',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:0.09290304,
offset:0},

sqyd:{
name:'sqyd',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:0.83612736,
offset:0},

sqmi:{
name:'sqmi',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:2589988.110336,
offset:0},

sqrd:{
name:'sqrd',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:25.29295,
offset:0},

sqch:{
name:'sqch',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:404.6873,
offset:0},

sqmil:{
name:'sqmil',
base:BASE_UNITS.SURFACE,
prefixes:PREFIXES.NONE,
value:6.4516e-10,
offset:0},



m3:{
name:'m3',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.CUBIC,
value:1,
offset:0},

L:{
name:'L',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.SHORT,
value:0.001,
offset:0},

l:{
name:'l',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.SHORT,
value:0.001,
offset:0},

litre:{
name:'litre',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.LONG,
value:0.001,
offset:0},

cuin:{
name:'cuin',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:1.6387064e-5,
offset:0},

cuft:{
name:'cuft',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.028316846592,
offset:0},

cuyd:{
name:'cuyd',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.764554857984,
offset:0},

teaspoon:{
name:'teaspoon',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.000005,
offset:0},

tablespoon:{
name:'tablespoon',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.000015,
offset:0},


drop:{
name:'drop',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:5e-8,
offset:0},

gtt:{
name:'gtt',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:5e-8,
offset:0},



minim:{
name:'minim',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.00000006161152,
offset:0},

fluiddram:{
name:'fluiddram',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0000036966911,
offset:0},

fluidounce:{
name:'fluidounce',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.00002957353,
offset:0},

gill:{
name:'gill',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0001182941,
offset:0},

cc:{
name:'cc',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:1e-6,
offset:0},

cup:{
name:'cup',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0002365882,
offset:0},

pint:{
name:'pint',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0004731765,
offset:0},

quart:{
name:'quart',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0009463529,
offset:0},

gallon:{
name:'gallon',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.003785412,
offset:0},

beerbarrel:{
name:'beerbarrel',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.1173478,
offset:0},

oilbarrel:{
name:'oilbarrel',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.1589873,
offset:0},

hogshead:{
name:'hogshead',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.2384810,
offset:0},



fldr:{
name:'fldr',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0000036966911,
offset:0},

floz:{
name:'floz',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.00002957353,
offset:0},

gi:{
name:'gi',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0001182941,
offset:0},

cp:{
name:'cp',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0002365882,
offset:0},

pt:{
name:'pt',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0004731765,
offset:0},

qt:{
name:'qt',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.0009463529,
offset:0},

gal:{
name:'gal',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.003785412,
offset:0},

bbl:{
name:'bbl',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.1173478,
offset:0},

obl:{
name:'obl',
base:BASE_UNITS.VOLUME,
prefixes:PREFIXES.NONE,
value:0.1589873,
offset:0},




g:{
name:'g',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.SHORT,
value:0.001,
offset:0},

gram:{
name:'gram',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.LONG,
value:0.001,
offset:0},


ton:{
name:'ton',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.SHORT,
value:907.18474,
offset:0},

tonne:{
name:'tonne',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.SHORT,
value:1000,
offset:0},


grain:{
name:'grain',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:64.79891e-6,
offset:0},

dram:{
name:'dram',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:1.7718451953125e-3,
offset:0},

ounce:{
name:'ounce',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:28.349523125e-3,
offset:0},

poundmass:{
name:'poundmass',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:453.59237e-3,
offset:0},

hundredweight:{
name:'hundredweight',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:45.359237,
offset:0},

stick:{
name:'stick',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:115e-3,
offset:0},

stone:{
name:'stone',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:6.35029318,
offset:0},


gr:{
name:'gr',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:64.79891e-6,
offset:0},

dr:{
name:'dr',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:1.7718451953125e-3,
offset:0},

oz:{
name:'oz',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:28.349523125e-3,
offset:0},

lbm:{
name:'lbm',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:453.59237e-3,
offset:0},

cwt:{
name:'cwt',
base:BASE_UNITS.MASS,
prefixes:PREFIXES.NONE,
value:45.359237,
offset:0},



s:{
name:'s',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

min:{
name:'min',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.NONE,
value:60,
offset:0},

h:{
name:'h',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.NONE,
value:3600,
offset:0},

second:{
name:'second',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

sec:{
name:'sec',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

minute:{
name:'minute',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.NONE,
value:60,
offset:0},

hour:{
name:'hour',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.NONE,
value:3600,
offset:0},

day:{
name:'day',
base:BASE_UNITS.TIME,
prefixes:PREFIXES.NONE,
value:86400,
offset:0},



rad:{
name:'rad',
base:BASE_UNITS.ANGLE,
prefixes:PREFIXES.NONE,
value:1,
offset:0},


deg:{
name:'deg',
base:BASE_UNITS.ANGLE,
prefixes:PREFIXES.NONE,
value:0.017453292519943295769236907684888,
offset:0},


grad:{
name:'grad',
base:BASE_UNITS.ANGLE,
prefixes:PREFIXES.NONE,
value:0.015707963267948966192313216916399,
offset:0},


cycle:{
name:'cycle',
base:BASE_UNITS.ANGLE,
prefixes:PREFIXES.NONE,
value:6.2831853071795864769252867665793,
offset:0},



A:{
name:'A',
base:BASE_UNITS.CURRENT,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

ampere:{
name:'ampere',
base:BASE_UNITS.CURRENT,
prefixes:PREFIXES.LONG,
value:1,
offset:0},






K:{
name:'K',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1,
offset:0},

degC:{
name:'degC',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1,
offset:273.15},

degF:{
name:'degF',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1 / 1.8,
offset:459.67},

degR:{
name:'degR',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1 / 1.8,
offset:0},

kelvin:{
name:'kelvin',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1,
offset:0},

celsius:{
name:'celsius',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1,
offset:273.15},

fahrenheit:{
name:'fahrenheit',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1 / 1.8,
offset:459.67},

rankine:{
name:'rankine',
base:BASE_UNITS.TEMPERATURE,
prefixes:PREFIXES.NONE,
value:1 / 1.8,
offset:0},



mol:{
name:'mol',
base:BASE_UNITS.AMOUNT_OF_SUBSTANCE,
prefixes:PREFIXES.NONE,
value:1,
offset:0},

mole:{
name:'mole',
base:BASE_UNITS.AMOUNT_OF_SUBSTANCE,
prefixes:PREFIXES.NONE,
value:1,
offset:0},



cd:{
name:'cd',
base:BASE_UNITS.LUMINOUS_INTENSITY,
prefixes:PREFIXES.NONE,
value:1,
offset:0},

candela:{
name:'candela',
base:BASE_UNITS.LUMINOUS_INTENSITY,
prefixes:PREFIXES.NONE,
value:1,
offset:0},






N:{
name:'N',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

newton:{
name:'newton',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

dyn:{
name:'dyn',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.SHORT,
value:0.00001,
offset:0},

dyne:{
name:'dyne',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.LONG,
value:0.00001,
offset:0},

lbf:{
name:'lbf',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.NONE,
value:4.4482216152605,
offset:0},

poundforce:{
name:'poundforce',
base:BASE_UNITS.FORCE,
prefixes:PREFIXES.NONE,
value:4.4482216152605,
offset:0},


J:{
name:'J',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

joule:{
name:'joule',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

erg:{
name:'erg',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.NONE,
value:1e-5,
offset:0},

Wh:{
name:'Wh',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.SHORT,
value:3600,
offset:0},

BTU:{
name:'BTU',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.BTU,
value:1055.05585262,
offset:0},

eV:{
name:'eV',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.SHORT,
value:1.602176565e-19,
offset:0},

electronvolt:{
name:'electronvolt',
base:BASE_UNITS.ENERGY,
prefixes:PREFIXES.LONG,
value:1.602176565e-19,
offset:0},




W:{
name:'W',
base:BASE_UNITS.POWER,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

watt:{
name:'W',
base:BASE_UNITS.POWER,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

hp:{
name:'hp',
base:BASE_UNITS.POWER,
prefixes:PREFIXES.NONE,
value:745.6998715386,
offset:0},



Pa:{
name:'Pa',
base:BASE_UNITS.PRESSURE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},

psi:{
name:'psi',
base:BASE_UNITS.PRESSURE,
prefixes:PREFIXES.NONE,
value:6894.75729276459,
offset:0},

atm:{
name:'atm',
base:BASE_UNITS.PRESSURE,
prefixes:PREFIXES.NONE,
value:101325,
offset:0},



coulomb:{
name:'coulomb',
base:BASE_UNITS.ELECTRIC_CHARGE,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

C:{
name:'C',
base:BASE_UNITS.ELECTRIC_CHARGE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


farad:{
name:'farad',
base:BASE_UNITS.ELECTRIC_CAPACITANCE,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

F:{
name:'F',
base:BASE_UNITS.ELECTRIC_CAPACITANCE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


volt:{
name:'volt',
base:BASE_UNITS.ELECTRIC_POTENTIAL,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

V:{
name:'V',
base:BASE_UNITS.ELECTRIC_POTENTIAL,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


ohm:{
name:'ohm',
base:BASE_UNITS.ELECTRIC_RESISTANCE,
prefixes:PREFIXES.SHORTLONG,
value:1,
offset:0},












henry:{
name:'henry',
base:BASE_UNITS.ELECTRIC_INDUCTANCE,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

H:{
name:'H',
base:BASE_UNITS.ELECTRIC_INDUCTANCE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


siemens:{
name:'siemens',
base:BASE_UNITS.ELECTRIC_CONDUCTANCE,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

S:{
name:'S',
base:BASE_UNITS.ELECTRIC_CONDUCTANCE,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


weber:{
name:'weber',
base:BASE_UNITS.MAGNETIC_FLUX,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

Wb:{
name:'Wb',
base:BASE_UNITS.MAGNETIC_FLUX,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},


tesla:{
name:'tesla',
base:BASE_UNITS.MAGNETIC_FLUX_DENSITY,
prefixes:PREFIXES.LONG,
value:1,
offset:0},

T:{
name:'T',
base:BASE_UNITS.MAGNETIC_FLUX_DENSITY,
prefixes:PREFIXES.SHORT,
value:1,
offset:0},



b:{
name:'b',
base:BASE_UNITS.BIT,
prefixes:PREFIXES.BINARY_SHORT,
value:1,
offset:0},

bits:{
name:'bits',
base:BASE_UNITS.BIT,
prefixes:PREFIXES.BINARY_LONG,
value:1,
offset:0},

B:{
name:'B',
base:BASE_UNITS.BIT,
prefixes:PREFIXES.BINARY_SHORT,
value:8,
offset:0},

bytes:{
name:'bytes',
base:BASE_UNITS.BIT,
prefixes:PREFIXES.BINARY_LONG,
value:8,
offset:0}};




var PLURALS={
meters:'meter',
inches:'inch',
feet:'foot',
yards:'yard',
miles:'mile',
links:'link',
rods:'rod',
chains:'chain',
angstroms:'angstrom',

litres:'litre',
teaspoons:'teaspoon',
tablespoons:'tablespoon',
minims:'minim',
fluiddrams:'fluiddram',
fluidounces:'fluidounce',
gills:'gill',
cups:'cup',
pints:'pint',
quarts:'quart',
gallons:'gallon',
beerbarrels:'beerbarrel',
oilbarrels:'oilbarrel',
hogsheads:'hogshead',
gtts:'gtt',

grams:'gram',
tons:'ton',
tonnes:'tonne',
grains:'grain',
drams:'dram',
ounces:'ounce',
poundmasses:'poundmass',
hundredweights:'hundredweight',
sticks:'stick',

seconds:'second',
minutes:'minute',
hours:'hour',
days:'day',

radians:'rad',
degrees:'deg',
gradients:'grad',
cycles:'cycle',

BTUs:'BTU',
watts:'watt',
joules:'joule',

amperes:'ampere',
coulombs:'coulomb',
volts:'volt',
ohms:'ohm',
farads:'farad',
webers:'weber',
teslas:'tesla',
electronvolts:'electronvolt',
moles:'mole'};








var UNIT_SYSTEMS={
si:{

NONE:{unit:UNIT_NONE,prefix:PREFIXES.NONE['']},
LENGTH:{unit:UNITS.m,prefix:PREFIXES.SHORT['']},
MASS:{unit:UNITS.g,prefix:PREFIXES.SHORT['k']},
TIME:{unit:UNITS.s,prefix:PREFIXES.SHORT['']},
CURRENT:{unit:UNITS.A,prefix:PREFIXES.SHORT['']},
TEMPERATURE:{unit:UNITS.K,prefix:PREFIXES.SHORT['']},
LUMINOUS_INTENSITY:{unit:UNITS.cd,prefix:PREFIXES.SHORT['']},
AMOUNT_OF_SUBSTANCE:{unit:UNITS.mol,prefix:PREFIXES.SHORT['']},
ANGLE:{unit:UNITS.rad,prefix:PREFIXES.SHORT['']},
BIT:{unit:UNITS.bit,prefix:PREFIXES.SHORT['']},


FORCE:{unit:UNITS.N,prefix:PREFIXES.SHORT['']},
ENERGY:{unit:UNITS.J,prefix:PREFIXES.SHORT['']},
POWER:{unit:UNITS.W,prefix:PREFIXES.SHORT['']},
PRESSURE:{unit:UNITS.Pa,prefix:PREFIXES.SHORT['']},
ELECTRIC_CHARGE:{unit:UNITS.C,prefix:PREFIXES.SHORT['']},
ELECTRIC_CAPACITANCE:{unit:UNITS.F,prefix:PREFIXES.SHORT['']},
ELECTRIC_POTENTIAL:{unit:UNITS.V,prefix:PREFIXES.SHORT['']},
ELECTRIC_RESISTANCE:{unit:UNITS.ohm,prefix:PREFIXES.SHORT['']},
ELECTRIC_INDUCTANCE:{unit:UNITS.H,prefix:PREFIXES.SHORT['']},
ELECTRIC_CONDUCTANCE:{unit:UNITS.S,prefix:PREFIXES.SHORT['']},
MAGNETIC_FLUX:{unit:UNITS.Wb,prefix:PREFIXES.SHORT['']},
MAGNETIC_FLUX_DENSITY:{unit:UNITS.T,prefix:PREFIXES.SHORT['']}}};




UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
UNIT_SYSTEMS.cgs.LENGTH = {unit:UNITS.m,prefix:PREFIXES.SHORT['c']};
UNIT_SYSTEMS.cgs.MASS = {unit:UNITS.g,prefix:PREFIXES.SHORT['']};
UNIT_SYSTEMS.cgs.FORCE = {unit:UNITS.dyn,prefix:PREFIXES.SHORT['']};
UNIT_SYSTEMS.cgs.ENERGY = {unit:UNITS.erg,prefix:PREFIXES.NONE['']};



UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
UNIT_SYSTEMS.us.LENGTH = {unit:UNITS.ft,prefix:PREFIXES.NONE['']};
UNIT_SYSTEMS.us.MASS = {unit:UNITS.lbm,prefix:PREFIXES.NONE['']};
UNIT_SYSTEMS.us.TEMPERATURE = {unit:UNITS.degF,prefix:PREFIXES.NONE['']};
UNIT_SYSTEMS.us.FORCE = {unit:UNITS.lbf,prefix:PREFIXES.NONE['']};
UNIT_SYSTEMS.us.ENERGY = {unit:UNITS.BTU,prefix:PREFIXES.BTU['']};
UNIT_SYSTEMS.us.POWER = {unit:UNITS.hp,prefix:PREFIXES.NONE['']};
UNIT_SYSTEMS.us.PRESSURE = {unit:UNITS.psi,prefix:PREFIXES.NONE['']};






UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));


var currentUnitSystem=UNIT_SYSTEMS.auto;





Unit.setUnitSystem = function(name){
if(UNIT_SYSTEMS.hasOwnProperty(name)){
currentUnitSystem = UNIT_SYSTEMS[name];}else 

{
var mess="Unit system " + name + " does not exist. Choices are: " + listAvailableUnitSystems();}};







Unit.listAvailableUnitSystems = function(){
var mess="";
for(var key in UNIT_SYSTEMS) {
mess += " " + key;}

return mess.substr(1);};






Unit.getUnitSystem = function(){
for(var key in UNIT_SYSTEMS) {
if(UNIT_SYSTEMS[key] === currentUnitSystem){
return key;}}};






for(var key in UNITS) {
var unit=UNITS[key];
unit.dimensions = unit.base.dimensions;}


for(var name in PLURALS) {

if(PLURALS.hasOwnProperty(name)){
var unit=UNITS[PLURALS[name]];
var plural=Object.create(unit);
plural.name = name;
UNITS[name] = plural;}}




UNITS.lt = UNITS.l;
UNITS.liter = UNITS.litre;
UNITS.liters = UNITS.litres;
UNITS.lb = UNITS.lbm;
UNITS.lbs = UNITS.lbm;

Unit.PREFIXES = PREFIXES;
Unit.BASE_UNITS = BASE_UNITS;
Unit.UNITS = UNITS;
Unit.UNIT_SYSTEMS = UNIT_SYSTEMS;

return Unit;}


exports.name = 'Unit';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/complex/function/complex.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');







































var complex=typed('complex',{
'':function(){
return new type.Complex(0,0);},


'number':function(x){
return new type.Complex(x,0);},


'number, number':function(re,im){
return new type.Complex(re,im);},



'BigNumber, BigNumber':function(re,im){
return new type.Complex(re.toNumber(),im.toNumber());},


'Complex':function(x){
return x.clone();},


'string':function(x){
return type.Complex.parse(x);},


'Object':function(x){
if('re' in x && 'im' in x){
return new type.Complex(x.re,x.im);}


if('r' in x && 'phi' in x){
return type.Complex.fromPolar(x.r,x.phi);}


throw new Error('Expected object with either properties re and im, or properties r and phi.');},


'Array | Matrix':function(x){
return deepMap(x,complex);}});



complex.toTex = {
0:'0',
1:'\\left(${args[0]}\\right)',
2:'\\left(\\left(${args[0]}\\right)+' + 
latex.symbols['i'] + '\\cdot\\left(${args[1]}\\right)\\right)'};


return complex;}


exports.name = 'complex';
exports.factory = factory;
});
__d('mathjs/lib/utils/latex.js',[],function(global, require, module, exports) {  'use strict';

exports.symbols = {

Alpha:'A',alpha:'\\alpha',
Beta:'B',beta:'\\beta',
Gamma:'\\Gamma',gamma:'\\gamma',
Delta:'\\Delta',delta:'\\delta',
Epsilon:'E',epsilon:'\\epsilon',varepsilon:'\\varepsilon',
Zeta:'Z',zeta:'\\zeta',
Eta:'H',eta:'\\eta',
Theta:'\\Theta',theta:'\\theta',vartheta:'\\vartheta',
Iota:'I',iota:'\\iota',
Kappa:'K',kappa:'\\kappa',varkappa:'\\varkappa',
Lambda:'\\Lambda',lambda:'\\lambda',
Mu:'M',mu:'\\mu',
Nu:'N',nu:'\\nu',
Xi:'\\Xi',xi:'\\xi',
Omicron:'O',omicron:'o',
Pi:'\\Pi',pi:'\\pi',varpi:'\\varpi',
Rho:'P',rho:'\\rho',varrho:'\\varrho',
Sigma:'\\Sigma',sigma:'\\sigma',varsigma:'\\varsigma',
Tau:'T',tau:'\\tau',
Upsilon:'\\Upsilon',upsilon:'\\upsilon',
Phi:'\\Phi',phi:'\\phi',varphi:'\\varphi',
Chi:'X',chi:'\\chi',
Psi:'\\Psi',psi:'\\psi',
Omega:'\\Omega',omega:'\\omega',

'true':'\\mathrm{True}',
'false':'\\mathrm{False}',

i:'i',
inf:'\\infty',
Inf:'\\infty',
infinity:'\\infty',
Infinity:'\\infty',
oo:'\\infty',
lim:'\\lim',
'undefined':'\\mathbf{?}'};


exports.operators = {
'transpose':'^\\top',
'factorial':'!',
'pow':'^',
'dotPow':'.^\\wedge',
'unaryPlus':'+',
'unaryMinus':'-',
'bitNot':'~',
'not':'\\neg',
'multiply':'\\cdot',
'divide':'\\frac',
'dotMultiply':'.\\cdot',
'dotDivide':'.:',
'mod':'\\mod',
'add':'+',
'subtract':'-',
'to':'\\rightarrow',
'leftShift':'<<',
'rightArithShift':'>>',
'rightLogShift':'>>>',
'equal':'=',
'unequal':'\\neq',
'smaller':'<',
'larger':'>',
'smallerEq':'\\leq',
'largerEq':'\\geq',
'bitAnd':'\\&',
'bitXor':'\\underline{|}',
'bitOr':'|',
'and':'\\wedge',
'xor':'\\veebar',
'or':'\\vee'};


exports.defaultTemplate = '\\mathrm{${name}}\\left(${args}\\right)';

var units={
deg:'^\\circ'};




exports.toSymbol = function(name,isUnit){
isUnit = typeof isUnit === 'undefined'?false:isUnit;
if(isUnit){
if(units.hasOwnProperty(name)){
return units[name];}

return '\\mathrm{' + name + '}';}


if(exports.symbols.hasOwnProperty(name)){
return exports.symbols[name];}else 

if(name.indexOf('_') !== -1){

var index=name.indexOf('_');
return exports.toSymbol(name.substring(0,index)) + '_{' + 
exports.toSymbol(name.substring(index + 1)) + '}';}

return name;};
});
__d('mathjs/lib/type/fraction/index.js',["mathjs/lib/type/fraction/Fraction.js","mathjs/lib/type/fraction/function/fraction.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/fraction/Fraction.js'),


require('mathjs/lib/type/fraction/function/fraction.js')];
});
__d('mathjs/lib/type/fraction/Fraction.js',["fraction.js/fraction.js"],function(global, require, module, exports) {  var Fraction=require('fraction.js/fraction.js');




Fraction.prototype.type = 'Fraction';
Fraction.prototype.isFraction = true;






Fraction.prototype.toJSON = function(){
return {
mathjs:'Fraction',
n:this.s * this.n,
d:this.d};};









Fraction.fromJSON = function(json){
return new Fraction(json);};



function factory(type,config,load,typed){
return Fraction;}


exports.name = 'Fraction';
exports.path = 'type';
exports.factory = factory;
});
__d('fraction.js/fraction.js',[],function(global, require, module, exports) {  /**
 * @license Fraction.js v3.0.0 09/09/2015
 * http://www.xarg.org/2014/03/precise-calculations-in-javascript/
 *
 * Copyright (c) 2015, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
































(function(root){

"use strict";




var MAX_CYCLE_LEN=2000;


var P={
"s":1,
"n":0,
"d":1};


function assign(n,s){

if(isNaN(n = parseInt(n,10))){
thorwInvalidParam();}

return n * s;}


function thorwInvalidParam(){
throw "Invalid Param";}


var parse=function(p1,p2){

var n=0,d=1,s=1;
var v=0,w=0,x=0,y=1,z=1;

var A=0,B=1;
var C=1,D=1;

var N=10000000;
var M;

if(p1 === undefined || p1 === null){}else 

if(p2 !== undefined){
n = p1;
d = p2;
s = n * d;}else 

switch(typeof p1){

case "object":
{
if("d" in p1 && "n" in p1){
n = p1["n"];
d = p1["d"];
if("s" in p1)
n *= p1["s"];}else 
if(0 in p1){
n = p1[0];
if(1 in p1)
d = p1[1];}else 
{
thorwInvalidParam();}

s = n * d;
break;}

case "number":
{
if(p1 < 0){
s = p1;
p1 = -p1;}


if(p1 % 1 === 0){
n = p1;}else 
if(p1 > 0){

if(p1 >= 1){
z = Math.pow(10,Math.floor(1 + Math.log(p1) / Math.LN10));
p1 /= z;}





while(B <= N && D <= N) {
M = (A + C) / (B + D);

if(p1 === M){
if(B + D <= N){
n = A + C;
d = B + D;}else 
if(D > B){
n = C;
d = D;}else 
{
n = A;
d = B;}

break;}else 

{

if(p1 > M){
A += C;
B += D;}else 
{
C += A;
D += B;}


if(B > N){
n = C;
d = D;}else 
{
n = A;
d = B;}}}



n *= z;}

break;}

case "string":
{
B = p1.match(/\d+|./g);

if(B[A] === '-'){
s = -1;
A++;}else 
if(B[A] === '+'){
A++;}


if(B.length === A + 1){
w = assign(B[A++],s);}else 
if(B[A + 1] === '.' || B[A] === '.'){

if(B[A] !== '.'){
v = assign(B[A++],s);}

A++;


if(A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === "'" && B[A + 3] === "'"){
w = assign(B[A],s);
y = Math.pow(10,B[A].length);
A++;}



if(B[A] === '(' && B[A + 2] === ')' || B[A] === "'" && B[A + 2] === "'"){
x = assign(B[A + 1],s);
z = Math.pow(10,B[A + 1].length) - 1;
A += 3;}}else 


if(B[A + 1] === '/' || B[A + 1] === ':'){
w = assign(B[A],s);
y = assign(B[A + 2],1);
A += 3;}else 
if(B[A + 3] === '/' && B[A + 1] === ' '){
v = assign(B[A],s);
w = assign(B[A + 2],s);
y = assign(B[A + 4],1);
A += 5;}


if(B.length <= A){
s = 
n = x + z * (v * y + w);
d = y * z;
break;}}




default:
thorwInvalidParam();}


if(!d){
throw "DIV/0";}


P["s"] = s < 0?-1:1;
P["n"] = Math.abs(n);
P["d"] = Math.abs(d);};


var modpow=function(b,e,m){

for(var r=1;e > 0;b = b * b % m,e >>= 1) {

if(e & 1){
r = r * b % m;}}


return r;};


var cycleLen=function(n,d){

for(;d % 2 === 0;
d /= 2) {}

for(;d % 5 === 0;
d /= 5) {}

if(d === 1)
return 0;






var rem=10 % d;

for(var t=1;rem !== 1;t++) {
rem = rem * 10 % d;

if(t > MAX_CYCLE_LEN)
return 0;}

return t;};


var cycleStart=function(n,d,len){

var rem1=1;
var rem2=modpow(10,len,d);

for(var t=0;t < 300;t++) {


if(rem1 === rem2)
return t;

rem1 = rem1 * 10 % d;
rem2 = rem2 * 10 % d;}

return 0;};


var gcd=function(a,b){

if(!a)return b;
if(!b)return a;

while(1) {
a %= b;
if(!a)return b;
b %= a;
if(!b)return a;}};










function Fraction(a,b){

if(!(this instanceof Fraction)){
return new Fraction(a,b);}


parse(a,b);

if(Fraction['REDUCE']){
a = gcd(P["d"],P["n"]);}else 
{
a = 1;}


this["s"] = P["s"];
this["n"] = P["n"] / a;
this["d"] = P["d"] / a;}






Fraction['REDUCE'] = 1;

Fraction.prototype = {

"s":1,
"n":0,
"d":1,






"abs":function(){

return new Fraction(this["n"],this["d"]);},







"neg":function(){

return new Fraction(-this["s"] * this["n"],this["d"]);},







"add":function(a,b){

parse(a,b);
return new Fraction(
this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
this["d"] * P["d"]);},








"sub":function(a,b){

parse(a,b);
return new Fraction(
this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
this["d"] * P["d"]);},








"mul":function(a,b){

parse(a,b);
return new Fraction(
this["s"] * P["s"] * this["n"] * P["n"],
this["d"] * P["d"]);},








"div":function(a,b){

parse(a,b);
return new Fraction(
this["s"] * P["s"] * this["n"] * P["d"],
this["d"] * P["n"]);},








"clone":function(){
return new Fraction(this);},







"mod":function(a,b){

if(a === undefined){
return new Fraction(this["s"] * this["n"] % this["d"],1);}


parse(a,b);
if(0 === P["n"] * this["d"]){
Fraction(0,0);}
















return new Fraction(
this["s"] * P["d"] * this["n"] % (P["n"] * this["d"]),
P["d"] * this["d"]);},








"gcd":function(a,b){

parse(a,b);



return new Fraction(gcd(P["n"],this["n"]),P["d"] * this["d"] / gcd(P["d"],this["d"]));},







"lcm":function(a,b){

parse(a,b);



return new Fraction(P["n"] * this["n"] / gcd(P["n"],this["n"]),gcd(P["d"],this["d"]));},







"ceil":function(){

return new Fraction(Math.ceil(this["s"] * this["n"] / this["d"]),1);},







"floor":function(){

return new Fraction(Math.floor(this["s"] * this["n"] / this["d"]),1);},







"round":function(){

return new Fraction(Math.round(this["s"] * this["n"] / this["d"]),1);},







"inverse":function(){

return new Fraction(this["s"] * this["d"],this["n"]);},







"pow":function(m){

var d=this["d"];
var n=this["n"];
if(m < 0){
this["d"] = Math.pow(n,-m);
this["n"] = Math.pow(d,-m);}else 
{
this["d"] = Math.pow(d,m);
this["n"] = Math.pow(n,m);}


if(0 === m % 2){
this["s"] = 1;}

return this;},







"equals":function(a,b){

parse(a,b);
return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"];},







"compare":function(a,b){

parse(a,b);
var t=this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"];
return (0 < t) - (t < 0);},







"divisible":function(a,b){

parse(a,b);
return !!(P["n"] * this["d"]) && !(this["n"] * P["d"] % (P["n"] * this["d"]));},







'valueOf':function(){

return this["s"] * this["n"] / this["d"];},







'toFraction':function(excludeWhole){

var whole,str="";
var n=this["n"];
var d=this["d"];
if(this["s"] < 0){
str += '-';}


if(d === 1){
str += n;}else 
{

if(excludeWhole && (whole = Math.floor(n / d)) > 0){
str += whole;
str += " ";
n %= d;}


str += n;
str += '/';
str += d;}

return str;},







'toLatex':function(excludeWhole){

var whole,str="";
var n=this["n"];
var d=this["d"];
if(this["s"] < 0){
str += '-';}


if(d === 1){
str += n;}else 
{

if(excludeWhole && (whole = Math.floor(n / d)) > 0){
str += whole;
n %= d;}


str += "\\frac{";
str += n;
str += '}{';
str += d;
str += '}';}

return str;},







'toString':function(){

var g;
var N=this["n"];
var D=this["d"];

if(!Fraction['REDUCE']){
g = gcd(N,D);
N /= g;
D /= g;}


var p=String(N).split("");
var t=0;

var ret=[~this["s"]?"":"-","",""];
var zeros="";

var cycLen=cycleLen(N,D);
var cycOff=cycleStart(N,D,cycLen);

var j=-1;
var n=1;


var length=10 + cycLen + cycOff + p.length;

for(var i=0;i < length;i++,t *= 10) {

if(i < p.length){
t += Number(p[i]);}else 
{
n = 2;
j++;}


if(cycLen > 0){
if(j === cycOff){
ret[n] += zeros + "(";
zeros = "";}else 
if(j === cycLen + cycOff){
ret[n] += zeros + ")";
break;}}



if(t >= D){
ret[n] += zeros + (t / D | 0);
zeros = "";
t = t % D;}else 
if(n > 1){
zeros += "0";}else 
if(ret[n]){
ret[n] += "0";}}




ret[0] += ret[1] || "0";


if(ret[2]){
return ret[0] + "." + ret[2];}

return ret[0];}};



if(typeof define === "function" && define["amd"]){
define([],function(){
return Fraction;});}else 

if(typeof exports === "object"){
module["exports"] = Fraction;}else 
{
root['Fraction'] = Fraction;}})(


this);
});
__d('mathjs/lib/type/fraction/function/fraction.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){

























var fraction=typed('fraction',{
'number':function(x){
if(!isFinite(x) || isNaN(x)){
throw new Error(x + ' cannot be represented as a fraction');}


return new type.Fraction(x);},


'string':function(x){
return new type.Fraction(x);},


'number, number':function(numerator,denominator){
return new type.Fraction(numerator,denominator);},


'Fraction':function(x){
return x;},


'Object':function(x){
return new type.Fraction(x);},


'Array | Matrix':function(x){
return deepMap(x,fraction);}});



return fraction;}


exports.name = 'fraction';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/index.js',["mathjs/lib/type/matrix/Matrix.js","mathjs/lib/type/matrix/DenseMatrix.js","mathjs/lib/type/matrix/SparseMatrix.js","mathjs/lib/type/matrix/Spa.js","mathjs/lib/type/matrix/FibonacciHeap.js","mathjs/lib/type/matrix/ImmutableDenseMatrix.js","mathjs/lib/type/matrix/MatrixIndex.js","mathjs/lib/type/matrix/Range.js","mathjs/lib/type/matrix/function/index.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/function/sparse.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/matrix/Matrix.js'),
require('mathjs/lib/type/matrix/DenseMatrix.js'),
require('mathjs/lib/type/matrix/SparseMatrix.js'),
require('mathjs/lib/type/matrix/Spa.js'),
require('mathjs/lib/type/matrix/FibonacciHeap.js'),
require('mathjs/lib/type/matrix/ImmutableDenseMatrix.js'),
require('mathjs/lib/type/matrix/MatrixIndex.js'),
require('mathjs/lib/type/matrix/Range.js'),


require('mathjs/lib/type/matrix/function/index.js'),
require('mathjs/lib/type/matrix/function/matrix.js'),
require('mathjs/lib/type/matrix/function/sparse.js')];
});
__d('mathjs/lib/type/matrix/Matrix.js',["mathjs/lib/utils/index.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

var string=util.string;

var isString=string.isString;

function factory(type,config,load,typed){




















function Matrix(){
if(!(this instanceof Matrix)){
throw new SyntaxError('Constructor must be called with the new operator');}}






Matrix.prototype.type = 'Matrix';
Matrix.prototype.isMatrix = true;








Matrix.storage = function(format){

if(!isString(format)){
throw new TypeError('format must be a string value');}



var constructor=Matrix._storage[format];
if(!constructor){
throw new SyntaxError('Unsupported matrix storage format: ' + format);}



return constructor;};



Matrix._storage = {};









Matrix.prototype.storage = function(){

throw new Error('Cannot invoke storage on a Matrix interface');};










Matrix.prototype.datatype = function(){

throw new Error('Cannot invoke datatype on a Matrix interface');};







Matrix.prototype.create = function(data,datatype){
throw new Error('Cannot invoke create on a Matrix interface');};















Matrix.prototype.subset = function(index,replacement,defaultValue){

throw new Error('Cannot invoke subset on a Matrix interface');};







Matrix.prototype.get = function(index){

throw new Error('Cannot invoke get on a Matrix interface');};











Matrix.prototype.set = function(index,value,defaultValue){

throw new Error('Cannot invoke set on a Matrix interface');};














Matrix.prototype.resize = function(size,defaultValue){

throw new Error('Cannot invoke resize on a Matrix interface');};






Matrix.prototype.clone = function(){

throw new Error('Cannot invoke clone on a Matrix interface');};






Matrix.prototype.size = function(){

throw new Error('Cannot invoke size on a Matrix interface');};












Matrix.prototype.map = function(callback,skipZeros){

throw new Error('Cannot invoke map on a Matrix interface');};








Matrix.prototype.forEach = function(callback){

throw new Error('Cannot invoke forEach on a Matrix interface');};






Matrix.prototype.toArray = function(){

throw new Error('Cannot invoke toArray on a Matrix interface');};






Matrix.prototype.valueOf = function(){

throw new Error('Cannot invoke valueOf on a Matrix interface');};










Matrix.prototype.format = function(options){

throw new Error('Cannot invoke format on a Matrix interface');};






Matrix.prototype.toString = function(){

throw new Error('Cannot invoke toString on a Matrix interface');};



return Matrix;}


exports.name = 'Matrix';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/utils/index.js',["mathjs/lib/utils/array.js","mathjs/lib/utils/boolean.js","mathjs/lib/utils/function.js","mathjs/lib/utils/number.js","mathjs/lib/utils/object.js","mathjs/lib/utils/string.js","mathjs/lib/utils/types.js","mathjs/lib/utils/emitter.js"],function(global, require, module, exports) {  'use strict';

exports.array = require('mathjs/lib/utils/array.js');
exports['boolean'] = require('mathjs/lib/utils/boolean.js');
exports['function'] = require('mathjs/lib/utils/function.js');
exports.number = require('mathjs/lib/utils/number.js');
exports.object = require('mathjs/lib/utils/object.js');
exports.string = require('mathjs/lib/utils/string.js');
exports.types = require('mathjs/lib/utils/types.js');
exports.emitter = require('mathjs/lib/utils/emitter.js');
});
__d('mathjs/lib/utils/array.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/string.js","mathjs/lib/utils/object.js","mathjs/lib/utils/types.js","mathjs/lib/error/DimensionError.js","mathjs/lib/error/IndexError.js"],function(global, require, module, exports) {  'use strict';

var number=require('mathjs/lib/utils/number.js');
var string=require('mathjs/lib/utils/string.js');
var object=require('mathjs/lib/utils/object.js');
var types=require('mathjs/lib/utils/types.js');

var DimensionError=require('mathjs/lib/error/DimensionError.js');
var IndexError=require('mathjs/lib/error/IndexError.js');








exports.size = function(x){
var s=[];

while(Array.isArray(x)) {
s.push(x.length);
x = x[0];}


return s;};











function _validate(array,size,dim){
var i;
var len=array.length;

if(len != size[dim]){
throw new DimensionError(len,size[dim]);}


if(dim < size.length - 1){

var dimNext=dim + 1;
for(i = 0;i < len;i++) {
var child=array[i];
if(!Array.isArray(child)){
throw new DimensionError(size.length - 1,size.length,'<');}

_validate(array[i],size,dimNext);}}else 


{

for(i = 0;i < len;i++) {
if(Array.isArray(array[i])){
throw new DimensionError(size.length + 1,size.length,'>');}}}}












exports.validate = function(array,size){
var isScalar=size.length == 0;
if(isScalar){

if(Array.isArray(array)){
throw new DimensionError(array.length,0);}}else 


{

_validate(array,size,0);}};








exports.validateIndex = function(index,length){
if(!number.isNumber(index) || !number.isInteger(index)){
throw new TypeError('Index must be an integer (value: ' + index + ')');}

if(index < 0){
throw new IndexError(index);}

if(length !== undefined && index >= length){
throw new IndexError(index,length);}};




exports.UNINITIALIZED = {};










exports.resize = function(array,size,defaultValue){



if(!Array.isArray(array) || !Array.isArray(size)){
throw new TypeError('Array expected');}

if(size.length === 0){
throw new Error('Resizing to scalar is not supported');}



size.forEach(function(value){
if(!number.isNumber(value) || !number.isInteger(value) || value < 0){
throw new TypeError('Invalid size, must contain positive integers ' + 
'(size: ' + string.format(size) + ')');}});




var _defaultValue=defaultValue !== undefined?defaultValue:0;
_resize(array,size,0,_defaultValue);

return array;};











function _resize(array,size,dim,defaultValue){
var i;
var elem;
var oldLen=array.length;
var newLen=size[dim];
var minLen=Math.min(oldLen,newLen);


array.length = newLen;

if(dim < size.length - 1){

var dimNext=dim + 1;


for(i = 0;i < minLen;i++) {

elem = array[i];
if(!Array.isArray(elem)){
elem = [elem];
array[i] = elem;}

_resize(elem,size,dimNext,defaultValue);}



for(i = minLen;i < newLen;i++) {

elem = [];
array[i] = elem;


_resize(elem,size,dimNext,defaultValue);}}else 


{



for(i = 0;i < minLen;i++) {
while(Array.isArray(array[i])) {
array[i] = array[i][0];}}



if(defaultValue !== exports.UNINITIALIZED){

for(i = minLen;i < newLen;i++) {
array[i] = object.clone(defaultValue);}}}}











exports.squeeze = function(array,size){
var s=size || exports.size(array);


while(Array.isArray(array) && array.length === 1) {
array = array[0];
s.shift();}



var dims=s.length;
while(s[dims - 1] === 1) {
dims--;}



if(dims < s.length){
array = _squeeze(array,dims,0);
s.length = dims;}


return array;};










function _squeeze(array,dims,dim){
var i,ii;

if(dim < dims){
var next=dim + 1;
for(i = 0,ii = array.length;i < ii;i++) {
array[i] = _squeeze(array[i],dims,next);}}else 


{
while(Array.isArray(array)) {
array = array[0];}}



return array;}











exports.unsqueeze = function(array,dims,outer,size){
var s=size || exports.size(array);


if(outer){
for(var i=0;i < outer;i++) {
array = [array];
s.unshift(1);}}




array = _unsqueeze(array,dims,0);
while(s.length < dims) {
s.push(1);}


return array;};










function _unsqueeze(array,dims,dim){
var i,ii;

if(Array.isArray(array)){
var next=dim + 1;
for(i = 0,ii = array.length;i < ii;i++) {
array[i] = _unsqueeze(array[i],dims,next);}}else 


{
for(var d=dim;d < dims;d++) {
array = [array];}}



return array;}







exports.flatten = function(array){
if(!Array.isArray(array)){

return array;}

var flat=[];

array.forEach(function callback(value){
if(Array.isArray(value)){
value.forEach(callback);}else 

{
flat.push(value);}});



return flat;};







exports.isArray = Array.isArray;
});
__d('mathjs/lib/utils/types.js',[],function(global, require, module, exports) {  'use strict';
























exports.type = function(x){
var type=typeof x;

if(type === 'object'){
if(x === null)return 'null';
if(x instanceof Boolean)return 'boolean';
if(x instanceof Number)return 'number';
if(x instanceof String)return 'string';
if(Array.isArray(x))return 'Array';
if(x instanceof Date)return 'Date';
if(x instanceof RegExp)return 'RegExp';

return 'Object';}


if(type === 'function')return 'Function';

return type;};
});
__d('mathjs/lib/error/DimensionError.js',[],function(global, require, module, exports) {  'use strict';










function DimensionError(actual,expected,relation){
if(!(this instanceof DimensionError)){
throw new SyntaxError('Constructor must be called with the new operator');}


this.actual = actual;
this.expected = expected;
this.relation = relation;

this.message = 'Dimension mismatch (' + (
Array.isArray(actual)?'[' + actual.join(', ') + ']':actual) + 
' ' + (this.relation || '!=') + ' ' + (
Array.isArray(expected)?'[' + expected.join(', ') + ']':expected) + 
')';

this.stack = new Error().stack;}


DimensionError.prototype = new RangeError();
DimensionError.prototype.constructor = RangeError;
DimensionError.prototype.name = 'DimensionError';
DimensionError.prototype.isDimensionError = true;

module.exports = DimensionError;
});
__d('mathjs/lib/error/IndexError.js',[],function(global, require, module, exports) {  'use strict';











function IndexError(index,min,max){
if(!(this instanceof IndexError)){
throw new SyntaxError('Constructor must be called with the new operator');}


this.index = index;
if(arguments.length < 3){
this.min = 0;
this.max = min;}else 

{
this.min = min;
this.max = max;}


if(this.min !== undefined && this.index < this.min){
this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';}else 

if(this.max !== undefined && this.index >= this.max){
this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';}else 

{
this.message = 'Index out of range (' + this.index + ')';}


this.stack = new Error().stack;}


IndexError.prototype = new RangeError();
IndexError.prototype.constructor = RangeError;
IndexError.prototype.name = 'IndexError';
IndexError.prototype.isIndexError = true;

module.exports = IndexError;
});
__d('mathjs/lib/utils/boolean.js',[],function(global, require, module, exports) {  'use strict';






exports.isBoolean = function(value){
return typeof value == 'boolean';};
});
__d('mathjs/lib/utils/function.js',[],function(global, require, module, exports) {  exports.












memoize = function(fn,hasher){
return function memoize(){
if(typeof memoize.cache !== 'object'){
memoize.cache = {};}


var args=[];
for(var i=0;i < arguments.length;i++) {
args[i] = arguments[i];}


var hash=hasher?hasher(args):JSON.stringify(args);
if(!(hash in memoize.cache)){
return memoize.cache[hash] = fn.apply(fn,args);}

return memoize.cache[hash];};};
});
__d('mathjs/lib/type/matrix/DenseMatrix.js',["mathjs/lib/utils/index.js","mathjs/lib/error/DimensionError.js","mathjs/lib/type/matrix/Matrix.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');

var string=util.string;
var array=util.array;
var object=util.object;
var number=util.number;

var isArray=Array.isArray;
var isNumber=number.isNumber;
var isInteger=number.isInteger;
var isString=string.isString;

var validateIndex=array.validateIndex;

function factory(type,config,load,typed){
var Matrix=load(require('mathjs/lib/type/matrix/Matrix.js'));

function DenseMatrix(data,datatype){
if(!(this instanceof DenseMatrix))
throw new SyntaxError('Constructor must be called with the new operator');
if(datatype && !isString(datatype))
throw new Error('Invalid datatype: ' + datatype);

if(data && data.isMatrix === true){

if(data.type === 'DenseMatrix'){

this._data = object.clone(data._data);
this._size = object.clone(data._size);
this._datatype = datatype || data._datatype;}else 

{

this._data = data.toArray();
this._size = data.size();
this._datatype = datatype || data._datatype;}}else 


if(data && isArray(data.data) && isArray(data.size)){

this._data = data.data;
this._size = data.size;
this._datatype = datatype || data.datatype;}else 

if(isArray(data)){

this._data = preprocess(data);

this._size = array.size(this._data);

array.validate(this._data,this._size);

this._datatype = datatype;}else 

if(data){

throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');}else 

{

this._data = [];
this._size = [0];
this._datatype = datatype;}}



DenseMatrix.prototype = new Matrix();




DenseMatrix.prototype.type = 'DenseMatrix';
DenseMatrix.prototype.isDenseMatrix = true;









DenseMatrix.prototype.storage = function(){
return 'dense';};










DenseMatrix.prototype.datatype = function(){
return this._datatype;};







DenseMatrix.prototype.create = function(data,datatype){
return new DenseMatrix(data,datatype);};















DenseMatrix.prototype.subset = function(index,replacement,defaultValue){
switch(arguments.length){
case 1:
return _get(this,index);


case 2:
case 3:
return _set(this,index,replacement,defaultValue);

default:
throw new SyntaxError('Wrong number of arguments');}};








DenseMatrix.prototype.get = function(index){
if(!isArray(index))
throw new TypeError('Array expected');
if(index.length != this._size.length)
throw new DimensionError(index.length,this._size.length);


for(var x=0;x < index.length;x++) 
validateIndex(index[x],this._size[x]);

var data=this._data;
for(var i=0,ii=index.length;i < ii;i++) {
var index_i=index[i];
validateIndex(index_i,data.length);
data = data[index_i];}


return object.clone(data);};











DenseMatrix.prototype.set = function(index,value,defaultValue){
if(!isArray(index))
throw new TypeError('Array expected');
if(index.length < this._size.length)
throw new DimensionError(index.length,this._size.length,'<');

var i,ii,index_i;


var size=index.map(function(i){
return i + 1;});

_fit(this,size,defaultValue);


var data=this._data;
for(i = 0,ii = index.length - 1;i < ii;i++) {
index_i = index[i];
validateIndex(index_i,data.length);
data = data[index_i];}



index_i = index[index.length - 1];
validateIndex(index_i,data.length);
data[index_i] = value;

return this;};








function _get(matrix,index){
if(!index || index.isIndex !== true){
throw new TypeError('Invalid index');}


var isScalar=index.isScalar();
if(isScalar){

return matrix.get(index.min());}else 

{

var size=index.size();
if(size.length != matrix._size.length){
throw new DimensionError(size.length,matrix._size.length);}



var min=index.min();
var max=index.max();
for(var i=0,ii=matrix._size.length;i < ii;i++) {
validateIndex(min[i],matrix._size[i]);
validateIndex(max[i],matrix._size[i]);}




return new DenseMatrix(_getSubmatrix(matrix._data,index,size.length,0),matrix._datatype);}}













function _getSubmatrix(data,index,dims,dim){
var last=dim == dims - 1;
var range=index.dimension(dim);

if(last){
return range.map(function(i){
return data[i];}).
valueOf();}else 

{
return range.map(function(i){
var child=data[i];
return _getSubmatrix(child,index,dims,dim + 1);}).
valueOf();}}














function _set(matrix,index,submatrix,defaultValue){
if(!index || index.isIndex !== true){
throw new TypeError('Invalid index');}



var iSize=index.size(),
isScalar=index.isScalar();


var sSize;
if(submatrix && submatrix.isMatrix === true){
sSize = submatrix.size();
submatrix = submatrix.valueOf();}else 

{
sSize = array.size(submatrix);}


if(isScalar){



if(sSize.length !== 0){
throw new TypeError('Scalar expected');}


matrix.set(index.min(),submatrix,defaultValue);}else 

{



if(iSize.length < matrix._size.length){
throw new DimensionError(iSize.length,matrix._size.length,'<');}


if(sSize.length < iSize.length){

var i=0;
var outer=0;
while(iSize[i] === 1 && sSize[i] === 1) {
i++;}

while(iSize[i] === 1) {
outer++;
i++;}



submatrix = array.unsqueeze(submatrix,iSize.length,outer,sSize);}



if(!object.deepEqual(iSize,sSize)){
throw new DimensionError(iSize,sSize,'>');}



var size=index.max().map(function(i){
return i + 1;});

_fit(matrix,size,defaultValue);


var dims=iSize.length,
dim=0;
_setSubmatrix(matrix._data,index,submatrix,dims,dim);}


return matrix;}











function _setSubmatrix(data,index,submatrix,dims,dim){
var last=dim == dims - 1,
range=index.dimension(dim);

if(last){
range.forEach(function(dataIndex,subIndex){
validateIndex(dataIndex);
data[dataIndex] = submatrix[subIndex[0]];});}else 


{
range.forEach(function(dataIndex,subIndex){
validateIndex(dataIndex);
_setSubmatrix(data[dataIndex],index,submatrix[subIndex[0]],dims,dim + 1);});}}
















DenseMatrix.prototype.resize = function(size,defaultValue,copy){

if(!isArray(size))
throw new TypeError('Array expected');


var m=copy?this.clone():this;

return _resize(m,size,defaultValue);};


var _resize=function(matrix,size,defaultValue){

if(size.length === 0){

var v=matrix._data;

while(isArray(v)) {
v = v[0];}

return object.clone(v);}


matrix._size = object.clone(size);
matrix._data = array.resize(matrix._data,matrix._size,defaultValue);

return matrix;};










function _fit(matrix,size,defaultValue){
var newSize=object.clone(matrix._size),
changed=false;


while(newSize.length < size.length) {
newSize.push(0);
changed = true;}



for(var i=0,ii=size.length;i < ii;i++) {
if(size[i] > newSize[i]){
newSize[i] = size[i];
changed = true;}}



if(changed){

_resize(matrix,newSize,defaultValue);}}







DenseMatrix.prototype.clone = function(){
var m=new DenseMatrix({
data:object.clone(this._data),
size:object.clone(this._size),
datatype:this._datatype});

return m;};






DenseMatrix.prototype.size = function(){
return this._size;};











DenseMatrix.prototype.map = function(callback){

var me=this;
var recurse=function(value,index){
if(isArray(value)){
return value.map(function(child,i){
return recurse(child,index.concat(i));});}else 


{
return callback(value,index,me);}};



return new DenseMatrix({
data:recurse(this._data,[]),
size:object.clone(this._size),
datatype:this._datatype});};









DenseMatrix.prototype.forEach = function(callback){

var me=this;
var recurse=function(value,index){
if(isArray(value)){
value.forEach(function(child,i){
recurse(child,index.concat(i));});}else 


{
callback(value,index,me);}};


recurse(this._data,[]);};






DenseMatrix.prototype.toArray = function(){
return object.clone(this._data);};






DenseMatrix.prototype.valueOf = function(){
return this._data;};










DenseMatrix.prototype.format = function(options){
return string.format(this._data,options);};






DenseMatrix.prototype.toString = function(){
return string.format(this._data);};






DenseMatrix.prototype.toJSON = function(){
return {
mathjs:'DenseMatrix',
data:this._data,
size:this._size,
datatype:this._datatype};};










DenseMatrix.prototype.diagonal = function(k){

if(k){

if(k.isBigNumber === true)
k = k.toNumber();

if(!isNumber(k) || !isInteger(k)){
throw new TypeError('The parameter k must be an integer number');}}else 


{

k = 0;}


var kSuper=k > 0?k:0;
var kSub=k < 0?-k:0;


var rows=this._size[0];
var columns=this._size[1];


var n=Math.min(rows - kSub,columns - kSuper);


var data=[];


for(var i=0;i < n;i++) {
data[i] = object.clone(this._data[i + kSub][i + kSuper]);}



return new DenseMatrix({
data:data,
size:[n],
datatype:this._datatype});};













DenseMatrix.diagonal = function(size,value,k,defaultValue,datatype){
if(!isArray(size))
throw new TypeError('Array expected, size parameter');
if(size.length !== 2)
throw new Error('Only two dimensions matrix are supported');


size = size.map(function(s){

if(s && s.isBigNumber === true){

s = s.toNumber();}


if(!isNumber(s) || !isInteger(s) || s < 1){
throw new Error('Size values must be positive integers');}

return s;});



if(k){

if(k && k.isBigNumber === true)
k = k.toNumber();

if(!isNumber(k) || !isInteger(k)){
throw new TypeError('The parameter k must be an integer number');}}else 


{

k = 0;}


if(defaultValue && isString(datatype)){

defaultValue = typed.convert(defaultValue,datatype);}


var kSuper=k > 0?k:0;
var kSub=k < 0?-k:0;


var rows=size[0];
var columns=size[1];


var n=Math.min(rows - kSub,columns - kSuper);


var _value;


if(isArray(value)){

if(value.length !== n){

throw new Error('Invalid value array length');}


_value = function(i){

return value[i];};}else 


if(value && value.isMatrix === true){

var ms=value.size();

if(ms.length !== 1 || ms[0] !== n){

throw new Error('Invalid matrix length');}


_value = function(i){

return value.get([i]);};}else 


{

_value = function(){

return value;};}




if(!defaultValue){

defaultValue = _value(0) && _value(0).isBigNumber === true?new type.BigNumber(0):0;}



var data=[];


if(size.length > 0){

data = array.resize(data,size,defaultValue);

for(var d=0;d < n;d++) {
data[d + kSub][d + kSuper] = _value(d);}}




return new DenseMatrix({
data:data,
size:[rows,columns]});};










DenseMatrix.fromJSON = function(json){
return new DenseMatrix(json);};










DenseMatrix.prototype.swapRows = function(i,j){

if(!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)){
throw new Error('Row index must be positive integers');}


if(this._size.length !== 2){
throw new Error('Only two dimensional matrix is supported');}


validateIndex(i,this._size[0]);
validateIndex(j,this._size[0]);


DenseMatrix._swapRows(i,j,this._data);

return this;};








DenseMatrix._swapRows = function(i,j,data){

var vi=data[i];
data[i] = data[j];
data[j] = vi;};








function preprocess(data){
for(var i=0,ii=data.length;i < ii;i++) {
var elem=data[i];
if(isArray(elem)){
data[i] = preprocess(elem);}else 

if(elem && elem.isMatrix === true){
data[i] = preprocess(elem.valueOf());}}



return data;}



type.Matrix._storage.dense = DenseMatrix;
type.Matrix._storage['default'] = DenseMatrix;


return DenseMatrix;}


exports.name = 'DenseMatrix';
exports.path = 'type';
exports.factory = factory;
exports.lazy = false;
});
__d('mathjs/lib/type/matrix/SparseMatrix.js',["mathjs/lib/utils/index.js","mathjs/lib/error/DimensionError.js","mathjs/lib/type/matrix/Matrix.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');

var array=util.array;
var object=util.object;
var string=util.string;
var number=util.number;

var isArray=Array.isArray;
var isNumber=number.isNumber;
var isInteger=number.isInteger;
var isString=string.isString;

var validateIndex=array.validateIndex;

function factory(type,config,load,typed){
var Matrix=load(require('mathjs/lib/type/matrix/Matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));





function SparseMatrix(data,datatype){
if(!(this instanceof SparseMatrix))
throw new SyntaxError('Constructor must be called with the new operator');
if(datatype && !isString(datatype))
throw new Error('Invalid datatype: ' + datatype);

if(data && data.isMatrix === true){

_createFromMatrix(this,data,datatype);}else 

if(data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)){

this._values = data.values;
this._index = data.index;
this._ptr = data.ptr;
this._size = data.size;
this._datatype = datatype || data.datatype;}else 

if(isArray(data)){

_createFromArray(this,data,datatype);}else 

if(data){

throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');}else 

{

this._values = [];
this._index = [];
this._ptr = [0];
this._size = [0,0];
this._datatype = datatype;}}



var _createFromMatrix=function(matrix,source,datatype){

if(source.type === 'SparseMatrix'){

matrix._values = source._values?object.clone(source._values):undefined;
matrix._index = object.clone(source._index);
matrix._ptr = object.clone(source._ptr);
matrix._size = object.clone(source._size);
matrix._datatype = datatype || source._datatype;}else 

{

_createFromArray(matrix,source.valueOf(),datatype || source._datatype);}};



var _createFromArray=function(matrix,data,datatype){

matrix._values = [];
matrix._index = [];
matrix._ptr = [];
matrix._datatype = datatype;

var rows=data.length;
var columns=0;


var eq=equalScalar;

var zero=0;

if(isString(datatype)){

eq = typed.find(equalScalar,[datatype,datatype]) || equalScalar;

zero = typed.convert(0,datatype);}



if(rows > 0){

var j=0;
do {

matrix._ptr.push(matrix._index.length);

for(var i=0;i < rows;i++) {

var row=data[i];

if(isArray(row)){

if(j === 0 && columns < row.length)
columns = row.length;

if(j < row.length){

var v=row[j];

if(!eq(v,zero)){

matrix._values.push(v);

matrix._index.push(i);}}}else 



{

if(j === 0 && columns < 1)
columns = 1;

if(!eq(row,zero)){

matrix._values.push(row);

matrix._index.push(i);}}}




j++;}while(

j < columns);}


matrix._ptr.push(matrix._index.length);

matrix._size = [rows,columns];};


SparseMatrix.prototype = new Matrix();




SparseMatrix.prototype.type = 'SparseMatrix';
SparseMatrix.prototype.isSparseMatrix = true;









SparseMatrix.prototype.storage = function(){
return 'sparse';};










SparseMatrix.prototype.datatype = function(){
return this._datatype;};







SparseMatrix.prototype.create = function(data,datatype){
return new SparseMatrix(data,datatype);};










SparseMatrix.prototype.density = function(){

var rows=this._size[0];
var columns=this._size[1];

return rows !== 0 && columns !== 0?this._index.length / (rows * columns):0;};















SparseMatrix.prototype.subset = function(index,replacement,defaultValue){

if(!this._values)
throw new Error('Cannot invoke subset on a Pattern only matrix');


switch(arguments.length){
case 1:
return _getsubset(this,index);


case 2:
case 3:
return _setsubset(this,index,replacement,defaultValue);

default:
throw new SyntaxError('Wrong number of arguments');}};



var _getsubset=function(matrix,idx){

if(!idx || idx.isIndex !== true){
throw new TypeError('Invalid index');}


var isScalar=idx.isScalar();
if(isScalar){

return matrix.get(idx.min());}


var size=idx.size();
if(size.length != matrix._size.length){
throw new DimensionError(size.length,matrix._size.length);}



var i,ii,k,kk;


var min=idx.min();
var max=idx.max();
for(i = 0,ii = matrix._size.length;i < ii;i++) {
validateIndex(min[i],matrix._size[i]);
validateIndex(max[i],matrix._size[i]);}



var mvalues=matrix._values;
var mindex=matrix._index;
var mptr=matrix._ptr;


var rows=idx.dimension(0);
var columns=idx.dimension(1);


var w=[];
var pv=[];


rows.forEach(function(i,r){

pv[i] = r[0];

w[i] = true;});



var values=mvalues?[]:undefined;
var index=[];
var ptr=[];


columns.forEach(function(j){

ptr.push(index.length);

for(k = mptr[j],kk = mptr[j + 1];k < kk;k++) {

i = mindex[k];

if(w[i] === true){

index.push(pv[i]);

if(values)
values.push(mvalues[k]);}}});




ptr.push(index.length);


return new SparseMatrix({
values:values,
index:index,
ptr:ptr,
size:size,
datatype:matrix._datatype});};



var _setsubset=function(matrix,index,submatrix,defaultValue){

if(!index || index.isIndex !== true){
throw new TypeError('Invalid index');}



var iSize=index.size(),
isScalar=index.isScalar();


var sSize;
if(submatrix && submatrix.isMatrix === true){

sSize = submatrix.size();

submatrix = submatrix.toArray();}else 

{

sSize = array.size(submatrix);}



if(isScalar){

if(sSize.length !== 0){
throw new TypeError('Scalar expected');}


matrix.set(index.min(),submatrix,defaultValue);}else 

{

if(iSize.length !== 1 && iSize.length !== 2){
throw new DimensionError(iSize.length,matrix._size.length,'<');}



if(sSize.length < iSize.length){

var i=0;
var outer=0;
while(iSize[i] === 1 && sSize[i] === 1) {
i++;}

while(iSize[i] === 1) {
outer++;
i++;}


submatrix = array.unsqueeze(submatrix,iSize.length,outer,sSize);}



if(!object.deepEqual(iSize,sSize)){
throw new DimensionError(iSize,sSize,'>');}



var x0=index.min()[0];
var y0=index.min()[1];


var m=sSize[0];
var n=sSize[1];


for(var x=0;x < m;x++) {

for(var y=0;y < n;y++) {

var v=submatrix[x][y];

matrix.set([x + x0,y + y0],v,defaultValue);}}}



return matrix;};







SparseMatrix.prototype.get = function(index){
if(!isArray(index))
throw new TypeError('Array expected');
if(index.length != this._size.length)
throw new DimensionError(index.length,this._size.length);


if(!this._values)
throw new Error('Cannot invoke get on a Pattern only matrix');


var i=index[0];
var j=index[1];


validateIndex(i,this._size[0]);
validateIndex(j,this._size[1]);


var k=_getValueIndex(i,this._ptr[j],this._ptr[j + 1],this._index);

if(k < this._ptr[j + 1] && this._index[k] === i)
return object.clone(this._values[k]);

return 0;};











SparseMatrix.prototype.set = function(index,v,defaultValue){
if(!isArray(index))
throw new TypeError('Array expected');
if(index.length != this._size.length)
throw new DimensionError(index.length,this._size.length);


if(!this._values)
throw new Error('Cannot invoke set on a Pattern only matrix');


var i=index[0];
var j=index[1];


var rows=this._size[0];
var columns=this._size[1];


var eq=equalScalar;

var zero=0;

if(isString(this._datatype)){

eq = typed.find(equalScalar,[this._datatype,this._datatype]) || equalScalar;

zero = typed.convert(0,this._datatype);}



if(i > rows - 1 || j > columns - 1){

_resize(this,Math.max(i + 1,rows),Math.max(j + 1,columns),defaultValue);

rows = this._size[0];
columns = this._size[1];}



validateIndex(i,rows);
validateIndex(j,columns);


var k=_getValueIndex(i,this._ptr[j],this._ptr[j + 1],this._index);

if(k < this._ptr[j + 1] && this._index[k] === i){

if(!eq(v,zero)){

this._values[k] = v;}else 

{

_remove(k,j,this._values,this._index,this._ptr);}}else 


{

_insert(k,i,j,v,this._values,this._index,this._ptr);}


return this;};


var _getValueIndex=function(i,top,bottom,index){

if(bottom - top === 0)
return bottom;

for(var r=top;r < bottom;r++) {

if(index[r] === i)
return r;}


return top;};


var _remove=function(k,j,values,index,ptr){

values.splice(k,1);
index.splice(k,1);

for(var x=j + 1;x < ptr.length;x++) 
ptr[x]--;};


var _insert=function(k,i,j,v,values,index,ptr){

values.splice(k,0,v);

index.splice(k,0,i);

for(var x=j + 1;x < ptr.length;x++) 
ptr[x]++;};














SparseMatrix.prototype.resize = function(size,defaultValue,copy){

if(!isArray(size))
throw new TypeError('Array expected');
if(size.length !== 2)
throw new Error('Only two dimensions matrix are supported');


size.forEach(function(value){
if(!number.isNumber(value) || !number.isInteger(value) || value < 0){
throw new TypeError('Invalid size, must contain positive integers ' + 
'(size: ' + string.format(size) + ')');}});




var m=copy?this.clone():this;

return _resize(m,size[0],size[1],defaultValue);};


var _resize=function(matrix,rows,columns,defaultValue){

var value=defaultValue || 0;


var eq=equalScalar;

var zero=0;

if(isString(matrix._datatype)){

eq = typed.find(equalScalar,[matrix._datatype,matrix._datatype]) || equalScalar;

zero = typed.convert(0,matrix._datatype);

value = typed.convert(value,matrix._datatype);}



var ins=!eq(value,zero);


var r=matrix._size[0];
var c=matrix._size[1];

var i,j,k;


if(columns > c){

for(j = c;j < columns;j++) {

matrix._ptr[j] = matrix._values.length;

if(ins){

for(i = 0;i < r;i++) {

matrix._values.push(value);

matrix._index.push(i);}}}




matrix._ptr[columns] = matrix._values.length;}else 

if(columns < c){

matrix._ptr.splice(columns + 1,c - columns);

matrix._values.splice(matrix._ptr[columns],matrix._values.length);
matrix._index.splice(matrix._ptr[columns],matrix._index.length);}


c = columns;


if(rows > r){

if(ins){

var n=0;

for(j = 0;j < c;j++) {

matrix._ptr[j] = matrix._ptr[j] + n;

k = matrix._ptr[j + 1] + n;

var p=0;

for(i = r;i < rows;i++,p++) {

matrix._values.splice(k + p,0,value);

matrix._index.splice(k + p,0,i);

n++;}}



matrix._ptr[c] = matrix._values.length;}}else 


if(rows < r){

var d=0;

for(j = 0;j < c;j++) {

matrix._ptr[j] = matrix._ptr[j] - d;

var k0=matrix._ptr[j];
var k1=matrix._ptr[j + 1] - d;

for(k = k0;k < k1;k++) {

i = matrix._index[k];

if(i > rows - 1){

matrix._values.splice(k,1);

matrix._index.splice(k,1);

d++;}}}




matrix._ptr[j] = matrix._values.length;}


matrix._size[0] = rows;
matrix._size[1] = columns;

return matrix;};






SparseMatrix.prototype.clone = function(){
var m=new SparseMatrix({
values:this._values?object.clone(this._values):undefined,
index:object.clone(this._index),
ptr:object.clone(this._ptr),
size:object.clone(this._size),
datatype:this._datatype});

return m;};






SparseMatrix.prototype.size = function(){
return object.clone(this._size);};












SparseMatrix.prototype.map = function(callback,skipZeros){

if(!this._values)
throw new Error('Cannot invoke map on a Pattern only matrix');

var me=this;

var rows=this._size[0];
var columns=this._size[1];

var invoke=function(v,i,j){

return callback(v,[i,j],me);};


return _map(this,0,rows - 1,0,columns - 1,invoke,skipZeros);};






var _map=function(matrix,minRow,maxRow,minColumn,maxColumn,callback,skipZeros){

var values=[];
var index=[];
var ptr=[];


var eq=equalScalar;

var zero=0;

if(isString(matrix._datatype)){

eq = typed.find(equalScalar,[matrix._datatype,matrix._datatype]) || equalScalar;

zero = typed.convert(0,matrix._datatype);}



var invoke=function(v,x,y){

v = callback(v,x,y);

if(!eq(v,zero)){

values.push(v);

index.push(x);}};



for(var j=minColumn;j <= maxColumn;j++) {

ptr.push(values.length);

var k0=matrix._ptr[j];
var k1=matrix._ptr[j + 1];

var p=minRow;

for(var k=k0;k < k1;k++) {

var i=matrix._index[k];

if(i >= minRow && i <= maxRow){

if(!skipZeros){
for(var x=p;x < i;x++) 
invoke(0,x - minRow,j - minColumn);}


invoke(matrix._values[k],i - minRow,j - minColumn);}


p = i + 1;}


if(!skipZeros){
for(var y=p;y <= maxRow;y++) 
invoke(0,y - minRow,j - minColumn);}}



ptr.push(values.length);

return new SparseMatrix({
values:values,
index:index,
ptr:ptr,
size:[maxRow - minRow + 1,maxColumn - minColumn + 1]});};










SparseMatrix.prototype.forEach = function(callback,skipZeros){

if(!this._values)
throw new Error('Cannot invoke forEach on a Pattern only matrix');

var me=this;

var rows=this._size[0];
var columns=this._size[1];

for(var j=0;j < columns;j++) {

var k0=this._ptr[j];
var k1=this._ptr[j + 1];

var p=0;

for(var k=k0;k < k1;k++) {

var i=this._index[k];

if(!skipZeros){

for(var x=p;x < i;x++) 
callback(0,[x,j],me);}


callback(this._values[k],[i,j],me);

p = i + 1;}


if(!skipZeros){

for(var y=p;y < rows;y++) 
callback(0,[y,j],me);}}};








SparseMatrix.prototype.toArray = function(){
return _toArray(this._values,this._index,this._ptr,this._size,true);};






SparseMatrix.prototype.valueOf = function(){
return _toArray(this._values,this._index,this._ptr,this._size,false);};


var _toArray=function(values,index,ptr,size,copy){

var rows=size[0];
var columns=size[1];

var a=[];

var i,j;

for(i = 0;i < rows;i++) {
a[i] = [];
for(j = 0;j < columns;j++) 
a[i][j] = 0;}



for(j = 0;j < columns;j++) {

var k0=ptr[j];
var k1=ptr[j + 1];

for(var k=k0;k < k1;k++) {

i = index[k];

a[i][j] = values?copy?object.clone(values[k]):values[k]:1;}}


return a;};










SparseMatrix.prototype.format = function(options){

var rows=this._size[0];
var columns=this._size[1];

var density=this.density();

var str='Sparse Matrix [' + string.format(rows,options) + ' x ' + string.format(columns,options) + '] density: ' + string.format(density,options) + '\n';

for(var j=0;j < columns;j++) {

var k0=this._ptr[j];
var k1=this._ptr[j + 1];

for(var k=k0;k < k1;k++) {

var i=this._index[k];

str += '\n    (' + string.format(i,options) + ', ' + string.format(j,options) + ') ==> ' + (this._values?string.format(this._values[k],options):'X');}}


return str;};






SparseMatrix.prototype.toString = function(){
return string.format(this.toArray());};






SparseMatrix.prototype.toJSON = function(){
return {
mathjs:'SparseMatrix',
values:this._values,
index:this._index,
ptr:this._ptr,
size:this._size,
datatype:this._datatype};};










SparseMatrix.prototype.diagonal = function(k){

if(k){

if(k.isBigNumber === true)
k = k.toNumber();

if(!isNumber(k) || !isInteger(k)){
throw new TypeError('The parameter k must be an integer number');}}else 


{

k = 0;}


var kSuper=k > 0?k:0;
var kSub=k < 0?-k:0;


var rows=this._size[0];
var columns=this._size[1];


var n=Math.min(rows - kSub,columns - kSuper);


var values=[];
var index=[];
var ptr=[];

ptr[0] = 0;

for(var j=kSuper;j < columns && values.length < n;j++) {

var k0=this._ptr[j];
var k1=this._ptr[j + 1];

for(var x=k0;x < k1;x++) {

var i=this._index[x];

if(i === j - kSuper + kSub){

values.push(object.clone(this._values[x]));

index[values.length - 1] = i - kSub;

break;}}}




ptr.push(values.length);

return new SparseMatrix({
values:values,
index:index,
ptr:ptr,
size:[n,1]});};










SparseMatrix.fromJSON = function(json){
return new SparseMatrix(json);};












SparseMatrix.diagonal = function(size,value,k,defaultValue,datatype){
if(!isArray(size))
throw new TypeError('Array expected, size parameter');
if(size.length !== 2)
throw new Error('Only two dimensions matrix are supported');


size = size.map(function(s){

if(s && s.isBigNumber === true){

s = s.toNumber();}


if(!isNumber(s) || !isInteger(s) || s < 1){
throw new Error('Size values must be positive integers');}

return s;});



if(k){

if(k.isBigNumber === true)
k = k.toNumber();

if(!isNumber(k) || !isInteger(k)){
throw new TypeError('The parameter k must be an integer number');}}else 


{

k = 0;}



var eq=equalScalar;

var zero=0;

if(isString(datatype)){

eq = typed.find(equalScalar,[datatype,datatype]) || equalScalar;

zero = typed.convert(0,datatype);}


var kSuper=k > 0?k:0;
var kSub=k < 0?-k:0;


var rows=size[0];
var columns=size[1];


var n=Math.min(rows - kSub,columns - kSuper);


var _value;


if(isArray(value)){

if(value.length !== n){

throw new Error('Invalid value array length');}


_value = function(i){

return value[i];};}else 


if(value && value.isMatrix === true){

var ms=value.size();

if(ms.length !== 1 || ms[0] !== n){

throw new Error('Invalid matrix length');}


_value = function(i){

return value.get([i]);};}else 


{

_value = function(){

return value;};}




var values=[];
var index=[];
var ptr=[];


for(var j=0;j < columns;j++) {

ptr.push(values.length);

var i=j - kSuper;

if(i >= 0 && i < n){

var v=_value(i);

if(!eq(v,zero)){

index.push(i + kSub);

values.push(v);}}}




ptr.push(values.length);

return new SparseMatrix({
values:values,
index:index,
ptr:ptr,
size:[rows,columns]});};











SparseMatrix.prototype.swapRows = function(i,j){

if(!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)){
throw new Error('Row index must be positive integers');}


if(this._size.length !== 2){
throw new Error('Only two dimensional matrix is supported');}


validateIndex(i,this._size[0]);
validateIndex(j,this._size[0]);


SparseMatrix._swapRows(i,j,this._size[1],this._values,this._index,this._ptr);

return this;};











SparseMatrix._forEachRow = function(j,values,index,ptr,callback){

var k0=ptr[j];
var k1=ptr[j + 1];

for(var k=k0;k < k1;k++) {

callback(index[k],values[k]);}};













SparseMatrix._swapRows = function(x,y,columns,values,index,ptr){

for(var j=0;j < columns;j++) {

var k0=ptr[j];
var k1=ptr[j + 1];

var kx=_getValueIndex(x,k0,k1,index);

var ky=_getValueIndex(y,k0,k1,index);

if(kx < k1 && ky < k1 && index[kx] === x && index[ky] === y){

if(values){
var v=values[kx];
values[kx] = values[ky];
values[ky] = v;}


continue;}


if(kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)){

var vx=values?values[kx]:undefined;

index.splice(ky,0,y);
if(values)
values.splice(ky,0,vx);

index.splice(ky <= kx?kx + 1:kx,1);
if(values)
values.splice(ky <= kx?kx + 1:kx,1);

continue;}


if(ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)){

var vy=values?values[ky]:undefined;

index.splice(kx,0,x);
if(values)
values.splice(kx,0,vy);

index.splice(kx <= ky?ky + 1:ky,1);
if(values)
values.splice(kx <= ky?ky + 1:ky,1);}}};





type.Matrix._storage.sparse = SparseMatrix;

return SparseMatrix;}


exports.name = 'SparseMatrix';
exports.path = 'type';
exports.factory = factory;
exports.lazy = false;
});
__d('mathjs/lib/function/relational/equalScalar.js',["mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){









var equalScalar=typed('equalScalar',{

'boolean, boolean':function(x,y){
return x === y;},


'number, number':function(x,y){
return x === y || nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return x.eq(y);},


'Fraction, Fraction':function(x,y){
return x.equals(y);},


'Complex, Complex':function(x,y){
return (x.re === y.re || nearlyEqual(x.re,y.re,config.epsilon)) && (
x.im === y.im || nearlyEqual(x.im,y.im,config.epsilon));},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value === y.value || nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x === y;}});



return equalScalar;}


exports.factory = factory;
});
__d('mathjs/lib/type/matrix/Spa.js',["mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));





function Spa(){
if(!(this instanceof Spa))
throw new SyntaxError('Constructor must be called with the new operator');


this._values = [];
this._heap = new type.FibonacciHeap();}





Spa.prototype.type = 'Spa';
Spa.prototype.isSpa = true;







Spa.prototype.set = function(i,v){

if(!this._values[i]){

var node=this._heap.insert(i,v);

this._values[i] = node;}else 

{

this._values[i].value = v;}};



Spa.prototype.get = function(i){
var node=this._values[i];
if(node)
return node.value;
return 0;};


Spa.prototype.accumulate = function(i,v){

var node=this._values[i];
if(!node){

node = this._heap.insert(i,v);

this._values[i] = node;}else 

{

node.value = add(node.value,v);}};



Spa.prototype.forEach = function(from,to,callback){

var heap=this._heap;
var values=this._values;

var nodes=[];

var node=heap.extractMinimum();
if(node)
nodes.push(node);

while(node && node.key <= to) {

if(node.key >= from){

if(!equalScalar(node.value,0)){

callback(node.key,node.value,this);}}



node = heap.extractMinimum();
if(node)
nodes.push(node);}


for(var i=0;i < nodes.length;i++) {

var n=nodes[i];

node = heap.insert(n.key,n.value);

values[node.key] = node;}};



Spa.prototype.swap = function(i,j){

var nodei=this._values[i];
var nodej=this._values[j];

if(!nodei && nodej){

nodei = this._heap.insert(i,nodej.value);

this._heap.remove(nodej);

this._values[i] = nodei;
this._values[j] = undefined;}else 

if(nodei && !nodej){

nodej = this._heap.insert(j,nodei.value);

this._heap.remove(nodei);

this._values[j] = nodej;
this._values[i] = undefined;}else 

if(nodei && nodej){

var v=nodei.value;
nodei.value = nodej.value;
nodej.value = v;}};



return Spa;}


exports.name = 'Spa';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/add.js',["mathjs/lib/utils/object.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm04.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var extend=require('mathjs/lib/utils/object.js').extend;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var addScalar=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var latex=require('mathjs/lib/utils/latex.js');

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm04=load(require('mathjs/lib/type/matrix/utils/algorithm04.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

































var add=typed('add',extend({


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm04(x,y,addScalar);
break;
default:

c = algorithm01(y,x,addScalar,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,addScalar,false);
break;
default:

c = algorithm13(x,y,addScalar);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return add(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return add(matrix(x),y);},


'Matrix, Array':function(x,y){

return add(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm10(x,y,addScalar,false);
break;
default:
c = algorithm14(x,y,addScalar,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,addScalar,true);
break;
default:
c = algorithm14(y,x,addScalar,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,addScalar,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,addScalar,true).valueOf();}},

addScalar.signatures));

add.toTex = '\\left(${args[0]}' + latex.operators['add'] + '${args[1]}\\right)';

return add;}


exports.name = 'add';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/function/matrix.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
































var matrix=typed('matrix',{
'':function(){
return _create([]);},


'string':function(format){
return _create([],format);},


'string, string':function(format,datatype){
return _create([],format,datatype);},


'Array':function(data){
return _create(data);},


'Matrix':function(data){
return _create(data,data.storage());},


'Array | Matrix, string':_create,

'Array | Matrix, string, string':_create});


matrix.toTex = {
0:'\\begin{bmatrix}\\end{bmatrix}',
1:'\\left(${args[0]}\\right)',
2:'\\left(${args[0]}\\right)'};


return matrix;









function _create(data,format,datatype){

var M=type.Matrix.storage(format || 'default');


return new M(data,datatype);}}



exports.name = 'matrix';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/addScalar.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){














return typed('add',{

'number, number':function(x,y){
return x + y;},


'Complex, Complex':function(x,y){
return new type.Complex(
x.re + y.re,
x.im + y.im);},



'BigNumber, BigNumber':function(x,y){
return x.plus(y);},


'Fraction, Fraction':function(x,y){
return x.add(y);},


'Unit, Unit':function(x,y){
if(x.value == null)throw new Error('Parameter x contains a unit with undefined value');
if(y.value == null)throw new Error('Parameter y contains a unit with undefined value');
if(!x.equalBase(y))throw new Error('Units do not match');

var res=x.clone();
res.value += y.value;
res.fixPrefix = false;
return res;}});}




exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm01.js',["mathjs/lib/error/DimensionError.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;




















var algorithm01=function(denseMatrix,sparseMatrix,callback,inverse){

var adata=denseMatrix._data;
var asize=denseMatrix._size;
var adt=denseMatrix._datatype;

var bvalues=sparseMatrix._values;
var bindex=sparseMatrix._index;
var bptr=sparseMatrix._ptr;
var bsize=sparseMatrix._size;
var bdt=sparseMatrix._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


if(!bvalues)
throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');


var rows=asize[0];
var columns=asize[1];


var dt=typeof adt === 'string' && adt === bdt?adt:undefined;

var cf=dt?typed.find(callback,[dt,dt]):callback;


var i,j;


var cdata=[];

for(i = 0;i < rows;i++) 
cdata[i] = [];


var x=[];

var w=[];


for(j = 0;j < columns;j++) {

var mark=j + 1;

for(var k0=bptr[j],k1=bptr[j + 1],k=k0;k < k1;k++) {

i = bindex[k];

x[i] = inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]);

w[i] = mark;}


for(i = 0;i < rows;i++) {

if(w[i] === mark){

cdata[i][j] = x[i];}else 

{

cdata[i][j] = adata[i][j];}}}





return new DenseMatrix({
data:cdata,
size:[rows,columns],
datatype:dt});};



return algorithm01;}


exports.name = 'algorithm01';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm04.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;



















var algorithm04=function(a,b,callback){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=avalues && bvalues?[]:undefined;
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



var xa=avalues && bvalues?[]:undefined;
var xb=avalues && bvalues?[]:undefined;

var wa=[];
var wb=[];


var i,j,k,k0,k1;


for(j = 0;j < columns;j++) {

cptr[j] = cindex.length;

var mark=j + 1;

for(k0 = aptr[j],k1 = aptr[j + 1],k = k0;k < k1;k++) {

i = aindex[k];

cindex.push(i);

wa[i] = mark;

if(xa)
xa[i] = avalues[k];}


for(k0 = bptr[j],k1 = bptr[j + 1],k = k0;k < k1;k++) {

i = bindex[k];

if(wa[i] === mark){

if(xa){

var v=cf(xa[i],bvalues[k]);

if(!eq(v,zero)){

xa[i] = v;}else 

{

wa[i] = null;}}}else 



{

cindex.push(i);

wb[i] = mark;

if(xb)
xb[i] = bvalues[k];}}



if(xa && xb){

k = cptr[j];

while(k < cindex.length) {

i = cindex[k];

if(wa[i] === mark){

cvalues[k] = xa[i];

k++;}else 

if(wb[i] === mark){

cvalues[k] = xb[i];

k++;}else 

{

cindex.splice(k,1);}}}}





cptr[columns] = cindex.length;


return c;};


return algorithm04;}


exports.name = 'algorithm04';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm10.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;




















var algorithm10=function(s,b,callback,inverse){

var avalues=s._values;
var aindex=s._index;
var aptr=s._ptr;
var asize=s._size;
var adt=s._datatype;


if(!avalues)
throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');


var rows=asize[0];
var columns=asize[1];


var dt;

var cf=callback;


if(typeof adt === 'string'){

dt = adt;

b = typed.convert(b,dt);

cf = typed.find(callback,[dt,dt]);}



var cdata=[];

var c=new DenseMatrix({
data:cdata,
size:[rows,columns],
datatype:dt});



var x=[];

var w=[];


for(var j=0;j < columns;j++) {

var mark=j + 1;

for(var k0=aptr[j],k1=aptr[j + 1],k=k0;k < k1;k++) {

var r=aindex[k];

x[r] = avalues[k];
w[r] = mark;}


for(var i=0;i < rows;i++) {

if(j === 0){

cdata[i] = [];}


if(w[i] === mark){

cdata[i][j] = inverse?cf(b,x[i]):cf(x[i],b);}else 

{

cdata[i][j] = b;}}}





return c;};


return algorithm10;}


exports.name = 'algorithm10';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm13.js',["mathjs/lib/utils/index.js","mathjs/lib/error/DimensionError.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');

var string=util.string,
isString=string.isString;

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;















var algorithm13=function(a,b,callback){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;

var bdata=b._data;
var bsize=b._size;
var bdt=b._datatype;

var csize=[];


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


for(var s=0;s < asize.length;s++) {

if(asize[s] !== bsize[s])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');

csize[s] = asize[s];}



var dt;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

b = typed.convert(b,dt);

cf = typed.find(callback,[dt,dt]);}



var cdata=csize.length > 0?_iterate(cf,0,csize,csize[0],adata,bdata):[];


return new DenseMatrix({
data:cdata,
size:csize,
datatype:dt});};




var _iterate=function(f,level,s,n,av,bv){

var cv=[];

if(level === s.length - 1){

for(var i=0;i < n;i++) {

cv[i] = f(av[i],bv[i]);}}else 


{

for(var j=0;j < n;j++) {

cv[j] = _iterate(f,level + 1,s,s[level + 1],av[j],bv[j]);}}


return cv;};


return algorithm13;}


exports.name = 'algorithm13';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm14.js',["mathjs/lib/utils/object.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;
















var algorithm14=function(a,b,callback,inverse){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;


var dt;

var cf=callback;


if(typeof adt === 'string'){

dt = adt;

b = typed.convert(b,dt);

cf = typed.find(callback,[dt,dt]);}



var cdata=asize.length > 0?_iterate(cf,0,asize,asize[0],adata,b,inverse):[];


return new DenseMatrix({
data:cdata,
size:clone(asize),
datatype:dt});};




var _iterate=function(f,level,s,n,av,bv,inverse){

var cv=[];

if(level === s.length - 1){

for(var i=0;i < n;i++) {

cv[i] = inverse?f(bv,av[i]):f(av[i],bv);}}else 


{

for(var j=0;j < n;j++) {

cv[j] = _iterate(f,level + 1,s,s[level + 1],av[j],bv,inverse);}}


return cv;};


return algorithm14;}


exports.name = 'algorithm14';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/FibonacciHeap.js',["mathjs/lib/function/relational/smaller.js","mathjs/lib/function/relational/larger.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var smaller=load(require('mathjs/lib/function/relational/smaller.js'));
var larger=load(require('mathjs/lib/function/relational/larger.js'));

var oneOverLogPhi=1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);

function FibonacciHeap(){
if(!(this instanceof FibonacciHeap))
throw new SyntaxError('Constructor must be called with the new operator');


this._minimum = null;
this._size = 0;}





FibonacciHeap.prototype.type = 'FibonacciHeap';
FibonacciHeap.prototype.isFibonacciHeap = true;






FibonacciHeap.prototype.insert = function(key,value){

var node={
key:key,
value:value,
degree:0};


if(this._minimum){

var minimum=this._minimum;

node.left = minimum;
node.right = minimum.right;
minimum.right = node;
node.right.left = node;

if(smaller(key,minimum.key)){

this._minimum = node;}}else 


{

node.left = node;
node.right = node;

this._minimum = node;}


this._size++;

return node;};





FibonacciHeap.prototype.size = function(){
return this._size;};





FibonacciHeap.prototype.clear = function(){
this._minimum = null;
this._size = 0;};





FibonacciHeap.prototype.isEmpty = function(){
return !!this._minimum;};






FibonacciHeap.prototype.extractMinimum = function(){

var node=this._minimum;

if(node === null)
return node;

var minimum=this._minimum;

var numberOfChildren=node.degree;

var x=node.child;

while(numberOfChildren > 0) {

var tempRight=x.right;

x.left.right = x.right;
x.right.left = x.left;

x.left = minimum;
x.right = minimum.right;
minimum.right = x;
x.right.left = x;

x.parent = null;
x = tempRight;
numberOfChildren--;}


node.left.right = node.right;
node.right.left = node.left;

if(node == node.right){

minimum = null;}else 

{

minimum = node.right;

minimum = _findMinimumNode(minimum,this._size);}


this._size--;

this._minimum = minimum;

return node;};








FibonacciHeap.prototype.remove = function(node){

this._minimum = _decreaseKey(this._minimum,node,-1);

this.extractMinimum();};







var _decreaseKey=function(minimum,node,key){

node.key = key;

var parent=node.parent;
if(parent && smaller(node.key,parent.key)){

_cut(minimum,node,parent);

_cascadingCut(minimum,parent);}


if(smaller(node.key,minimum.key))
minimum = node;

return minimum;};






var _cut=function(minimum,node,parent){

node.left.right = node.right;
node.right.left = node.left;
parent.degree--;

if(parent.child == node)
parent.child = node.right;

if(parent.degree === 0)
parent.child = null;

node.left = minimum;
node.right = minimum.right;
minimum.right = node;
node.right.left = node;

node.parent = null;

node.mark = false;};







var _cascadingCut=function(minimum,node){

var parent=node.parent;

if(!parent)
return;

if(!node.mark){
node.mark = true;}else 

{

_cut(minimum,node,parent);

_cascadingCut(parent);}};






var _linkNodes=function(node,parent){

node.left.right = node.right;
node.right.left = node.left;

node.parent = parent;
if(!parent.child){
parent.child = node;
node.right = node;
node.left = node;}else 

{
node.left = parent.child;
node.right = parent.child.right;
parent.child.right = node;
node.right.left = node;}


parent.degree++;

node.mark = false;};


var _findMinimumNode=function(minimum,size){

var arraySize=Math.floor(Math.log(size) * oneOverLogPhi) + 1;

var array=new Array(arraySize);

var numRoots=0;
var x=minimum;
if(x){
numRoots++;
x = x.right;
while(x !== minimum) {
numRoots++;
x = x.right;}}



var y;

while(numRoots > 0) {

var d=x.degree;

var next=x.right;

while(true) {

y = array[d];
if(!y)
break;

if(larger(x.key,y.key)){
var temp=y;
y = x;
x = temp;}


_linkNodes(y,x);

array[d] = null;
d++;}


array[d] = x;

x = next;
numRoots--;}


minimum = null;

for(var i=0;i < arraySize;i++) {

y = array[i];
if(!y)
continue;

if(minimum){

y.left.right = y.right;
y.right.left = y.left;

y.left = minimum;
y.right = minimum.right;
minimum.right = y;
y.right.left = y;

if(smaller(y.key,minimum.key))
minimum = y;}else 


minimum = y;}

return minimum;};


return FibonacciHeap;}


exports.name = 'FibonacciHeap';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/smaller.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');































var smaller=typed('smaller',{

'boolean, boolean':function(x,y){
return x < y;},


'number, number':function(x,y){
return x < y && !nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return x.lt(y);},


'Fraction, Fraction':function(x,y){
return x.compare(y) === -1;},


'Complex, Complex':function(x,y){
throw new TypeError('No ordering relation is defined for complex numbers');},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value < y.value && !nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x < y;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,smaller);
break;
default:

c = algorithm03(y,x,smaller,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,smaller,false);
break;
default:

c = algorithm13(x,y,smaller);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return smaller(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return smaller(matrix(x),y);},


'Matrix, Array':function(x,y){

return smaller(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,smaller,false);
break;
default:
c = algorithm14(x,y,smaller,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,smaller,true);
break;
default:
c = algorithm14(y,x,smaller,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,smaller,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,smaller,true).valueOf();}});



smaller.toTex = '\\left(${args[0]}' + latex.operators['smaller'] + '${args[1]}\\right)';

return smaller;}


exports.name = 'smaller';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm03.js',["mathjs/lib/error/DimensionError.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;




















var algorithm03=function(denseMatrix,sparseMatrix,callback,inverse){

var adata=denseMatrix._data;
var asize=denseMatrix._size;
var adt=denseMatrix._datatype;

var bvalues=sparseMatrix._values;
var bindex=sparseMatrix._index;
var bptr=sparseMatrix._ptr;
var bsize=sparseMatrix._size;
var bdt=sparseMatrix._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


if(!bvalues)
throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');


var rows=asize[0];
var columns=asize[1];


var dt;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cdata=[];


for(var z=0;z < rows;z++) {

cdata[z] = [];}



var x=[];

var w=[];


for(var j=0;j < columns;j++) {

var mark=j + 1;

for(var k0=bptr[j],k1=bptr[j + 1],k=k0;k < k1;k++) {

var i=bindex[k];

x[i] = inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]);
w[i] = mark;}


for(var y=0;y < rows;y++) {

if(w[y] === mark){

cdata[y][j] = x[y];}else 

{

cdata[y][j] = inverse?cf(zero,adata[y][j]):cf(adata[y][j],zero);}}}





return new DenseMatrix({
data:cdata,
size:[rows,columns],
datatype:dt});};



return algorithm03;}


exports.name = 'algorithm03';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm07.js',["mathjs/lib/error/DimensionError.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;















var algorithm07=function(a,b,callback){

var asize=a._size;
var adt=a._datatype;

var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


var rows=asize[0];
var columns=asize[1];


var dt;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var i,j;


var cdata=[];

for(i = 0;i < rows;i++) 
cdata[i] = [];


var c=new DenseMatrix({
data:cdata,
size:[rows,columns],
datatype:dt});



var xa=[];
var xb=[];

var wa=[];
var wb=[];


for(j = 0;j < columns;j++) {

var mark=j + 1;

_scatter(a,j,wa,xa,mark);

_scatter(b,j,wb,xb,mark);

for(i = 0;i < rows;i++) {

var va=wa[i] === mark?xa[i]:zero;
var vb=wb[i] === mark?xb[i]:zero;

cdata[i][j] = cf(va,vb);}}




return c;};


var _scatter=function(m,j,w,x,mark){

var values=m._values;
var index=m._index;
var ptr=m._ptr;

for(var k=ptr[j],k1=ptr[j + 1];k < k1;k++) {

var i=index[k];

w[i] = mark;
x[i] = values[k];}};



return algorithm07;}


exports.name = 'algorithm07';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm12.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var DenseMatrix=type.DenseMatrix;




















var algorithm12=function(s,b,callback,inverse){

var avalues=s._values;
var aindex=s._index;
var aptr=s._ptr;
var asize=s._size;
var adt=s._datatype;


if(!avalues)
throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');


var rows=asize[0];
var columns=asize[1];


var dt;

var cf=callback;


if(typeof adt === 'string'){

dt = adt;

b = typed.convert(b,dt);

cf = typed.find(callback,[dt,dt]);}



var cdata=[];

var c=new DenseMatrix({
data:cdata,
size:[rows,columns],
datatype:dt});



var x=[];

var w=[];


for(var j=0;j < columns;j++) {

var mark=j + 1;

for(var k0=aptr[j],k1=aptr[j + 1],k=k0;k < k1;k++) {

var r=aindex[k];

x[r] = avalues[k];
w[r] = mark;}


for(var i=0;i < rows;i++) {

if(j === 0){

cdata[i] = [];}


if(w[i] === mark){

cdata[i][j] = inverse?cf(b,x[i]):cf(x[i],b);}else 

{

cdata[i][j] = inverse?cf(b,0):cf(0,b);}}}





return c;};


return algorithm12;}


exports.name = 'algorithm12';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/larger.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');































var larger=typed('larger',{

'boolean, boolean':function(x,y){
return x > y;},


'number, number':function(x,y){
return x > y && !nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return x.gt(y);},


'Fraction, Fraction':function(x,y){
return x.compare(y) === 1;},


'Complex, Complex':function(){
throw new TypeError('No ordering relation is defined for complex numbers');},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value > y.value && !nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x > y;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,larger);
break;
default:

c = algorithm03(y,x,larger,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,larger,false);
break;
default:

c = algorithm13(x,y,larger);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return larger(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return larger(matrix(x),y);},


'Matrix, Array':function(x,y){

return larger(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,larger,false);
break;
default:
c = algorithm14(x,y,larger,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,larger,true);
break;
default:
c = algorithm14(y,x,larger,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,larger,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,larger,true).valueOf();}});



larger.toTex = '\\left(${args[0]}' + latex.operators['larger'] + '${args[1]}\\right)';

return larger;}


exports.name = 'larger';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/ImmutableDenseMatrix.js',["mathjs/lib/utils/index.js","mathjs/lib/type/matrix/DenseMatrix.js","mathjs/lib/function/relational/smaller.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

var string=util.string;
var object=util.object;

var isArray=Array.isArray;
var isString=string.isString;

function factory(type,config,load){

var DenseMatrix=load(require('mathjs/lib/type/matrix/DenseMatrix.js'));

var smaller=load(require('mathjs/lib/function/relational/smaller.js'));

function ImmutableDenseMatrix(data,datatype){
if(!(this instanceof ImmutableDenseMatrix))
throw new SyntaxError('Constructor must be called with the new operator');
if(datatype && !isString(datatype))
throw new Error('Invalid datatype: ' + datatype);

if(data && data.isMatrix === true || isArray(data)){

var matrix=new DenseMatrix(data,datatype);

this._data = matrix._data;
this._size = matrix._size;
this._datatype = matrix._datatype;
this._min = null;
this._max = null;}else 

if(data && isArray(data.data) && isArray(data.size)){

this._data = data.data;
this._size = data.size;
this._datatype = data.datatype;
this._min = typeof data.min !== 'undefined'?data.min:null;
this._max = typeof data.max !== 'undefined'?data.max:null;}else 

if(data){

throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');}else 

{

this._data = [];
this._size = [0];
this._datatype = datatype;
this._min = null;
this._max = null;}}



ImmutableDenseMatrix.prototype = new DenseMatrix();




ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';
ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;














ImmutableDenseMatrix.prototype.subset = function(index){
switch(arguments.length){
case 1:

var m=DenseMatrix.prototype.subset.call(this,index);

if(m.isMatrix){

return new ImmutableDenseMatrix({
data:m._data,
size:m._size,
datatype:m._datatype});}


return m;


case 2:
case 3:
throw new Error('Cannot invoke set subset on an Immutable Matrix instance');

default:
throw new SyntaxError('Wrong number of arguments');}};












ImmutableDenseMatrix.prototype.set = function(){
throw new Error('Cannot invoke set on an Immutable Matrix instance');};














ImmutableDenseMatrix.prototype.resize = function(){
throw new Error('Cannot invoke resize on an Immutable Matrix instance');};






ImmutableDenseMatrix.prototype.clone = function(){
var m=new ImmutableDenseMatrix({
data:object.clone(this._data),
size:object.clone(this._size),
datatype:this._datatype});

return m;};






ImmutableDenseMatrix.prototype.toJSON = function(){
return {
mathjs:'ImmutableDenseMatrix',
data:this._data,
size:this._size,
datatype:this._datatype};};










ImmutableDenseMatrix.fromJSON = function(json){
return new ImmutableDenseMatrix(json);};










ImmutableDenseMatrix.prototype.swapRows = function(){
throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');};






ImmutableDenseMatrix.prototype.min = function(){

if(this._min === null){

var m=null;

this.forEach(function(v){
if(m === null || smaller(v,m))
m = v;});

this._min = m !== null?m:undefined;}

return this._min;};






ImmutableDenseMatrix.prototype.max = function(){

if(this._max === null){

var m=null;

this.forEach(function(v){
if(m === null || smaller(m,v))
m = v;});

this._max = m !== null?m:undefined;}

return this._max;};



return ImmutableDenseMatrix;}


exports.name = 'ImmutableDenseMatrix';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/MatrixIndex.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type){



















function Index(ranges){
if(!(this instanceof Index)){
throw new SyntaxError('Constructor must be called with the new operator');}


this._dimensions = [];
this._isScalar = true;

for(var i=0,ii=arguments.length;i < ii;i++) {
var arg=arguments[i];

if(arg && arg.isRange === true){
this._dimensions.push(arg);
this._isScalar = false;}else 

if(arg && (Array.isArray(arg) || arg.isMatrix === true)){

var m=_createImmutableMatrix(arg.valueOf());
this._dimensions.push(m);

var size=m.size();

this._isScalar = size.length === 1 && size[0] === 1;}else 

if(typeof arg === 'number'){
this._dimensions.push(_createImmutableMatrix([arg]));}else 


{
throw new TypeError('Dimension must be an Array, Matrix, Number or Range');}}}







Index.prototype.type = 'Index';
Index.prototype.isIndex = true;

function _createImmutableMatrix(arg){

for(var i=0,l=arg.length;i < l;i++) {
if(typeof arg[i] !== 'number' || !isInteger(arg[i])){
throw new TypeError('Index parameters must be positive integer numbers');}}



return new type.ImmutableDenseMatrix(arg);}






Index.prototype.clone = function(){
var index=new Index();
index._dimensions = clone(this._dimensions);
index._isScalar = this._isScalar;
return index;};








Index.create = function(ranges){
var index=new Index();
Index.apply(index,ranges);
return index;};






Index.prototype.size = function(){
var size=[];

for(var i=0,ii=this._dimensions.length;i < ii;i++) {
var d=this._dimensions[i];
size[i] = d.size()[0];}


return size;};






Index.prototype.max = function(){
var values=[];

for(var i=0,ii=this._dimensions.length;i < ii;i++) {
var range=this._dimensions[i];
values[i] = range.max();}


return values;};






Index.prototype.min = function(){
var values=[];

for(var i=0,ii=this._dimensions.length;i < ii;i++) {
var range=this._dimensions[i];
values[i] = range.min();}


return values;};








Index.prototype.forEach = function(callback){
for(var i=0,ii=this._dimensions.length;i < ii;i++) {
callback(this._dimensions[i],i,this);}};








Index.prototype.dimension = function(dim){
return this._dimensions[dim] || null;};









Index.prototype.isScalar = function(){
return this._isScalar;};







Index.prototype.toArray = function(){
var array=[];
for(var i=0,ii=this._dimensions.length;i < ii;i++) {
array.push(this._dimensions[i].toArray());}

return array;};







Index.prototype.valueOf = Index.prototype.toArray;





Index.prototype.toString = function(){
var strings=[];

for(var i=0,ii=this._dimensions.length;i < ii;i++) {
strings.push(this._dimensions[i].toString());}


return '[' + strings.join(', ') + ']';};







Index.prototype.toJSON = function(){
return {
mathjs:'Index',
dimensions:this._dimensions};};









Index.fromJSON = function(json){
return Index.create(json.dimensions);};


return Index;}


exports.name = 'Index';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/Range.js',["mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){




























function Range(start,end,step){
if(!(this instanceof Range)){
throw new SyntaxError('Constructor must be called with the new operator');}


if(start != null){
if(start.isBigNumber === true)
start = start.toNumber();else 
if(typeof start !== 'number')
throw new TypeError('Parameter start must be a number');}

if(end != null){
if(end.isBigNumber === true)
end = end.toNumber();else 
if(typeof end !== 'number')
throw new TypeError('Parameter end must be a number');}

if(step != null){
if(step.isBigNumber === true)
step = step.toNumber();else 
if(typeof step !== 'number')
throw new TypeError('Parameter step must be a number');}


this.start = start != null?parseFloat(start):0;
this.end = end != null?parseFloat(end):0;
this.step = step != null?parseFloat(step):1;}





Range.prototype.type = 'Range';
Range.prototype.isRange = true;









Range.parse = function(str){
if(typeof str !== 'string'){
return null;}


var args=str.split(':');
var nums=args.map(function(arg){
return parseFloat(arg);});


var invalid=nums.some(function(num){
return isNaN(num);});

if(invalid){
return null;}


switch(nums.length){
case 2:
return new Range(nums[0],nums[1]);
case 3:
return new Range(nums[0],nums[2],nums[1]);
default:
return null;}};







Range.prototype.clone = function(){
return new Range(this.start,this.end,this.step);};







Range.prototype.size = function(){
var len=0,
start=this.start,
step=this.step,
end=this.end,
diff=end - start;

if(number.sign(step) == number.sign(diff)){
len = Math.ceil(diff / step);}else 

if(diff == 0){
len = 0;}


if(isNaN(len)){
len = 0;}

return [len];};






Range.prototype.min = function(){
var size=this.size()[0];

if(size > 0){
if(this.step > 0){

return this.start;}else 

{

return this.start + (size - 1) * this.step;}}else 


{
return undefined;}};







Range.prototype.max = function(){
var size=this.size()[0];

if(size > 0){
if(this.step > 0){

return this.start + (size - 1) * this.step;}else 

{

return this.start;}}else 


{
return undefined;}};










Range.prototype.forEach = function(callback){
var x=this.start;
var step=this.step;
var end=this.end;
var i=0;

if(step > 0){
while(x < end) {
callback(x,[i],this);
x += step;
i++;}}else 


if(step < 0){
while(x > end) {
callback(x,[i],this);
x += step;
i++;}}};












Range.prototype.map = function(callback){
var array=[];
this.forEach(function(value,index,obj){
array[index[0]] = callback(value,index,obj);});

return array;};






Range.prototype.toArray = function(){
var array=[];
this.forEach(function(value,index){
array[index[0]] = value;});

return array;};






Range.prototype.valueOf = function(){

return this.toArray();};











Range.prototype.format = function(options){
var str=number.format(this.start,options);

if(this.step != 1){
str += ':' + number.format(this.step,options);}

str += ':' + number.format(this.end,options);
return str;};






Range.prototype.toString = function(){
return this.format();};







Range.prototype.toJSON = function(){
return {
mathjs:'Range',
start:this.start,
end:this.end,
step:this.step};};









Range.fromJSON = function(json){
return new Range(json.start,json.end,json.step);};


return Range;}


exports.name = 'Range';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/function/index.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){


































return typed('index',{
'...number | BigNumber | Range | Array | Matrix':function(args){
var ranges=args.map(function(arg){
if(arg && arg.isBigNumber === true){
return arg.toNumber();}else 

if(arg && (Array.isArray(arg) || arg.isMatrix === true)){
return arg.map(function(elem){

return elem && elem.isBigNumber === true?elem.toNumber():elem;});}else 


{
return arg;}});



var res=new type.Index();
type.Index.apply(res,ranges);
return res;}});}




exports.name = 'index';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/function/sparse.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var SparseMatrix=type.SparseMatrix;




























var sparse=typed('sparse',{
'':function(){
return new SparseMatrix([]);},


'string':function(datatype){
return new SparseMatrix([],datatype);},


'Array | Matrix':function(data){
return new SparseMatrix(data);},


'Array | Matrix, string':function(data,datatype){
return new SparseMatrix(data,datatype);}});



sparse.toTex = {
0:'\\begin{bsparse}\\end{bsparse}',
1:'\\left(${args[0]}\\right)'};


return sparse;}


exports.name = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/type/number.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){

























var number=typed('number',{
'':function(){
return 0;},


'number':function(x){
return x;},


'string':function(x){
var num=Number(x);
if(isNaN(num)){
throw new SyntaxError('String "' + x + '" is no valid number');}

return num;},


'BigNumber':function(x){
return x.toNumber();},


'Unit':function(x){
throw new Error('Second argument with valueless unit expected');},


'Unit, string | Unit':function(unit,valuelessUnit){
return unit.toNumber(valuelessUnit);},


'Array | Matrix':function(x){
return deepMap(x,number);}});



number.toTex = {
0:'0',
1:'\\left(${args[0]}\\right)',
2:'\\left(\\left(${args[0]}\\right)${args[1]}\\right)'};


return number;}


exports.name = 'number';
exports.factory = factory;
});
__d('mathjs/lib/type/resultset/index.js',["mathjs/lib/type/resultset/ResultSet.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/resultset/ResultSet.js')];
});
__d('mathjs/lib/type/resultset/ResultSet.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){





function ResultSet(entries){
if(!(this instanceof ResultSet)){
throw new SyntaxError('Constructor must be called with the new operator');}


this.entries = entries || [];}





ResultSet.prototype.type = 'ResultSet';
ResultSet.prototype.isResultSet = true;





ResultSet.prototype.valueOf = function(){
return this.entries;};






ResultSet.prototype.toString = function(){
return '[' + this.entries.join(', ') + ']';};







ResultSet.prototype.toJSON = function(){
return {
mathjs:'ResultSet',
entries:this.entries};};









ResultSet.fromJSON = function(json){
return new ResultSet(json.entries);};


return ResultSet;}


exports.name = 'ResultSet';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/type/string.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){

























var string=typed('string',{
'':function(){
return '';},


'number':number.format,

'null':function(x){
return 'null';},


'boolean':function(x){
return x + '';},


'string':function(x){
return x;},


'Array | Matrix':function(x){
return deepMap(x,string);},


'any':function(x){
return String(x);}});



string.toTex = {
0:'\\mathtt{""}',
1:'\\mathrm{string}\\left(${args[0]}\\right)'};


return string;}


exports.name = 'string';
exports.factory = factory;
});
__d('mathjs/lib/type/unit/index.js',["mathjs/lib/type/unit/Unit.js","mathjs/lib/type/unit/function/unit.js","mathjs/lib/type/unit/physicalConstants.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/type/unit/Unit.js'),


require('mathjs/lib/type/unit/function/unit.js'),


require('mathjs/lib/type/unit/physicalConstants.js')];
});
__d('mathjs/lib/type/unit/function/unit.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
























var unit=typed('unit',{
'Unit':function(x){
return x.clone();},


'string':function(x){
if(type.Unit.isValuelessUnit(x)){
return new type.Unit(null,x);}


return type.Unit.parse(x);},


'number, string':function(value,unit){
return new type.Unit(value,unit);},


'BigNumber, string':function(value,unit){
return new type.Unit(value.toNumber(),unit);},


'Array | Matrix':function(x){
return deepMap(x,unit);}});



unit.toTex = {
1:'\\left(${args[0]}\\right)',
2:'\\left(\\left(${args[0]}\\right)${args[1]}\\right)'};


return unit;}


exports.name = 'unit';
exports.factory = factory;
});
__d('mathjs/lib/type/unit/physicalConstants.js',["mathjs/lib/utils/object.js"],function(global, require, module, exports) {  var lazy=require('mathjs/lib/utils/object.js').lazy;


function factory(type,config,load,typed,math){


function fixedUnit(str){
var unit=type.Unit.parse(str);
unit.fixPrefix = true;
return unit;}





lazy(math,'speedOfLight',function(){return fixedUnit('299792458 m s^-1');});
lazy(math,'gravitationConstant',function(){return fixedUnit('6.6738480e-11 m^3 kg^-1 s^-2');});
lazy(math,'planckConstant',function(){return fixedUnit('6.626069311e-34 J s');});
lazy(math,'reducedPlanckConstant',function(){return fixedUnit('1.05457172647e-34 J s');});


lazy(math,'magneticConstant',function(){return fixedUnit('1.2566370614e-6 N A^-2');});
lazy(math,'electricConstant',function(){return fixedUnit('8.854187817e-12 F m^-1');});
lazy(math,'vacuumImpedance',function(){return fixedUnit('376.730313461 ohm');});
lazy(math,'coulomb',function(){return fixedUnit('8.9875517873681764e9 N m^2 C^-2');});
lazy(math,'elementaryCharge',function(){return fixedUnit('1.60217656535e-19 C');});
lazy(math,'bohrMagneton',function(){return fixedUnit('9.2740096820e-24 J T^-1');});
lazy(math,'conductanceQuantum',function(){return fixedUnit('7.748091734625e-5 S');});
lazy(math,'inverseConductanceQuantum',function(){return fixedUnit('12906.403721742 ohm');});
lazy(math,'magneticFluxQuantum',function(){return fixedUnit('2.06783375846e-15 Wb');});
lazy(math,'nuclearMagneton',function(){return fixedUnit('5.0507835311e-27 J T^-1');});
lazy(math,'klitzing',function(){return fixedUnit('25812.807443484 ohm');});



lazy(math,'bohrRadius',function(){return fixedUnit('5.291772109217e-11 m');});
lazy(math,'classicalElectronRadius',function(){return fixedUnit('2.817940326727e-15 m');});
lazy(math,'electronMass',function(){return fixedUnit('9.1093829140e-31 kg');});
lazy(math,'fermiCoupling',function(){return fixedUnit('1.1663645e-5 GeV^-2');});
lazy(math,'fineStructure',function(){return 7.297352569824e-3;});
lazy(math,'hartreeEnergy',function(){return fixedUnit('4.3597443419e-18 J');});
lazy(math,'protonMass',function(){return fixedUnit('1.67262177774e-27 kg');});
lazy(math,'deuteronMass',function(){return fixedUnit('3.3435830926e-27 kg');});
lazy(math,'neutronMass',function(){return fixedUnit('1.6749271613e-27 kg');});
lazy(math,'quantumOfCirculation',function(){return fixedUnit('3.636947552024e-4 m^2 s^-1');});
lazy(math,'rydberg',function(){return fixedUnit('10973731.56853955 m^-1');});
lazy(math,'thomsonCrossSection',function(){return fixedUnit('6.65245873413e-29 m^2');});
lazy(math,'weakMixingAngle',function(){return 0.222321;});
lazy(math,'efimovFactor',function(){return 22.7;});


lazy(math,'atomicMass',function(){return fixedUnit('1.66053892173e-27 kg');});
lazy(math,'avogadro',function(){return fixedUnit('6.0221412927e23 mol^-1');});
lazy(math,'boltzmann',function(){return fixedUnit('1.380648813e-23 J K^-1');});
lazy(math,'faraday',function(){return fixedUnit('96485.336521 C mol^-1');});
lazy(math,'firstRadiation',function(){return fixedUnit('3.7417715317e-16 W m^2');});

lazy(math,'loschmidt',function(){return fixedUnit('2.686780524e25 m^-3');});
lazy(math,'gasConstant',function(){return fixedUnit('8.314462175 J K^-1 mol^-1');});
lazy(math,'molarPlanckConstant',function(){return fixedUnit('3.990312717628e-10 J s mol^-1');});
lazy(math,'molarVolume',function(){return fixedUnit('2.241396820e-10 m^3 mol^-1');});
lazy(math,'sackurTetrode',function(){return -1.164870823;});
lazy(math,'secondRadiation',function(){return fixedUnit('1.438777013e-2 m K');});
lazy(math,'stefanBoltzmann',function(){return fixedUnit('5.67037321e-8 W m^-2 K^-4');});
lazy(math,'wienDisplacement',function(){return fixedUnit('2.897772126e-3 m K');});


lazy(math,'molarMass',function(){return fixedUnit('1e-3 kg mol^-1');});
lazy(math,'molarMassC12',function(){return fixedUnit('1.2e-2 kg mol^-1');});
lazy(math,'gravity',function(){return fixedUnit('9.80665 m s^-2');});



lazy(math,'planckLength',function(){return fixedUnit('1.61619997e-35 m');});
lazy(math,'planckMass',function(){return fixedUnit('2.1765113e-8 kg');});
lazy(math,'planckTime',function(){return fixedUnit('5.3910632e-44 s');});
lazy(math,'planckCharge',function(){return fixedUnit('1.87554595641e-18 C');});
lazy(math,'planckTemperature',function(){return fixedUnit('1.41683385e+32 K');});}



exports.factory = factory;
exports.lazy = false;
exports.math = true;
});
__d('mathjs/lib/constants.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/array.js","mathjs/lib/version.js"],function(global, require, module, exports) {  'use strict';

var object=require('mathjs/lib/utils/object.js');
var bigConstants=require('mathjs/lib/utils/bignumber/constants.js');

function factory(type,config,load,typed,math){


math.on('config',function(curr,prev){
if(curr.number !== prev.number){
factory(type,config,load,typed,math);}});



math['true'] = true;
math['false'] = false;
math['null'] = null;
math['uninitialized'] = require('mathjs/lib/utils/array.js').UNINITIALIZED;

if(config.number === 'bignumber'){
math['Infinity'] = new type.BigNumber(Infinity);
math['NaN'] = new type.BigNumber(NaN);

object.lazy(math,'pi',function(){return bigConstants.pi(type.BigNumber);});
object.lazy(math,'tau',function(){return bigConstants.tau(type.BigNumber);});
object.lazy(math,'e',function(){return bigConstants.e(type.BigNumber);});
object.lazy(math,'phi',function(){return bigConstants.phi(type.BigNumber);});


object.lazy(math,'E',function(){return math.e;});
object.lazy(math,'LN2',function(){return new type.BigNumber(2).ln();});
object.lazy(math,'LN10',function(){return new type.BigNumber(10).ln();});
object.lazy(math,'LOG2E',function(){return new type.BigNumber(1).div(new type.BigNumber(2).ln());});
object.lazy(math,'LOG10E',function(){return new type.BigNumber(1).div(new type.BigNumber(10).ln());});
object.lazy(math,'PI',function(){return math.pi;});
object.lazy(math,'SQRT1_2',function(){return new type.BigNumber('0.5').sqrt();});
object.lazy(math,'SQRT2',function(){return new type.BigNumber(2).sqrt();});}else 

{
math['Infinity'] = Infinity;
math['NaN'] = NaN;

math.pi = Math.PI;
math.tau = Math.PI * 2;
math.e = Math.E;
math.phi = 1.61803398874989484820458683436563811772030917980576286213545;


math.E = math.e;
math.LN2 = Math.LN2;
math.LN10 = Math.LN10;
math.LOG2E = Math.LOG2E;
math.LOG10E = Math.LOG10E;
math.PI = math.pi;
math.SQRT1_2 = Math.SQRT1_2;
math.SQRT2 = Math.SQRT2;}



math.i = new type.Complex(0,1);


math.version = require('mathjs/lib/version.js');}


exports.factory = factory;
exports.lazy = false;
exports.math = true;
});
__d('mathjs/lib/utils/bignumber/constants.js',["mathjs/lib/utils/function.js","mathjs/lib/utils/bignumber/atan.js"],function(global, require, module, exports) {  var memoize=require('mathjs/lib/utils/function.js').memoize;
var atan=require('mathjs/lib/utils/bignumber/atan.js');






exports.e = memoize(function(BigNumber){
return new BigNumber(1).exp();},
hasher);






exports.phi = memoize(function(BigNumber){
return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);},
hasher);









exports.pi = memoize(function(BigNumber){

var Big=BigNumber.constructor({precision:BigNumber.precision + 4});
var pi4th=new Big(4).times(atan(new Big(1).div(5))).
minus(atan(new Big(1).div(239)));


return new BigNumber(4).times(pi4th);},
hasher);






exports.tau = memoize(function(BigNumber){



var pi=exports.pi(BigNumber.constructor({precision:BigNumber.precision + 2}));

return new BigNumber(2).times(pi);},
hasher);









function hasher(args){
return args[0].precision;}
});
__d('mathjs/lib/utils/bignumber/atan.js',[],function(global, require, module, exports) {  module.








exports = function atan(x){
var y=x;
var yPrev=NaN;
var x2=x.times(x);
var num=x;
var add=true;

for(var k=3;!y.equals(yPrev);k += 2) {
num = num.times(x2);

yPrev = y;
add = !add;
y = add?y.plus(num.div(k)):y.minus(num.div(k));}


return y;};
});
__d('mathjs/lib/version.js',[],function(global, require, module, exports) {  module.exports = '2.4.2';
});
__d('mathjs/lib/expression/index.js',["mathjs/lib/expression/docs/index.js","mathjs/lib/expression/function/index.js","mathjs/lib/expression/node/index.js","mathjs/lib/expression/transform/index.js","mathjs/lib/expression/Help.js","mathjs/lib/expression/parse.js","mathjs/lib/expression/Parser.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/expression/docs/index.js'),
require('mathjs/lib/expression/function/index.js'),
require('mathjs/lib/expression/node/index.js'),
require('mathjs/lib/expression/transform/index.js'),

require('mathjs/lib/expression/Help.js'),
require('mathjs/lib/expression/parse.js'),
require('mathjs/lib/expression/Parser.js')];
});
__d('mathjs/lib/expression/docs/index.js',["mathjs/lib/expression/docs/type/bignumber.js","mathjs/lib/expression/docs/type/boolean.js","mathjs/lib/expression/docs/type/complex.js","mathjs/lib/expression/docs/type/fraction.js","mathjs/lib/expression/docs/type/index.js","mathjs/lib/expression/docs/type/matrix.js","mathjs/lib/expression/docs/type/number.js","mathjs/lib/expression/docs/type/sparse.js","mathjs/lib/expression/docs/type/string.js","mathjs/lib/expression/docs/type/unit.js","mathjs/lib/expression/docs/constants/e.js","mathjs/lib/expression/docs/constants/e.js","mathjs/lib/expression/docs/constants/false.js","mathjs/lib/expression/docs/constants/i.js","mathjs/lib/expression/docs/constants/Infinity.js","mathjs/lib/expression/docs/constants/LN2.js","mathjs/lib/expression/docs/constants/LN10.js","mathjs/lib/expression/docs/constants/LOG2E.js","mathjs/lib/expression/docs/constants/LOG10E.js","mathjs/lib/expression/docs/constants/NaN.js","mathjs/lib/expression/docs/constants/null.js","mathjs/lib/expression/docs/constants/pi.js","mathjs/lib/expression/docs/constants/pi.js","mathjs/lib/expression/docs/constants/phi.js","mathjs/lib/expression/docs/constants/SQRT1_2.js","mathjs/lib/expression/docs/constants/SQRT2.js","mathjs/lib/expression/docs/constants/tau.js","mathjs/lib/expression/docs/constants/true.js","mathjs/lib/expression/docs/constants/version.js","mathjs/lib/expression/docs/function/algebra/lsolve.js","mathjs/lib/expression/docs/function/algebra/lup.js","mathjs/lib/expression/docs/function/algebra/lusolve.js","mathjs/lib/expression/docs/function/algebra/slu.js","mathjs/lib/expression/docs/function/algebra/usolve.js","mathjs/lib/expression/docs/function/arithmetic/abs.js","mathjs/lib/expression/docs/function/arithmetic/add.js","mathjs/lib/expression/docs/function/arithmetic/cbrt.js","mathjs/lib/expression/docs/function/arithmetic/ceil.js","mathjs/lib/expression/docs/function/arithmetic/cube.js","mathjs/lib/expression/docs/function/arithmetic/divide.js","mathjs/lib/expression/docs/function/arithmetic/dotDivide.js","mathjs/lib/expression/docs/function/arithmetic/dotMultiply.js","mathjs/lib/expression/docs/function/arithmetic/dotPow.js","mathjs/lib/expression/docs/function/arithmetic/exp.js","mathjs/lib/expression/docs/function/arithmetic/fix.js","mathjs/lib/expression/docs/function/arithmetic/floor.js","mathjs/lib/expression/docs/function/arithmetic/gcd.js","mathjs/lib/expression/docs/function/arithmetic/hypot.js","mathjs/lib/expression/docs/function/arithmetic/lcm.js","mathjs/lib/expression/docs/function/arithmetic/log.js","mathjs/lib/expression/docs/function/arithmetic/log10.js","mathjs/lib/expression/docs/function/arithmetic/mod.js","mathjs/lib/expression/docs/function/arithmetic/multiply.js","mathjs/lib/expression/docs/function/arithmetic/norm.js","mathjs/lib/expression/docs/function/arithmetic/nthRoot.js","mathjs/lib/expression/docs/function/arithmetic/pow.js","mathjs/lib/expression/docs/function/arithmetic/round.js","mathjs/lib/expression/docs/function/arithmetic/sign.js","mathjs/lib/expression/docs/function/arithmetic/sqrt.js","mathjs/lib/expression/docs/function/arithmetic/square.js","mathjs/lib/expression/docs/function/arithmetic/subtract.js","mathjs/lib/expression/docs/function/arithmetic/unaryMinus.js","mathjs/lib/expression/docs/function/arithmetic/unaryPlus.js","mathjs/lib/expression/docs/function/arithmetic/xgcd.js","mathjs/lib/expression/docs/function/bitwise/bitAnd.js","mathjs/lib/expression/docs/function/bitwise/bitNot.js","mathjs/lib/expression/docs/function/bitwise/bitOr.js","mathjs/lib/expression/docs/function/bitwise/bitXor.js","mathjs/lib/expression/docs/function/bitwise/leftShift.js","mathjs/lib/expression/docs/function/bitwise/rightArithShift.js","mathjs/lib/expression/docs/function/bitwise/rightLogShift.js","mathjs/lib/expression/docs/function/combinatorics/bellNumbers.js","mathjs/lib/expression/docs/function/combinatorics/catalan.js","mathjs/lib/expression/docs/function/combinatorics/composition.js","mathjs/lib/expression/docs/function/combinatorics/stirlingS2.js","mathjs/lib/expression/docs/function/complex/arg.js","mathjs/lib/expression/docs/function/complex/conj.js","mathjs/lib/expression/docs/function/complex/re.js","mathjs/lib/expression/docs/function/complex/im.js","mathjs/lib/expression/docs/function/expression/eval.js","mathjs/lib/expression/docs/function/expression/help.js","mathjs/lib/expression/docs/function/geometry/distance.js","mathjs/lib/expression/docs/function/geometry/intersect.js","mathjs/lib/expression/docs/function/logical/and.js","mathjs/lib/expression/docs/function/logical/not.js","mathjs/lib/expression/docs/function/logical/or.js","mathjs/lib/expression/docs/function/logical/xor.js","mathjs/lib/expression/docs/function/matrix/concat.js","mathjs/lib/expression/docs/function/matrix/cross.js","mathjs/lib/expression/docs/function/matrix/det.js","mathjs/lib/expression/docs/function/matrix/diag.js","mathjs/lib/expression/docs/function/matrix/dot.js","mathjs/lib/expression/docs/function/matrix/eye.js","mathjs/lib/expression/docs/function/matrix/flatten.js","mathjs/lib/expression/docs/function/matrix/inv.js","mathjs/lib/expression/docs/function/matrix/ones.js","mathjs/lib/expression/docs/function/matrix/range.js","mathjs/lib/expression/docs/function/matrix/resize.js","mathjs/lib/expression/docs/function/matrix/size.js","mathjs/lib/expression/docs/function/matrix/squeeze.js","mathjs/lib/expression/docs/function/matrix/subset.js","mathjs/lib/expression/docs/function/matrix/trace.js","mathjs/lib/expression/docs/function/matrix/transpose.js","mathjs/lib/expression/docs/function/matrix/zeros.js","mathjs/lib/expression/docs/function/probability/combinations.js","mathjs/lib/expression/docs/function/probability/factorial.js","mathjs/lib/expression/docs/function/probability/gamma.js","mathjs/lib/expression/docs/function/probability/kldivergence.js","mathjs/lib/expression/docs/function/probability/multinomial.js","mathjs/lib/expression/docs/function/probability/permutations.js","mathjs/lib/expression/docs/function/probability/pickRandom.js","mathjs/lib/expression/docs/function/probability/random.js","mathjs/lib/expression/docs/function/probability/randomInt.js","mathjs/lib/expression/docs/function/relational/compare.js","mathjs/lib/expression/docs/function/relational/deepEqual.js","mathjs/lib/expression/docs/function/relational/equal.js","mathjs/lib/expression/docs/function/relational/larger.js","mathjs/lib/expression/docs/function/relational/largerEq.js","mathjs/lib/expression/docs/function/relational/smaller.js","mathjs/lib/expression/docs/function/relational/smallerEq.js","mathjs/lib/expression/docs/function/relational/unequal.js","mathjs/lib/expression/docs/function/statistics/max.js","mathjs/lib/expression/docs/function/statistics/mean.js","mathjs/lib/expression/docs/function/statistics/median.js","mathjs/lib/expression/docs/function/statistics/min.js","mathjs/lib/expression/docs/function/statistics/mode.js","mathjs/lib/expression/docs/function/statistics/prod.js","mathjs/lib/expression/docs/function/statistics/quantileSeq.js","mathjs/lib/expression/docs/function/statistics/std.js","mathjs/lib/expression/docs/function/statistics/sum.js","mathjs/lib/expression/docs/function/statistics/var.js","mathjs/lib/expression/docs/function/trigonometry/acos.js","mathjs/lib/expression/docs/function/trigonometry/acosh.js","mathjs/lib/expression/docs/function/trigonometry/acot.js","mathjs/lib/expression/docs/function/trigonometry/acoth.js","mathjs/lib/expression/docs/function/trigonometry/acsc.js","mathjs/lib/expression/docs/function/trigonometry/acsch.js","mathjs/lib/expression/docs/function/trigonometry/asec.js","mathjs/lib/expression/docs/function/trigonometry/asech.js","mathjs/lib/expression/docs/function/trigonometry/asin.js","mathjs/lib/expression/docs/function/trigonometry/asinh.js","mathjs/lib/expression/docs/function/trigonometry/atan.js","mathjs/lib/expression/docs/function/trigonometry/atanh.js","mathjs/lib/expression/docs/function/trigonometry/atan2.js","mathjs/lib/expression/docs/function/trigonometry/cos.js","mathjs/lib/expression/docs/function/trigonometry/cosh.js","mathjs/lib/expression/docs/function/trigonometry/cot.js","mathjs/lib/expression/docs/function/trigonometry/coth.js","mathjs/lib/expression/docs/function/trigonometry/csc.js","mathjs/lib/expression/docs/function/trigonometry/csch.js","mathjs/lib/expression/docs/function/trigonometry/sec.js","mathjs/lib/expression/docs/function/trigonometry/sech.js","mathjs/lib/expression/docs/function/trigonometry/sin.js","mathjs/lib/expression/docs/function/trigonometry/sinh.js","mathjs/lib/expression/docs/function/trigonometry/tan.js","mathjs/lib/expression/docs/function/trigonometry/tanh.js","mathjs/lib/expression/docs/function/units/to.js","mathjs/lib/expression/docs/function/utils/clone.js","mathjs/lib/expression/docs/function/utils/map.js","mathjs/lib/expression/docs/function/utils/partitionSelect.js","mathjs/lib/expression/docs/function/utils/filter.js","mathjs/lib/expression/docs/function/utils/forEach.js","mathjs/lib/expression/docs/function/utils/format.js","mathjs/lib/expression/docs/function/utils/isInteger.js","mathjs/lib/expression/docs/function/utils/isNegative.js","mathjs/lib/expression/docs/function/utils/isNumeric.js","mathjs/lib/expression/docs/function/utils/isPositive.js","mathjs/lib/expression/docs/function/utils/isZero.js","mathjs/lib/expression/docs/function/utils/import.js","mathjs/lib/expression/docs/function/utils/sort.js","mathjs/lib/expression/docs/function/utils/typeof.js"],function(global, require, module, exports) {  function factory(type,config,load,typed){
var docs={};



docs.bignumber = require('mathjs/lib/expression/docs/type/bignumber.js');
docs['boolean'] = require('mathjs/lib/expression/docs/type/boolean.js');
docs.complex = require('mathjs/lib/expression/docs/type/complex.js');
docs.fraction = require('mathjs/lib/expression/docs/type/fraction.js');
docs.index = require('mathjs/lib/expression/docs/type/index.js');
docs.matrix = require('mathjs/lib/expression/docs/type/matrix.js');
docs.number = require('mathjs/lib/expression/docs/type/number.js');
docs.sparse = require('mathjs/lib/expression/docs/type/sparse.js');
docs.string = require('mathjs/lib/expression/docs/type/string.js');
docs.unit = require('mathjs/lib/expression/docs/type/unit.js');


docs.e = require('mathjs/lib/expression/docs/constants/e.js');
docs.E = require('mathjs/lib/expression/docs/constants/e.js');
docs['false'] = require('mathjs/lib/expression/docs/constants/false.js');
docs.i = require('mathjs/lib/expression/docs/constants/i.js');
docs['Infinity'] = require('mathjs/lib/expression/docs/constants/Infinity.js');
docs.LN2 = require('mathjs/lib/expression/docs/constants/LN2.js');
docs.LN10 = require('mathjs/lib/expression/docs/constants/LN10.js');
docs.LOG2E = require('mathjs/lib/expression/docs/constants/LOG2E.js');
docs.LOG10E = require('mathjs/lib/expression/docs/constants/LOG10E.js');
docs.NaN = require('mathjs/lib/expression/docs/constants/NaN.js');
docs['null'] = require('mathjs/lib/expression/docs/constants/null.js');
docs.pi = require('mathjs/lib/expression/docs/constants/pi.js');
docs.PI = require('mathjs/lib/expression/docs/constants/pi.js');
docs.phi = require('mathjs/lib/expression/docs/constants/phi.js');
docs.SQRT1_2 = require('mathjs/lib/expression/docs/constants/SQRT1_2.js');
docs.SQRT2 = require('mathjs/lib/expression/docs/constants/SQRT2.js');
docs.tau = require('mathjs/lib/expression/docs/constants/tau.js');
docs['true'] = require('mathjs/lib/expression/docs/constants/true.js');
docs.version = require('mathjs/lib/expression/docs/constants/version.js');



docs.speedOfLight = {description:'Speed of light in vacuum',examples:['speedOfLight']};
docs.gravitationConstant = {description:'Newtonian constant of gravitation',examples:['gravitationConstant']};
docs.planckConstant = {description:'Planck constant',examples:['planckConstant']};
docs.reducedPlanckConstant = {description:'Reduced Planck constant',examples:['reducedPlanckConstant']};

docs.magneticConstant = {description:'Magnetic constant (vacuum permeability)',examples:['magneticConstant']};
docs.electricConstant = {description:'Electric constant (vacuum permeability)',examples:['electricConstant']};
docs.vacuumImpedance = {description:'Characteristic impedance of vacuum',examples:['vacuumImpedance']};
docs.coulomb = {description:'Coulomb\'s constant',examples:['coulomb']};
docs.elementaryCharge = {description:'Elementary charge',examples:['elementaryCharge']};
docs.bohrMagneton = {description:'Borh magneton',examples:['bohrMagneton']};
docs.conductanceQuantum = {description:'Conductance quantum',examples:['conductanceQuantum']};
docs.inverseConductanceQuantum = {description:'Inverse conductance quantum',examples:['inverseConductanceQuantum']};

docs.magneticFluxQuantum = {description:'Magnetic flux quantum',examples:['magneticFluxQuantum']};
docs.nuclearMagneton = {description:'Nuclear magneton',examples:['nuclearMagneton']};
docs.klitzing = {description:'Von Klitzing constant',examples:['klitzing']};

docs.bohrRadius = {description:'Borh radius',examples:['bohrRadius']};
docs.classicalElectronRadius = {description:'Classical electron radius',examples:['classicalElectronRadius']};
docs.electronMass = {description:'Electron mass',examples:['electronMass']};
docs.fermiCoupling = {description:'Fermi coupling constant',examples:['fermiCoupling']};
docs.fineStructure = {description:'Fine-structure constant',examples:['fineStructure']};
docs.hartreeEnergy = {description:'Hartree energy',examples:['hartreeEnergy']};
docs.protonMass = {description:'Proton mass',examples:['protonMass']};
docs.deuteronMass = {description:'Deuteron Mass',examples:['deuteronMass']};
docs.neutronMass = {description:'Neutron mass',examples:['neutronMass']};
docs.quantumOfCirculation = {description:'Quantum of circulation',examples:['quantumOfCirculation']};
docs.rydberg = {description:'Rydberg constant',examples:['rydberg']};
docs.thomsonCrossSection = {description:'Thomson cross section',examples:['thomsonCrossSection']};
docs.weakMixingAngle = {description:'Weak mixing angle',examples:['weakMixingAngle']};
docs.efimovFactor = {description:'Efimov factor',examples:['efimovFactor']};

docs.atomicMass = {description:'Atomic mass constant',examples:['atomicMass']};
docs.avogadro = {description:'Avogadro\'s number',examples:['avogadro']};
docs.boltzmann = {description:'Boltzmann constant',examples:['boltzmann']};
docs.faraday = {description:'Faraday constant',examples:['faraday']};
docs.firstRadiation = {description:'First radiation constant',examples:['firstRadiation']};
docs.loschmidt = {description:'Loschmidt constant at T=273.15 K and p=101.325 kPa',examples:['loschmidt']};
docs.gasConstant = {description:'Gas constant',examples:['gasConstant']};
docs.molarPlanckConstant = {description:'Molar Planck constant',examples:['molarPlanckConstant']};
docs.molarVolume = {description:'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',examples:['molarVolume']};
docs.sackurTetrode = {description:'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',examples:['sackurTetrode']};
docs.secondRadiation = {description:'Second radiation constant',examples:['secondRadiation']};
docs.stefanBoltzmann = {description:'Stefan-Boltzmann constant',examples:['stefanBoltzmann']};
docs.wienDisplacement = {description:'Wien displacement law constant',examples:['wienDisplacement']};


docs.molarMass = {description:'Molar mass constant',examples:['molarMass']};
docs.molarMassC12 = {description:'Molar mass constant of carbon-12',examples:['molarMassC12']};
docs.gravity = {description:'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',examples:['gravity']};

docs.planckLength = {description:'Planck length',examples:['planckLength']};
docs.planckMass = {description:'Planck mass',examples:['planckMass']};
docs.planckTime = {description:'Planck time',examples:['planckTime']};
docs.planckCharge = {description:'Planck charge',examples:['planckCharge']};
docs.planckTemperature = {description:'Planck temperature',examples:['planckTemperature']};


docs.lsolve = require('mathjs/lib/expression/docs/function/algebra/lsolve.js');
docs.lup = require('mathjs/lib/expression/docs/function/algebra/lup.js');
docs.lusolve = require('mathjs/lib/expression/docs/function/algebra/lusolve.js');
docs.slu = require('mathjs/lib/expression/docs/function/algebra/slu.js');
docs.usolve = require('mathjs/lib/expression/docs/function/algebra/usolve.js');


docs.abs = require('mathjs/lib/expression/docs/function/arithmetic/abs.js');
docs.add = require('mathjs/lib/expression/docs/function/arithmetic/add.js');
docs.cbrt = require('mathjs/lib/expression/docs/function/arithmetic/cbrt.js');
docs.ceil = require('mathjs/lib/expression/docs/function/arithmetic/ceil.js');
docs.cube = require('mathjs/lib/expression/docs/function/arithmetic/cube.js');
docs.divide = require('mathjs/lib/expression/docs/function/arithmetic/divide.js');
docs.dotDivide = require('mathjs/lib/expression/docs/function/arithmetic/dotDivide.js');
docs.dotMultiply = require('mathjs/lib/expression/docs/function/arithmetic/dotMultiply.js');
docs.dotPow = require('mathjs/lib/expression/docs/function/arithmetic/dotPow.js');
docs.exp = require('mathjs/lib/expression/docs/function/arithmetic/exp.js');
docs.fix = require('mathjs/lib/expression/docs/function/arithmetic/fix.js');
docs.floor = require('mathjs/lib/expression/docs/function/arithmetic/floor.js');
docs.gcd = require('mathjs/lib/expression/docs/function/arithmetic/gcd.js');
docs.hypot = require('mathjs/lib/expression/docs/function/arithmetic/hypot.js');
docs.lcm = require('mathjs/lib/expression/docs/function/arithmetic/lcm.js');
docs.log = require('mathjs/lib/expression/docs/function/arithmetic/log.js');
docs.log10 = require('mathjs/lib/expression/docs/function/arithmetic/log10.js');
docs.mod = require('mathjs/lib/expression/docs/function/arithmetic/mod.js');
docs.multiply = require('mathjs/lib/expression/docs/function/arithmetic/multiply.js');
docs.norm = require('mathjs/lib/expression/docs/function/arithmetic/norm.js');
docs.nthRoot = require('mathjs/lib/expression/docs/function/arithmetic/nthRoot.js');
docs.pow = require('mathjs/lib/expression/docs/function/arithmetic/pow.js');
docs.round = require('mathjs/lib/expression/docs/function/arithmetic/round.js');
docs.sign = require('mathjs/lib/expression/docs/function/arithmetic/sign.js');
docs.sqrt = require('mathjs/lib/expression/docs/function/arithmetic/sqrt.js');
docs.square = require('mathjs/lib/expression/docs/function/arithmetic/square.js');
docs.subtract = require('mathjs/lib/expression/docs/function/arithmetic/subtract.js');
docs.unaryMinus = require('mathjs/lib/expression/docs/function/arithmetic/unaryMinus.js');
docs.unaryPlus = require('mathjs/lib/expression/docs/function/arithmetic/unaryPlus.js');
docs.xgcd = require('mathjs/lib/expression/docs/function/arithmetic/xgcd.js');


docs.bitAnd = require('mathjs/lib/expression/docs/function/bitwise/bitAnd.js');
docs.bitNot = require('mathjs/lib/expression/docs/function/bitwise/bitNot.js');
docs.bitOr = require('mathjs/lib/expression/docs/function/bitwise/bitOr.js');
docs.bitXor = require('mathjs/lib/expression/docs/function/bitwise/bitXor.js');
docs.leftShift = require('mathjs/lib/expression/docs/function/bitwise/leftShift.js');
docs.rightArithShift = require('mathjs/lib/expression/docs/function/bitwise/rightArithShift.js');
docs.rightLogShift = require('mathjs/lib/expression/docs/function/bitwise/rightLogShift.js');


docs.bellNumbers = require('mathjs/lib/expression/docs/function/combinatorics/bellNumbers.js');
docs.catalan = require('mathjs/lib/expression/docs/function/combinatorics/catalan.js');
docs.composition = require('mathjs/lib/expression/docs/function/combinatorics/composition.js');
docs.stirlingS2 = require('mathjs/lib/expression/docs/function/combinatorics/stirlingS2.js');


docs.arg = require('mathjs/lib/expression/docs/function/complex/arg.js');
docs.conj = require('mathjs/lib/expression/docs/function/complex/conj.js');
docs.re = require('mathjs/lib/expression/docs/function/complex/re.js');
docs.im = require('mathjs/lib/expression/docs/function/complex/im.js');


docs['eval'] = require('mathjs/lib/expression/docs/function/expression/eval.js');
docs.help = require('mathjs/lib/expression/docs/function/expression/help.js');


docs.distance = require('mathjs/lib/expression/docs/function/geometry/distance.js');
docs.intersect = require('mathjs/lib/expression/docs/function/geometry/intersect.js');


docs['and'] = require('mathjs/lib/expression/docs/function/logical/and.js');
docs['not'] = require('mathjs/lib/expression/docs/function/logical/not.js');
docs['or'] = require('mathjs/lib/expression/docs/function/logical/or.js');
docs['xor'] = require('mathjs/lib/expression/docs/function/logical/xor.js');


docs['concat'] = require('mathjs/lib/expression/docs/function/matrix/concat.js');
docs.cross = require('mathjs/lib/expression/docs/function/matrix/cross.js');
docs.det = require('mathjs/lib/expression/docs/function/matrix/det.js');
docs.diag = require('mathjs/lib/expression/docs/function/matrix/diag.js');
docs.dot = require('mathjs/lib/expression/docs/function/matrix/dot.js');
docs.eye = require('mathjs/lib/expression/docs/function/matrix/eye.js');
docs.flatten = require('mathjs/lib/expression/docs/function/matrix/flatten.js');
docs.inv = require('mathjs/lib/expression/docs/function/matrix/inv.js');
docs.ones = require('mathjs/lib/expression/docs/function/matrix/ones.js');
docs.range = require('mathjs/lib/expression/docs/function/matrix/range.js');
docs.resize = require('mathjs/lib/expression/docs/function/matrix/resize.js');
docs.size = require('mathjs/lib/expression/docs/function/matrix/size.js');
docs.squeeze = require('mathjs/lib/expression/docs/function/matrix/squeeze.js');
docs.subset = require('mathjs/lib/expression/docs/function/matrix/subset.js');
docs.trace = require('mathjs/lib/expression/docs/function/matrix/trace.js');
docs.transpose = require('mathjs/lib/expression/docs/function/matrix/transpose.js');
docs.zeros = require('mathjs/lib/expression/docs/function/matrix/zeros.js');


docs.combinations = require('mathjs/lib/expression/docs/function/probability/combinations.js');

docs.factorial = require('mathjs/lib/expression/docs/function/probability/factorial.js');
docs.gamma = require('mathjs/lib/expression/docs/function/probability/gamma.js');
docs.kldivergence = require('mathjs/lib/expression/docs/function/probability/kldivergence.js');
docs.multinomial = require('mathjs/lib/expression/docs/function/probability/multinomial.js');
docs.permutations = require('mathjs/lib/expression/docs/function/probability/permutations.js');
docs.pickRandom = require('mathjs/lib/expression/docs/function/probability/pickRandom.js');
docs.random = require('mathjs/lib/expression/docs/function/probability/random.js');
docs.randomInt = require('mathjs/lib/expression/docs/function/probability/randomInt.js');


docs.compare = require('mathjs/lib/expression/docs/function/relational/compare.js');
docs.deepEqual = require('mathjs/lib/expression/docs/function/relational/deepEqual.js');
docs['equal'] = require('mathjs/lib/expression/docs/function/relational/equal.js');
docs.larger = require('mathjs/lib/expression/docs/function/relational/larger.js');
docs.largerEq = require('mathjs/lib/expression/docs/function/relational/largerEq.js');
docs.smaller = require('mathjs/lib/expression/docs/function/relational/smaller.js');
docs.smallerEq = require('mathjs/lib/expression/docs/function/relational/smallerEq.js');
docs.unequal = require('mathjs/lib/expression/docs/function/relational/unequal.js');


docs.max = require('mathjs/lib/expression/docs/function/statistics/max.js');
docs.mean = require('mathjs/lib/expression/docs/function/statistics/mean.js');
docs.median = require('mathjs/lib/expression/docs/function/statistics/median.js');
docs.min = require('mathjs/lib/expression/docs/function/statistics/min.js');
docs.mode = require('mathjs/lib/expression/docs/function/statistics/mode.js');
docs.prod = require('mathjs/lib/expression/docs/function/statistics/prod.js');
docs.quantileSeq = require('mathjs/lib/expression/docs/function/statistics/quantileSeq.js');
docs.std = require('mathjs/lib/expression/docs/function/statistics/std.js');
docs.sum = require('mathjs/lib/expression/docs/function/statistics/sum.js');
docs['var'] = require('mathjs/lib/expression/docs/function/statistics/var.js');


docs.acos = require('mathjs/lib/expression/docs/function/trigonometry/acos.js');
docs.acosh = require('mathjs/lib/expression/docs/function/trigonometry/acosh.js');
docs.acot = require('mathjs/lib/expression/docs/function/trigonometry/acot.js');
docs.acoth = require('mathjs/lib/expression/docs/function/trigonometry/acoth.js');
docs.acsc = require('mathjs/lib/expression/docs/function/trigonometry/acsc.js');
docs.acsch = require('mathjs/lib/expression/docs/function/trigonometry/acsch.js');
docs.asec = require('mathjs/lib/expression/docs/function/trigonometry/asec.js');
docs.asech = require('mathjs/lib/expression/docs/function/trigonometry/asech.js');
docs.asin = require('mathjs/lib/expression/docs/function/trigonometry/asin.js');
docs.asinh = require('mathjs/lib/expression/docs/function/trigonometry/asinh.js');
docs.atan = require('mathjs/lib/expression/docs/function/trigonometry/atan.js');
docs.atanh = require('mathjs/lib/expression/docs/function/trigonometry/atanh.js');
docs.atan2 = require('mathjs/lib/expression/docs/function/trigonometry/atan2.js');
docs.cos = require('mathjs/lib/expression/docs/function/trigonometry/cos.js');
docs.cosh = require('mathjs/lib/expression/docs/function/trigonometry/cosh.js');
docs.cot = require('mathjs/lib/expression/docs/function/trigonometry/cot.js');
docs.coth = require('mathjs/lib/expression/docs/function/trigonometry/coth.js');
docs.csc = require('mathjs/lib/expression/docs/function/trigonometry/csc.js');
docs.csch = require('mathjs/lib/expression/docs/function/trigonometry/csch.js');
docs.sec = require('mathjs/lib/expression/docs/function/trigonometry/sec.js');
docs.sech = require('mathjs/lib/expression/docs/function/trigonometry/sech.js');
docs.sin = require('mathjs/lib/expression/docs/function/trigonometry/sin.js');
docs.sinh = require('mathjs/lib/expression/docs/function/trigonometry/sinh.js');
docs.tan = require('mathjs/lib/expression/docs/function/trigonometry/tan.js');
docs.tanh = require('mathjs/lib/expression/docs/function/trigonometry/tanh.js');


docs.to = require('mathjs/lib/expression/docs/function/units/to.js');


docs.clone = require('mathjs/lib/expression/docs/function/utils/clone.js');
docs.map = require('mathjs/lib/expression/docs/function/utils/map.js');
docs.partitionSelect = require('mathjs/lib/expression/docs/function/utils/partitionSelect.js');
docs.filter = require('mathjs/lib/expression/docs/function/utils/filter.js');
docs.forEach = require('mathjs/lib/expression/docs/function/utils/forEach.js');
docs.format = require('mathjs/lib/expression/docs/function/utils/format.js');
docs.isInteger = require('mathjs/lib/expression/docs/function/utils/isInteger.js');
docs.isNegative = require('mathjs/lib/expression/docs/function/utils/isNegative.js');
docs.isNumeric = require('mathjs/lib/expression/docs/function/utils/isNumeric.js');
docs.isPositive = require('mathjs/lib/expression/docs/function/utils/isPositive.js');
docs.isZero = require('mathjs/lib/expression/docs/function/utils/isZero.js');

docs['import'] = require('mathjs/lib/expression/docs/function/utils/import.js');
docs.sort = require('mathjs/lib/expression/docs/function/utils/sort.js');
docs['typeof'] = require('mathjs/lib/expression/docs/function/utils/typeof.js');

return docs;}


exports.name = 'docs';
exports.path = 'expression';
exports.factory = factory;
});
__d('mathjs/lib/expression/docs/type/bignumber.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bignumber',
'category':'Type',
'syntax':[
'bignumber(x)'],

'description':
'Create a big number from a number or string.',
'examples':[
'0.1 + 0.2',
'bignumber(0.1) + bignumber(0.2)',
'bignumber("7.2")',
'bignumber("7.2e500")',
'bignumber([0.1, 0.2, 0.3])'],

'seealso':[
'boolean','complex','fraction','index','matrix','string','unit']};
});
__d('mathjs/lib/expression/docs/type/boolean.js',[],function(global, require, module, exports) {  module.exports = {
'name':'boolean',
'category':'Type',
'syntax':[
'x',
'boolean(x)'],

'description':
'Convert a string or number into a boolean.',
'examples':[
'boolean(0)',
'boolean(1)',
'boolean(3)',
'boolean("true")',
'boolean("false")',
'boolean([1, 0, 1, 1])'],

'seealso':[
'bignumber','complex','index','matrix','number','string','unit']};
});
__d('mathjs/lib/expression/docs/type/complex.js',[],function(global, require, module, exports) {  module.exports = {
'name':'complex',
'category':'Type',
'syntax':[
'complex()',
'complex(re, im)',
'complex(string)'],

'description':
'Create a complex number.',
'examples':[
'complex()',
'complex(2, 3)',
'complex("7 - 2i")'],

'seealso':[
'bignumber','boolean','index','matrix','number','string','unit']};
});
__d('mathjs/lib/expression/docs/type/fraction.js',[],function(global, require, module, exports) {  module.exports = {
'name':'fraction',
'category':'Type',
'syntax':[
'fraction(num)',
'fraction(num,den)'],

'description':
'Create a fraction from a number or from a numerator and denominator.',
'examples':[
'fraction(0.125)',
'fraction(1, 3) + fraction(2, 5)'],

'seealso':[
'bignumber','boolean','complex','index','matrix','string','unit']};
});
__d('mathjs/lib/expression/docs/type/index.js',[],function(global, require, module, exports) {  module.exports = {
'name':'index',
'category':'Type',
'syntax':[
'[start]',
'[start:end]',
'[start:step:end]',
'[start1, start 2, ...]',
'[start1:end1, start2:end2, ...]',
'[start1:step1:end1, start2:step2:end2, ...]'],

'description':
'Create an index to get or replace a subset of a matrix',
'examples':[
'[]',
'[1, 2, 3]',
'A = [1, 2, 3; 4, 5, 6]',
'A[1, :]',
'A[1, 2] = 50',
'A[0:2, 0:2] = ones(2, 2)'],

'seealso':[
'bignumber','boolean','complex','matrix,','number','range','string','unit']};
});
__d('mathjs/lib/expression/docs/type/matrix.js',[],function(global, require, module, exports) {  module.exports = {
'name':'matrix',
'category':'Type',
'syntax':[
'[]',
'[a1, b1, ...; a2, b2, ...]',
'matrix()',
'matrix("dense")',
'matrix([...])'],

'description':
'Create a matrix.',
'examples':[
'[]',
'[1, 2, 3]',
'[1, 2, 3; 4, 5, 6]',
'matrix()',
'matrix([3, 4])',
'matrix([3, 4; 5, 6], "sparse")',
'matrix([3, 4; 5, 6], "sparse", "number")'],

'seealso':[
'bignumber','boolean','complex','index','number','string','unit','sparse']};
});
__d('mathjs/lib/expression/docs/type/number.js',[],function(global, require, module, exports) {  module.exports = {
'name':'number',
'category':'Type',
'syntax':[
'x',
'number(x)'],

'description':
'Create a number or convert a string or boolean into a number.',
'examples':[
'2',
'2e3',
'4.05',
'number(2)',
'number("7.2")',
'number(true)',
'number([true, false, true, true])',
'number("52cm", "m")'],

'seealso':[
'bignumber','boolean','complex','fraction','index','matrix','string','unit']};
});
__d('mathjs/lib/expression/docs/type/sparse.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sparse',
'category':'Type',
'syntax':[
'sparse()',
'sparse([a1, b1, ...; a1, b2, ...])',
'sparse([a1, b1, ...; a1, b2, ...], "number")'],

'description':
'Create a sparse matrix.',
'examples':[
'sparse()',
'sparse([3, 4; 5, 6])',
'sparse([3, 0; 5, 0], "number")'],

'seealso':[
'bignumber','boolean','complex','index','number','string','unit','matrix']};
});
__d('mathjs/lib/expression/docs/type/string.js',[],function(global, require, module, exports) {  module.exports = {
'name':'string',
'category':'Type',
'syntax':[
'"text"',
'string(x)'],

'description':
'Create a string or convert a value to a string',
'examples':[
'"Hello World!"',
'string(4.2)',
'string(3 + 2i)'],

'seealso':[
'bignumber','boolean','complex','index','matrix','number','unit']};
});
__d('mathjs/lib/expression/docs/type/unit.js',[],function(global, require, module, exports) {  module.exports = {
'name':'unit',
'category':'Type',
'syntax':[
'value unit',
'unit(value, unit)',
'unit(string)'],

'description':
'Create a unit.',
'examples':[
'5.5 mm',
'3 inch',
'unit(7.1, "kilogram")',
'unit("23 deg")'],

'seealso':[
'bignumber','boolean','complex','index','matrix','number','string']};
});
__d('mathjs/lib/expression/docs/constants/e.js',[],function(global, require, module, exports) {  module.exports = {
'name':'e',
'category':'Constants',
'syntax':[
'e'],

'description':'Euler\'s number, the base of the natural logarithm. Approximately equal to 2.71828',
'examples':[
'e',
'e ^ 2',
'exp(2)',
'log(e)'],

'seealso':['exp']};
});
__d('mathjs/lib/expression/docs/constants/false.js',[],function(global, require, module, exports) {  module.exports = {
'name':'false',
'category':'Constants',
'syntax':[
'false'],

'description':'Boolean value false',
'examples':[
'false'],

'seealso':['true']};
});
__d('mathjs/lib/expression/docs/constants/i.js',[],function(global, require, module, exports) {  module.exports = {
'name':'i',
'category':'Constants',
'syntax':[
'i'],

'description':'Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.',
'examples':[
'i',
'i * i',
'sqrt(-1)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/Infinity.js',[],function(global, require, module, exports) {  module.exports = {
'name':'Infinity',
'category':'Constants',
'syntax':[
'Infinity'],

'description':'Infinity, a number which is larger than the maximum number that can be handled by a floating point number.',
'examples':[
'Infinity',
'1 / 0'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/LN2.js',[],function(global, require, module, exports) {  module.exports = {
'name':'LN2',
'category':'Constants',
'syntax':[
'LN2'],

'description':'Returns the natural logarithm of 2, approximately equal to 0.693',
'examples':[
'LN2',
'log(2)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/LN10.js',[],function(global, require, module, exports) {  module.exports = {
'name':'LN10',
'category':'Constants',
'syntax':[
'LN10'],

'description':'Returns the natural logarithm of 10, approximately equal to 2.302',
'examples':[
'LN10',
'log(10)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/LOG2E.js',[],function(global, require, module, exports) {  module.exports = {
'name':'LOG2E',
'category':'Constants',
'syntax':[
'LOG2E'],

'description':'Returns the base-2 logarithm of E, approximately equal to 1.442',
'examples':[
'LOG2E',
'log(e, 2)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/LOG10E.js',[],function(global, require, module, exports) {  module.exports = {
'name':'LOG10E',
'category':'Constants',
'syntax':[
'LOG10E'],

'description':'Returns the base-10 logarithm of E, approximately equal to 0.434',
'examples':[
'LOG10E',
'log(e, 10)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/NaN.js',[],function(global, require, module, exports) {  module.exports = {
'name':'NaN',
'category':'Constants',
'syntax':[
'NaN'],

'description':'Not a number',
'examples':[
'NaN',
'0 / 0'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/null.js',[],function(global, require, module, exports) {  module.exports = {
'name':'null',
'category':'Constants',
'syntax':[
'null'],

'description':'Value null',
'examples':[
'null'],

'seealso':['true','false']};
});
__d('mathjs/lib/expression/docs/constants/pi.js',[],function(global, require, module, exports) {  module.exports = {
'name':'pi',
'category':'Constants',
'syntax':[
'pi'],

'description':'The number pi is a mathematical constant that is the ratio of a circle\'s circumference to its diameter, and is approximately equal to 3.14159',
'examples':[
'pi',
'sin(pi/2)'],

'seealso':['tau']};
});
__d('mathjs/lib/expression/docs/constants/phi.js',[],function(global, require, module, exports) {  module.exports = {
'name':'phi',
'category':'Constants',
'syntax':[
'phi'],

'description':'Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...',
'examples':[
'tau'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/SQRT1_2.js',[],function(global, require, module, exports) {  module.exports = {
'name':'SQRT1_2',
'category':'Constants',
'syntax':[
'SQRT1_2'],

'description':'Returns the square root of 1/2, approximately equal to 0.707',
'examples':[
'SQRT1_2',
'sqrt(1/2)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/SQRT2.js',[],function(global, require, module, exports) {  module.exports = {
'name':'SQRT2',
'category':'Constants',
'syntax':[
'SQRT2'],

'description':'Returns the square root of 2, approximately equal to 1.414',
'examples':[
'SQRT2',
'sqrt(2)'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/constants/tau.js',[],function(global, require, module, exports) {  module.exports = {
'name':'tau',
'category':'Constants',
'syntax':[
'tau'],

'description':'Tau is the ratio constant of a circle\'s circumference to radius, equal to 2 * pi, approximately 6.2832.',
'examples':[
'tau',
'2 * pi'],

'seealso':['pi']};
});
__d('mathjs/lib/expression/docs/constants/true.js',[],function(global, require, module, exports) {  module.exports = {
'name':'true',
'category':'Constants',
'syntax':[
'true'],

'description':'Boolean value true',
'examples':[
'true'],

'seealso':['false']};
});
__d('mathjs/lib/expression/docs/constants/version.js',[],function(global, require, module, exports) {  module.exports = {
'name':'version',
'category':'Constants',
'syntax':[
'version'],

'description':'A string with the version number of math.js',
'examples':[
'version'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/algebra/lsolve.js',[],function(global, require, module, exports) {  module.exports = {
'name':'lsolve',
'category':'Algebra',
'syntax':[
'x=lsolve(L, b)'],

'description':
'Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.',
'examples':[
'a = [-2, 3; 2, 1]',
'b = [11, 9]',
'x = lsolve(a, b)'],

'seealso':[
'lup','lusolve','usolve','matrix','sparse']};
});
__d('mathjs/lib/expression/docs/function/algebra/lup.js',[],function(global, require, module, exports) {  module.exports = {
'name':'lup',
'category':'Algebra',
'syntax':[
'lup(m)'],

'description':
'Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U',
'examples':[
'lup([[2, 1], [1, 4]])',
'lup(matrix([[2, 1], [1, 4]]))',
'lup(sparse([[2, 1], [1, 4]]))'],

'seealso':[
'lusolve','lsolve','usolve','matrix','sparse','slu']};
});
__d('mathjs/lib/expression/docs/function/algebra/lusolve.js',[],function(global, require, module, exports) {  module.exports = {
'name':'lusolve',
'category':'Algebra',
'syntax':[
'x=lusolve(A, b)',
'x=lusolve(lu, b)'],

'description':'Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.',
'examples':[
'a = [-2, 3; 2, 1]',
'b = [11, 9]',
'x = lusolve(a, b)'],

'seealso':[
'lup','slu','lsolve','usolve','matrix','sparse']};
});
__d('mathjs/lib/expression/docs/function/algebra/slu.js',[],function(global, require, module, exports) {  module.exports = {
'name':'slu',
'category':'Algebra',
'syntax':[
'slu(A, order, threshold)'],

'description':'Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U',
'examples':[
'slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)'],

'seealso':[
'lusolve','lsolve','usolve','matrix','sparse','lup']};
});
__d('mathjs/lib/expression/docs/function/algebra/usolve.js',[],function(global, require, module, exports) {  module.exports = {
'name':'usolve',
'category':'Algebra',
'syntax':[
'x=usolve(U, b)'],

'description':
'Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.',
'examples':[
'x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])'],

'seealso':[
'lup','lusolve','lsolve','matrix','sparse']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/abs.js',[],function(global, require, module, exports) {  module.exports = {
'name':'abs',
'category':'Arithmetic',
'syntax':[
'abs(x)'],

'description':'Compute the absolute value.',
'examples':[
'abs(3.5)',
'abs(-4.2)'],

'seealso':['sign']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/add.js',[],function(global, require, module, exports) {  module.exports = {
'name':'add',
'category':'Operators',
'syntax':[
'x + y',
'add(x, y)'],

'description':'Add two values.',
'examples':[
'a = 2.1 + 3.6',
'a - 3.6',
'3 + 2i',
'3 cm + 2 inch',
'"2.3" + "4"'],

'seealso':[
'subtract']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/cbrt.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cbrt',
'category':'Arithmetic',
'syntax':[
'cbrt(x)',
'cbrt(x, allRoots)'],

'description':
'Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned',
'examples':[
'cbrt(64)',
'cube(4)',
'cbrt(-8)',
'cbrt(2 + 3i)',
'cbrt(8i)',
'cbrt(8i, true)',
'cbrt(27 m^3)'],

'seealso':[
'square',
'sqrt',
'cube',
'multiply']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/ceil.js',[],function(global, require, module, exports) {  module.exports = {
'name':'ceil',
'category':'Arithmetic',
'syntax':[
'ceil(x)'],

'description':
'Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.',
'examples':[
'ceil(3.2)',
'ceil(3.8)',
'ceil(-4.2)'],

'seealso':['floor','fix','round']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/cube.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cube',
'category':'Arithmetic',
'syntax':[
'cube(x)'],

'description':'Compute the cube of a value. The cube of x is x * x * x.',
'examples':[
'cube(2)',
'2^3',
'2 * 2 * 2'],

'seealso':[
'multiply',
'square',
'pow']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/divide.js',[],function(global, require, module, exports) {  module.exports = {
'name':'divide',
'category':'Operators',
'syntax':[
'x / y',
'divide(x, y)'],

'description':'Divide two values.',
'examples':[
'a = 2 / 3',
'a * 3',
'4.5 / 2',
'3 + 4 / 2',
'(3 + 4) / 2',
'18 km / 4.5'],

'seealso':[
'multiply']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/dotDivide.js',[],function(global, require, module, exports) {  module.exports = {
'name':'dotDivide',
'category':'Operators',
'syntax':[
'x ./ y',
'dotDivide(x, y)'],

'description':'Divide two values element wise.',
'examples':[
'a = [1, 2, 3; 4, 5, 6]',
'b = [2, 1, 1; 3, 2, 5]',
'a ./ b'],

'seealso':[
'multiply',
'dotMultiply',
'divide']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/dotMultiply.js',[],function(global, require, module, exports) {  module.exports = {
'name':'dotMultiply',
'category':'Operators',
'syntax':[
'x .* y',
'dotMultiply(x, y)'],

'description':'Multiply two values element wise.',
'examples':[
'a = [1, 2, 3; 4, 5, 6]',
'b = [2, 1, 1; 3, 2, 5]',
'a .* b'],

'seealso':[
'multiply',
'divide',
'dotDivide']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/dotPow.js',[],function(global, require, module, exports) {  module.exports = {
'name':'dotpow',
'category':'Operators',
'syntax':[
'x .^ y',
'dotpow(x, y)'],

'description':
'Calculates the power of x to y element wise.',
'examples':[
'a = [1, 2, 3; 4, 5, 6]',
'a .^ 2'],

'seealso':[
'pow']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/exp.js',[],function(global, require, module, exports) {  module.exports = {
'name':'exp',
'category':'Arithmetic',
'syntax':[
'exp(x)'],

'description':'Calculate the exponent of a value.',
'examples':[
'exp(1.3)',
'e ^ 1.3',
'log(exp(1.3))',
'x = 2.4',
'(exp(i*x) == cos(x) + i*sin(x))   # Euler\'s formula'],

'seealso':[
'pow',
'log']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/fix.js',[],function(global, require, module, exports) {  module.exports = {
'name':'fix',
'category':'Arithmetic',
'syntax':[
'fix(x)'],

'description':
'Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.',
'examples':[
'fix(3.2)',
'fix(3.8)',
'fix(-4.2)',
'fix(-4.8)'],

'seealso':['ceil','floor','round']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/floor.js',[],function(global, require, module, exports) {  module.exports = {
'name':'floor',
'category':'Arithmetic',
'syntax':[
'floor(x)'],

'description':
'Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.',
'examples':[
'floor(3.2)',
'floor(3.8)',
'floor(-4.2)'],

'seealso':['ceil','fix','round']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/gcd.js',[],function(global, require, module, exports) {  module.exports = {
'name':'gcd',
'category':'Arithmetic',
'syntax':[
'gcd(a, b)',
'gcd(a, b, c, ...)'],

'description':'Compute the greatest common divisor.',
'examples':[
'gcd(8, 12)',
'gcd(-4, 6)',
'gcd(25, 15, -10)'],

'seealso':['lcm','xgcd']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/hypot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'hypot',
'category':'Arithmetic',
'syntax':[
'hypot(a, b, c, ...)',
'hypot([a, b, c, ...])'],

'description':'Calculate the hypotenusa of a list with values. ',
'examples':[
'hypot(3, 4)',
'sqrt(3^2 + 4^2)',
'hypot(-2)',
'hypot([3, 4, 5])'],

'seealso':['abs','norm']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/lcm.js',[],function(global, require, module, exports) {  module.exports = {
'name':'lcm',
'category':'Arithmetic',
'syntax':[
'lcm(x, y)'],

'description':'Compute the least common multiple.',
'examples':[
'lcm(4, 6)',
'lcm(6, 21)',
'lcm(6, 21, 5)'],

'seealso':['gcd']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/log.js',[],function(global, require, module, exports) {  module.exports = {
'name':'log',
'category':'Arithmetic',
'syntax':[
'log(x)',
'log(x, base)'],

'description':'Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).',
'examples':[
'log(3.5)',
'a = log(2.4)',
'exp(a)',
'10 ^ 4',
'log(10000, 10)',
'log(10000) / log(10)',
'b = log(1024, 2)',
'2 ^ b'],

'seealso':[
'exp',
'log10']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/log10.js',[],function(global, require, module, exports) {  module.exports = {
'name':'log10',
'category':'Arithmetic',
'syntax':[
'log10(x)'],

'description':'Compute the 10-base logarithm of a value.',
'examples':[
'log10(0.00001)',
'log10(10000)',
'10 ^ 4',
'log(10000) / log(10)',
'log(10000, 10)'],

'seealso':[
'exp',
'log']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/mod.js',[],function(global, require, module, exports) {  module.exports = {
'name':'mod',
'category':'Operators',
'syntax':[
'x % y',
'x mod y',
'mod(x, y)'],

'description':
'Calculates the modulus, the remainder of an integer division.',
'examples':[
'7 % 3',
'11 % 2',
'10 mod 4',
'function isOdd(x) = x % 2',
'isOdd(2)',
'isOdd(3)'],

'seealso':['divide']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/multiply.js',[],function(global, require, module, exports) {  module.exports = {
'name':'multiply',
'category':'Operators',
'syntax':[
'x * y',
'multiply(x, y)'],

'description':'multiply two values.',
'examples':[
'a = 2.1 * 3.4',
'a / 3.4',
'2 * 3 + 4',
'2 * (3 + 4)',
'3 * 2.1 km'],

'seealso':[
'divide']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/norm.js',[],function(global, require, module, exports) {  module.exports = {
'name':'norm',
'category':'Arithmetic',
'syntax':[
'norm(x)',
'norm(x, p)'],

'description':'Calculate the norm of a number, vector or matrix.',
'examples':[
'abs(-3.5)',
'norm(-3.5)',
'norm(3 - 4i))',
'norm([1, 2, -3], Infinity)',
'norm([1, 2, -3], -Infinity)',
'norm([3, 4], 2)',
'norm([[1, 2], [3, 4]], 1)',
'norm([[1, 2], [3, 4]], \'inf\')',
'norm([[1, 2], [3, 4]], \'fro\')']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/nthRoot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'nthRoot',
'category':'Arithmetic',
'syntax':[
'nthRoot(a)',
'nthRoot(a, root)'],

'description':'Calculate the nth root of a value. ' + 
'The principal nth root of a positive real number A, ' + 
'is the positive real solution of the equation "x^root = A".',
'examples':[
'4 ^ 3',
'nthRoot(64, 3)',
'nthRoot(9, 2)',
'sqrt(9)'],

'seealso':[
'sqrt',
'pow']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/pow.js',[],function(global, require, module, exports) {  module.exports = {
'name':'pow',
'category':'Operators',
'syntax':[
'x ^ y',
'pow(x, y)'],

'description':
'Calculates the power of x to y, x^y.',
'examples':[
'2^3 = 8',
'2*2*2',
'1 + e ^ (pi * i)'],

'seealso':['multiply']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/round.js',[],function(global, require, module, exports) {  module.exports = {
'name':'round',
'category':'Arithmetic',
'syntax':[
'round(x)',
'round(x, n)'],

'description':
'round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.',
'examples':[
'round(3.2)',
'round(3.8)',
'round(-4.2)',
'round(-4.8)',
'round(pi, 3)',
'round(123.45678, 2)'],

'seealso':['ceil','floor','fix']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/sign.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sign',
'category':'Arithmetic',
'syntax':[
'sign(x)'],

'description':
'Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.',
'examples':[
'sign(3.5)',
'sign(-4.2)',
'sign(0)'],

'seealso':[
'abs']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/sqrt.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sqrt',
'category':'Arithmetic',
'syntax':[
'sqrt(x)'],

'description':
'Compute the square root value. If x = y * y, then y is the square root of x.',
'examples':[
'sqrt(25)',
'5 * 5',
'sqrt(-1)'],

'seealso':[
'square',
'multiply']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/square.js',[],function(global, require, module, exports) {  module.exports = {
'name':'square',
'category':'Arithmetic',
'syntax':[
'square(x)'],

'description':
'Compute the square of a value. The square of x is x * x.',
'examples':[
'square(3)',
'sqrt(9)',
'3^2',
'3 * 3'],

'seealso':[
'multiply',
'pow',
'sqrt',
'cube']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/subtract.js',[],function(global, require, module, exports) {  module.exports = {
'name':'subtract',
'category':'Operators',
'syntax':[
'x - y',
'subtract(x, y)'],

'description':'subtract two values.',
'examples':[
'a = 5.3 - 2',
'a + 2',
'2/3 - 1/6',
'2 * 3 - 3',
'2.1 km - 500m'],

'seealso':[
'add']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/unaryMinus.js',[],function(global, require, module, exports) {  module.exports = {
'name':'unaryMinus',
'category':'Operators',
'syntax':[
'-x',
'unaryMinus(x)'],

'description':
'Inverse the sign of a value. Converts booleans and strings to numbers.',
'examples':[
'-4.5',
'-(-5.6)',
'-"22"'],

'seealso':[
'add','subtract','unaryPlus']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/unaryPlus.js',[],function(global, require, module, exports) {  module.exports = {
'name':'unaryPlus',
'category':'Operators',
'syntax':[
'+x',
'unaryPlus(x)'],

'description':
'Converts booleans and strings to numbers.',
'examples':[
'+true',
'+"2"'],

'seealso':[
'add','subtract','unaryMinus']};
});
__d('mathjs/lib/expression/docs/function/arithmetic/xgcd.js',[],function(global, require, module, exports) {  module.exports = {
'name':'xgcd',
'category':'Arithmetic',
'syntax':[
'xgcd(a, b)'],

'description':'Calculate the extended greatest common divisor for two values',
'examples':[
'xgcd(8, 12)',
'gcd(8, 12)',
'xgcd(36163, 21199)'],

'seealso':['gcd','lcm']};
});
__d('mathjs/lib/expression/docs/function/bitwise/bitAnd.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bitAnd',
'category':'Bitwise',
'syntax':[
'x & y',
'bitAnd(x, y)'],

'description':'Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0',
'examples':[
'5 & 3',
'bitAnd(53, 131)',
'[1, 12, 31] & 42'],

'seealso':[
'bitNot','bitOr','bitXor','leftShift','rightArithShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/bitNot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bitNot',
'category':'Bitwise',
'syntax':[
'~x',
'bitNot(x)'],

'description':'Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.',
'examples':[
'~1',
'~2',
'bitNot([2, -3, 4])'],

'seealso':[
'bitAnd','bitOr','bitXor','leftShift','rightArithShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/bitOr.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bitOr',
'category':'Bitwise',
'syntax':[
'x | y',
'bitOr(x, y)'],

'description':'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',
'examples':[
'5 | 3',
'bitOr([1, 2, 3], 4)'],

'seealso':[
'bitAnd','bitNot','bitXor','leftShift','rightArithShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/bitXor.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bitXor',
'category':'Bitwise',
'syntax':[
'bitXor(x, y)'],

'description':'Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.',
'examples':[
'bitOr(1, 2)',
'bitXor([2, 3, 4], 4)'],

'seealso':[
'bitAnd','bitNot','bitOr','leftShift','rightArithShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/leftShift.js',[],function(global, require, module, exports) {  module.exports = {
'name':'leftShift',
'category':'Bitwise',
'syntax':[
'x << y',
'leftShift(x, y)'],

'description':'Bitwise left logical shift of a value x by y number of bits.',
'examples':[
'4 << 1',
'8 >> 1'],

'seealso':[
'bitAnd','bitNot','bitOr','bitXor','rightArithShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/rightArithShift.js',[],function(global, require, module, exports) {  module.exports = {
'name':'rightArithShift',
'category':'Bitwise',
'syntax':[
'x >> y',
'leftShift(x, y)'],

'description':'Bitwise right arithmetic shift of a value x by y number of bits.',
'examples':[
'8 >> 1',
'4 << 1',
'-12 >> 2'],

'seealso':[
'bitAnd','bitNot','bitOr','bitXor','leftShift','rightLogShift']};
});
__d('mathjs/lib/expression/docs/function/bitwise/rightLogShift.js',[],function(global, require, module, exports) {  module.exports = {
'name':'rightLogShift',
'category':'Bitwise',
'syntax':[
'x >> y',
'leftShift(x, y)'],

'description':'Bitwise right logical shift of a value x by y number of bits.',
'examples':[
'8 >>> 1',
'4 << 1',
'-12 >>> 2'],

'seealso':[
'bitAnd','bitNot','bitOr','bitXor','leftShift','rightArithShift']};
});
__d('mathjs/lib/expression/docs/function/combinatorics/bellNumbers.js',[],function(global, require, module, exports) {  module.exports = {
'name':'bellNumbers',
'category':'Combinatorics',
'syntax':[
'bellNumbers(n)'],

'description':'The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.',
'examples':[
'bellNumbers(3)',
'bellNumbers(8)'],

'seealso':['stirlingS2']};
});
__d('mathjs/lib/expression/docs/function/combinatorics/catalan.js',[],function(global, require, module, exports) {  module.exports = {
'name':'catalan',
'category':'Combinatorics',
'syntax':[
'catalan(n)'],

'description':'The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.',
'examples':[
'catalan(3)',
'catalan(8)'],

'seealso':['bellNumbers']};
});
__d('mathjs/lib/expression/docs/function/combinatorics/composition.js',[],function(global, require, module, exports) {  module.exports = {
'name':'composition',
'category':'Combinatorics',
'syntax':[
'composition(n, k)'],

'description':'The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.',
'examples':[
'composition(5, 3)'],

'seealso':['combinations']};
});
__d('mathjs/lib/expression/docs/function/combinatorics/stirlingS2.js',[],function(global, require, module, exports) {  module.exports = {
'name':'stirlingS2',
'category':'Combinatorics',
'syntax':[
'stirlingS2(n, k)'],

'description':'he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.',
'examples':[
'stirlingS2(5, 3)'],

'seealso':['bellNumbers']};
});
__d('mathjs/lib/expression/docs/function/complex/arg.js',[],function(global, require, module, exports) {  module.exports = {
'name':'arg',
'category':'Complex',
'syntax':[
'arg(x)'],

'description':
'Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).',
'examples':[
'arg(2 + 2i)',
'atan2(3, 2)',
'arg(2 + 3i)'],

'seealso':[
're',
'im',
'conj',
'abs']};
});
__d('mathjs/lib/expression/docs/function/complex/conj.js',[],function(global, require, module, exports) {  module.exports = {
'name':'conj',
'category':'Complex',
'syntax':[
'conj(x)'],

'description':
'Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.',
'examples':[
'conj(2 + 3i)',
'conj(2 - 3i)',
'conj(-5.2i)'],

'seealso':[
're',
'im',
'abs',
'arg']};
});
__d('mathjs/lib/expression/docs/function/complex/re.js',[],function(global, require, module, exports) {  module.exports = {
'name':'re',
'category':'Complex',
'syntax':[
're(x)'],

'description':'Get the real part of a complex number.',
'examples':[
're(2 + 3i)',
'im(2 + 3i)',
're(-5.2i)',
're(2.4)'],

'seealso':[
'im',
'conj',
'abs',
'arg']};
});
__d('mathjs/lib/expression/docs/function/complex/im.js',[],function(global, require, module, exports) {  module.exports = {
'name':'im',
'category':'Complex',
'syntax':[
'im(x)'],

'description':'Get the imaginary part of a complex number.',
'examples':[
'im(2 + 3i)',
're(2 + 3i)',
'im(-5.2i)',
'im(2.4)'],

'seealso':[
're',
'conj',
'abs',
'arg']};
});
__d('mathjs/lib/expression/docs/function/expression/eval.js',[],function(global, require, module, exports) {  module.exports = {
'name':'eval',
'category':'Expression',
'syntax':[
'eval(expression)',
'eval([expr1, expr2, expr3, ...])'],

'description':'Evaluate an expression or an array with expressions.',
'examples':[
'eval("2 + 3")',
'eval("sqrt(" + 4 + ")")'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/expression/help.js',[],function(global, require, module, exports) {  module.exports = {
'name':'help',
'category':'Expression',
'syntax':[
'help(object)',
'help(string)'],

'description':'Display documentation on a function or data type.',
'examples':[
'help(sqrt)',
'help("complex")'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/geometry/distance.js',[],function(global, require, module, exports) {  module.exports = {
'name':'distance',
'category':'Geometry',
'syntax':[
'distance([x1, y1], [x2, y2])',
'distance([[x1, y1], [x2, y2])'],

'description':'Calculates the Euclidean distance between two points.',
'examples':[
'distance([0,0], [4,4])',
'distance([[0,0], [4,4]])'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/geometry/intersect.js',[],function(global, require, module, exports) {  module.exports = {
'name':'intersect',
'category':'Geometry',
'syntax':[
'intersect(expr1, expr2, expr3, expr4)',
'intersect(expr1, expr2, expr3)'],

'description':'Computes the intersection point of lines and/or planes.',
'examples':[
'intersect([0, 0], [10, 10], [10, 0], [0, 10])',
'intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/logical/and.js',[],function(global, require, module, exports) {  module.exports = {
'name':'and',
'category':'Logical',
'syntax':[
'x and y',
'and(x, y)'],

'description':'Logical and. Test whether two values are both defined with a nonzero/nonempty value.',
'examples':[
'true and false',
'true and true',
'2 and 4'],

'seealso':[
'not','or','xor']};
});
__d('mathjs/lib/expression/docs/function/logical/not.js',[],function(global, require, module, exports) {  module.exports = {
'name':'not',
'category':'Logical',
'syntax':[
'not x',
'not(x)'],

'description':'Logical not. Flips the boolean value of given argument.',
'examples':[
'not true',
'not false',
'not 2',
'not 0'],

'seealso':[
'and','or','xor']};
});
__d('mathjs/lib/expression/docs/function/logical/or.js',[],function(global, require, module, exports) {  module.exports = {
'name':'or',
'category':'Logical',
'syntax':[
'x or y',
'or(x, y)'],

'description':'Logical or. Test if at least one value is defined with a nonzero/nonempty value.',
'examples':[
'true or false',
'false or false',
'0 or 4'],

'seealso':[
'not','and','xor']};
});
__d('mathjs/lib/expression/docs/function/logical/xor.js',[],function(global, require, module, exports) {  module.exports = {
'name':'xor',
'category':'Logical',
'syntax':[
'x or y',
'or(x, y)'],

'description':'Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.',
'examples':[
'true xor false',
'false xor false',
'true xor true',
'0 or 4'],

'seealso':[
'not','and','or']};
});
__d('mathjs/lib/expression/docs/function/matrix/concat.js',[],function(global, require, module, exports) {  module.exports = {
'name':'concat',
'category':'Matrix',
'syntax':[
'concat(A, B, C, ...)',
'concat(A, B, C, ..., dim)'],

'description':'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',
'examples':[
'A = [1, 2; 5, 6]',
'B = [3, 4; 7, 8]',
'concat(A, B)',
'concat(A, B, 1)',
'concat(A, B, 2)'],

'seealso':[
'det','diag','eye','inv','ones','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/cross.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cross',
'category':'Matrix',
'syntax':[
'cross(A, B)'],

'description':'Calculate the cross product for two vectors in three dimensional space.',
'examples':[
'cross([1, 1, 0],  [0, 1, 1])',
'cross([3, -3, 1], [4, 9, 2])',
'cross([2, 3, 4],  [5, 6, 7])'],

'seealso':[
'multiply',
'dot']};
});
__d('mathjs/lib/expression/docs/function/matrix/det.js',[],function(global, require, module, exports) {  module.exports = {
'name':'det',
'category':'Matrix',
'syntax':[
'det(x)'],

'description':'Calculate the determinant of a matrix',
'examples':[
'det([1, 2; 3, 4])',
'det([-2, 2, 3; -1, 1, 3; 2, 0, -1])'],

'seealso':[
'concat','diag','eye','inv','ones','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/diag.js',[],function(global, require, module, exports) {  module.exports = {
'name':'diag',
'category':'Matrix',
'syntax':[
'diag(x)',
'diag(x, k)'],

'description':'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',
'examples':[
'diag(1:3)',
'diag(1:3, 1)',
'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]',
'diag(a)'],

'seealso':[
'concat','det','eye','inv','ones','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/dot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'dot',
'category':'Matrix',
'syntax':[
'dot(A, B)'],

'description':'Calculate the dot product of two vectors. ' + 
'The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] ' + 
'is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn',
'examples':[
'dot([2, 4, 1], [2, 2, 3])',
'[2, 4, 1] * [2, 2, 3]'],

'seealso':[
'multiply',
'cross']};
});
__d('mathjs/lib/expression/docs/function/matrix/eye.js',[],function(global, require, module, exports) {  module.exports = {
'name':'eye',
'category':'Matrix',
'syntax':[
'eye(n)',
'eye(m, n)',
'eye([m, n])',
'eye'],

'description':'Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.',
'examples':[
'eye(3)',
'eye(3, 5)',
'a = [1, 2, 3; 4, 5, 6]',
'eye(size(a))'],

'seealso':[
'concat','det','diag','inv','ones','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/flatten.js',[],function(global, require, module, exports) {  module.exports = {
'name':'flatten',
'category':'Matrix',
'syntax':[
'flatten(x)'],

'description':'Flatten a multi dimensional matrix into a single dimensional matrix.',
'examples':[
'a = [1, 2, 3; 4, 5, 6]',
'size(a)',
'b = flatten(a)',
'size(b)'],

'seealso':[
'concat','resize','size','squeeze']};
});
__d('mathjs/lib/expression/docs/function/matrix/inv.js',[],function(global, require, module, exports) {  module.exports = {
'name':'inv',
'category':'Matrix',
'syntax':[
'inv(x)'],

'description':'Calculate the inverse of a matrix',
'examples':[
'inv([1, 2; 3, 4])',
'inv(4)',
'1 / 4'],

'seealso':[
'concat','det','diag','eye','ones','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/ones.js',[],function(global, require, module, exports) {  module.exports = {
'name':'ones',
'category':'Matrix',
'syntax':[
'ones(m)',
'ones(m, n)',
'ones(m, n, p, ...)',
'ones([m])',
'ones([m, n])',
'ones([m, n, p, ...])',
'ones'],

'description':'Create a matrix containing ones.',
'examples':[
'ones(3)',
'ones(3, 5)',
'ones([2,3]) * 4.5',
'a = [1, 2, 3; 4, 5, 6]',
'ones(size(a))'],

'seealso':[
'concat','det','diag','eye','inv','range','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/range.js',[],function(global, require, module, exports) {  module.exports = {
'name':'range',
'category':'Type',
'syntax':[
'start:end',
'start:step:end',
'range(start, end)',
'range(start, end, step)',
'range(string)'],

'description':
'Create a range. Lower bound of the range is included, upper bound is excluded.',
'examples':[
'1:5',
'3:-1:-3',
'range(3, 7)',
'range(0, 12, 2)',
'range("4:10")',
'a = [1, 2, 3, 4; 5, 6, 7, 8]',
'a[1:2, 1:2]'],

'seealso':[
'concat','det','diag','eye','inv','ones','size','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/resize.js',[],function(global, require, module, exports) {  module.exports = {
'name':'resize',
'category':'Matrix',
'syntax':[
'resize(x, size)',
'resize(x, size, defaultValue)'],

'description':'Resize a matrix.',
'examples':[
'resize([1,2,3,4,5], [3])',
'resize([1,2,3], [5])',
'resize([1,2,3], [5], -1)',
'resize(2, [2, 3])',
'resize("hello", [8], "!")'],

'seealso':[
'size','subset','squeeze']};
});
__d('mathjs/lib/expression/docs/function/matrix/size.js',[],function(global, require, module, exports) {  module.exports = {
'name':'size',
'category':'Matrix',
'syntax':[
'size(x)'],

'description':'Calculate the size of a matrix.',
'examples':[
'size(2.3)',
'size("hello world")',
'a = [1, 2; 3, 4; 5, 6]',
'size(a)',
'size(1:6)'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','squeeze','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/squeeze.js',[],function(global, require, module, exports) {  module.exports = {
'name':'squeeze',
'category':'Matrix',
'syntax':[
'squeeze(x)'],

'description':'Remove inner and outer singleton dimensions from a matrix.',
'examples':[
'a = zeros(3,2,1)',
'size(squeeze(a))',
'b = zeros(1,1,3)',
'size(squeeze(b))'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','size','subset','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/subset.js',[],function(global, require, module, exports) {  module.exports = {
'name':'subset',
'category':'Matrix',
'syntax':[
'value(index)',
'value(index) = replacement',
'subset(value, [index])',
'subset(value, [index], replacement)'],

'description':'Get or set a subset of a matrix or string. ' + 
'Indexes are one-based. ' + 
'Both the ranges lower-bound and upper-bound are included.',
'examples':[
'd = [1, 2; 3, 4]',
'e = []',
'e[1, 1:2] = [5, 6]',
'e[2, :] = [7, 8]',
'f = d * e',
'f[2, 1]',
'f[:, 1]'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','size','squeeze','trace','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/trace.js',[],function(global, require, module, exports) {  module.exports = {
'name':'trace',
'category':'Matrix',
'syntax':[
'trace(A)'],

'description':'Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.',
'examples':[
'A = [1, 2, 3; -1, 2, 3; 2, 0, 3]',
'trace(A)'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','size','squeeze','subset','transpose','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/transpose.js',[],function(global, require, module, exports) {  module.exports = {
'name':'transpose',
'category':'Matrix',
'syntax':[
'x\'',
'transpose(x)'],

'description':'Transpose a matrix',
'examples':[
'a = [1, 2, 3; 4, 5, 6]',
'a\'',
'transpose(a)'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','size','squeeze','subset','trace','zeros']};
});
__d('mathjs/lib/expression/docs/function/matrix/zeros.js',[],function(global, require, module, exports) {  module.exports = {
'name':'zeros',
'category':'Matrix',
'syntax':[
'zeros(m)',
'zeros(m, n)',
'zeros(m, n, p, ...)',
'zeros([m])',
'zeros([m, n])',
'zeros([m, n, p, ...])',
'zeros'],

'description':'Create a matrix containing zeros.',
'examples':[
'zeros(3)',
'zeros(3, 5)',
'a = [1, 2, 3; 4, 5, 6]',
'zeros(size(a))'],

'seealso':[
'concat','det','diag','eye','inv','ones','range','size','squeeze','subset','trace','transpose']};
});
__d('mathjs/lib/expression/docs/function/probability/combinations.js',[],function(global, require, module, exports) {  module.exports = {
'name':'combinations',
'category':'Probability',
'syntax':[
'combinations(n, k)'],

'description':'Compute the number of combinations of n items taken k at a time',
'examples':[
'combinations(7, 5)'],

'seealso':['permutations','factorial']};
});
__d('mathjs/lib/expression/docs/function/probability/factorial.js',[],function(global, require, module, exports) {  module.exports = {
'name':'factorial',
'category':'Probability',
'syntax':[
'kldivergence(x, y)'],

'description':'Compute the factorial of a value',
'examples':[
'5!',
'5 * 4 * 3 * 2 * 1',
'3!'],

'seealso':['combinations','permutations','gamma']};
});
__d('mathjs/lib/expression/docs/function/probability/gamma.js',[],function(global, require, module, exports) {  module.exports = {
'name':'gamma',
'category':'Probability',
'syntax':[
'gamma(n)'],

'description':'Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.',
'examples':[
'gamma(4)',
'3!',
'gamma(1/2)',
'sqrt(pi)'],

'seealso':['factorial']};
});
__d('mathjs/lib/expression/docs/function/probability/kldivergence.js',[],function(global, require, module, exports) {  module.exports = {
'name':'kldivergence',
'category':'Probability',
'syntax':[
'n!',
'factorial(n)'],

'description':'Calculate the Kullback-Leibler (KL) divergence  between two distributions.',
'examples':[
'math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/probability/multinomial.js',[],function(global, require, module, exports) {  module.exports = {
'name':'multinomial',
'category':'Probability',
'syntax':[
'multinomial(A)'],

'description':'Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai <= 0.',
'examples':[
'multinomial([1, 2, 1])'],

'seealso':['combinations','factorial']};
});
__d('mathjs/lib/expression/docs/function/probability/permutations.js',[],function(global, require, module, exports) {  module.exports = {
'name':'permutations',
'category':'Probability',
'syntax':[
'permutations(n)',
'permutations(n, k)'],

'description':'Compute the number of permutations of n items taken k at a time',
'examples':[
'permutations(5)',
'permutations(5, 3)'],

'seealso':['combinations','factorial']};
});
__d('mathjs/lib/expression/docs/function/probability/pickRandom.js',[],function(global, require, module, exports) {  module.exports = {
'name':'pickRandom',
'category':'Probability',
'syntax':[
'pickRandom(array)'],

'description':
'Pick a random entry from a given array.',
'examples':[
'pickRandom(0:10)',
'pickRandom([1, 3, 1, 6])'],

'seealso':['random','randomInt']};
});
__d('mathjs/lib/expression/docs/function/probability/random.js',[],function(global, require, module, exports) {  module.exports = {
'name':'random',
'category':'Probability',
'syntax':[
'random()',
'random(max)',
'random(min, max)',
'random(size)',
'random(size, max)',
'random(size, min, max)'],

'description':
'Return a random number.',
'examples':[
'random()',
'random(10, 20)',
'random([2, 3])'],

'seealso':['pickRandom','randomInt']};
});
__d('mathjs/lib/expression/docs/function/probability/randomInt.js',[],function(global, require, module, exports) {  module.exports = {
'name':'randInt',
'category':'Probability',
'syntax':[
'randInt(max)',
'randInt(min, max)',
'randInt(size)',
'randInt(size, max)',
'randInt(size, min, max)'],

'description':
'Return a random integer number',
'examples':[
'randInt(10, 20)',
'randInt([2, 3], 10)'],

'seealso':['pickRandom','random']};
});
__d('mathjs/lib/expression/docs/function/relational/compare.js',[],function(global, require, module, exports) {  module.exports = {
'name':'compare',
'category':'Relational',
'syntax':[
'compare(x, y)'],

'description':
'Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.',
'examples':[
'compare(2, 3)',
'compare(3, 2)',
'compare(2, 2)',
'compare(5cm, 40mm)',
'compare(2, [1, 2, 3])'],

'seealso':[
'equal','unequal','smaller','smallerEq','largerEq']};
});
__d('mathjs/lib/expression/docs/function/relational/deepEqual.js',[],function(global, require, module, exports) {  module.exports = {
'name':'deepEqual',
'category':'Relational',
'syntax':[
'deepEqual(x, y)'],

'description':
'Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.',
'examples':[
'[1,3,4] == [1,3,4]',
'[1,3,4] == [1,3]'],

'seealso':[
'equal','unequal','smaller','larger','smallerEq','largerEq','compare']};
});
__d('mathjs/lib/expression/docs/function/relational/equal.js',[],function(global, require, module, exports) {  module.exports = {
'name':'equal',
'category':'Relational',
'syntax':[
'x == y',
'equal(x, y)'],

'description':
'Check equality of two values. Returns true if the values are equal, and false if not.',
'examples':[
'2+2 == 3',
'2+2 == 4',
'a = 3.2',
'b = 6-2.8',
'a == b',
'50cm == 0.5m'],

'seealso':[
'unequal','smaller','larger','smallerEq','largerEq','compare','deepEqual']};
});
__d('mathjs/lib/expression/docs/function/relational/larger.js',[],function(global, require, module, exports) {  module.exports = {
'name':'larger',
'category':'Relational',
'syntax':[
'x > y',
'larger(x, y)'],

'description':
'Check if value x is larger than y. Returns true if x is larger than y, and false if not.',
'examples':[
'2 > 3',
'5 > 2*2',
'a = 3.3',
'b = 6-2.8',
'(a > b)',
'(b < a)',
'5 cm > 2 inch'],

'seealso':[
'equal','unequal','smaller','smallerEq','largerEq','compare']};
});
__d('mathjs/lib/expression/docs/function/relational/largerEq.js',[],function(global, require, module, exports) {  module.exports = {
'name':'largerEq',
'category':'Relational',
'syntax':[
'x >= y',
'largerEq(x, y)'],

'description':
'Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.',
'examples':[
'2 > 1+1',
'2 >= 1+1',
'a = 3.2',
'b = 6-2.8',
'(a > b)'],

'seealso':[
'equal','unequal','smallerEq','smaller','largerEq','compare']};
});
__d('mathjs/lib/expression/docs/function/relational/smaller.js',[],function(global, require, module, exports) {  module.exports = {
'name':'smaller',
'category':'Relational',
'syntax':[
'x < y',
'smaller(x, y)'],

'description':
'Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.',
'examples':[
'2 < 3',
'5 < 2*2',
'a = 3.3',
'b = 6-2.8',
'(a < b)',
'5 cm < 2 inch'],

'seealso':[
'equal','unequal','larger','smallerEq','largerEq','compare']};
});
__d('mathjs/lib/expression/docs/function/relational/smallerEq.js',[],function(global, require, module, exports) {  module.exports = {
'name':'smallerEq',
'category':'Relational',
'syntax':[
'x <= y',
'smallerEq(x, y)'],

'description':
'Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.',
'examples':[
'2 < 1+1',
'2 <= 1+1',
'a = 3.2',
'b = 6-2.8',
'(a < b)'],

'seealso':[
'equal','unequal','larger','smaller','largerEq','compare']};
});
__d('mathjs/lib/expression/docs/function/relational/unequal.js',[],function(global, require, module, exports) {  module.exports = {
'name':'unequal',
'category':'Relational',
'syntax':[
'x != y',
'unequal(x, y)'],

'description':
'Check unequality of two values. Returns true if the values are unequal, and false if they are equal.',
'examples':[
'2+2 != 3',
'2+2 != 4',
'a = 3.2',
'b = 6-2.8',
'a != b',
'50cm != 0.5m',
'5 cm != 2 inch'],

'seealso':[
'equal','smaller','larger','smallerEq','largerEq','compare','deepEqual']};
});
__d('mathjs/lib/expression/docs/function/statistics/max.js',[],function(global, require, module, exports) {  module.exports = {
'name':'max',
'category':'Statistics',
'syntax':[
'max(a, b, c, ...)',
'max(A)',
'max(A, dim)'],

'description':'Compute the maximum value of a list of values.',
'examples':[
'max(2, 3, 4, 1)',
'max([2, 3, 4, 1])',
'max([2, 5; 4, 3])',
'max([2, 5; 4, 3], 1)',
'max([2, 5; 4, 3], 2)',
'max(2.7, 7.1, -4.5, 2.0, 4.1)',
'min(2.7, 7.1, -4.5, 2.0, 4.1)'],

'seealso':[
'mean',
'median',
'min',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/mean.js',[],function(global, require, module, exports) {  module.exports = {
'name':'mean',
'category':'Statistics',
'syntax':[
'mean(a, b, c, ...)',
'mean(A)',
'mean(A, dim)'],

'description':'Compute the arithmetic mean of a list of values.',
'examples':[
'mean(2, 3, 4, 1)',
'mean([2, 3, 4, 1])',
'mean([2, 5; 4, 3])',
'mean([2, 5; 4, 3], 1)',
'mean([2, 5; 4, 3], 2)',
'mean([1.0, 2.7, 3.2, 4.0])'],

'seealso':[
'max',
'median',
'min',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/median.js',[],function(global, require, module, exports) {  module.exports = {
'name':'median',
'category':'Statistics',
'syntax':[
'median(a, b, c, ...)',
'median(A)'],

'description':'Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.',
'examples':[
'median(5, 2, 7)',
'median([3, -1, 5, 7])'],

'seealso':[
'max',
'mean',
'min',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/min.js',[],function(global, require, module, exports) {  module.exports = {
'name':'min',
'category':'Statistics',
'syntax':[
'min(a, b, c, ...)',
'min(A)',
'min(A, dim)'],

'description':'Compute the minimum value of a list of values.',
'examples':[
'min(2, 3, 4, 1)',
'min([2, 3, 4, 1])',
'min([2, 5; 4, 3])',
'min([2, 5; 4, 3], 1)',
'min([2, 5; 4, 3], 2)',
'min(2.7, 7.1, -4.5, 2.0, 4.1)',
'max(2.7, 7.1, -4.5, 2.0, 4.1)'],

'seealso':[
'max',
'mean',
'median',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/mode.js',[],function(global, require, module, exports) {  module.exports = {
'name':'mode',
'category':'Statistics',
'syntax':[
'mode(a, b, c, ...)',
'mode(A)',
'mode(A, a, b, B, c, ...)'],

'description':'Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.',
'examples':[
'mode(5, 2, 7)',
'mode([3, -1, 5, 7])'],

'seealso':[
'max',
'mean',
'min',
'median',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/prod.js',[],function(global, require, module, exports) {  module.exports = {
'name':'prod',
'category':'Statistics',
'syntax':[
'prod(a, b, c, ...)',
'prod(A)'],

'description':'Compute the product of all values.',
'examples':[
'prod(2, 3, 4)',
'prod([2, 3, 4])',
'prod([2, 5; 4, 3])'],

'seealso':[
'max',
'mean',
'min',
'median',
'min',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/quantileSeq.js',[],function(global, require, module, exports) {  module.exports = {
'name':'quantileSeq',
'category':'Statistics',
'syntax':[
'quantileSeq(A, prob[, sorted])',
'quantileSeq(A, [prob1, prob2, ...][, sorted])',
'quantileSeq(A, N[, sorted])'],

'description':'Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.',
'examples':[
'quantileSeq([3, -1, 5, 7], 0.5)',
'quantileSeq([3, -1, 5, 7], [1/3, 2/3])',
'quantileSeq([3, -1, 5, 7], 2)',
'quantileSeq([-1, 3, 5, 7], 0.5, true)'],

'seealso':[
'mean',
'median',
'min',
'max',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/std.js',[],function(global, require, module, exports) {  module.exports = {
'name':'std',
'category':'Statistics',
'syntax':[
'std(a, b, c, ...)',
'std(A)',
'std(A, normalization)'],

'description':'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
'examples':[
'std(2, 4, 6)',
'std([2, 4, 6, 8])',
'std([2, 4, 6, 8], "uncorrected")',
'std([2, 4, 6, 8], "biased")',
'std([1, 2, 3; 4, 5, 6])'],

'seealso':[
'max',
'mean',
'min',
'median',
'min',
'prod',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/sum.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sum',
'category':'Statistics',
'syntax':[
'sum(a, b, c, ...)',
'sum(A)'],

'description':'Compute the sum of all values.',
'examples':[
'sum(2, 3, 4, 1)',
'sum([2, 3, 4, 1])',
'sum([2, 5; 4, 3])'],

'seealso':[
'max',
'mean',
'median',
'min',
'prod',
'std',
'sum',
'var']};
});
__d('mathjs/lib/expression/docs/function/statistics/var.js',[],function(global, require, module, exports) {  module.exports = {
'name':'var',
'category':'Statistics',
'syntax':[
'var(a, b, c, ...)',
'var(A)',
'var(A, normalization)'],

'description':'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
'examples':[
'var(2, 4, 6)',
'var([2, 4, 6, 8])',
'var([2, 4, 6, 8], "uncorrected")',
'var([2, 4, 6, 8], "biased")',
'var([1, 2, 3; 4, 5, 6])'],

'seealso':[
'max',
'mean',
'min',
'median',
'min',
'prod',
'std',
'sum']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acos.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acos',
'category':'Trigonometry',
'syntax':[
'acos(x)'],

'description':'Compute the inverse cosine of a value in radians.',
'examples':[
'acos(0.5)',
'acos(cos(2.3))'],

'seealso':[
'cos',
'atan',
'asin']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acosh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acosh',
'category':'Trigonometry',
'syntax':[
'acosh(x)'],

'description':'Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.',
'examples':[
'acosh(1.5)'],

'seealso':[
'cosh',
'asinh',
'atanh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acot',
'category':'Trigonometry',
'syntax':[
'acot(x)'],

'description':'Calculate the inverse cotangent of a value.',
'examples':[
'acot(0.5)',
'acot(cot(0.5))',
'acot(2)'],

'seealso':[
'cot',
'atan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acoth.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acoth',
'category':'Trigonometry',
'syntax':[
'acoth(x)'],

'description':'Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.',
'examples':[
'acoth(0.5)'],

'seealso':[
'acsch',
'asech']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acsc.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acsc',
'category':'Trigonometry',
'syntax':[
'acsc(x)'],

'description':'Calculate the inverse cotangent of a value.',
'examples':[
'acsc(0.5)',
'acsc(csc(0.5))',
'acsc(2)'],

'seealso':[
'csc',
'asin',
'asec']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/acsch.js',[],function(global, require, module, exports) {  module.exports = {
'name':'acsch',
'category':'Trigonometry',
'syntax':[
'acsch(x)'],

'description':'Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.',
'examples':[
'acsch(0.5)'],

'seealso':[
'asech',
'acoth']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/asec.js',[],function(global, require, module, exports) {  module.exports = {
'name':'asec',
'category':'Trigonometry',
'syntax':[
'asec(x)'],

'description':'Calculate the inverse secant of a value.',
'examples':[
'asec(0.5)',
'asec(sec(0.5))',
'asec(2)'],

'seealso':[
'acos',
'acot',
'acsc']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/asech.js',[],function(global, require, module, exports) {  module.exports = {
'name':'asech',
'category':'Trigonometry',
'syntax':[
'asech(x)'],

'description':'Calculate the inverse secant of a value.',
'examples':[
'asech(0.5)'],

'seealso':[
'acsch',
'acoth']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/asin.js',[],function(global, require, module, exports) {  module.exports = {
'name':'asin',
'category':'Trigonometry',
'syntax':[
'asin(x)'],

'description':'Compute the inverse sine of a value in radians.',
'examples':[
'asin(0.5)',
'asin(sin(2.3))'],

'seealso':[
'sin',
'acos',
'atan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/asinh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'asinh',
'category':'Trigonometry',
'syntax':[
'asinh(x)'],

'description':'Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.',
'examples':[
'asinh(0.5)'],

'seealso':[
'acosh',
'atanh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/atan.js',[],function(global, require, module, exports) {  module.exports = {
'name':'atan',
'category':'Trigonometry',
'syntax':[
'atan(x)'],

'description':'Compute the inverse tangent of a value in radians.',
'examples':[
'atan(0.5)',
'atan(tan(2.3))'],

'seealso':[
'tan',
'acos',
'asin']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/atanh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'atanh',
'category':'Trigonometry',
'syntax':[
'atanh(x)'],

'description':'Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.',
'examples':[
'atanh(0.5)'],

'seealso':[
'acosh',
'asinh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/atan2.js',[],function(global, require, module, exports) {  module.exports = {
'name':'atan2',
'category':'Trigonometry',
'syntax':[
'atan2(y, x)'],

'description':
'Computes the principal value of the arc tangent of y/x in radians.',
'examples':[
'atan2(2, 2) / pi',
'angle = 60 deg in rad',
'x = cos(angle)',
'y = sin(angle)',
'atan2(y, x)'],

'seealso':[
'sin',
'cos',
'tan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/cos.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cos',
'category':'Trigonometry',
'syntax':[
'cos(x)'],

'description':'Compute the cosine of x in radians.',
'examples':[
'cos(2)',
'cos(pi / 4) ^ 2',
'cos(180 deg)',
'cos(60 deg)',
'sin(0.2)^2 + cos(0.2)^2'],

'seealso':[
'acos',
'sin',
'tan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/cosh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cosh',
'category':'Trigonometry',
'syntax':[
'cosh(x)'],

'description':'Compute the hyperbolic cosine of x in radians.',
'examples':[
'cosh(0.5)'],

'seealso':[
'sinh',
'tanh',
'coth']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/cot.js',[],function(global, require, module, exports) {  module.exports = {
'name':'cot',
'category':'Trigonometry',
'syntax':[
'cot(x)'],

'description':'Compute the cotangent of x in radians. Defined as 1/tan(x)',
'examples':[
'cot(2)',
'1 / tan(2)'],

'seealso':[
'sec',
'csc',
'tan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/coth.js',[],function(global, require, module, exports) {  module.exports = {
'name':'coth',
'category':'Trigonometry',
'syntax':[
'coth(x)'],

'description':'Compute the hyperbolic cotangent of x in radians.',
'examples':[
'coth(2)',
'1 / tanh(2)'],

'seealso':[
'sech',
'csch',
'tanh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/csc.js',[],function(global, require, module, exports) {  module.exports = {
'name':'csc',
'category':'Trigonometry',
'syntax':[
'csc(x)'],

'description':'Compute the cosecant of x in radians. Defined as 1/sin(x)',
'examples':[
'csc(2)',
'1 / sin(2)'],

'seealso':[
'sec',
'cot',
'sin']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/csch.js',[],function(global, require, module, exports) {  module.exports = {
'name':'csch',
'category':'Trigonometry',
'syntax':[
'csch(x)'],

'description':'Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)',
'examples':[
'csch(2)',
'1 / sinh(2)'],

'seealso':[
'sech',
'coth',
'sinh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/sec.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sec',
'category':'Trigonometry',
'syntax':[
'sec(x)'],

'description':'Compute the secant of x in radians. Defined as 1/cos(x)',
'examples':[
'sec(2)',
'1 / cos(2)'],

'seealso':[
'cot',
'csc',
'cos']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/sech.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sech',
'category':'Trigonometry',
'syntax':[
'sech(x)'],

'description':'Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)',
'examples':[
'sech(2)',
'1 / cosh(2)'],

'seealso':[
'coth',
'csch',
'cosh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/sin.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sin',
'category':'Trigonometry',
'syntax':[
'sin(x)'],

'description':'Compute the sine of x in radians.',
'examples':[
'sin(2)',
'sin(pi / 4) ^ 2',
'sin(90 deg)',
'sin(30 deg)',
'sin(0.2)^2 + cos(0.2)^2'],

'seealso':[
'asin',
'cos',
'tan']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/sinh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sinh',
'category':'Trigonometry',
'syntax':[
'sinh(x)'],

'description':'Compute the hyperbolic sine of x in radians.',
'examples':[
'sinh(0.5)'],

'seealso':[
'cosh',
'tanh']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/tan.js',[],function(global, require, module, exports) {  module.exports = {
'name':'tan',
'category':'Trigonometry',
'syntax':[
'tan(x)'],

'description':'Compute the tangent of x in radians.',
'examples':[
'tan(0.5)',
'sin(0.5) / cos(0.5)',
'tan(pi / 4)',
'tan(45 deg)'],

'seealso':[
'atan',
'sin',
'cos']};
});
__d('mathjs/lib/expression/docs/function/trigonometry/tanh.js',[],function(global, require, module, exports) {  module.exports = {
'name':'tanh',
'category':'Trigonometry',
'syntax':[
'tanh(x)'],

'description':'Compute the hyperbolic tangent of x in radians.',
'examples':[
'tanh(0.5)',
'sinh(0.5) / cosh(0.5)'],

'seealso':[
'sinh',
'cosh']};
});
__d('mathjs/lib/expression/docs/function/units/to.js',[],function(global, require, module, exports) {  module.exports = {
'name':'to',
'category':'Units',
'syntax':[
'x to unit',
'to(x, unit)'],

'description':'Change the unit of a value.',
'examples':[
'5 inch to cm',
'3.2kg to g',
'16 bytes in bits'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/utils/clone.js',[],function(global, require, module, exports) {  module.exports = {
'name':'clone',
'category':'Utils',
'syntax':[
'clone(x)'],

'description':'Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices',
'examples':[
'clone(3.5)',
'clone(2 - 4i)',
'clone(45 deg)',
'clone([1, 2; 3, 4])',
'clone("hello world")'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/utils/map.js',[],function(global, require, module, exports) {  module.exports = {
'name':'map',
'category':'Utils',
'syntax':[
'map(x, callback)'],

'description':'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',
'examples':[
'map([1, 2, 3], function(val) { return value * value })'],

'seealso':['filter','forEach']};
});
__d('mathjs/lib/expression/docs/function/utils/partitionSelect.js',[],function(global, require, module, exports) {  module.exports = {
'name':'partitionSelect',
'category':'Utils',
'syntax':[
'partitionSelect(x, k)',
'partitionSelect(x, k, compare)'],

'description':'Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.',
'examples':[
'partitionSelect([5, 10, 1], 2)',
'partitionSelect(["C", "B", "A", "D"], 1)'],

'seealso':['sort']};
});
__d('mathjs/lib/expression/docs/function/utils/filter.js',[],function(global, require, module, exports) {  module.exports = {
'name':'filter',
'category':'Utils',
'syntax':[
'filter(x, test)'],

'description':'Filter items in a matrix.',
'examples':[
'isPositive(x) = x > 0',
'filter([6, -2, -1, 4, 3], isPositive)',
'filter([6, -2, 0, 1, 0], x != 0)'],

'seealso':['sort','map','forEach']};
});
__d('mathjs/lib/expression/docs/function/utils/forEach.js',[],function(global, require, module, exports) {  module.exports = {
'name':'forEach',
'category':'Utils',
'syntax':[
'forEach(x, callback)'],

'description':'Iterates over all elements of a matrix/array, and executes the given callback function.',
'examples':[
'forEach([1, 2, 3], function(val) { console.log(val) })'],

'seealso':['map','sort','filter']};
});
__d('mathjs/lib/expression/docs/function/utils/format.js',[],function(global, require, module, exports) {  module.exports = {
'name':'format',
'category':'Utils',
'syntax':[
'format(value)',
'format(value, precision)'],

'description':'Format a value of any type as string.',
'examples':[
'format(2.3)',
'format(3 - 4i)',
'format([])',
'format(pi, 3)'],

'seealso':['print']};
});
__d('mathjs/lib/expression/docs/function/utils/isInteger.js',[],function(global, require, module, exports) {  module.exports = {
'name':'isInteger',
'category':'Utils',
'syntax':[
'isInteger(x)'],

'description':'Test whether a value is an integer number.',
'examples':[
'isInteger(2)',
'isInteger(3.5)',
'isInteger([3, 0.5, -2])'],

'seealso':['isNegative','isNumeric','isPositive','isZero']};
});
__d('mathjs/lib/expression/docs/function/utils/isNegative.js',[],function(global, require, module, exports) {  module.exports = {
'name':'isNegative',
'category':'Utils',
'syntax':[
'isNegative(x)'],

'description':'Test whether a value is negative: smaller than zero.',
'examples':[
'isNegative(2)',
'isNegative(0)',
'isNegative(-4)',
'isNegative([3, 0.5, -2])'],

'seealso':['isInteger','isNumeric','isPositive','isZero']};
});
__d('mathjs/lib/expression/docs/function/utils/isNumeric.js',[],function(global, require, module, exports) {  module.exports = {
'name':'isNumeric',
'category':'Utils',
'syntax':[
'isNumeric(x)'],

'description':'Test whether a value is a numeric value. ' + 
'Returns true when the input is a number, BigNumber, Fraction, or boolean.',
'examples':[
'isNumeric(2)',
'isNumeric(0)',
'isNumeric(bignumber(500))',
'isNumeric(fraction(0.125))',
'isNumeric("3")',
'isNumeric(2 + 3i)',
'isNumeric([2.3, "foo", false])'],

'seealso':['isInteger','isZero','isNegative','isPositive']};
});
__d('mathjs/lib/expression/docs/function/utils/isPositive.js',[],function(global, require, module, exports) {  module.exports = {
'name':'isPositive',
'category':'Utils',
'syntax':[
'isPositive(x)'],

'description':'Test whether a value is positive: larger than zero.',
'examples':[
'isPositive(2)',
'isPositive(0)',
'isPositive(-4)',
'isPositive([3, 0.5, -2])'],

'seealso':['isInteger','isNumeric','isNegative','isZero']};
});
__d('mathjs/lib/expression/docs/function/utils/isZero.js',[],function(global, require, module, exports) {  module.exports = {
'name':'isZero',
'category':'Utils',
'syntax':[
'isZero(x)'],

'description':'Test whether a value is zero.',
'examples':[
'isZero(2)',
'isZero(0)',
'isZero(-4)',
'isZero([3, 0, -2, 0])'],

'seealso':['isInteger','isNumeric','isNegative','isPositive']};
});
__d('mathjs/lib/expression/docs/function/utils/import.js',[],function(global, require, module, exports) {  module.exports = {
'name':'import',
'category':'Utils',
'syntax':[
'import(string)'],

'description':'Import functions from a file.',
'examples':[
'import("numbers")',
'import("./mylib.js")'],

'seealso':[]};
});
__d('mathjs/lib/expression/docs/function/utils/sort.js',[],function(global, require, module, exports) {  module.exports = {
'name':'sort',
'category':'Utils',
'syntax':[
'sort(x)',
'sort(x, compare)'],

'description':'Sort the items in a matrix. Compare can be a string "asc" or "desc", or a custom sort function.',
'examples':[
'sort([5, 10, 1])',
'sort(["C", "B", "A", "D"])',
'sortByLength(a, b) = size(a)[1] - size(b)[1]',
'sort(["Langdon", "Tom", "Sara"], sortByLength)'],

'seealso':['map','filter','forEach']};
});
__d('mathjs/lib/expression/docs/function/utils/typeof.js',[],function(global, require, module, exports) {  module.exports = {
'name':'typeof',
'category':'Utils',
'syntax':[
'typeof(x)'],

'description':'Get the type of a variable.',
'examples':[
'typeof(3.5)',
'typeof(2 - 4i)',
'typeof(45 deg)',
'typeof("hello world")'],

'seealso':[]};
});
__d('mathjs/lib/expression/function/index.js',["mathjs/lib/expression/function/compile.js","mathjs/lib/expression/function/eval.js","mathjs/lib/expression/function/help.js","mathjs/lib/expression/function/parse.js","mathjs/lib/expression/function/parser.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/expression/function/compile.js'),
require('mathjs/lib/expression/function/eval.js'),
require('mathjs/lib/expression/function/help.js'),
require('mathjs/lib/expression/function/parse.js'),
require('mathjs/lib/expression/function/parser.js')];
});
__d('mathjs/lib/expression/function/compile.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/expression/parse.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var parse=load(require('mathjs/lib/expression/parse.js'));



































return typed('compile',{
'string':function(expr){
return parse(expr).compile();},


'Array | Matrix':function(expr){
return deepMap(expr,function(entry){
return parse(entry).compile();});}});}





exports.name = 'compile';
exports.factory = factory;
});
__d('mathjs/lib/expression/parse.js',["mathjs/lib/error/ArgumentsError.js","mathjs/lib/utils/collection/deepMap.js","mathjs/lib/expression/node/ArrayNode.js","mathjs/lib/expression/node/AssignmentNode.js","mathjs/lib/expression/node/BlockNode.js","mathjs/lib/expression/node/ConditionalNode.js","mathjs/lib/expression/node/ConstantNode.js","mathjs/lib/expression/node/FunctionAssignmentNode.js","mathjs/lib/expression/node/IndexNode.js","mathjs/lib/expression/node/OperatorNode.js","mathjs/lib/expression/node/ParenthesisNode.js","mathjs/lib/expression/node/FunctionNode.js","mathjs/lib/expression/node/RangeNode.js","mathjs/lib/expression/node/SymbolNode.js","mathjs/lib/expression/node/UpdateNode.js"],function(global, require, module, exports) {  'use strict';

var ArgumentsError=require('mathjs/lib/error/ArgumentsError.js');
var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var ArrayNode=load(require('mathjs/lib/expression/node/ArrayNode.js'));
var AssignmentNode=load(require('mathjs/lib/expression/node/AssignmentNode.js'));
var BlockNode=load(require('mathjs/lib/expression/node/BlockNode.js'));
var ConditionalNode=load(require('mathjs/lib/expression/node/ConditionalNode.js'));
var ConstantNode=load(require('mathjs/lib/expression/node/ConstantNode.js'));
var FunctionAssignmentNode=load(require('mathjs/lib/expression/node/FunctionAssignmentNode.js'));
var IndexNode=load(require('mathjs/lib/expression/node/IndexNode.js'));
var OperatorNode=load(require('mathjs/lib/expression/node/OperatorNode.js'));
var ParenthesisNode=load(require('mathjs/lib/expression/node/ParenthesisNode.js'));
var FunctionNode=load(require('mathjs/lib/expression/node/FunctionNode.js'));
var RangeNode=load(require('mathjs/lib/expression/node/RangeNode.js'));
var SymbolNode=load(require('mathjs/lib/expression/node/SymbolNode.js'));
var UpdateNode=load(require('mathjs/lib/expression/node/UpdateNode.js'));


































function parse(expr,options){
if(arguments.length != 1 && arguments.length != 2){
throw new ArgumentsError('parse',arguments.length,1,2);}



extra_nodes = options && options.nodes?options.nodes:{};

if(typeof expr === 'string'){

expression = expr;
return parseStart();}else 

if(Array.isArray(expr) || expr instanceof type.Matrix){

return deepMap(expr,function(elem){
if(typeof elem !== 'string')throw new TypeError('String expected');

expression = elem;
return parseStart();});}else 


{

throw new TypeError('String or matrix expected');}}




var TOKENTYPE={
NULL:0,
DELIMITER:1,
NUMBER:2,
SYMBOL:3,
UNKNOWN:4};



var DELIMITERS={
',':true,
'(':true,
')':true,
'[':true,
']':true,
'\"':true,
';':true,

'+':true,
'-':true,
'*':true,
'.*':true,
'/':true,
'./':true,
'%':true,
'^':true,
'.^':true,
'~':true,
'!':true,
'&':true,
'|':true,
'^|':true,
'\'':true,
'=':true,
':':true,
'?':true,

'==':true,
'!=':true,
'<':true,
'>':true,
'<=':true,
'>=':true,

'<<':true,
'>>':true,
'>>>':true};



var NAMED_DELIMITERS={
'mod':true,
'to':true,
'in':true,
'and':true,
'xor':true,
'or':true,
'not':true};


var extra_nodes={};
var expression='';
var index=0;
var c='';
var token='';
var token_type=TOKENTYPE.NULL;
var nesting_level=0;
var conditional_level=null;







function first(){
index = 0;
c = expression.charAt(0);
nesting_level = 0;
conditional_level = null;}








function next(){
index++;
c = expression.charAt(index);}







function nextPreview(){
return expression.charAt(index + 1);}







function nextNextPreview(){
return expression.charAt(index + 2);}







function getToken(){
token_type = TOKENTYPE.NULL;
token = '';



while(c == ' ' || c == '\t' || c == '\n' && nesting_level) {

next();}



if(c == '#'){
while(c != '\n' && c != '') {
next();}}




if(c == ''){

token_type = TOKENTYPE.DELIMITER;
return;}



if(c == '\n' && !nesting_level){
token_type = TOKENTYPE.DELIMITER;
token = c;
next();
return;}



var c2=c + nextPreview();
var c3=c2 + nextNextPreview();
if(c3.length == 3 && DELIMITERS[c3]){
token_type = TOKENTYPE.DELIMITER;
token = c3;
next();
next();
next();
return;}



if(c2.length == 2 && DELIMITERS[c2]){
token_type = TOKENTYPE.DELIMITER;
token = c2;
next();
next();
return;}



if(DELIMITERS[c]){
token_type = TOKENTYPE.DELIMITER;
token = c;
next();
return;}



if(isDigitDot(c)){
token_type = TOKENTYPE.NUMBER;


if(c == '.'){
token += c;
next();

if(!isDigit(c)){

token_type = TOKENTYPE.UNKNOWN;}}else 


{
while(isDigit(c)) {
token += c;
next();}

if(c == '.'){
token += c;
next();}}


while(isDigit(c)) {
token += c;
next();}



c2 = nextPreview();
if((c == 'E' || c == 'e') && (isDigit(c2) || c2 == '-' || c2 == '+')){
token += c;
next();

if(c == '+' || c == '-'){
token += c;
next();}



if(!isDigit(c)){

token_type = TOKENTYPE.UNKNOWN;}


while(isDigit(c)) {
token += c;
next();}}



return;}



if(currentIsAlpha()){
while(currentIsAlpha() || isDigit(c)) {
token += c;
next();}


if(NAMED_DELIMITERS[token]){
token_type = TOKENTYPE.DELIMITER;}else 

{
token_type = TOKENTYPE.SYMBOL;}


return;}



token_type = TOKENTYPE.UNKNOWN;
while(c != '') {
token += c;
next();}

throw createSyntaxError('Syntax error in part "' + token + '"');}





function getTokenSkipNewline(){
do {
getToken();}while(

token == '\n');}






function openParams(){
nesting_level++;}






function closeParams(){
nesting_level--;}














function currentIsAlpha(){






var cPrev=expression.charAt(index - 1);
var cNext=expression.charAt(index + 1);

var isValidLatinOrGreek=function(p){
return (/^[a-zA-Z_\u00C0-\u02AF\u0370-\u03FF]$/.test(p));};


var isValidMathSymbol=function(high,low){
return (/^[\uD835]$/.test(high) && 
/^[\uDC00-\uDFFF]$/.test(low) && 
/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(low));};


return isValidLatinOrGreek(c) || 
isValidMathSymbol(c,cNext) || 
isValidMathSymbol(cPrev,c);}








function isDigitDot(c){
return c >= '0' && c <= '9' || c == '.';}








function isDigit(c){
return c >= '0' && c <= '9';}







function parseStart(){

first();

getToken();

var node=parseBlock();



if(token != ''){
if(token_type == TOKENTYPE.DELIMITER){



throw createError('Unexpected operator ' + token);}else 

{
throw createSyntaxError('Unexpected part "' + token + '"');}}



return node;}









function parseBlock(){
var node;
var blocks=[];
var visible;

if(token == ''){

return new ConstantNode('undefined','undefined');}


if(token != '\n' && token != ';'){
node = parseFunctionAssignment();}



while(token == '\n' || token == ';') {
if(blocks.length == 0 && node){
visible = token != ';';
blocks.push({
node:node,
visible:visible});}



getToken();
if(token != '\n' && token != ';' && token != ''){
node = parseFunctionAssignment();

visible = token != ';';
blocks.push({
node:node,
visible:visible});}}




if(blocks.length > 0){
return new BlockNode(blocks);}else 

{
return node;}}








function parseFunctionAssignment(){

if(token_type == TOKENTYPE.SYMBOL && token == 'function'){
throw createSyntaxError('Deprecated keyword "function". ' + 
'Functions can now be assigned without it, like "f(x) = x^2".');}


return parseAssignment();}








function parseAssignment(){
var name,args,expr,valid;

var node=parseConditional();

if(token == '='){
if(node && node.isSymbolNode){

name = node.name;
getTokenSkipNewline();
expr = parseAssignment();
return new AssignmentNode(name,expr);}else 

if(node && node.isIndexNode){

getTokenSkipNewline();
expr = parseAssignment();
return new UpdateNode(node,expr);}else 

if(node && node.isFunctionNode){

valid = true;
args = [];

name = node.name;
node.args.forEach(function(arg,index){
if(arg && arg.isSymbolNode){
args[index] = arg.name;}else 

{
valid = false;}});



if(valid){
getTokenSkipNewline();
expr = parseAssignment();
return new FunctionAssignmentNode(name,args,expr);}}



throw createSyntaxError('Invalid left hand side of assignment operator =');}


return node;}












function parseConditional(){
var node=parseLogicalOr();

while(token == '?') {


var prev=conditional_level;
conditional_level = nesting_level;
getTokenSkipNewline();

var condition=node;
var trueExpr=parseLogicalOr();

if(token != ':')throw createSyntaxError('False part of conditional expression expected');

conditional_level = null;
getTokenSkipNewline();

var falseExpr=parseConditional();

node = new ConditionalNode(condition,trueExpr,falseExpr);


conditional_level = prev;}


return node;}







function parseLogicalOr(){
var node=parseLogicalXor();

while(token == 'or') {
getTokenSkipNewline();
node = new OperatorNode('or','or',[node,parseLogicalXor()]);}


return node;}







function parseLogicalXor(){
var node=parseLogicalAnd();

while(token == 'xor') {
getTokenSkipNewline();
node = new OperatorNode('xor','xor',[node,parseLogicalAnd()]);}


return node;}







function parseLogicalAnd(){
var node=parseBitwiseOr();

while(token == 'and') {
getTokenSkipNewline();
node = new OperatorNode('and','and',[node,parseBitwiseOr()]);}


return node;}







function parseBitwiseOr(){
var node=parseBitwiseXor();

while(token == '|') {
getTokenSkipNewline();
node = new OperatorNode('|','bitOr',[node,parseBitwiseXor()]);}


return node;}







function parseBitwiseXor(){
var node=parseBitwiseAnd();

while(token == '^|') {
getTokenSkipNewline();
node = new OperatorNode('^|','bitXor',[node,parseBitwiseAnd()]);}


return node;}







function parseBitwiseAnd(){
var node=parseRelational();

while(token == '&') {
getTokenSkipNewline();
node = new OperatorNode('&','bitAnd',[node,parseRelational()]);}


return node;}







function parseRelational(){
var node,operators,name,fn,params;

node = parseShift();

operators = {
'==':'equal',
'!=':'unequal',
'<':'smaller',
'>':'larger',
'<=':'smallerEq',
'>=':'largerEq'};

while(token in operators) {
name = token;
fn = operators[name];

getTokenSkipNewline();
params = [node,parseShift()];
node = new OperatorNode(name,fn,params);}


return node;}







function parseShift(){
var node,operators,name,fn,params;

node = parseConversion();

operators = {
'<<':'leftShift',
'>>':'rightArithShift',
'>>>':'rightLogShift'};


while(token in operators) {
name = token;
fn = operators[name];

getTokenSkipNewline();
params = [node,parseConversion()];
node = new OperatorNode(name,fn,params);}


return node;}







function parseConversion(){
var node,operators,name,fn,params;

node = parseRange();

operators = {
'to':'to',
'in':'to'};


while(token in operators) {
name = token;
fn = operators[name];

getTokenSkipNewline();
params = [node,parseRange()];
node = new OperatorNode(name,fn,params);}


return node;}







function parseRange(){
var node,params=[];

if(token == ':'){

node = new ConstantNode('1','number');}else 

{

node = parseAddSubtract();}


if(token == ':' && conditional_level !== nesting_level){

params.push(node);


while(token == ':' && params.length < 3) {
getTokenSkipNewline();

if(token == ')' || token == ']' || token == ',' || token == ''){

params.push(new SymbolNode('end'));}else 

{

params.push(parseAddSubtract());}}



if(params.length == 3){

node = new RangeNode(params[0],params[2],params[1]);}else 

{

node = new RangeNode(params[0],params[1]);}}



return node;}







function parseAddSubtract(){
var node,operators,name,fn,params;

node = parseMultiplyDivide();

operators = {
'+':'add',
'-':'subtract'};

while(token in operators) {
name = token;
fn = operators[name];

getTokenSkipNewline();
params = [node,parseMultiplyDivide()];
node = new OperatorNode(name,fn,params);}


return node;}







function parseMultiplyDivide(){
var node,last,operators,name,fn;

node = parseUnary();
last = node;

operators = {
'*':'multiply',
'.*':'dotMultiply',
'/':'divide',
'./':'dotDivide',
'%':'mod',
'mod':'mod'};


while(true) {
if(token in operators){

name = token;
fn = operators[name];

getTokenSkipNewline();

last = parseUnary();
node = new OperatorNode(name,fn,[node,last]);}else 

if(token_type == TOKENTYPE.SYMBOL || 
token == 'in' && (node && node.isConstantNode) || 
token_type == TOKENTYPE.NUMBER && !last.isConstantNode || (
token == '(' || token == '[')){







last = parseUnary();
node = new OperatorNode('*','multiply',[node,last]);}else 

{
break;}}



return node;}







function parseUnary(){
var name,params;
var fn=({
'-':'unaryMinus',
'+':'unaryPlus',
'~':'bitNot',
'not':'not'})[
token];

if(fn){
name = token;

getTokenSkipNewline();
params = [parseUnary()];

return new OperatorNode(name,fn,params);}


return parsePow();}








function parsePow(){
var node,name,fn,params;

node = parseLeftHandOperators();

if(token == '^' || token == '.^'){
name = token;
fn = name == '^'?'pow':'dotPow';

getTokenSkipNewline();
params = [node,parseUnary()];
node = new OperatorNode(name,fn,params);}


return node;}







function parseLeftHandOperators(){
var node,operators,name,fn,params;

node = parseCustomNodes();

operators = {
'!':'factorial',
'\'':'transpose'};


while(token in operators) {
name = token;
fn = operators[name];

getToken();
params = [node];

node = new OperatorNode(name,fn,params);}


return node;}






























function parseCustomNodes(){
var params=[],handler;

if(token_type == TOKENTYPE.SYMBOL && extra_nodes[token]){
handler = extra_nodes[token];

getToken();


if(token == '('){
params = [];

openParams();
getToken();

if(token != ')'){
params.push(parseConditional());


while(token == ',') {
getToken();
params.push(parseConditional());}}



if(token != ')'){
throw createSyntaxError('Parenthesis ) expected');}

closeParams();
getToken();}




return new handler(params);}


return parseSymbol();}







function parseSymbol(){
var node,name;

if(token_type == TOKENTYPE.SYMBOL || 
token_type == TOKENTYPE.DELIMITER && token in NAMED_DELIMITERS){
name = token;

getToken();


node = parseFunctions(name);
node = parseIndex(node);
return node;}


return parseString();}








function parseFunctions(name){
var params;

if(token == '('){
params = [];

openParams();
getToken();

if(token != ')'){
params.push(parseConditional());


while(token == ',') {
getToken();
params.push(parseConditional());}}



if(token != ')'){
throw createSyntaxError('Parenthesis ) expected');}

closeParams();
getToken();

return new FunctionNode(name,params);}


return new SymbolNode(name);}










function parseIndex(node){
var params;

while(token == '[') {
params = [];

openParams();
getToken();

if(token != ']'){
params.push(parseConditional());


while(token == ',') {
getToken();
params.push(parseConditional());}}



if(token != ']'){
throw createSyntaxError('Parenthesis ] expected');}

closeParams();
getToken();

node = new IndexNode(node,params);}


return node;}








function parseString(){
var node,str,tPrev;

if(token == '"'){

str = '';
tPrev = '';
while(c != '' && (c != '\"' || tPrev == '\\')) {
str += c;
tPrev = c;
next();}


getToken();
if(token != '"'){
throw createSyntaxError('End of string " expected');}

getToken();


node = new ConstantNode(str,'string');


node = parseIndex(node);

return node;}


return parseMatrix();}







function parseMatrix(){
var array,params,rows,cols;

if(token == '['){

openParams();
getToken();

if(token != ']'){

var row=parseRow();

if(token == ';'){

rows = 1;
params = [row];


while(token == ';') {
getToken();

params[rows] = parseRow();
rows++;}


if(token != ']'){
throw createSyntaxError('End of matrix ] expected');}

closeParams();
getToken();


cols = params[0].nodes.length;
for(var r=1;r < rows;r++) {
if(params[r].nodes.length != cols){
throw createError('Column dimensions mismatch ' + 
'(' + params[r].nodes.length + ' != ' + cols + ')');}}



array = new ArrayNode(params);}else 

{

if(token != ']'){
throw createSyntaxError('End of matrix ] expected');}

closeParams();
getToken();

array = row;}}else 


{

closeParams();
getToken();
array = new ArrayNode([]);}


return array;}


return parseNumber();}






function parseRow(){
var params=[parseAssignment()];
var len=1;

while(token == ',') {
getToken();


params[len] = parseAssignment();
len++;}


return new ArrayNode(params);}







function parseNumber(){
var number;

if(token_type == TOKENTYPE.NUMBER){

number = token;
getToken();

return new ConstantNode(number,'number');}


return parseParentheses();}







function parseParentheses(){
var node;


if(token == '('){

openParams();
getToken();

node = parseAssignment();

if(token != ')'){
throw createSyntaxError('Parenthesis ) expected');}

closeParams();
getToken();

return new ParenthesisNode(node);}


return parseEnd();}







function parseEnd(){
if(token == ''){

throw createSyntaxError('Unexpected end of expression');}else 
{
throw createSyntaxError('Value expected');}}



















function col(){
return index - token.length + 1;}








function createSyntaxError(message){
var c=col();
var error=new SyntaxError(message + ' (char ' + c + ')');
error['char'] = c;

return error;}








function createError(message){
var c=col();
var error=new Error(message + ' (char ' + c + ')');
error['char'] = c;

return error;}


return parse;}
;

exports.name = 'parse';
exports.path = 'expression';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/ArrayNode.js',["mathjs/lib/utils/string.js","mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

var string=require('mathjs/lib/utils/string.js');

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));







function ArrayNode(nodes){
if(!(this instanceof ArrayNode)){
throw new SyntaxError('Constructor must be called with the new operator');}


this.nodes = nodes || [];


if(!Array.isArray(this.nodes) || 
!this.nodes.every(function(node){return node && node.isNode;})){
throw new TypeError('Array containing Nodes expected');}}



ArrayNode.prototype = new Node();

ArrayNode.prototype.type = 'ArrayNode';

ArrayNode.prototype.isArrayNode = true;








ArrayNode.prototype._compile = function(defs){
var asMatrix=defs.math.config().matrix !== 'array';

var nodes=this.nodes.map(function(node){
return node._compile(defs);});


return (asMatrix?'math.matrix([':'[') + 
nodes.join(',') + (
asMatrix?'])':']');};






ArrayNode.prototype.forEach = function(callback){
for(var i=0;i < this.nodes.length;i++) {
var node=this.nodes[i];
callback(node,'nodes[' + i + ']',this);}};









ArrayNode.prototype.map = function(callback){
var nodes=[];
for(var i=0;i < this.nodes.length;i++) {
nodes[i] = this._ifNode(callback(this.nodes[i],'nodes[' + i + ']',this));}

return new ArrayNode(nodes);};






ArrayNode.prototype.clone = function(){
return new ArrayNode(this.nodes.slice(0));};








ArrayNode.prototype._toString = function(options){
return string.format(this.nodes);};







ArrayNode.prototype._toTex = function(options){
var s='\\begin{bmatrix}';

this.nodes.forEach(function(node){
if(node.nodes){
s += node.nodes.map(function(childNode){
return childNode.toTex(options);}).
join('&');}else 

{
s += node.toTex(options);}



s += '\\\\';});

s += '\\end{bmatrix}';
return s;};


return ArrayNode;}


exports.name = 'ArrayNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/Node.js',["mathjs/lib/expression/keywords.js","mathjs/lib/utils/object.js"],function(global, require, module, exports) {  'use strict';

var keywords=require('mathjs/lib/expression/keywords.js');
var extend=require('mathjs/lib/utils/object.js').extend;

function factory(type,config,load,typed,math){



function Node(){
if(!(this instanceof Node)){
throw new SyntaxError('Constructor must be called with the new operator');}}








Node.prototype.eval = function(scope){
return this.compile().eval(scope);};


Node.prototype.type = 'Node';

Node.prototype.isNode = true;








Node.prototype.compile = function(){

if(arguments.length > 0){
throw new Error('Calling compile(math) is deprecated. Call the function as compile() instead.');}



var defs={
math:math.expression.transform,
args:{},
_validateScope:_validateScope};


var code=this._compile(defs);

var defsCode=Object.keys(defs).map(function(name){
return '    var ' + name + ' = defs["' + name + '"];';});


var factoryCode=
defsCode.join(' ') + 
'return {' + 
'  "eval": function (scope) {' + 
'    if (scope) _validateScope(scope);' + 
'    scope = scope || {};' + 
'    return ' + code + ';' + 
'  }' + 
'};';

var factory=new Function('defs',factoryCode);
return factory(defs);};










Node.prototype._compile = function(defs){

throw new Error('Cannot compile a Node interface');};






Node.prototype.forEach = function(callback){

throw new Error('Cannot run forEach on a Node interface');};








Node.prototype.map = function(callback){

throw new Error('Cannot run map on a Node interface');};








Node.prototype._ifNode = function(node){
if(!(node && node.isNode)){
throw new TypeError('Callback function must return a Node');}


return node;};








Node.prototype.traverse = function(callback){

callback(this,null,null);


function _traverse(node,callback){
node.forEach(function(child,path,parent){
callback(child,path,parent);
_traverse(child,callback);});}



_traverse(this,callback);};























Node.prototype.transform = function(callback){

function _transform(node,callback){
return node.map(function(child,path,parent){
var replacement=callback(child,path,parent);
return _transform(replacement,callback);});}



var replacement=callback(this,null,null);
return _transform(replacement,callback);};
















Node.prototype.filter = function(callback){
var nodes=[];

this.traverse(function(node,path,parent){
if(callback(node,path,parent)){
nodes.push(node);}});



return nodes;};



Node.prototype.find = function(){
throw new Error('Function Node.find is deprecated. Use Node.filter instead.');};



Node.prototype.match = function(){
throw new Error('Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.');};






Node.prototype.clone = function(){

throw new Error('Cannot clone a Node interface');};


















Node.prototype.toString = function(options){
var customString;
if(options && typeof options == "object"){
switch(typeof options.handler){
case 'object':
case 'undefined':
break;
case 'function':
customString = options.handler(this,options);
break;
default:
throw new TypeError('Object or function expected as callback');}}



if(typeof customString !== 'undefined'){
return customString;}


return this._toString(options);};








Node.prototype._toString = function(){

throw new Error('_toString not implemented for ' + this.type);};

















Node.prototype.toTex = function(options){
var customTex;
if(options && typeof options == 'object'){
switch(typeof options.handler){
case 'object':
case 'undefined':
break;
case 'function':
customTex = options.handler(this,options);
break;
default:
throw new TypeError('Object or function expected as callback');}}



if(typeof customTex !== 'undefined'){
return customTex;}


return this._toTex(options);};









Node.prototype._toTex = function(options){

throw new Error('_toTex not implemented for ' + this.type);};






Node.prototype.getIdentifier = function(){
return this.type;};






Node.prototype.getContent = function(){
return this;};







function _validateScope(scope){
for(var symbol in scope) {
if(scope.hasOwnProperty(symbol)){
if(symbol in keywords){
throw new Error('Scope contains an illegal symbol, "' + symbol + '" is a reserved keyword');}}}}





return Node;}


exports.name = 'Node';
exports.path = 'expression.node';
exports.math = true;
exports.factory = factory;
});
__d('mathjs/lib/expression/keywords.js',[],function(global, require, module, exports) {  'use strict';


module.exports = {
end:true};
});
__d('mathjs/lib/expression/node/AssignmentNode.js',["mathjs/lib/utils/latex.js","mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/ArrayNode.js","mathjs/lib/expression/keywords.js","mathjs/lib/expression/operators.js"],function(global, require, module, exports) {  'use strict';

var latex=require('mathjs/lib/utils/latex.js');

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var ArrayNode=load(require('mathjs/lib/expression/node/ArrayNode.js'));

var keywords=require('mathjs/lib/expression/keywords.js');
var operators=require('mathjs/lib/expression/operators.js');









function AssignmentNode(name,expr){
if(!(this instanceof AssignmentNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(typeof name !== 'string')throw new TypeError('String expected for parameter "name"');
if(!(expr && expr.isNode))throw new TypeError('Node expected for parameter "expr"');
if(name in keywords)throw new Error('Illegal symbol name, "' + name + '" is a reserved keyword');

this.name = name;
this.expr = expr;}


AssignmentNode.prototype = new Node();

AssignmentNode.prototype.type = 'AssignmentNode';

AssignmentNode.prototype.isAssignmentNode = true;








AssignmentNode.prototype._compile = function(defs){
return 'scope["' + this.name + '"] = ' + this.expr._compile(defs) + '';};







AssignmentNode.prototype.forEach = function(callback){
callback(this.expr,'expr',this);};








AssignmentNode.prototype.map = function(callback){
return new AssignmentNode(this.name,this._ifNode(callback(this.expr,'expr',this)));};






AssignmentNode.prototype.clone = function(){
return new AssignmentNode(this.name,this.expr);};








function needParenthesis(node,parenthesis){
var precedence=operators.getPrecedence(node,parenthesis);
var exprPrecedence=operators.getPrecedence(node.expr,parenthesis);
return parenthesis === 'all' || 
exprPrecedence !== null && exprPrecedence <= precedence;}







AssignmentNode.prototype._toString = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var expr=this.expr.toString(options);
if(needParenthesis(this,parenthesis)){
expr = '(' + expr + ')';}

return this.name + ' = ' + expr;};







AssignmentNode.prototype._toTex = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var expr=this.expr.toTex(options);
if(needParenthesis(this,parenthesis)){
expr = '\\left(' + expr + '\\right)';}


return latex.toSymbol(this.name) + ':=' + expr;};


return AssignmentNode;}


exports.name = 'AssignmentNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/operators.js',[],function(global, require, module, exports) {  'use strict';



















var properties=[
{
'AssignmentNode':{},
'FunctionAssignmentNode':{}},

{
'ConditionalNode':{
latexLeftParens:false,
latexRightParens:false,
latexParens:false}},




{
'OperatorNode:or':{
associativity:'left',
associativeWith:[]}},



{
'OperatorNode:xor':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:and':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:bitOr':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:bitXor':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:bitAnd':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:equal':{
associativity:'left',
associativeWith:[]},

'OperatorNode:unequal':{
associativity:'left',
associativeWith:[]},

'OperatorNode:smaller':{
associativity:'left',
associativeWith:[]},

'OperatorNode:larger':{
associativity:'left',
associativeWith:[]},

'OperatorNode:smallerEq':{
associativity:'left',
associativeWith:[]},

'OperatorNode:largerEq':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:leftShift':{
associativity:'left',
associativeWith:[]},

'OperatorNode:rightArithShift':{
associativity:'left',
associativeWith:[]},

'OperatorNode:rightLogShift':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:to':{
associativity:'left',
associativeWith:[]}},


{
'RangeNode':{}},

{
'OperatorNode:add':{
associativity:'left',
associativeWith:['OperatorNode:add','OperatorNode:subtract']},

'OperatorNode:subtract':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:multiply':{
associativity:'left',
associativeWith:[
'OperatorNode:multiply',
'OperatorNode:divide',
'Operator:dotMultiply',
'Operator:dotDivide']},


'OperatorNode:divide':{
associativity:'left',
associativeWith:[],
latexLeftParens:false,
latexRightParens:false,
latexParens:false},




'OperatorNode:dotMultiply':{
associativity:'left',
associativeWith:[
'OperatorNode:multiply',
'OperatorNode:divide',
'OperatorNode:dotMultiply',
'OperatorNode:doDivide']},


'OperatorNode:dotDivide':{
associativity:'left',
associativeWith:[]},

'OperatorNode:mod':{
associativity:'left',
associativeWith:[]}},


{
'OperatorNode:unaryPlus':{
associativity:'right'},

'OperatorNode:unaryMinus':{
associativity:'right'},

'OperatorNode:bitNot':{
associativity:'right'},

'OperatorNode:not':{
associativity:'right'}},


{
'OperatorNode:pow':{
associativity:'right',
associativeWith:[],
latexRightParens:false},




'OperatorNode:dotPow':{
associativity:'right',
associativeWith:[]}},


{
'OperatorNode:factorial':{
associativity:'left'}},


{
'OperatorNode:transpose':{
associativity:'left'}}];













function getPrecedence(_node,parenthesis){
var node=_node;
if(parenthesis !== 'keep'){

node = _node.getContent();}

var identifier=node.getIdentifier();
for(var i=0;i < properties.length;i++) {
if(identifier in properties[i]){
return i;}}


return null;}












function getAssociativity(_node,parenthesis){
var node=_node;
if(parenthesis !== 'keep'){

node = _node.getContent();}

var identifier=node.getIdentifier();
var index=getPrecedence(node,parenthesis);
if(index === null){

return null;}

var property=properties[index][identifier];

if(property.hasOwnProperty('associativity')){
if(property.associativity === 'left'){
return 'left';}

if(property.associativity === 'right'){
return 'right';}


throw Error('\'' + identifier + '\' has the invalid associativity \'' + 
property.associativity + '\'.');}



return null;}











function isAssociativeWith(nodeA,nodeB,parenthesis){
var a=nodeA;
var b=nodeB;
if(parenthesis !== 'keep'){

var a=nodeA.getContent();
var b=nodeB.getContent();}

var identifierA=a.getIdentifier();
var identifierB=b.getIdentifier();
var index=getPrecedence(a,parenthesis);
if(index === null){

return null;}

var property=properties[index][identifierA];

if(property.hasOwnProperty('associativeWith') && 
property.associativeWith instanceof Array){
for(var i=0;i < property.associativeWith.length;i++) {
if(property.associativeWith[i] === identifierB){
return true;}}


return false;}



return null;}


module.exports.properties = properties;
module.exports.getPrecedence = getPrecedence;
module.exports.getAssociativity = getAssociativity;
module.exports.isAssociativeWith = isAssociativeWith;
});
__d('mathjs/lib/expression/node/BlockNode.js',["mathjs/lib/expression/node/Node.js","mathjs/lib/type/resultset/ResultSet.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var ResultSet=load(require('mathjs/lib/type/resultset/ResultSet.js'));










function BlockNode(blocks){
if(!(this instanceof BlockNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(!Array.isArray(blocks))throw new Error('Array expected');
this.blocks = blocks.map(function(block){
var node=block && block.node;
var visible=block && block.visible !== undefined?block.visible:true;

if(!(node && node.isNode))throw new TypeError('Property "node" must be a Node');
if(typeof visible !== 'boolean')throw new TypeError('Property "visible" must be a boolean');

return {
node:node,
visible:visible};});}




BlockNode.prototype = new Node();

BlockNode.prototype.type = 'BlockNode';

BlockNode.prototype.isBlockNode = true;









BlockNode.prototype._compile = function(defs){
defs.ResultSet = ResultSet;
var blocks=this.blocks.map(function(param){
var js=param.node._compile(defs);
if(param.visible){
return 'results.push(' + js + ');';}else 

{
return js + ';';}});



return '(function () {' + 
'var results = [];' + 
blocks.join('') + 
'return new ResultSet(results);' + 
'})()';};






BlockNode.prototype.forEach = function(callback){
for(var i=0;i < this.blocks.length;i++) {
callback(this.blocks[i].node,'blocks[' + i + '].node',this);}};









BlockNode.prototype.map = function(callback){
var blocks=[];
for(var i=0;i < this.blocks.length;i++) {
var block=this.blocks[i];
var node=this._ifNode(callback(block.node,'blocks[' + i + '].node',this));
blocks[i] = {
node:node,
visible:block.visible};}


return new BlockNode(blocks);};






BlockNode.prototype.clone = function(){
var blocks=this.blocks.map(function(block){
return {
node:block.node,
visible:block.visible};});



return new BlockNode(blocks);};








BlockNode.prototype._toString = function(options){
return this.blocks.map(function(param){
return param.node.toString(options) + (param.visible?'':';');}).
join('\n');};







BlockNode.prototype._toTex = function(options){
return this.blocks.map(function(param){
return param.node.toTex(options) + (param.visible?'':';');}).
join('\\;\\;\n');};


return BlockNode;}


exports.name = 'BlockNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/ConditionalNode.js',["mathjs/lib/utils/latex.js","mathjs/lib/expression/operators.js","mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

var latex=require('mathjs/lib/utils/latex.js');
var operators=require('mathjs/lib/expression/operators.js');

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));











function ConditionalNode(condition,trueExpr,falseExpr){
if(!(this instanceof ConditionalNode)){
throw new SyntaxError('Constructor must be called with the new operator');}

if(!(condition && condition.isNode))throw new TypeError('Parameter condition must be a Node');
if(!(trueExpr && trueExpr.isNode))throw new TypeError('Parameter trueExpr must be a Node');
if(!(falseExpr && falseExpr.isNode))throw new TypeError('Parameter falseExpr must be a Node');

this.condition = condition;
this.trueExpr = trueExpr;
this.falseExpr = falseExpr;}


ConditionalNode.prototype = new Node();

ConditionalNode.prototype.type = 'ConditionalNode';

ConditionalNode.prototype.isConditionalNode = true;









ConditionalNode.prototype._compile = function(defs){





defs.testCondition = function(condition){
if(typeof condition === 'number' || 
typeof condition === 'boolean' || 
typeof condition === 'string'){
return condition?true:false;}


if(condition){
if(condition.isBigNumber === true){
return condition.isZero()?false:true;}


if(condition.isComplex === true){
return condition.re || condition.im?true:false;}


if(condition.isUnit === true){
return condition.value?true:false;}}



if(condition === null || condition === undefined){
return false;}


throw new TypeError('Unsupported type of condition "' + defs.math['typeof'](condition) + '"');};


return (
'testCondition(' + this.condition._compile(defs) + ') ? ' + 
'( ' + this.trueExpr._compile(defs) + ') : ' + 
'( ' + this.falseExpr._compile(defs) + ')');};







ConditionalNode.prototype.forEach = function(callback){
callback(this.condition,'condition',this);
callback(this.trueExpr,'trueExpr',this);
callback(this.falseExpr,'falseExpr',this);};








ConditionalNode.prototype.map = function(callback){
return new ConditionalNode(
this._ifNode(callback(this.condition,'condition',this)),
this._ifNode(callback(this.trueExpr,'trueExpr',this)),
this._ifNode(callback(this.falseExpr,'falseExpr',this)));};







ConditionalNode.prototype.clone = function(){
return new ConditionalNode(this.condition,this.trueExpr,this.falseExpr);};







ConditionalNode.prototype._toString = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var precedence=operators.getPrecedence(this,parenthesis);





var condition=this.condition.toString(options);
var conditionPrecedence=operators.getPrecedence(this.condition,parenthesis);
if(parenthesis === 'all' || 
this.condition.type === 'OperatorNode' || 
conditionPrecedence !== null && conditionPrecedence <= precedence){
condition = '(' + condition + ')';}


var trueExpr=this.trueExpr.toString(options);
var truePrecedence=operators.getPrecedence(this.trueExpr,parenthesis);
if(parenthesis === 'all' || 
this.trueExpr.type === 'OperatorNode' || 
truePrecedence !== null && truePrecedence <= precedence){
trueExpr = '(' + trueExpr + ')';}


var falseExpr=this.falseExpr.toString(options);
var falsePrecedence=operators.getPrecedence(this.falseExpr,parenthesis);
if(parenthesis === 'all' || 
this.falseExpr.type === 'OperatorNode' || 
falsePrecedence !== null && falsePrecedence <= precedence){
falseExpr = '(' + falseExpr + ')';}

return condition + ' ? ' + trueExpr + ' : ' + falseExpr;};







ConditionalNode.prototype._toTex = function(options){
return '\\left\\{\\begin{array}{l l}{' + 
this.trueExpr.toTex(options) + '}, &\\quad{\\text{if}\\;' + 
this.condition.toTex(options) + 
'}\\\\{' + this.falseExpr.toTex(options) + 
'}, &\\quad{\\text{otherwise}}\\end{array}\\right.';};


return ConditionalNode;}


exports.name = 'ConditionalNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/ConstantNode.js',["mathjs/lib/utils/types.js","mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

var getType=require('mathjs/lib/utils/types.js').type;

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));































function ConstantNode(value,valueType){
if(!(this instanceof ConstantNode)){
throw new SyntaxError('Constructor must be called with the new operator');}


if(valueType){
if(typeof valueType !== 'string'){
throw new TypeError('String expected for parameter "valueType"');}

if(typeof value !== 'string'){
throw new TypeError('String expected for parameter "value"');}


this.value = value;
this.valueType = valueType;}else 

{

this.value = value + '';
this.valueType = getType(value);}


if(!SUPPORTED_TYPES[this.valueType]){
throw new TypeError('Unsupported type of value "' + this.valueType + '"');}}



var SUPPORTED_TYPES={
'number':true,
'string':true,
'boolean':true,
'undefined':true,
'null':true};


ConstantNode.prototype = new Node();

ConstantNode.prototype.type = 'ConstantNode';

ConstantNode.prototype.isConstantNode = true;









ConstantNode.prototype._compile = function(defs){
switch(this.valueType){
case 'number':

var numConfig=defs.math.config().number;
if(numConfig === 'bignumber'){
return 'math.bignumber("' + this.value + '")';}else 

if(numConfig === 'fraction'){
return 'math.fraction("' + this.value + '")';}else 

{

return this.value.replace(/^(0*)[0-9]/,function(match,zeros){
return match.substring(zeros.length);});}



case 'string':
return '"' + this.value + '"';

case 'boolean':
return this.value;

case 'undefined':
return this.value;

case 'null':
return this.value;

default:

throw new TypeError('Unsupported type of constant "' + this.valueType + '"');}};







ConstantNode.prototype.forEach = function(callback){};










ConstantNode.prototype.map = function(callback){
return this.clone();};






ConstantNode.prototype.clone = function(){
return new ConstantNode(this.value,this.valueType);};







ConstantNode.prototype._toString = function(options){
switch(this.valueType){
case 'string':
return '"' + this.value + '"';

default:
return this.value;}};








ConstantNode.prototype._toTex = function(options){
var value=this.value,
index;
switch(this.valueType){
case 'string':
return '\\mathtt{"' + value + '"}';

case 'number':
index = value.toLowerCase().indexOf('e');
if(index !== -1){
return value.substring(0,index) + '\\cdot10^{' + 
value.substring(index + 1) + '}';}

return value;

default:
return value;}};



return ConstantNode;}


exports.name = 'ConstantNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/FunctionAssignmentNode.js',["mathjs/lib/expression/keywords.js","mathjs/lib/utils/latex.js","mathjs/lib/expression/operators.js","mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

var keywords=require('mathjs/lib/expression/keywords.js');
var latex=require('mathjs/lib/utils/latex.js');
var operators=require('mathjs/lib/expression/operators.js');

function isString(x){
return typeof x === 'string';}


function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));










function FunctionAssignmentNode(name,params,expr){
if(!(this instanceof FunctionAssignmentNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(typeof name !== 'string')throw new TypeError('String expected for parameter "name"');
if(!Array.isArray(params) || !params.every(isString))throw new TypeError('Array containing strings expected for parameter "params"');
if(!(expr && expr.isNode))throw new TypeError('Node expected for parameter "expr"');
if(name in keywords)throw new Error('Illegal function name, "' + name + '" is a reserved keyword');

this.name = name;
this.params = params;
this.expr = expr;}


FunctionAssignmentNode.prototype = new Node();

FunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';

FunctionAssignmentNode.prototype.isFunctionAssignmentNode = true;









FunctionAssignmentNode.prototype._compile = function(defs){

this.params.forEach(function(variable){
defs.args[variable] = true;});


return 'scope["' + this.name + '"] = ' + 
'  (function () {' + 
'    var fn = function ' + this.name + '(' + this.params.join(',') + ') {' + 
'      if (arguments.length != ' + this.params.length + ') {' + 


'        throw new SyntaxError("Wrong number of arguments in function ' + this.name + ' (" + arguments.length + " provided, ' + this.params.length + ' expected)");' + 
'      }' + 
'      return ' + this.expr._compile(defs) + '' + 
'    };' + 
'    fn.syntax = "' + this.name + '(' + this.params.join(', ') + ')";' + 
'    return fn;' + 
'  })()';};






FunctionAssignmentNode.prototype.forEach = function(callback){
callback(this.expr,'expr',this);};








FunctionAssignmentNode.prototype.map = function(callback){
var expr=this._ifNode(callback(this.expr,'expr',this));

return new FunctionAssignmentNode(this.name,this.params.slice(0),expr);};






FunctionAssignmentNode.prototype.clone = function(){
return new FunctionAssignmentNode(this.name,this.params.slice(0),this.expr);};








function needParenthesis(node,parenthesis){
var precedence=operators.getPrecedence(node,parenthesis);
var exprPrecedence=operators.getPrecedence(node.expr,parenthesis);

return parenthesis === 'all' || 
exprPrecedence !== null && exprPrecedence <= precedence;}







FunctionAssignmentNode.prototype._toString = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var expr=this.expr.toString(options);
if(needParenthesis(this,parenthesis)){
expr = '(' + expr + ')';}

return 'function ' + this.name + 
'(' + this.params.join(', ') + ') = ' + expr;};







FunctionAssignmentNode.prototype._toTex = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var expr=this.expr.toTex(options);
if(needParenthesis(this,parenthesis)){
expr = '\\left(' + expr + '\\right)';}


return '\\mathrm{' + this.name + 
'}\\left(' + this.params.map(latex.toSymbol).join(',') + '\\right):=' + expr;};


return FunctionAssignmentNode;}

exports.name = 'FunctionAssignmentNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/IndexNode.js',["mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/RangeNode.js","mathjs/lib/expression/node/SymbolNode.js","mathjs/lib/type/matrix/Range.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var RangeNode=load(require('mathjs/lib/expression/node/RangeNode.js'));
var SymbolNode=load(require('mathjs/lib/expression/node/SymbolNode.js'));

var Range=load(require('mathjs/lib/type/matrix/Range.js'));

var isArray=Array.isArray;










function IndexNode(object,ranges){
if(!(this instanceof IndexNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(!(object && object.isNode))throw new TypeError('Node expected for parameter "object"');
if(!isArray(ranges) || 
!ranges.every(function(range){return range && range.isNode;})){
throw new TypeError('Array containing Nodes expected for parameter "ranges"');}


this.object = object;
this.ranges = ranges;}


IndexNode.prototype = new Node();

IndexNode.prototype.type = 'IndexNode';

IndexNode.prototype.isIndexNode = true;









IndexNode.prototype._compile = function(defs){
return this.compileSubset(defs);};














IndexNode.prototype.compileSubset = function(defs,replacement){

function test(node){
return node && node.isSymbolNode && node.name == 'end';}


var someUseEnd=false;
var rangesUseEnd=this.ranges.map(function(range){
var useEnd=range.filter(test).length > 0;
someUseEnd = useEnd?useEnd:someUseEnd;
return useEnd;});



defs.range = function(start,end,step){
return new Range(
start && start.isBigNumber === true?start.toNumber():start,
end && end.isBigNumber === true?end.toNumber():end,
step && step.isBigNumber === true?step.toNumber():step);};









var ranges=this.ranges.map(function(range,i){
var useEnd=rangesUseEnd[i];
if(range && range.isRangeNode){
if(useEnd){
defs.args.end = true;


return '(function () {' + 
'  var end = size[' + i + '];' + 
'  return range(' + 
'    ' + range.start._compile(defs) + ', ' + 
'    ' + range.end._compile(defs) + ', ' + 
'    ' + (range.step?range.step._compile(defs):'1') + 
'  );' + 
'})()';}else 

{

return 'range(' + 
range.start._compile(defs) + ', ' + 
range.end._compile(defs) + ', ' + (
range.step?range.step._compile(defs):'1') + 
')';}}else 


{
if(useEnd){
defs.args.end = true;


return '(function () {' + 
'  var end = size[' + i + '];' + 
'  return ' + range._compile(defs) + ';' + 
'})()';}else 

{

return range._compile(defs);}}});





if(someUseEnd){
return '(function () {' + 
'  var obj = ' + this.object._compile(defs) + ';' + 
'  var size = math.size(obj).valueOf();' + 
'  return math.subset(' + 
'    obj, ' + 
'    math.index(' + ranges.join(', ') + ')' + 
'    ' + (replacement?', ' + replacement:'') + 
'  );' + 
'})()';}else 

{
return 'math.subset(' + 
this.object._compile(defs) + ',' + 
'math.index(' + ranges.join(', ') + ')' + (
replacement?', ' + replacement:'') + 
')';}};







IndexNode.prototype.forEach = function(callback){

callback(this.object,'object',this);


for(var i=0;i < this.ranges.length;i++) {
callback(this.ranges[i],'ranges[' + i + ']',this);}};









IndexNode.prototype.map = function(callback){
var object=this._ifNode(callback(this.object,'object',this));

var ranges=[];
for(var i=0;i < this.ranges.length;i++) {
ranges[i] = this._ifNode(callback(this.ranges[i],'ranges[' + i + ']',this));}


return new IndexNode(object,ranges);};






IndexNode.prototype.objectName = function(){
return this.object.name;};






IndexNode.prototype.clone = function(){
return new IndexNode(this.object,this.ranges.slice(0));};






function needParenthesis(node){
switch(node.object.type){
case 'ArrayNode':
case 'ConstantNode':
case 'SymbolNode':
case 'ParenthesisNode':

return false;
default:
return true;}}








IndexNode.prototype._toString = function(options){
var object=this.object.toString(options);
if(needParenthesis(this)){
object = '(' + object + '(';}


return object + '[' + this.ranges.join(', ') + ']';};







IndexNode.prototype._toTex = function(options){
var object=this.object.toTex(options);
if(needParenthesis(this)){
object = '\\left(' + object + '\\right)';}


var ranges=this.ranges.map(function(range){
return range.toTex(options);});


return object + '_{' + ranges.join(',') + '}';};


return IndexNode;}


exports.name = 'IndexNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/RangeNode.js',["mathjs/lib/expression/operators.js","mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

var operators=require('mathjs/lib/expression/operators.js');

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));









function RangeNode(start,end,step){
if(!(this instanceof RangeNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(!(start && start.isNode))throw new TypeError('Node expected');
if(!(end && end.isNode))throw new TypeError('Node expected');
if(step && !(step && step.isNode))throw new TypeError('Node expected');
if(arguments.length > 3)throw new Error('Too many arguments');

this.start = start;
this.end = end;
this.step = step || null;}


RangeNode.prototype = new Node();

RangeNode.prototype.type = 'RangeNode';

RangeNode.prototype.isRangeNode = true;









RangeNode.prototype._compile = function(defs){
return 'math.range(' + 
this.start._compile(defs) + ', ' + 
this.end._compile(defs) + (
this.step?', ' + this.step._compile(defs):'') + 
')';};






RangeNode.prototype.forEach = function(callback){
callback(this.start,'start',this);
callback(this.end,'end',this);
if(this.step){
callback(this.step,'step',this);}};









RangeNode.prototype.map = function(callback){
return new RangeNode(
this._ifNode(callback(this.start,'start',this)),
this._ifNode(callback(this.end,'end',this)),
this.step && this._ifNode(callback(this.step,'step',this)));};







RangeNode.prototype.clone = function(){
return new RangeNode(this.start,this.end,this.step && this.step);};









function calculateNecessaryParentheses(node,parenthesis){
var precedence=operators.getPrecedence(node,parenthesis);
var parens={};

var startPrecedence=operators.getPrecedence(node.start,parenthesis);
parens.start = startPrecedence !== null && startPrecedence <= precedence || 
parenthesis === 'all';

if(node.step){
var stepPrecedence=operators.getPrecedence(node.step,parenthesis);
parens.step = stepPrecedence !== null && stepPrecedence <= precedence || 
parenthesis === 'all';}


var endPrecedence=operators.getPrecedence(node.end,parenthesis);
parens.end = endPrecedence !== null && endPrecedence <= precedence || 
parenthesis === 'all';

return parens;}







RangeNode.prototype._toString = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var parens=calculateNecessaryParentheses(this,parenthesis);


var str;

var start=this.start.toString(options);
if(parens.start){
start = '(' + start + ')';}

str = start;

if(this.step){
var step=this.step.toString(options);
if(parens.step){
step = '(' + step + ')';}

str += ':' + step;}


var end=this.end.toString(options);
if(parens.end){
end = '(' + end + ')';}

str += ':' + end;

return str;};







RangeNode.prototype._toTex = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var parens=calculateNecessaryParentheses(this,parenthesis);

var str=this.start.toTex(options);
if(parens.start){
str = '\\left(' + str + '\\right)';}


if(this.step){
var step=this.step.toTex(options);
if(parens.step){
step = '\\left(' + step + '\\right)';}

str += ':' + step;}


var end=this.end.toTex(options);
if(parens.end){
end = '\\left(' + end + '\\right)';}

str += ':' + end;

return str;};


return RangeNode;}


exports.name = 'RangeNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/SymbolNode.js',["mathjs/lib/utils/latex.js","mathjs/lib/expression/node/Node.js","mathjs/lib/type/unit/Unit.js"],function(global, require, module, exports) {  'use strict';

var latex=require('mathjs/lib/utils/latex.js');

function factory(type,config,load,typed,math){
var Node=load(require('mathjs/lib/expression/node/Node.js'));

var Unit=load(require('mathjs/lib/type/unit/Unit.js'));








function SymbolNode(name){
if(!(this instanceof SymbolNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(typeof name !== 'string')throw new TypeError('String expected for parameter "name"');

this.name = name;}


SymbolNode.prototype = new Node();

SymbolNode.prototype.type = 'SymbolNode';

SymbolNode.prototype.isSymbolNode = true;









SymbolNode.prototype._compile = function(defs){

defs['undef'] = undef;
defs['Unit'] = Unit;

if(this.name in defs.args){


return this.name;}else 

if(this.name in defs.math){
return '("' + this.name + '" in scope ? scope["' + this.name + '"] : math["' + this.name + '"])';}else 

{
return '(' + 
'"' + this.name + '" in scope ? scope["' + this.name + '"] : ' + (
Unit.isValuelessUnit(this.name)?
'new Unit(null, "' + this.name + '")':
'undef("' + this.name + '")') + 
')';}};







SymbolNode.prototype.forEach = function(callback){};









SymbolNode.prototype.map = function(callback){
return this.clone();};






function undef(name){
throw new Error('Undefined symbol ' + name);}






SymbolNode.prototype.clone = function(){
return new SymbolNode(this.name);};








SymbolNode.prototype._toString = function(options){
return this.name;};








SymbolNode.prototype._toTex = function(options){
var isUnit=false;
if(typeof math[this.name] === 'undefined' && Unit.isValuelessUnit(this.name)){
isUnit = true;}

var symbol=latex.toSymbol(this.name,isUnit);
if(symbol[0] === '\\'){

return symbol;}


return ' ' + symbol;};


return SymbolNode;}


exports.name = 'SymbolNode';
exports.path = 'expression.node';
exports.math = true;
exports.factory = factory;
});
__d('mathjs/lib/expression/node/OperatorNode.js',["mathjs/lib/utils/latex.js","mathjs/lib/expression/operators.js","mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/ConstantNode.js","mathjs/lib/expression/node/SymbolNode.js","mathjs/lib/expression/node/FunctionNode.js"],function(global, require, module, exports) {  'use strict';

var latex=require('mathjs/lib/utils/latex.js');
var operators=require('mathjs/lib/expression/operators.js');

function factory(type,config,load,typed,math){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var ConstantNode=load(require('mathjs/lib/expression/node/ConstantNode.js'));
var SymbolNode=load(require('mathjs/lib/expression/node/SymbolNode.js'));
var FunctionNode=load(require('mathjs/lib/expression/node/FunctionNode.js'));










function OperatorNode(op,fn,args){
if(!(this instanceof OperatorNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(typeof op !== 'string'){
throw new TypeError('string expected for parameter "op"');}

if(typeof fn !== 'string'){
throw new TypeError('string expected for parameter "fn"');}

if(!Array.isArray(args) || 
!args.every(function(node){return node && node.isNode;})){
throw new TypeError('Array containing Nodes expected for parameter "args"');}


this.op = op;
this.fn = fn;
this.args = args || [];}


OperatorNode.prototype = new Node();

OperatorNode.prototype.type = 'OperatorNode';

OperatorNode.prototype.isOperatorNode = true;









OperatorNode.prototype._compile = function(defs){
if(!(this.fn in defs.math)){
throw new Error('Function ' + this.fn + ' missing in provided namespace "math"');}


var args=this.args.map(function(arg){
return arg._compile(defs);});

return 'math.' + this.fn + '(' + args.join(', ') + ')';};






OperatorNode.prototype.forEach = function(callback){
for(var i=0;i < this.args.length;i++) {
callback(this.args[i],'args[' + i + ']',this);}};









OperatorNode.prototype.map = function(callback){
var args=[];
for(var i=0;i < this.args.length;i++) {
args[i] = this._ifNode(callback(this.args[i],'args[' + i + ']',this));}

return new OperatorNode(this.op,this.fn,args);};






OperatorNode.prototype.clone = function(){
return new OperatorNode(this.op,this.fn,this.args.slice(0));};















function calculateNecessaryParentheses(root,parenthesis,args,latex){

var precedence=operators.getPrecedence(root,parenthesis);
var associativity=operators.getAssociativity(root,parenthesis);

if(parenthesis === 'all' || args.length > 2){
var parens=[];
args.forEach(function(arg){
switch(arg.getContent().type){
case 'ArrayNode':
case 'ConstantNode':
case 'SymbolNode':
case 'ParenthesisNode':
parens.push(false);
break;
default:
parens.push(true);}});


return parens;}


switch(args.length){
case 0:
return [];
case 1:

var operandPrecedence=operators.getPrecedence(args[0],parenthesis);


if(latex && operandPrecedence !== null){
var operandIdentifier;
var rootIdentifier;
if(parenthesis === 'keep'){
operandIdentifier = args[0].getIdentifier();
rootIdentifier = root.getIdentifier();}else 

{

operandIdentifier = args[0].getContent().getIdentifier();
rootIdentifier = root.getContent().getIdentifier();}

if(operators.properties[precedence][rootIdentifier].latexLeftParens === false){
return [false];}


if(operators.properties[operandPrecedence][operandIdentifier].latexParens === false){
return [false];}}



if(operandPrecedence === null){

return [false];}


if(operandPrecedence <= precedence){

return [true];}



return [false];

case 2:
var lhsParens;

var lhsPrecedence=operators.getPrecedence(args[0],parenthesis);

var assocWithLhs=operators.isAssociativeWith(root,args[0],parenthesis);

if(lhsPrecedence === null){


lhsParens = false;}else 

if(lhsPrecedence === precedence && associativity === 'right' && !assocWithLhs){




lhsParens = true;}else 

if(lhsPrecedence < precedence){
lhsParens = true;}else 

{
lhsParens = false;}


var rhsParens;

var rhsPrecedence=operators.getPrecedence(args[1],parenthesis);

var assocWithRhs=operators.isAssociativeWith(root,args[1],parenthesis);

if(rhsPrecedence === null){


rhsParens = false;}else 

if(rhsPrecedence === precedence && associativity === 'left' && !assocWithRhs){




rhsParens = true;}else 

if(rhsPrecedence < precedence){
rhsParens = true;}else 

{
rhsParens = false;}



if(latex){
var rootIdentifier;
var lhsIdentifier;
var rhsIdentifier;
if(parenthesis === 'keep'){
rootIdentifier = root.getIdentifier();
lhsIdentifier = root.args[0].getIdentifier();
rhsIdentifier = root.args[1].getIdentifier();}else 

{

rootIdentifier = root.getContent().getIdentifier();
lhsIdentifier = root.args[0].getContent().getIdentifier();
rhsIdentifier = root.args[1].getContent().getIdentifier();}


if(lhsPrecedence !== null){
if(operators.properties[precedence][rootIdentifier].latexLeftParens === false){
lhsParens = false;}


if(operators.properties[lhsPrecedence][lhsIdentifier].latexParens === false){
lhsParens = false;}}



if(rhsPrecedence !== null){
if(operators.properties[precedence][rootIdentifier].latexRightParens === false){
rhsParens = false;}


if(operators.properties[rhsPrecedence][rhsIdentifier].latexParens === false){
rhsParens = false;}}}




return [lhsParens,rhsParens];}}








OperatorNode.prototype._toString = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var args=this.args;
var parens=calculateNecessaryParentheses(this,parenthesis,args,false);

switch(args.length){
case 1:
var assoc=operators.getAssociativity(this,parenthesis);

var operand=args[0].toString(options);
if(parens[0]){
operand = '(' + operand + ')';}


if(assoc === 'right'){
return this.op + operand;}else 

if(assoc === 'left'){
return operand + this.op;}



return operand + this.op;

case 2:
var lhs=args[0].toString(options);
var rhs=args[1].toString(options);
if(parens[0]){
lhs = '(' + lhs + ')';}

if(parens[1]){
rhs = '(' + rhs + ')';}


return lhs + ' ' + this.op + ' ' + rhs;

default:

return this.fn + '(' + this.args.join(', ') + ')';}};








OperatorNode.prototype._toTex = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';
var args=this.args;
var parens=calculateNecessaryParentheses(this,parenthesis,args,true);
var op=latex.operators[this.fn];
op = typeof op === 'undefined'?this.op:op;

switch(args.length){
case 1:
var assoc=operators.getAssociativity(this,parenthesis);

var operand=args[0].toTex(options);
if(parens[0]){
operand = '\\left(' + operand + '\\right)';}


if(assoc === 'right'){
return op + operand;}else 

if(assoc === 'left'){
return operand + op;}



return operand + op;

case 2:
var lhs=args[0];
var lhsTex=lhs.toTex(options);
if(parens[0]){
lhsTex = '\\left(' + lhsTex + '\\right)';}


var rhs=args[1];
var rhsTex=rhs.toTex(options);
if(parens[1]){
rhsTex = '\\left(' + rhsTex + '\\right)';}



var lhsIdentifier;
if(parenthesis === 'keep'){
lhsIdentifier = lhs.getIdentifier();}else 

{

lhsIdentifier = lhs.getContent().getIdentifier();}

switch(this.getIdentifier()){
case 'OperatorNode:divide':

return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';
case 'OperatorNode:pow':
lhsTex = '{' + lhsTex + '}';
rhsTex = '{' + rhsTex + '}';
switch(lhsIdentifier){
case 'ConditionalNode':
case 'OperatorNode:divide':
lhsTex = '\\left(' + lhsTex + '\\right)';}}


return lhsTex + op + rhsTex;

default:



return '\\mathrm{' + this.fn + '}\\left(' + 
args.map(function(arg){
return arg.toTex(options);}).
join(',') + '\\right)';}};







OperatorNode.prototype.getIdentifier = function(){
return this.type + ':' + this.fn;};


return OperatorNode;}


exports.name = 'OperatorNode';
exports.path = 'expression.node';
exports.math = true;
exports.factory = factory;
});
__d('mathjs/lib/expression/node/FunctionNode.js',["mathjs/lib/utils/latex.js","mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/SymbolNode.js"],function(global, require, module, exports) {  'use strict';

var latex=require('mathjs/lib/utils/latex.js');

function factory(type,config,load,typed,math){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var SymbolNode=load(require('mathjs/lib/expression/node/SymbolNode.js'));








function FunctionNode(name,args){
if(!(this instanceof FunctionNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(typeof name !== 'string')throw new TypeError('string expected for parameter "name"');
if(!Array.isArray(args) || 
!args.every(function(arg){return arg && arg.isNode;})){
throw new TypeError('Array containing Nodes expected for parameter "args"');}


this.name = name;
this.args = args || [];}


FunctionNode.prototype = new Node();

FunctionNode.prototype.type = 'FunctionNode';

FunctionNode.prototype.isFunctionNode = true;









FunctionNode.prototype._compile = function(defs){
var fn=defs.math[this.name];
var isRaw=typeof fn === 'function' && fn.rawArgs == true;


var args=this.args.map(function(arg){
return arg._compile(defs);});


if(isRaw){

var paramsName;
var i=0;
do {
paramsName = 'p' + i;
i++;}while(

paramsName in defs);
defs[paramsName] = this.args;

return '("' + this.name + '" in scope ? ' + 
'scope["' + this.name + '"](' + args.join(', ') + ') : ' + 
'math["' + this.name + '"]' + '(' + paramsName + ', math, scope))';}else 

{

var symbol=new SymbolNode(this.name);
return symbol._compile(defs) + '(' + args.join(', ') + ')';}};







FunctionNode.prototype.forEach = function(callback){
for(var i=0;i < this.args.length;i++) {
callback(this.args[i],'args[' + i + ']',this);}};









FunctionNode.prototype.map = function(callback){
var args=[];
for(var i=0;i < this.args.length;i++) {
args[i] = this._ifNode(callback(this.args[i],'args[' + i + ']',this));}

return new FunctionNode(this.name,args);};






FunctionNode.prototype.clone = function(){
return new FunctionNode(this.name,this.args.slice(0));};




var nodeToString=FunctionNode.prototype.toString;













FunctionNode.prototype.toString = function(options){
var customString;
if(options && typeof options.handler === 'object' && options.handler.hasOwnProperty(this.name)){

customString = options.handler[this.name](this,options);}


if(typeof customString !== 'undefined'){
return customString;}



return nodeToString.call(this,options);};







FunctionNode.prototype._toString = function(options){

return this.name + '(' + this.args.join(', ') + ')';};










function expandTemplate(template,node,options){
var latex='';



var regex=new RegExp('\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)','ig');

var inputPos=0;
var match;
while((match = regex.exec(template)) !== null) {

latex += template.substring(inputPos,match.index);
inputPos = match.index;

if(match[0] === '$$'){
latex += '$';
inputPos++;}else 

{
inputPos += match[0].length;
var property=node[match[1]];
if(!property){
throw new ReferenceError('Template: Property ' + match[1] + ' does not exist.');}

if(match[2] === undefined){
switch(typeof property){
case 'string':
latex += property;
break;
case 'object':
if(property.isNode){
latex += property.toTex(options);}else 

if(Array.isArray(property)){

latex += property.map(function(arg,index){
if(arg && arg.isNode){
return arg.toTex(options);}

throw new TypeError('Template: ' + match[1] + '[' + index + '] is not a Node.');}).
join(',');}else 

{
throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');}

break;
default:
throw new TypeError('Template: ' + match[1] + ' has to be a Node, String or array of Nodes');}}else 


{
if(property[match[2]] && property[match[2]].isNode){
latex += property[match[2]].toTex(options);}else 

{
throw new TypeError('Template: ' + match[1] + '[' + match[2] + '] is not a Node.');}}}}




latex += template.slice(inputPos);

return latex;}




var nodeToTex=FunctionNode.prototype.toTex;












FunctionNode.prototype.toTex = function(options){
var customTex;
if(options && typeof options.handler === 'object' && options.handler.hasOwnProperty(this.name)){

customTex = options.handler[this.name](this,options);}


if(typeof customTex !== 'undefined'){
return customTex;}



return nodeToTex.call(this,options);};







FunctionNode.prototype._toTex = function(options){
var parenthesis=options && options.parenthesis?options.parenthesis:'keep';


var args=this.args.map(function(arg){
return arg.toTex(options);});


var latexConverter;

if(math[this.name] && (typeof math[this.name].toTex === 'function' || typeof math[this.name].toTex === 'object' || typeof math[this.name].toTex === 'string')){

latexConverter = math[this.name].toTex;}


var customToTex;
switch(typeof latexConverter){
case 'function':
customToTex = latexConverter(this,options);
break;
case 'string':
customToTex = expandTemplate(latexConverter,this,options);
break;
case 'object':
switch(typeof latexConverter[args.length]){
case 'function':
customToTex = latexConverter[args.length](this,options);
break;
case 'string':
customToTex = expandTemplate(latexConverter[args.length],this,options);
break;}}



if(typeof customToTex !== 'undefined'){
return customToTex;}


return expandTemplate(latex.defaultTemplate,this,options);};






FunctionNode.prototype.getIdentifier = function(){
return this.type + ':' + this.name;};


return FunctionNode;}


exports.name = 'FunctionNode';
exports.path = 'expression.node';
exports.math = true;
exports.factory = factory;
});
__d('mathjs/lib/expression/node/ParenthesisNode.js',["mathjs/lib/expression/node/Node.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));








function ParenthesisNode(content){
if(!(this instanceof ParenthesisNode)){
throw new SyntaxError('Constructor must be called with the new operator');}



if(!(content && content.isNode)){
throw new TypeError('Node expected for parameter "content"');}


this.content = content;}


ParenthesisNode.prototype = new Node();

ParenthesisNode.prototype.type = 'ParenthesisNode';

ParenthesisNode.prototype.isParenthesisNode = true;









ParenthesisNode.prototype._compile = function(defs){
return this.content._compile(defs);};







ParenthesisNode.prototype.getContent = function(){
return this.content.getContent();};






ParenthesisNode.prototype.forEach = function(callback){
callback(this.content,'content',this);};








ParenthesisNode.prototype.map = function(callback){
var content=callback(this.content,'content',this);
return new ParenthesisNode(content);};






ParenthesisNode.prototype.clone = function(){
return new ParenthesisNode(this.content);};








ParenthesisNode.prototype._toString = function(options){
if(!options || options && options.parenthesis === 'keep'){
return '(' + this.content.toString(options) + ')';}

return this.content.toString(options);};








ParenthesisNode.prototype._toTex = function(options){
if(!options || options && options.parenthesis === 'keep'){
return '\\left(' + this.content.toTex(options) + '\\right)';}

return this.content.toTex(options);};


return ParenthesisNode;}


exports.name = 'ParenthesisNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/node/UpdateNode.js',["mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/IndexNode.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var Node=load(require('mathjs/lib/expression/node/Node.js'));
var IndexNode=load(require('mathjs/lib/expression/node/IndexNode.js'));









function UpdateNode(index,expr){
if(!(this instanceof UpdateNode)){
throw new SyntaxError('Constructor must be called with the new operator');}


if(!(index && index.isIndexNode)){
throw new TypeError('Expected IndexNode for parameter "index"');}

if(!(expr && expr.isNode)){
throw new TypeError('Expected Node for parameter "expr"');}


this.index = index;
this.expr = expr;}


UpdateNode.prototype = new Node();

UpdateNode.prototype.type = 'UpdateNode';

UpdateNode.prototype.isUpdateNode = true;









UpdateNode.prototype._compile = function(defs){
var lhs=this.index.objectName() in defs.args?
this.name + ' = ':
'scope["' + this.index.objectName() + '\"]';

var rhs=this.index.compileSubset(defs,this.expr._compile(defs));

return lhs + ' = ' + rhs;};






UpdateNode.prototype.forEach = function(callback){
callback(this.index,'index',this);
callback(this.expr,'expr',this);};








UpdateNode.prototype.map = function(callback){
return new UpdateNode(
this._ifNode(callback(this.index,'index',this)),
this._ifNode(callback(this.expr,'expr',this)));};







UpdateNode.prototype.clone = function(){
return new UpdateNode(this.index,this.expr);};







UpdateNode.prototype._toString = function(options){
var expr=this.expr.toString(options);
if(options && options.parenthesis === 'all'){
expr = '(' + expr + ')';}

return this.index.toString(options) + ' = ' + expr;};







UpdateNode.prototype._toTex = function(options){
var expr=this.expr.toTex(options);
if(options && options.parenthesis === 'all'){
expr = '\\left(' + expr + '\\right)';}

return this.index.toTex(options) + ':=' + expr;};


return UpdateNode;}


exports.name = 'UpdateNode';
exports.path = 'expression.node';
exports.factory = factory;
});
__d('mathjs/lib/expression/function/eval.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/expression/parse.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var parse=load(require('mathjs/lib/expression/parse.js'));






























return typed('compile',{
'string':function(expr){
var scope={};
return parse(expr).compile().eval(scope);},


'string, Object':function(expr,scope){
return parse(expr).compile().eval(scope);},


'Array | Matrix':function(expr){
var scope={};
return deepMap(expr,function(entry){
return parse(entry).compile().eval(scope);});},



'Array | Matrix, Object':function(expr,scope){
return deepMap(expr,function(entry){
return parse(entry).compile().eval(scope);});}});}





exports.name = 'eval';
exports.factory = factory;
});
__d('mathjs/lib/expression/function/help.js',["mathjs/lib/expression/docs/index.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed,math){
var docs=load(require('mathjs/lib/expression/docs/index.js'));



















return typed('help',{
'any':function(search){
var prop;
var name=search;

if(typeof search !== 'string'){
for(prop in math) {

if(math.hasOwnProperty(prop) && search === math[prop]){
name = prop;
break;}}}


















var doc=docs[name];
if(!doc){
throw new Error('No documentation found on "' + name + '"');}

return new type.Help(doc);}});}




exports.math = true;
exports.name = 'help';
exports.factory = factory;
});
__d('mathjs/lib/expression/function/parse.js',["mathjs/lib/expression/parse.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var parse=load(require('mathjs/lib/expression/parse.js'));





































return typed('parse',{
'string | Array | Matrix':parse,
'string | Array | Matrix, Object':parse});}



exports.name = 'parse';
exports.factory = factory;
});
__d('mathjs/lib/expression/function/parser.js',["mathjs/lib/expression/Parser.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed,math){
var Parser=load(require('mathjs/lib/expression/Parser.js'));












































return typed('parser',{
'':function(){
return new Parser(math);}});}




exports.name = 'parser';
exports.factory = factory;
exports.math = true;
});
__d('mathjs/lib/expression/Parser.js',["mathjs/lib/expression/parse.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed,math){
var _parse=load(require('mathjs/lib/expression/parse.js'));
















































function Parser(){
if(!(this instanceof Parser)){
throw new SyntaxError(
'Constructor must be called with the new operator');}

this.scope = {};}





Parser.prototype.type = 'Parser';
Parser.prototype.isParser = true;









Parser.prototype.parse = function(expr){
throw new Error('Parser.parse is deprecated. Use math.parse instead.');};









Parser.prototype.compile = function(expr){
throw new Error('Parser.compile is deprecated. Use math.compile instead.');};








Parser.prototype.eval = function(expr){

return _parse(expr).
compile().
eval(this.scope);};








Parser.prototype.get = function(name){

return this.scope[name];};







Parser.prototype.set = function(name,value){

return this.scope[name] = value;};






Parser.prototype.remove = function(name){

delete this.scope[name];};





Parser.prototype.clear = function(){
for(var name in this.scope) {
if(this.scope.hasOwnProperty(name)){
delete this.scope[name];}}};




return Parser;}


exports.name = 'Parser';
exports.path = 'expression';
exports.factory = factory;
exports.math = true;
});
__d('mathjs/lib/expression/node/index.js',["mathjs/lib/expression/node/ArrayNode.js","mathjs/lib/expression/node/AssignmentNode.js","mathjs/lib/expression/node/BlockNode.js","mathjs/lib/expression/node/ConditionalNode.js","mathjs/lib/expression/node/ConstantNode.js","mathjs/lib/expression/node/IndexNode.js","mathjs/lib/expression/node/FunctionAssignmentNode.js","mathjs/lib/expression/node/FunctionNode.js","mathjs/lib/expression/node/Node.js","mathjs/lib/expression/node/OperatorNode.js","mathjs/lib/expression/node/ParenthesisNode.js","mathjs/lib/expression/node/RangeNode.js","mathjs/lib/expression/node/SymbolNode.js","mathjs/lib/expression/node/UpdateNode.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/expression/node/ArrayNode.js'),
require('mathjs/lib/expression/node/AssignmentNode.js'),
require('mathjs/lib/expression/node/BlockNode.js'),
require('mathjs/lib/expression/node/ConditionalNode.js'),
require('mathjs/lib/expression/node/ConstantNode.js'),
require('mathjs/lib/expression/node/IndexNode.js'),
require('mathjs/lib/expression/node/FunctionAssignmentNode.js'),
require('mathjs/lib/expression/node/FunctionNode.js'),
require('mathjs/lib/expression/node/Node.js'),
require('mathjs/lib/expression/node/OperatorNode.js'),
require('mathjs/lib/expression/node/ParenthesisNode.js'),
require('mathjs/lib/expression/node/RangeNode.js'),
require('mathjs/lib/expression/node/SymbolNode.js'),
require('mathjs/lib/expression/node/UpdateNode.js')];
});
__d('mathjs/lib/expression/transform/index.js',["mathjs/lib/expression/transform/concat.transform.js","mathjs/lib/expression/transform/filter.transform.js","mathjs/lib/expression/transform/forEach.transform.js","mathjs/lib/expression/transform/index.transform.js","mathjs/lib/expression/transform/map.transform.js","mathjs/lib/expression/transform/max.transform.js","mathjs/lib/expression/transform/mean.transform.js","mathjs/lib/expression/transform/min.transform.js","mathjs/lib/expression/transform/range.transform.js","mathjs/lib/expression/transform/subset.transform.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/expression/transform/concat.transform.js'),
require('mathjs/lib/expression/transform/filter.transform.js'),
require('mathjs/lib/expression/transform/forEach.transform.js'),
require('mathjs/lib/expression/transform/index.transform.js'),
require('mathjs/lib/expression/transform/map.transform.js'),
require('mathjs/lib/expression/transform/max.transform.js'),
require('mathjs/lib/expression/transform/mean.transform.js'),
require('mathjs/lib/expression/transform/min.transform.js'),
require('mathjs/lib/expression/transform/range.transform.js'),
require('mathjs/lib/expression/transform/subset.transform.js')];
});
__d('mathjs/lib/expression/transform/concat.transform.js',["mathjs/lib/expression/transform/error.transform.js","mathjs/lib/function/matrix/concat.js"],function(global, require, module, exports) {  'use strict';

var errorTransform=require('mathjs/lib/expression/transform/error.transform.js').transform;








function factory(type,config,load,typed){
var concat=load(require('mathjs/lib/function/matrix/concat.js'));


return typed('concat',{
'...any':function(args){

var lastIndex=args.length - 1;
var last=args[lastIndex];
if(typeof last === 'number'){
args[lastIndex] = last - 1;}else 

if(last && last.isBigNumber === true){
args[lastIndex] = last.minus(1);}


try{
return concat.apply(null,args);}

catch(err) {
throw errorTransform(err);}}});}





exports.name = 'concat';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/error.transform.js',["mathjs/lib/error/IndexError.js"],function(global, require, module, exports) {  var IndexError=require('mathjs/lib/error/IndexError.js');






exports.transform = function(err){
if(err && err.isIndexError){
return new IndexError(err.index + 1,err.min + 1,err.max + 1);}


return err;};
});
__d('mathjs/lib/function/matrix/concat.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/number.js","mathjs/lib/utils/array.js","mathjs/lib/error/IndexError.js","mathjs/lib/error/DimensionError.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var array=require('mathjs/lib/utils/array.js');
var IndexError=require('mathjs/lib/error/IndexError.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));






























var concat=typed('concat',{

'...Array | Matrix | number | BigNumber':function(args){
var i;
var len=args.length;
var dim=-1;
var prevDim;
var asMatrix=false;
var matrices=[];

for(i = 0;i < len;i++) {
var arg=args[i];


if(arg && arg.isMatrix === true){
asMatrix = true;}


if(typeof arg === 'number' || arg && arg.isBigNumber === true){
if(i !== len - 1){
throw new Error('Dimension must be specified as last argument');}



prevDim = dim;
dim = arg.valueOf();

if(!isInteger(dim)){
throw new TypeError('Integer number expected for dimension');}


if(dim < 0){

throw new IndexError(dim);}

if(i > 0 && dim > prevDim){

throw new IndexError(dim,prevDim + 1);}}else 


{

var m=clone(arg).valueOf();
var size=array.size(m);
matrices[i] = m;
prevDim = dim;
dim = size.length - 1;


if(i > 0 && dim != prevDim){
throw new DimensionError(prevDim + 1,dim + 1);}}}




if(matrices.length == 0){
throw new SyntaxError('At least one matrix expected');}


var res=matrices.shift();
while(matrices.length) {
res = _concat(res,matrices.shift(),dim,0);}


return asMatrix?matrix(res):res;},


'...string':function(args){
return args.join('');}});



concat.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return concat;}












function _concat(a,b,concatDim,dim){
if(dim < concatDim){

if(a.length != b.length){
throw new DimensionError(a.length,b.length);}


var c=[];
for(var i=0;i < a.length;i++) {
c[i] = _concat(a[i],b[i],concatDim,dim + 1);}

return c;}else 

{

return a.concat(b);}}



exports.name = 'concat';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/filter.transform.js',["mathjs/lib/function/utils/filter.js","mathjs/lib/expression/node/SymbolNode.js"],function(global, require, module, exports) {  'use strict';








function factory(type,config,load,typed){
var filter=load(require('mathjs/lib/function/utils/filter.js'));
var SymbolNode=load(require('mathjs/lib/expression/node/SymbolNode.js'));

function filterTransform(args,math,scope){
var x,test;

if(args[0]){
x = args[0].compile().eval(scope);}


if(args[1]){
if(args[1] && args[1].isSymbolNode){

test = args[1].compile().eval(scope);}else 

{



var _scope=scope || {};
var symbol=args[1].
filter(function(node){
return node && node.isSymbolNode && 
!(node.name in math) && 
!(node.name in _scope);})[
0];


var sub=Object.create(_scope);
var eq=args[1].compile();
if(symbol){
var name=symbol.name;
test = function(x){
sub[name] = x;
return eq.eval(sub);};}else 


{
throw new Error('No undefined variable found in filter equation');}}}




return filter(x,test);}


filterTransform.rawArgs = true;

return filterTransform;}


exports.name = 'filter';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/filter.js',["mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var size=require('mathjs/lib/utils/array.js').size;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));




























var filter=typed('filter',{
'Array, function':_filterCallback,

'Array, RegExp':_filterRegExp,

'Matrix, function':function(x,test){
return matrix(_filterCallback(x.toArray(),test));},


'Matrix, RegExp':function(x,test){
return matrix(_filterRegExp(x.toArray(),test));}});



filter.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return filter;}









function _filterCallback(x,callback){
if(size(x).length !== 1){
throw new Error('Only one dimensional matrices supported');}


return x.filter(function(entry){
return callback(entry);});}










function _filterRegExp(x,regexp){
if(size(x).length !== 1){
throw new Error('Only one dimensional matrices supported');}


return x.filter(function(entry){
return regexp.test(entry);});}



exports.name = 'filter';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/forEach.transform.js',["mathjs/lib/function/utils/forEach.js"],function(global, require, module, exports) {  'use strict';







function factory(type,config,load,typed){
var forEach=load(require('mathjs/lib/function/utils/forEach.js'));

return typed('forEach',{
'Array | Matrix, function':function(array,callback){
var recurse=function(value,index){
if(Array.isArray(value)){
value.forEach(function(child,i){

recurse(child,index.concat(i + 1));});}else 


{
callback(value,index,array);}};


recurse(array.valueOf(),[]);}});}




exports.name = 'forEach';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/forEach.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){























var forEach=typed('forEach',{
'Array, function':_forEach,

'Matrix, function':function(x,callback){
return x.forEach(callback);}});



forEach.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return forEach;}








function _forEach(array,callback){
var recurse=function(value,index){
if(Array.isArray(value)){
value.forEach(function(child,i){

recurse(child,index.concat(i));});}else 


{
callback(value,index,array);}};


recurse(array,[]);}


exports.name = 'forEach';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/index.transform.js',["mathjs/lib/type/matrix/function/index.js"],function(global, require, module, exports) {  'use strict';

var isArray=Array.isArray;







function factory(type,config,load){
var indexFactory=load(require('mathjs/lib/type/matrix/function/index.js'));

return function indexTransform(){
var args=[];
for(var i=0,ii=arguments.length;i < ii;i++) {
var arg=arguments[i];


if(arg && arg.isRange === true){
arg.start--;
arg.end -= arg.step > 0?0:2;}else 

if(arg && arg.isSet === true){
arg = arg.map(function(v){return v - 1;});}else 

if(arg && (arg.isArray === true || arg.isMatrix)){
arg = arg.map(function(v){return v - 1;});}else 

if(typeof arg === 'number'){
arg--;}else 

if(arg && arg.isBigNumber === true){
arg = arg.toNumber() - 1;}else 

{
throw new TypeError('Ranges must be a Number, Range, Array or Matrix');}


args[i] = arg;}


var res=new type.Index();
type.Index.apply(res,args);
return res;};}



exports.name = 'index';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/map.transform.js',["mathjs/lib/function/utils/map.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';







function factory(type,config,load,typed){
var map=load(require('mathjs/lib/function/utils/map.js'));
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

return typed('max',{
'Array, function':function(x,callback){
return _map(x,callback,x);},


'Matrix, function':function(x,callback){
return matrix(_map(x.valueOf(),callback,x));}});}












function _map(array,callback,orig){
function recurse(value,index){
if(Array.isArray(value)){
return value.map(function(child,i){

return recurse(child,index.concat(i + 1));});}else 


{
return callback(value,index,orig);}}



return recurse(array,[]);}


exports.name = 'map';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/map.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
























var map=typed('map',{
'Array, function':_map,

'Matrix, function':function(x,callback){
return x.map(callback);}});



map.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return map;}









function _map(array,callback){
var recurse=function(value,index){
if(Array.isArray(value)){
return value.map(function(child,i){

return recurse(child,index.concat(i));});}else 


{
return callback(value,index,array);}};



return recurse(array,[]);}


exports.name = 'map';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/max.transform.js',["mathjs/lib/expression/transform/error.transform.js","mathjs/lib/utils/collection/isCollection.js","mathjs/lib/function/statistics/max.js"],function(global, require, module, exports) {  'use strict';

var errorTransform=require('mathjs/lib/expression/transform/error.transform.js').transform;
var isCollection=require('mathjs/lib/utils/collection/isCollection.js');








function factory(type,config,load,typed){
var max=load(require('mathjs/lib/function/statistics/max.js'));

return typed('max',{
'...any':function(args){

if(args.length == 2 && isCollection(args[0])){
var dim=args[1];
if(typeof dim === 'number'){
args[1] = dim - 1;}else 

if(dim && dim.isBigNumber === true){
args[1] = dim.minus(1);}}



try{
return max.apply(null,args);}

catch(err) {
throw errorTransform(err);}}});}





exports.name = 'max';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/utils/collection/isCollection.js',[],function(global, require, module, exports) {  'use strict';






module.exports = function isCollection(x){
return Array.isArray(x) || x && x.isMatrix === true;};
});
__d('mathjs/lib/function/statistics/max.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/utils/collection/reduce.js","mathjs/lib/function/relational/larger.js"],function(global, require, module, exports) {  'use strict';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');
var reduce=require('mathjs/lib/utils/collection/reduce.js');

function factory(type,config,load,typed){
var larger=load(require('mathjs/lib/function/relational/larger.js'));
































var max=typed('max',{

'Array | Matrix':_max,


'Array | Matrix, number | BigNumber':function(array,dim){
return reduce(array,dim.valueOf(),_largest);},



'...':function(){
return _max(arguments);}});



max.toTex = '\\max\\left(${args}\\right)';

return max;








function _largest(x,y){
return larger(x,y)?x:y;}








function _max(array){
var max=undefined;

deepForEach(array,function(value){
if(max === undefined || larger(value,max)){
max = value;}});



if(max === undefined){
throw new Error('Cannot calculate max of an empty array');}


return max;}}



exports.name = 'max';
exports.factory = factory;
});
__d('mathjs/lib/utils/collection/deepForEach.js',[],function(global, require, module, exports) {  'use strict';








module.exports = function deepForEach(array,callback){
if(array && array.isMatrix === true){
array = array.valueOf();}


for(var i=0,ii=array.length;i < ii;i++) {
var value=array[i];

if(Array.isArray(value)){
deepForEach(value,callback);}else 

{
callback(value);}}};
});
__d('mathjs/lib/utils/collection/reduce.js',["mathjs/lib/utils/array.js","mathjs/lib/error/IndexError.js"],function(global, require, module, exports) {  'use strict';

var arraySize=require('mathjs/lib/utils/array.js').size;
var IndexError=require('mathjs/lib/error/IndexError.js');










module.exports = function(mat,dim,callback){
var size=Array.isArray(mat)?arraySize(mat):mat.size();
if(dim < 0){

throw new IndexError(dim);}

if(dim >= size.length){

throw new IndexError(dim,size.length);}


if(mat && mat.isMatrix === true){
return mat.create(_reduce(mat.valueOf(),dim,callback));}else 
{
return _reduce(mat,dim,callback);}};











function _reduce(mat,dim,callback){
var i,ret,val,tran;

if(dim <= 0){
if(!Array.isArray(mat[0])){
val = mat[0];
for(i = 1;i < mat.length;i++) {
val = callback(val,mat[i]);}

return val;}else 
{
tran = _switch(mat);
ret = [];
for(i = 0;i < tran.length;i++) {
ret[i] = _reduce(tran[i],dim - 1,callback);}

return ret;}}else 

{
ret = [];
for(i = 0;i < mat.length;i++) {
ret[i] = _reduce(mat[i],dim - 1,callback);}

return ret;}}









function _switch(mat){
var I=mat.length;
var J=mat[0].length;
var i,j;
var ret=[];
for(j = 0;j < J;j++) {
var tmp=[];
for(i = 0;i < I;i++) {
tmp.push(mat[i][j]);}

ret.push(tmp);}

return ret;}
});
__d('mathjs/lib/expression/transform/mean.transform.js',["mathjs/lib/expression/transform/error.transform.js","mathjs/lib/utils/collection/isCollection.js","mathjs/lib/function/statistics/mean.js"],function(global, require, module, exports) {  'use strict';

var errorTransform=require('mathjs/lib/expression/transform/error.transform.js').transform;
var isCollection=require('mathjs/lib/utils/collection/isCollection.js');








function factory(type,config,load,typed){
var mean=load(require('mathjs/lib/function/statistics/mean.js'));

return typed('mean',{
'...any':function(args){

if(args.length == 2 && isCollection(args[0])){
var dim=args[1];
if(typeof dim === 'number'){
args[1] = dim - 1;}else 

if(dim && dim.isBigNumber === true){
args[1] = dim.minus(1);}}



try{
return mean.apply(null,args);}

catch(err) {
throw errorTransform(err);}}});}





exports.name = 'mean';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/mean.js',["mathjs/lib/utils/array.js","mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/utils/collection/reduce.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/divide.js"],function(global, require, module, exports) {  'use strict';

var size=require('mathjs/lib/utils/array.js').size;
var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');
var reduce=require('mathjs/lib/utils/collection/reduce.js');

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divide.js'));




























var mean=typed('mean',{

'Array | Matrix':_mean,


'Array | Matrix, number | BigNumber':_nmean,


'...':function(){
return _mean(arguments);}});



mean.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return mean;









function _nmean(array,dim){
var sum=reduce(array,dim,add);
var s=Array.isArray(array)?size(array):array.size();
return divide(sum,s[dim]);}








function _mean(array){
var sum=0;
var num=0;

deepForEach(array,function(value){
sum = add(sum,value);
num++;});


if(num === 0){
throw new Error('Cannot calculate mean of an empty array');}


return divide(sum,num);}}



exports.name = 'mean';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/divide.js',["mathjs/lib/utils/object.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/matrix/inv.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var extend=require('mathjs/lib/utils/object.js').extend;

function factory(type,config,load,typed){

var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var inv=load(require('mathjs/lib/function/matrix/inv.js'));
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
































var divide=typed('divide',extend({


'Array | Matrix, Array | Matrix':function(x,y){




return multiply(x,inv(y));},


'Matrix, any':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,divideScalar,false);
break;
case 'dense':
c = algorithm14(x,y,divideScalar,false);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,divideScalar,false).valueOf();},


'any, Array | Matrix':function(x,y){
return multiply(x,inv(y));}},

divideScalar.signatures));

divide.toTex = '\\frac{${args[0]}}{${args[1]}}';

return divide;}


exports.name = 'divide';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/divideScalar.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){













var divideScalar=typed('divide',{
'number, number':function(x,y){
return x / y;},


'Complex, Complex':_divideComplex,

'BigNumber, BigNumber':function(x,y){
return x.div(y);},


'Fraction, Fraction':function(x,y){
return x.div(y);},


'Unit, number':function(x,y){
var res=x.clone();
res.value = (res.value === null?res._normalize(1):res.value) / y;
return res;},


'number, Unit':function(x,y){
var res=y.pow(-1);
res.value = (res.value === null?res._normalize(1):res.value) * x;
return res;},


'Unit, Unit':function(x,y){
return x.divide(y);}});











function _divideComplex(x,y){
var den=y.re * y.re + y.im * y.im;
if(den != 0){
return new type.Complex(
(x.re * y.re + x.im * y.im) / den,
(x.im * y.re - x.re * y.im) / den);}else 


{

return new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?x.im / 0:0);}}




return divideScalar;}


exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/multiply.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/array.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var extend=require('mathjs/lib/utils/object.js').extend;
var array=require('mathjs/lib/utils/array.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var addScalar=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var multiplyScalar=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var DenseMatrix=type.DenseMatrix;
var SparseMatrix=type.SparseMatrix;
































var multiply=typed('multiply',extend({


'Array, Array':function(x,y){

_validateMatrixDimensions(array.size(x),array.size(y));


var m=multiply(matrix(x),matrix(y));

return m && m.isMatrix === true?m.valueOf():m;},


'Matrix, Matrix':function(x,y){

var xsize=x.size();
var ysize=y.size();


_validateMatrixDimensions(xsize,ysize);


if(xsize.length === 1){

if(ysize.length === 1){

return _multiplyVectorVector(x,y,xsize[0]);}


return _multiplyVectorMatrix(x,y);}


if(ysize.length === 1){

return _multiplyMatrixVector(x,y);}


return _multiplyMatrixMatrix(x,y);},


'Matrix, Array':function(x,y){

return multiply(x,matrix(y));},


'Array, Matrix':function(x,y){

return multiply(matrix(x,y.storage()),y);},


'Matrix, any':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,multiplyScalar,false);
break;
case 'dense':
c = algorithm14(x,y,multiplyScalar,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm11(y,x,multiplyScalar,true);
break;
case 'dense':
c = algorithm14(y,x,multiplyScalar,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,multiplyScalar,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,multiplyScalar,true).valueOf();}},

multiplyScalar.signatures));

var _validateMatrixDimensions=function(size1,size2){

switch(size1.length){
case 1:

switch(size2.length){
case 1:

if(size1[0] !== size2[0]){

throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');}

break;
case 2:

if(size1[0] !== size2[0]){

throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');}

break;
default:
throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');}

break;
case 2:

switch(size2.length){
case 1:

if(size1[1] !== size2[0]){

throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');}

break;
case 2:

if(size1[1] !== size2[0]){

throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');}

break;
default:
throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');}

break;
default:
throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');}};











var _multiplyVectorVector=function(a,b,n){

if(n === 0)
throw new Error('Cannot multiply two empty vectors');


var adata=a._data;
var adt=a._datatype;

var bdata=b._data;
var bdt=b._datatype;


var dt;

var af=addScalar;

var mf=multiplyScalar;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);}



var c=mf(adata[0],bdata[0]);

for(var i=1;i < n;i++) {

c = af(c,mf(adata[i],bdata[i]));}

return c;};










var _multiplyVectorMatrix=function(a,b){

switch(b.storage()){
case 'dense':
return _multiplyVectorDenseMatrix(a,b);}

throw new Error('Not implemented');};










var _multiplyVectorDenseMatrix=function(a,b){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;

var bdata=b._data;
var bsize=b._size;
var bdt=b._datatype;

var alength=asize[0];
var bcolumns=bsize[1];


var dt;

var af=addScalar;

var mf=multiplyScalar;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);}



var c=[];


for(var j=0;j < bcolumns;j++) {

var sum=mf(adata[0],bdata[0][j]);

for(var i=1;i < alength;i++) {

sum = af(sum,mf(adata[i],bdata[i][j]));}

c[j] = sum;}



if(bcolumns === 1)
return c[0];


return new DenseMatrix({
data:c,
size:[bcolumns],
datatype:dt});};











var _multiplyMatrixVector=function(a,b){

switch(a.storage()){
case 'dense':
return _multiplyDenseMatrixVector(a,b);
case 'sparse':
return _multiplySparseMatrixVector(a,b);}};











var _multiplyMatrixMatrix=function(a,b){

switch(a.storage()){
case 'dense':

switch(b.storage()){
case 'dense':
return _multiplyDenseMatrixDenseMatrix(a,b);
case 'sparse':
return _multiplyDenseMatrixSparseMatrix(a,b);}

break;
case 'sparse':

switch(b.storage()){
case 'dense':
return _multiplySparseMatrixDenseMatrix(a,b);
case 'sparse':
return _multiplySparseMatrixSparseMatrix(a,b);}

break;}};











var _multiplyDenseMatrixVector=function(a,b){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;

var bdata=b._data;
var bdt=b._datatype;

var arows=asize[0];
var acolumns=asize[1];


var dt;

var af=addScalar;

var mf=multiplyScalar;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);}



var c=[];


for(var i=0;i < arows;i++) {

var row=adata[i];

var sum=mf(row[0],bdata[0]);

for(var j=1;j < acolumns;j++) {

sum = af(sum,mf(row[j],bdata[j]));}

c[i] = sum;}


if(arows === 1)
return c[0];


return new DenseMatrix({
data:c,
size:[arows],
datatype:dt});};











var _multiplyDenseMatrixDenseMatrix=function(a,b){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;

var bdata=b._data;
var bsize=b._size;
var bdt=b._datatype;

var arows=asize[0];
var acolumns=asize[1];
var bcolumns=bsize[1];


var dt;

var af=addScalar;

var mf=multiplyScalar;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);}



var c=[];


for(var i=0;i < arows;i++) {

var row=adata[i];

c[i] = [];

for(var j=0;j < bcolumns;j++) {

var sum=mf(row[0],bdata[0][j]);

for(var x=1;x < acolumns;x++) {

sum = af(sum,mf(row[x],bdata[x][j]));}

c[i][j] = sum;}}



if(arows === 1 && bcolumns === 1)
return c[0][0];


return new DenseMatrix({
data:c,
size:[arows,bcolumns],
datatype:dt});};











var _multiplyDenseMatrixSparseMatrix=function(a,b){

var adata=a._data;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bsize=b._size;
var bdt=b._datatype;

if(!bvalues)
throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');

var arows=asize[0];
var bcolumns=bsize[1];


var dt;

var af=addScalar;

var mf=multiplyScalar;

var eq=equalScalar;

var zero=0;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);
eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);}



var cvalues=[];
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[arows,bcolumns],
datatype:dt});



for(var jb=0;jb < bcolumns;jb++) {

cptr[jb] = cindex.length;

var kb0=bptr[jb];
var kb1=bptr[jb + 1];

if(kb1 > kb0){

var last=0;

for(var i=0;i < arows;i++) {

var mark=i + 1;

var cij;

for(var kb=kb0;kb < kb1;kb++) {

var ib=bindex[kb];

if(last !== mark){

cij = mf(adata[i][ib],bvalues[kb]);

last = mark;}else 

{

cij = af(cij,mf(adata[i][ib],bvalues[kb]));}}



if(last === mark && !eq(cij,zero)){

cindex.push(i);
cvalues.push(cij);}}}}





cptr[bcolumns] = cindex.length;


if(arows === 1 && bcolumns === 1)
return cvalues.length === 1?cvalues[0]:0;


return c;};










var _multiplySparseMatrixVector=function(a,b){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var adt=a._datatype;

if(!avalues)
throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');

var bdata=b._data;
var bdt=b._datatype;

var arows=a._size[0];
var brows=b._size[0];

var cvalues=[];
var cindex=[];
var cptr=[];


var dt;

var af=addScalar;

var mf=multiplyScalar;

var eq=equalScalar;

var zero=0;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);
eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);}



var x=[];

var w=[];


cptr[0] = 0;

for(var ib=0;ib < brows;ib++) {

var vbi=bdata[ib];

if(!eq(vbi,zero)){

for(var ka0=aptr[ib],ka1=aptr[ib + 1],ka=ka0;ka < ka1;ka++) {

var ia=aindex[ka];

if(!w[ia]){

w[ia] = true;

cindex.push(ia);

x[ia] = mf(vbi,avalues[ka]);}else 

{

x[ia] = af(x[ia],mf(vbi,avalues[ka]));}}}}





for(var p1=cindex.length,p=0;p < p1;p++) {

var ic=cindex[p];

cvalues[p] = x[ic];}


cptr[1] = cindex.length;


if(arows === 1)
return cvalues.length === 1?cvalues[0]:0;


return new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[arows,1],
datatype:dt});};











var _multiplySparseMatrixDenseMatrix=function(a,b){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var adt=a._datatype;

if(!avalues)
throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');

var bdata=b._data;
var bdt=b._datatype;

var arows=a._size[0];
var brows=b._size[0];
var bcolumns=b._size[1];


var dt;

var af=addScalar;

var mf=multiplyScalar;

var eq=equalScalar;

var zero=0;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);
eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);}



var cvalues=[];
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[arows,bcolumns],
datatype:dt});



var x=[];

var w=[];


for(var jb=0;jb < bcolumns;jb++) {

cptr[jb] = cindex.length;

var mark=jb + 1;

for(var ib=0;ib < brows;ib++) {

var vbij=bdata[ib][jb];

if(!eq(vbij,zero)){

for(var ka0=aptr[ib],ka1=aptr[ib + 1],ka=ka0;ka < ka1;ka++) {

var ia=aindex[ka];

if(w[ia] !== mark){

w[ia] = mark;

cindex.push(ia);

x[ia] = mf(vbij,avalues[ka]);}else 

{

x[ia] = af(x[ia],mf(vbij,avalues[ka]));}}}}





for(var p0=cptr[jb],p1=cindex.length,p=p0;p < p1;p++) {

var ic=cindex[p];

cvalues[p] = x[ic];}}



cptr[bcolumns] = cindex.length;


if(arows === 1 && bcolumns === 1)
return cvalues.length === 1?cvalues[0]:0;


return c;};










var _multiplySparseMatrixSparseMatrix=function(a,b){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bdt=b._datatype;


var arows=a._size[0];
var bcolumns=b._size[1];

var values=avalues && bvalues;


var dt;

var af=addScalar;

var mf=multiplyScalar;


if(adt && bdt && adt === bdt && typeof adt === 'string'){

dt = adt;

af = typed.find(addScalar,[dt,dt]);
mf = typed.find(multiplyScalar,[dt,dt]);}



var cvalues=values?[]:undefined;
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[arows,bcolumns],
datatype:dt});



var x=values?[]:undefined;

var w=[];

var ka,ka0,ka1,kb,kb0,kb1,ia,ib;

for(var jb=0;jb < bcolumns;jb++) {

cptr[jb] = cindex.length;

var mark=jb + 1;

for(kb0 = bptr[jb],kb1 = bptr[jb + 1],kb = kb0;kb < kb1;kb++) {

ib = bindex[kb];

if(values){

for(ka0 = aptr[ib],ka1 = aptr[ib + 1],ka = ka0;ka < ka1;ka++) {

ia = aindex[ka];

if(w[ia] !== mark){

w[ia] = mark;

cindex.push(ia);

x[ia] = mf(bvalues[kb],avalues[ka]);}else 

{

x[ia] = af(x[ia],mf(bvalues[kb],avalues[ka]));}}}else 



{

for(ka0 = aptr[ib],ka1 = aptr[ib + 1],ka = ka0;ka < ka1;ka++) {

ia = aindex[ka];

if(w[ia] !== mark){

w[ia] = mark;

cindex.push(ia);}}}}





if(values){

for(var p0=cptr[jb],p1=cindex.length,p=p0;p < p1;p++) {

var ic=cindex[p];

cvalues[p] = x[ic];}}}




cptr[bcolumns] = cindex.length;


if(arows === 1 && bcolumns === 1 && values)
return cvalues.length === 1?cvalues[0]:0;


return c;};


multiply.toTex = '\\left(${args[0]}' + latex.operators['multiply'] + '${args[1]}\\right)';

return multiply;}


exports.name = 'multiply';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/multiplyScalar.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){














var multiplyScalar=typed('multiplyScalar',{

'number, number':function(x,y){
return x * y;},


'Complex, Complex':function(x,y){
return new type.Complex(
x.re * y.re - x.im * y.im,
x.re * y.im + x.im * y.re);},



'BigNumber, BigNumber':function(x,y){
return x.times(y);},


'Fraction, Fraction':function(x,y){
return x.mul(y);},


'number, Unit':function(x,y){
var res=y.clone();
res.value = res.value === null?res._normalize(x):res.value * x;
return res;},


'Unit, number':function(x,y){
var res=x.clone();
res.value = res.value === null?res._normalize(y):res.value * y;
return res;},


'Unit, Unit':function(x,y){
return x.multiply(y);}});




return multiplyScalar;}


exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm11.js',["mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;




















var algorithm11=function(s,b,callback,inverse){

var avalues=s._values;
var aindex=s._index;
var aptr=s._ptr;
var asize=s._size;
var adt=s._datatype;


if(!avalues)
throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string'){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

b = typed.convert(b,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=[];
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



for(var j=0;j < columns;j++) {

cptr[j] = cindex.length;

for(var k0=aptr[j],k1=aptr[j + 1],k=k0;k < k1;k++) {

var i=aindex[k];

var v=inverse?cf(b,avalues[k]):cf(avalues[k],b);

if(!eq(v,zero)){

cindex.push(i);
cvalues.push(v);}}}




cptr[columns] = cindex.length;


return c;};


return algorithm11;}


exports.name = 'algorithm11';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/inv.js',["mathjs/lib/utils/index.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/unaryMinus.js","mathjs/lib/function/matrix/det.js","mathjs/lib/function/matrix/eye.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var addScalar=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var unaryMinus=load(require('mathjs/lib/function/arithmetic/unaryMinus.js'));
var det=load(require('mathjs/lib/function/matrix/det.js'));
var eye=load(require('mathjs/lib/function/matrix/eye.js'));





















var inv=typed('inv',{
'Array | Matrix':function(x){
var size=x.isMatrix === true?x.size():util.array.size(x);
switch(size.length){
case 1:

if(size[0] == 1){
if(x.isMatrix === true){
return matrix([
divideScalar(1,x.valueOf()[0])]);}else 


{
return [
divideScalar(1,x[0])];}}else 



{
throw new RangeError('Matrix must be square ' + 
'(size: ' + util.string.format(size) + ')');}


case 2:

var rows=size[0];
var cols=size[1];
if(rows == cols){
if(x.isMatrix === true){
return matrix(
_inv(x.valueOf(),rows,cols),
x.storage());}else 


{

return _inv(x,rows,cols);}}else 


{
throw new RangeError('Matrix must be square ' + 
'(size: ' + util.string.format(size) + ')');}


default:

throw new RangeError('Matrix must be two dimensional ' + 
'(size: ' + util.string.format(size) + ')');}},



'any':function(x){

return divideScalar(1,x);}});











function _inv(mat,rows,cols){
var r,s,f,value,temp;

if(rows == 1){

value = mat[0][0];
if(value == 0){
throw Error('Cannot calculate inverse, determinant is zero');}

return [[
divideScalar(1,value)]];}else 


if(rows == 2){

var d=det(mat);
if(d == 0){
throw Error('Cannot calculate inverse, determinant is zero');}

return [
[
divideScalar(mat[1][1],d),
divideScalar(unaryMinus(mat[0][1]),d)],

[
divideScalar(unaryMinus(mat[1][0]),d),
divideScalar(mat[0][0],d)]];}else 



{







var A=mat.concat();
for(r = 0;r < rows;r++) {
A[r] = A[r].concat();}




var B=eye(rows).valueOf();


for(var c=0;c < cols;c++) {


r = c;
while(r < rows && A[r][c] == 0) {
r++;}

if(r == rows || A[r][c] == 0){

throw Error('Cannot calculate inverse, determinant is zero');}

if(r != c){
temp = A[c];A[c] = A[r];A[r] = temp;
temp = B[c];B[c] = B[r];B[r] = temp;}



var Ac=A[c],
Bc=B[c];
for(r = 0;r < rows;r++) {
var Ar=A[r],
Br=B[r];
if(r != c){

if(Ar[c] != 0){
f = divideScalar(unaryMinus(Ar[c]),Ac[c]);



for(s = c;s < cols;s++) {
Ar[s] = addScalar(Ar[s],multiply(f,Ac[s]));}

for(s = 0;s < cols;s++) {
Br[s] = addScalar(Br[s],multiply(f,Bc[s]));}}}else 



{


f = Ac[c];
for(s = c;s < cols;s++) {
Ar[s] = divideScalar(Ar[s],f);}

for(s = 0;s < cols;s++) {
Br[s] = divideScalar(Br[s],f);}}}}




return B;}}



inv.toTex = '\\left(${args[0]}\\right)^{-1}';

return inv;}


exports.name = 'inv';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/unaryMinus.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');
























var unaryMinus=typed('unaryMinus',{
'number':function(x){
return -x;},


'Complex':function(x){
return new type.Complex(-x.re,-x.im);},


'BigNumber':function(x){
return x.neg();},


'Fraction':function(x){
return x.neg();},


'Unit':function(x){
var res=x.clone();
res.value = -x.value;
return res;},


'Array | Matrix':function(x){

return deepMap(x,unaryMinus,true);}});





unaryMinus.toTex = latex.operators['unaryMinus'] + '\\left(${args[0]}\\right)';

return unaryMinus;}


exports.name = 'unaryMinus';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/det.js',["mathjs/lib/utils/index.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/unaryMinus.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');
var object=util.object;
var string=util.string;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var unaryMinus=load(require('mathjs/lib/function/arithmetic/unaryMinus.js'));


























var det=typed('det',{
'any':function(x){
return object.clone(x);},


'Array | Matrix':function det(x){
var size;
if(x && x.isMatrix === true){
size = x.size();}else 

if(Array.isArray(x)){
x = matrix(x);
size = x.size();}else 

{

size = [];}


switch(size.length){
case 0:

return object.clone(x);

case 1:

if(size[0] == 1){
return object.clone(x.valueOf()[0]);}else 

{
throw new RangeError('Matrix must be square ' + 
'(size: ' + string.format(size) + ')');}


case 2:

var rows=size[0];
var cols=size[1];
if(rows == cols){
return _det(x.clone().valueOf(),rows,cols);}else 

{
throw new RangeError('Matrix must be square ' + 
'(size: ' + string.format(size) + ')');}


default:

throw new RangeError('Matrix must be two dimensional ' + 
'(size: ' + string.format(size) + ')');}}});




det.toTex = '\\det\\left(${args[0]}\\right)';

return det;









function _det(matrix,rows,cols){
if(rows == 1){

return object.clone(matrix[0][0]);}else 

if(rows == 2){


return subtract(
multiply(matrix[0][0],matrix[1][1]),
multiply(matrix[1][0],matrix[0][1]));}else 


{

var compute_mu=function(matrix){
var i,j;




var mu=new Array(matrix.length);
var sum=0;
for(i = 1;i < matrix.length;i++) {
sum = add(sum,matrix[i][i]);}


for(i = 0;i < matrix.length;i++) {
mu[i] = new Array(matrix.length);
mu[i][i] = unaryMinus(sum);

for(j = 0;j < i;j++) {
mu[i][j] = 0;}


for(j = i + 1;j < matrix.length;j++) {
mu[i][j] = matrix[i][j];}


if(i + 1 < matrix.length){
sum = subtract(sum,matrix[i + 1][i + 1]);}}



return mu;};


var fa=matrix;
for(var i=0;i < rows - 1;i++) {
fa = multiply(compute_mu(fa),matrix);}


if(rows % 2 == 0){
return unaryMinus(fa[0][0]);}else 
{
return fa[0][0];}}}}





exports.name = 'det';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/subtract.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/unaryMinus.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm05.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var addScalar=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var unaryMinus=load(require('mathjs/lib/function/arithmetic/unaryMinus.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm05=load(require('mathjs/lib/type/matrix/utils/algorithm05.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));


































var subtract=typed('subtract',{

'number, number':function(x,y){
return x - y;},


'Complex, Complex':function(x,y){
return new type.Complex(
x.re - y.re,
x.im - y.im);},



'BigNumber, BigNumber':function(x,y){
return x.minus(y);},


'Fraction, Fraction':function(x,y){
return x.sub(y);},


'Unit, Unit':function(x,y){
if(x.value == null){
throw new Error('Parameter x contains a unit with undefined value');}


if(y.value == null){
throw new Error('Parameter y contains a unit with undefined value');}


if(!x.equalBase(y)){
throw new Error('Units do not match');}


var res=x.clone();
res.value -= y.value;
res.fixPrefix = false;

return res;},


'Matrix, Matrix':function(x,y){

var xsize=x.size();
var ysize=y.size();


if(xsize.length !== ysize.length)
throw new DimensionError(xsize.length,ysize.length);


var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm05(x,y,subtract);
break;
default:

c = algorithm03(y,x,subtract,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,subtract,false);
break;
default:

c = algorithm13(x,y,subtract);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return subtract(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return subtract(matrix(x),y);},


'Matrix, Array':function(x,y){

return subtract(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':

c = algorithm10(x,unaryMinus(y),addScalar);
break;
default:
c = algorithm14(x,y,subtract);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,subtract,true);
break;
default:
c = algorithm14(y,x,subtract,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,subtract,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,subtract,true).valueOf();}});



subtract.toTex = '\\left(${args[0]}' + latex.operators['subtract'] + '${args[1]}\\right)';

return subtract;}


exports.name = 'subtract';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm05.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;



















var algorithm05=function(a,b,callback){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=avalues && bvalues?[]:undefined;
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



var xa=cvalues?[]:undefined;
var xb=cvalues?[]:undefined;

var wa=[];
var wb=[];


var i,j,k,k1;


for(j = 0;j < columns;j++) {

cptr[j] = cindex.length;

var mark=j + 1;

for(k = aptr[j],k1 = aptr[j + 1];k < k1;k++) {

i = aindex[k];

cindex.push(i);

wa[i] = mark;

if(xa)
xa[i] = avalues[k];}


for(k = bptr[j],k1 = bptr[j + 1];k < k1;k++) {

i = bindex[k];

if(wa[i] !== mark){

cindex.push(i);}


wb[i] = mark;

if(xb)
xb[i] = bvalues[k];}


if(cvalues){

k = cptr[j];

while(k < cindex.length) {

i = cindex[k];

var wai=wa[i];
var wbi=wb[i];

if(wai === mark || wbi === mark){

var va=wai === mark?xa[i]:zero;
var vb=wbi === mark?xb[i]:zero;

var vc=cf(va,vb);

if(!eq(vc,zero)){

cvalues.push(vc);

k++;}else 

{

cindex.splice(k,1);}}}}}






cptr[columns] = cindex.length;


return c;};


return algorithm05;}


exports.name = 'algorithm05';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/eye.js',["mathjs/lib/utils/array.js","mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var array=require('mathjs/lib/utils/array.js');
var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));































var eye=typed('eye',{
'':function(){
return config.matrix === 'matrix'?matrix([]):[];},


'string':function(format){
return matrix(format);},


'number | BigNumber':function(rows){
return _eye(rows,rows,config.matrix === 'matrix'?'default':undefined);},


'number | BigNumber, string':function(rows,format){
return _eye(rows,rows,format);},


'number | BigNumber, number | BigNumber':function(rows,cols){
return _eye(rows,cols,config.matrix === 'matrix'?'default':undefined);},


'number | BigNumber, number | BigNumber, string':function(rows,cols,format){
return _eye(rows,cols,format);},


'Array':function(size){
return _eyeVector(size);},


'Array, string':function(size,format){
return _eyeVector(size,format);},


'Matrix':function(size){
return _eyeVector(size.valueOf(),size.storage());},


'Matrix, string':function(size,format){
return _eyeVector(size.valueOf(),format);}});



eye.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return eye;

function _eyeVector(size,format){
switch(size.length){
case 0:return format?matrix(format):[];
case 1:return _eye(size[0],size[0],format);
case 2:return _eye(size[0],size[1],format);
default:throw new Error('Vector containing two values expected');}}











function _eye(rows,cols,format){

var Big=rows && rows.isBigNumber === true?
type.BigNumber:
cols && cols.isBigNumber === true?
type.BigNumber:
null;

if(rows && rows.isBigNumber === true)rows = rows.toNumber();
if(cols && cols.isBigNumber === true)cols = cols.toNumber();

if(!isInteger(rows) || rows < 1){
throw new Error('Parameters in function eye must be positive integers');}

if(!isInteger(cols) || cols < 1){
throw new Error('Parameters in function eye must be positive integers');}


var one=Big?new type.BigNumber(1):1;
var defaultValue=Big?new Big(0):0;
var size=[rows,cols];


if(format){

var F=type.Matrix.storage(format);

return F.diagonal(size,one,0,defaultValue);}



var res=array.resize([],size,defaultValue);

var minimum=rows < cols?rows:cols;

for(var d=0;d < minimum;d++) {
res[d][d] = one;}

return res;}}



exports.name = 'eye';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/min.transform.js',["mathjs/lib/expression/transform/error.transform.js","mathjs/lib/utils/collection/isCollection.js","mathjs/lib/function/statistics/min.js"],function(global, require, module, exports) {  'use strict';

var errorTransform=require('mathjs/lib/expression/transform/error.transform.js').transform;
var isCollection=require('mathjs/lib/utils/collection/isCollection.js');








function factory(type,config,load,typed){
var min=load(require('mathjs/lib/function/statistics/min.js'));

return typed('min',{
'...any':function(args){

if(args.length == 2 && isCollection(args[0])){
var dim=args[1];
if(typeof dim === 'number'){
args[1] = dim - 1;}else 

if(dim && dim.isBigNumber === true){
args[1] = dim.minus(1);}}



try{
return min.apply(null,args);}

catch(err) {
throw errorTransform(err);}}});}





exports.name = 'min';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/min.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/utils/collection/reduce.js","mathjs/lib/function/relational/smaller.js"],function(global, require, module, exports) {  'use strict';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');
var reduce=require('mathjs/lib/utils/collection/reduce.js');

function factory(type,config,load,typed){
var smaller=load(require('mathjs/lib/function/relational/smaller.js'));
































var min=typed('min',{

'Array | Matrix':_min,


'Array | Matrix, number | BigNumber':function(array,dim){
return reduce(array,dim.valueOf(),_smallest);},



'...':function(){
return _min(arguments);}});



min.toTex = '\\min\\left(${args}\\right)';

return min;








function _smallest(x,y){
return smaller(x,y)?x:y;}








function _min(array){
var min=undefined;

deepForEach(array,function(value){
if(min === undefined || smaller(value,min)){
min = value;}});



if(min === undefined){
throw new Error('Cannot calculate min of an empty array');}


return min;}}



exports.name = 'min';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/range.transform.js',["mathjs/lib/function/matrix/range.js"],function(global, require, module, exports) {  'use strict';







function factory(type,config,load,typed){
var range=load(require('mathjs/lib/function/matrix/range.js'));

return typed('range',{
'...any':function(args){
var lastIndex=args.length - 1;
var last=args[lastIndex];
if(typeof last !== 'boolean'){

args.push(true);}


return range.apply(null,args);}});}




exports.name = 'range';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/range.js',["mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var ZERO=new type.BigNumber(0);
var ONE=new type.BigNumber(1);












































var range=typed('range',{



'string':_strRange,
'string, boolean':_strRange,

'number, number':function(start,end){
return _out(_rangeEx(start,end,1));},

'number, number, number':function(start,end,step){
return _out(_rangeEx(start,end,step));},

'number, number, boolean':function(start,end,includeEnd){
return includeEnd?
_out(_rangeInc(start,end,1)):
_out(_rangeEx(start,end,1));},

'number, number, number, boolean':function(start,end,step,includeEnd){
return includeEnd?
_out(_rangeInc(start,end,step)):
_out(_rangeEx(start,end,step));},


'BigNumber, BigNumber':function(start,end){
return _out(_bigRangeEx(start,end,ONE));},

'BigNumber, BigNumber, BigNumber':function(start,end,step){
return _out(_bigRangeEx(start,end,step));},

'BigNumber, BigNumber, boolean':function(start,end,includeEnd){
return includeEnd?
_out(_bigRangeInc(start,end,ONE)):
_out(_bigRangeEx(start,end,ONE));},

'BigNumber, BigNumber, BigNumber, boolean':function(start,end,step,includeEnd){
return includeEnd?
_out(_bigRangeInc(start,end,step)):
_out(_bigRangeEx(start,end,step));}});




range.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return range;

function _out(arr){
return config.matrix === 'array'?arr:matrix(arr);}


function _strRange(str,includeEnd){
var r=_parse(str);
if(!r){
throw new SyntaxError('String "' + str + '" is no valid range');}


var fn;
if(config.number === 'bignumber'){
fn = includeEnd?_bigRangeInc:_bigRangeEx;
return _out(fn(
new type.BigNumber(r.start),
new type.BigNumber(r.end),
new type.BigNumber(r.step)));}else 

{
fn = includeEnd?_rangeInc:_rangeEx;
return _out(fn(r.start,r.end,r.step));}}











function _rangeEx(start,end,step){
var array=[],
x=start;
if(step > 0){
while(x < end) {
array.push(x);
x += step;}}else 


if(step < 0){
while(x > end) {
array.push(x);
x += step;}}



return array;}










function _rangeInc(start,end,step){
var array=[],
x=start;
if(step > 0){
while(x <= end) {
array.push(x);
x += step;}}else 


if(step < 0){
while(x >= end) {
array.push(x);
x += step;}}



return array;}










function _bigRangeEx(start,end,step){
var array=[],
x=start;
if(step.gt(ZERO)){
while(x.lt(end)) {
array.push(x);
x = x.plus(step);}}else 


if(step.lt(ZERO)){
while(x.gt(end)) {
array.push(x);
x = x.plus(step);}}



return array;}










function _bigRangeInc(start,end,step){
var array=[],
x=start;
if(step.gt(ZERO)){
while(x.lte(end)) {
array.push(x);
x = x.plus(step);}}else 


if(step.lt(ZERO)){
while(x.gte(end)) {
array.push(x);
x = x.plus(step);}}



return array;}











function _parse(str){
var args=str.split(':');


var nums=args.map(function(arg){

return Number(arg);});


var invalid=nums.some(function(num){
return isNaN(num);});

if(invalid){
return null;}


switch(nums.length){
case 2:
return {
start:nums[0],
end:nums[1],
step:1};


case 3:
return {
start:nums[0],
end:nums[2],
step:nums[1]};


default:
return null;}}}





exports.name = 'range';
exports.factory = factory;
});
__d('mathjs/lib/expression/transform/subset.transform.js',["mathjs/lib/expression/transform/error.transform.js","mathjs/lib/function/matrix/subset.js"],function(global, require, module, exports) {  'use strict';

var errorTransform=require('mathjs/lib/expression/transform/error.transform.js').transform;







function factory(type,config,load,typed){
var subset=load(require('mathjs/lib/function/matrix/subset.js'));

return typed('subset',{
'...any':function(args){
try{
return subset.apply(null,args);}

catch(err) {
throw errorTransform(err);}}});}





exports.name = 'subset';
exports.path = 'expression.transform';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/subset.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/array.js","mathjs/lib/error/DimensionError.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var validateIndex=require('mathjs/lib/utils/array.js').validateIndex;
var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));



































var subset=typed('subset',{

'Array, Index':function(value,index){
var m=matrix(value);
var subset=m.subset(index);
return subset && subset.valueOf();},


'Matrix, Index':function(value,index){
return value.subset(index);},


'string, Index':_getSubstring,


'Array, Index, any':function(value,index,replacement){
return matrix(clone(value)).
subset(index,replacement,undefined).
valueOf();},


'Array, Index, any, any':function(value,index,replacement,defaultValue){
return matrix(clone(value)).
subset(index,replacement,defaultValue).
valueOf();},


'Matrix, Index, any':function(value,index,replacement){
return value.clone().subset(index,replacement);},


'Matrix, Index, any, any':function(value,index,replacement,defaultValue){
return value.clone().subset(index,replacement,defaultValue);},


'string, Index, string':_setSubstring,
'string, Index, string, string':_setSubstring});


subset.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return subset;








function _getSubstring(str,index){
if(!index || index.isIndex !== true){

throw new TypeError('Index expected');}

if(index.size().length != 1){
throw new DimensionError(index.size().length,1);}



var strLen=str.length;
validateIndex(index.min()[0],strLen);
validateIndex(index.max()[0],strLen);

var range=index.dimension(0);

var substr='';
range.forEach(function(v){
substr += str.charAt(v);});


return substr;}












function _setSubstring(str,index,replacement,defaultValue){
if(!index || index.isIndex !== true){

throw new TypeError('Index expected');}

if(index.size().length != 1){
throw new DimensionError(index.size().length,1);}

if(defaultValue !== undefined){
if(typeof defaultValue !== 'string' || defaultValue.length !== 1){
throw new TypeError('Single character expected as defaultValue');}}else 


{
defaultValue = ' ';}


var range=index.dimension(0);
var len=range.size()[0];

if(len != replacement.length){
throw new DimensionError(range.size()[0],replacement.length);}



var strLen=str.length;
validateIndex(index.min()[0]);
validateIndex(index.max()[0]);


var chars=[];
for(var i=0;i < strLen;i++) {
chars[i] = str.charAt(i);}


range.forEach(function(v,i){
chars[v] = replacement.charAt(i[0]);});



if(chars.length > strLen){
for(i = strLen - 1,len = chars.length;i < len;i++) {
if(!chars[i]){
chars[i] = defaultValue;}}}




return chars.join('');}}



exports.name = 'subset';
exports.factory = factory;
});
__d('mathjs/lib/expression/Help.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/string.js","mathjs/lib/expression/function/parser.js"],function(global, require, module, exports) {  'use strict';

var object=require('mathjs/lib/utils/object.js');
var string=require('mathjs/lib/utils/string.js');

function factory(type,config,load,typed){
var parser=load(require('mathjs/lib/expression/function/parser.js'))();












function Help(doc){
if(!(this instanceof Help)){
throw new SyntaxError('Constructor must be called with the new operator');}


if(!doc)throw new Error('Argument "doc" missing');

this.doc = doc;}





Help.prototype.type = 'Help';
Help.prototype.isHelp = true;






Help.prototype.toString = function(){
var doc=this.doc || {};
var desc='\n';

if(doc.name){
desc += 'Name: ' + doc.name + '\n\n';}

if(doc.category){
desc += 'Category: ' + doc.category + '\n\n';}

if(doc.description){
desc += 'Description:\n    ' + doc.description + '\n\n';}

if(doc.syntax){
desc += 'Syntax:\n    ' + doc.syntax.join('\n    ') + '\n\n';}

if(doc.examples){
desc += 'Examples:\n';
for(var i=0;i < doc.examples.length;i++) {
var expr=doc.examples[i];
desc += '    ' + expr + '\n';

var res;
try{
res = parser.eval(expr);}

catch(e) {
res = e;}

if(res && !res.isHelp){
desc += '        ' + string.format(res,{precision:14}) + '\n';}}


desc += '\n';}

if(doc.seealso){
desc += 'See also: ' + doc.seealso.join(', ') + '\n';}


return desc;};





Help.prototype.toJSON = function(){
var obj=object.clone(this.doc);
obj.mathjs = 'Help';
return obj;};







Help.fromJSON = function(json){
var doc={};
for(var prop in json) {
if(prop !== 'mathjs'){
doc[prop] = json[prop];}}


return new Help(doc);};





Help.prototype.valueOf = Help.prototype.toString;

return Help;}


exports.name = 'Help';
exports.path = 'type';
exports.factory = factory;
});
__d('mathjs/lib/function/index.js',["mathjs/lib/function/algebra/index.js","mathjs/lib/function/arithmetic/index.js","mathjs/lib/function/bitwise/index.js","mathjs/lib/function/combinatorics/index.js","mathjs/lib/function/complex/index.js","mathjs/lib/function/geometry/index.js","mathjs/lib/function/logical/index.js","mathjs/lib/function/matrix/index.js","mathjs/lib/function/probability/index.js","mathjs/lib/function/relational/index.js","mathjs/lib/function/statistics/index.js","mathjs/lib/function/trigonometry/index.js","mathjs/lib/function/units/index.js","mathjs/lib/function/utils/index.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/algebra/index.js'),
require('mathjs/lib/function/arithmetic/index.js'),
require('mathjs/lib/function/bitwise/index.js'),
require('mathjs/lib/function/combinatorics/index.js'),
require('mathjs/lib/function/complex/index.js'),
require('mathjs/lib/function/geometry/index.js'),
require('mathjs/lib/function/logical/index.js'),
require('mathjs/lib/function/matrix/index.js'),
require('mathjs/lib/function/probability/index.js'),
require('mathjs/lib/function/relational/index.js'),
require('mathjs/lib/function/statistics/index.js'),
require('mathjs/lib/function/trigonometry/index.js'),
require('mathjs/lib/function/units/index.js'),
require('mathjs/lib/function/utils/index.js')];
});
__d('mathjs/lib/function/algebra/index.js',["mathjs/lib/function/algebra/decomposition/lup.js","mathjs/lib/function/algebra/decomposition/slu.js","mathjs/lib/function/algebra/solver/lsolve.js","mathjs/lib/function/algebra/solver/lusolve.js","mathjs/lib/function/algebra/solver/usolve.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/function/algebra/decomposition/lup.js'),
require('mathjs/lib/function/algebra/decomposition/slu.js'),


require('mathjs/lib/function/algebra/solver/lsolve.js'),
require('mathjs/lib/function/algebra/solver/lusolve.js'),
require('mathjs/lib/function/algebra/solver/usolve.js')];
});
__d('mathjs/lib/function/algebra/decomposition/lup.js',["mathjs/lib/utils/index.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/abs.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/relational/larger.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/arithmetic/unaryMinus.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

var object=util.object;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var abs=load(require('mathjs/lib/function/arithmetic/abs.js'));
var addScalar=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiplyScalar=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var larger=load(require('mathjs/lib/function/relational/larger.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var unaryMinus=load(require('mathjs/lib/function/arithmetic/unaryMinus.js'));

var SparseMatrix=type.SparseMatrix;
var DenseMatrix=type.DenseMatrix;
var Spa=type.Spa;



























var lup=typed('lup',{

'DenseMatrix':function(m){
return _denseLUP(m);},


'SparseMatrix':function(m){
return _sparseLUP(m);},


'Array':function(a){

var m=matrix(a);

var r=_denseLUP(m);

return {
L:r.L.valueOf(),
U:r.U.valueOf(),
p:r.p};}});




var _denseLUP=function(m){

var rows=m._size[0];
var columns=m._size[1];

var n=Math.min(rows,columns);

var data=object.clone(m._data);

var ldata=[];
var lsize=[rows,n];

var udata=[];
var usize=[n,columns];

var i,j,k;

var p=[];
for(i = 0;i < rows;i++) 
p[i] = i;

for(j = 0;j < columns;j++) {

if(j > 0){

for(i = 0;i < rows;i++) {

var min=Math.min(i,j);

var s=0;

for(k = 0;k < min;k++) {

s = addScalar(s,multiplyScalar(data[i][k],data[k][j]));}

data[i][j] = subtract(data[i][j],s);}}



var pi=j;
var pabsv=0;
var vjj=0;

for(i = j;i < rows;i++) {

var v=data[i][j];

var absv=abs(v);

if(larger(absv,pabsv)){

pi = i;

pabsv = absv;

vjj = v;}}



if(j !== pi){

p[j] = [p[pi],p[pi] = p[j]][0];

DenseMatrix._swapRows(j,pi,data);}


if(j < rows){

for(i = j + 1;i < rows;i++) {

var vij=data[i][j];
if(!equalScalar(vij,0)){

data[i][j] = divideScalar(data[i][j],vjj);}}}}





for(j = 0;j < columns;j++) {

for(i = 0;i < rows;i++) {

if(j === 0){

if(i < columns){

udata[i] = [];}


ldata[i] = [];}


if(i < j){

if(i < columns){

udata[i][j] = data[i][j];}


if(j < rows){

ldata[i][j] = 0;}

continue;}


if(i === j){

if(i < columns){

udata[i][j] = data[i][j];}


if(j < rows){

ldata[i][j] = 1;}

continue;}


if(i < columns){

udata[i][j] = 0;}


if(j < rows){

ldata[i][j] = data[i][j];}}}




var l=new DenseMatrix({
data:ldata,
size:lsize});


var u=new DenseMatrix({
data:udata,
size:usize});


var pv=[];
for(i = 0,n = p.length;i < n;i++) 
pv[p[i]] = i;

return {
L:l,
U:u,
p:pv,
toString:function(){
return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\nP: ' + this.p;}};};




var _sparseLUP=function(m){

var rows=m._size[0];
var columns=m._size[1];

var n=Math.min(rows,columns);

var values=m._values;
var index=m._index;
var ptr=m._ptr;

var lvalues=[];
var lindex=[];
var lptr=[];
var lsize=[rows,n];

var uvalues=[];
var uindex=[];
var uptr=[];
var usize=[n,columns];

var i,j,k;

var pv_co=[];
var pv_oc=[];
for(i = 0;i < rows;i++) {
pv_co[i] = i;
pv_oc[i] = i;}


var swapIndeces=function(x,y){

var kx=pv_oc[x];
var ky=pv_oc[y];

pv_co[kx] = y;
pv_co[ky] = x;

pv_oc[x] = ky;
pv_oc[y] = kx;};


for(j = 0;j < columns;j++) {

var spa=new Spa();

if(j < rows){

lptr.push(lvalues.length);

lvalues.push(1);
lindex.push(j);}


uptr.push(uvalues.length);

var k0=ptr[j];
var k1=ptr[j + 1];

for(k = k0;k < k1;k++) {

i = index[k];

spa.set(pv_co[i],values[k]);}


if(j > 0){

spa.forEach(0,j - 1,function(k,vkj){

SparseMatrix._forEachRow(k,lvalues,lindex,lptr,function(i,vik){

if(i > k){

spa.accumulate(i,unaryMinus(multiplyScalar(vik,vkj)));}});});}





var pi=j;
var vjj=spa.get(j);
var pabsv=abs(vjj);

spa.forEach(j + 1,rows - 1,function(x,v){

var absv=abs(v);

if(larger(absv,pabsv)){

pi = x;

pabsv = absv;

vjj = v;}});



if(j !== pi){

SparseMatrix._swapRows(j,pi,lsize[1],lvalues,lindex,lptr);

SparseMatrix._swapRows(j,pi,usize[1],uvalues,uindex,uptr);

spa.swap(j,pi);

swapIndeces(j,pi);}


spa.forEach(0,rows - 1,function(x,v){

if(x <= j){

uvalues.push(v);
uindex.push(x);}else 

{

v = divideScalar(v,vjj);

if(!equalScalar(v,0)){

lvalues.push(v);
lindex.push(x);}}});}





uptr.push(uvalues.length);
lptr.push(lvalues.length);


return {
L:new SparseMatrix({
values:lvalues,
index:lindex,
ptr:lptr,
size:lsize}),

U:new SparseMatrix({
values:uvalues,
index:uindex,
ptr:uptr,
size:usize}),

p:pv_co,
toString:function(){
return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\nP: ' + this.p;}};};




return lup;}


exports.name = 'lup';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/abs.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
























var abs=typed('abs',{
'number':Math.abs,

'Complex':function(x){
var re=Math.abs(x.re);
var im=Math.abs(x.im);
if(re < 1000 && im < 1000){
return Math.sqrt(re * re + im * im);}else 

{

if(re >= im){
var i=im / re;
return re * Math.sqrt(1 + i * i);}else 

{
var j=re / im;
return im * Math.sqrt(1 + j * j);}}},




'BigNumber':function(x){
return x.abs();},


'Fraction':function(x){
return x.abs();},


'Array | Matrix':function(x){

return deepMap(x,abs,true);},


'Unit':function(x){


var ret=x.clone();
ret.value = Math.abs(ret.value);
return ret;}});



abs.toTex = '\\left|${args[0]}\\right|';

return abs;}


exports.name = 'abs';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/decomposition/slu.js',["mathjs/lib/utils/index.js","mathjs/lib/function/algebra/sparse/cs_sqr.js","mathjs/lib/function/algebra/sparse/cs_lu.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

var number=util.number,

isInteger=number.isInteger;

function factory(type,config,load,typed){

var cs_sqr=load(require('mathjs/lib/function/algebra/sparse/cs_sqr.js'));
var cs_lu=load(require('mathjs/lib/function/algebra/sparse/cs_lu.js'));


























var slu=typed('slu',{

'SparseMatrix, number, number':function(a,order,threshold){

if(!isInteger(order) || order < 0 || order > 3)
throw new Error('Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]');

if(threshold < 0 || threshold > 1)
throw new Error('Partial pivoting threshold must be a number from 0 to 1');


var s=cs_sqr(order,a,false);


var f=cs_lu(a,s,threshold);


return {
L:f.L,
U:f.U,
p:f.pinv,
q:s.q,
toString:function(){
return 'L: ' + this.L.toString() + '\nU: ' + this.U.toString() + '\np: ' + this.p.toString() + (this.q?'\nq: ' + this.q.toString():'') + '\n';}};}});





return slu;}


exports.name = 'slu';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_sqr.js',["mathjs/lib/function/algebra/sparse/cs_amd.js","mathjs/lib/function/algebra/sparse/cs_permute.js","mathjs/lib/function/algebra/sparse/cs_etree.js","mathjs/lib/function/algebra/sparse/cs_post.js","mathjs/lib/function/algebra/sparse/cs_counts.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_amd=load(require('mathjs/lib/function/algebra/sparse/cs_amd.js'));
var cs_permute=load(require('mathjs/lib/function/algebra/sparse/cs_permute.js'));
var cs_etree=load(require('mathjs/lib/function/algebra/sparse/cs_etree.js'));
var cs_post=load(require('mathjs/lib/function/algebra/sparse/cs_post.js'));
var cs_counts=load(require('mathjs/lib/function/algebra/sparse/cs_counts.js'));













var cs_sqr=function(order,a,qr){

var aptr=a._ptr;
var asize=a._size;

var n=asize[1];

var k;

var s={};

s.q = cs_amd(order,a);

if(order && !s.q)
return null;

if(qr){

var c=order?cs_permute(a,null,s.q,0):a;

s.parent = cs_etree(c,1);

var post=cs_post(s.parent,n);

s.cp = cs_counts(c,s.parent,post,1);

if(c && s.parent && s.cp && _vcount(c,s)){

for(s.unz = 0,k = 0;k < n;k++) 
s.unz += s.cp[k];}}else 


{

s.unz = 4 * aptr[n] + n;
s.lnz = s.unz;}


return s;};





var _vcount=function(a,s){

var aptr=a._ptr;
var aindex=a._index;
var asize=a._size;

var m=asize[0];
var n=asize[1];

s.pinv = [];
s.leftmost = [];

var parent=s.parent;
var pinv=s.pinv;
var leftmost=s.leftmost;

var w=[];
var next=0;
var head=m;
var tail=m + n;
var nque=m + 2 * n;

var i,k,p,p0,p1;

for(k = 0;k < n;k++) {

w[head + k] = -1;
w[tail + k] = -1;
w[nque + k] = 0;}


for(i = 0;i < m;i++) 
leftmost[i] = -1;

for(k = n - 1;k >= 0;k--) {

for(p0 = aptr[k],p1 = aptr[k + 1],p = p0;p < p1;p++) {

leftmost[aindex[p]] = k;}}



for(i = m - 1;i >= 0;i--) {

pinv[i] = -1;
k = leftmost[i];

if(k == -1)
continue;

if(w[nque + k]++ === 0)
w[tail + k] = i;

w[next + i] = w[head + k];
w[head + k] = i;}

s.lnz = 0;
s.m2 = m;

for(k = 0;k < n;k++) {

i = w[head + k];

s.lnz++;

if(i < 0)
i = s.m2++;

pinv[i] = k;

if(--nque[k] <= 0)
continue;

s.lnz += w[nque + k];

var pa=parent[k];
if(pa != -1){
if(w[nque + pa] === 0)
w[tail + pa] = w[tail + k];
w[next + w[tail + k]] = w[head + pa];
w[head + pa] = w[next + i];
w[nque + pa] += w[nque + k];}}


for(i = 0;i < m;i++) {
if(pinv[i] < 0)
pinv[i] = k++;}

return true;};


return cs_sqr;}


exports.name = 'cs_sqr';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_amd.js',["mathjs/lib/function/algebra/sparse/cs_flip.js","mathjs/lib/function/algebra/sparse/cs_fkeep.js","mathjs/lib/function/algebra/sparse/cs_tdfs.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/matrix/transpose.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_flip=load(require('mathjs/lib/function/algebra/sparse/cs_flip.js'));
var cs_fkeep=load(require('mathjs/lib/function/algebra/sparse/cs_fkeep.js'));
var cs_tdfs=load(require('mathjs/lib/function/algebra/sparse/cs_tdfs.js'));

var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var transpose=load(require('mathjs/lib/function/matrix/transpose.js'));














var cs_amd=function(order,a){

if(!a || order <= 0 || order > 3)
return null;

var asize=a._size;

var m=asize[0];
var n=asize[1];

var lemax=0;

var dense=Math.max(16,10 * Math.sqrt(n));
dense = Math.min(n - 2,dense);

var cm=_createTargetMatrix(order,a,m,n,dense);

cs_fkeep(cm,_diag,null);

var cindex=cm._index;
var cptr=cm._ptr;


var cnz=cptr[n];


var P=[];


var W=[];
var len=0;
var nv=n + 1;
var next=2 * (n + 1);
var head=3 * (n + 1);
var elen=4 * (n + 1);
var degree=5 * (n + 1);
var w=6 * (n + 1);
var hhead=7 * (n + 1);


var last=P;


var mark=_initializeQuotientGraph(n,cptr,W,len,head,last,next,hhead,nv,w,elen,degree);


var nel=_initializeDegreeLists(n,cptr,W,degree,elen,w,dense,nv,head,last,next);


var mindeg=0;


var i,j,k,k1,k2,e,pj,ln,nvi,pk,eln,p1,p2,pn,h,d;


while(nel < n) {



for(k = -1;mindeg < n && (k = W[head + mindeg]) == -1;mindeg++);
if(W[next + k] != -1)
last[W[next + k]] = -1;

W[head + mindeg] = W[next + k];

var elenk=W[elen + k];

var nvk=W[nv + k];

nel += nvk;




var dk=0;

W[nv + k] = -nvk;
var p=cptr[k];

var pk1=elenk === 0?p:cnz;
var pk2=pk1;
for(k1 = 1;k1 <= elenk + 1;k1++) {
if(k1 > elenk){

e = k;

pj = p;

ln = W[len + k] - elenk;}else 

{

e = cindex[p++];
pj = cptr[e];

ln = W[len + e];}

for(k2 = 1;k2 <= ln;k2++) {
i = cindex[pj++];

if((nvi = W[nv + i]) <= 0)
continue;

dk += nvi;

W[nv + i] = -nvi;

cindex[pk2++] = i;
if(W[next + i] != -1)
last[W[next + i]] = last[i];

if(last[i] != -1)
W[next + last[i]] = W[next + i];else 

W[head + W[degree + i]] = W[next + i];}

if(e != k){

cptr[e] = cs_flip(k);

W[w + e] = 0;}}



if(elenk !== 0)
cnz = pk2;

W[degree + k] = dk;

cptr[k] = pk1;
W[len + k] = pk2 - pk1;

W[elen + k] = -2;





mark = _wclear(mark,lemax,w,n);

for(pk = pk1;pk < pk2;pk++) {
i = cindex[pk];

if((eln = W[elen + i]) <= 0)
continue;

nvi = -W[nv + i];
var wnvi=mark - nvi;

for(p = cptr[i],p1 = cptr[i] + eln - 1;p <= p1;p++) {
e = cindex[p];
if(W[w + e] >= mark){

W[w + e] -= nvi;}else 

if(W[w + e] !== 0){

W[w + e] = W[degree + e] + wnvi;}}}









for(pk = pk1;pk < pk2;pk++) {

i = cindex[pk];
p1 = cptr[i];
p2 = p1 + W[elen + i] - 1;
pn = p1;

for(h = 0,d = 0,p = p1;p <= p2;p++) {
e = cindex[p];

if(W[w + e] !== 0){

var dext=W[w + e] - mark;
if(dext > 0){

d += dext;

cindex[pn++] = e;

h += e;}else 

{

cptr[e] = cs_flip(k);

W[w + e] = 0;}}}




W[elen + i] = pn - p1 + 1;
var p3=pn;
var p4=p1 + W[len + i];

for(p = p2 + 1;p < p4;p++) {
j = cindex[p];

var nvj=W[nv + j];
if(nvj <= 0)
continue;

d += nvj;

cindex[pn++] = j;

h += j;}


if(d === 0){

cptr[i] = cs_flip(k);
nvi = -W[nv + i];

dk -= nvi;

nvk += nvi;
nel += nvi;
W[nv + i] = 0;

W[elen + i] = -1;}else 

{

W[degree + i] = Math.min(W[degree + i],d);

cindex[pn] = cindex[p3];

cindex[p3] = cindex[p1];

cindex[p1] = k;

W[len + i] = pn - p1 + 1;

h = (h < 0?-h:h) % n;

W[next + i] = W[hhead + h];
W[hhead + h] = i;

last[i] = h;}}



W[degree + k] = dk;
lemax = Math.max(lemax,dk);

mark = _wclear(mark + lemax,lemax,w,n);



for(pk = pk1;pk < pk2;pk++) {
i = cindex[pk];

if(W[nv + i] >= 0)
continue;

h = last[i];
i = W[hhead + h];

W[hhead + h] = -1;
for(;i != -1 && W[next + i] != -1;i = W[next + i],mark++) {
ln = W[len + i];
eln = W[elen + i];
for(p = cptr[i] + 1;p <= cptr[i] + ln - 1;p++) 
W[w + cindex[p]] = mark;
var jlast=i;

for(j = W[next + i];j != -1;) {
var ok=W[len + j] === ln && W[elen + j] === eln;
for(p = cptr[j] + 1;ok && p <= cptr[j] + ln - 1;p++) {

if(W[w + cindex[p]] != mark)
ok = 0;}


if(ok){

cptr[j] = cs_flip(i);
W[nv + i] += W[nv + j];
W[nv + j] = 0;

W[elen + j] = -1;

j = W[next + j];
W[next + jlast] = j;}else 

{

jlast = j;
j = W[next + j];}}}}







for(p = pk1,pk = pk1;pk < pk2;pk++) {
i = cindex[pk];

if((nvi = -W[nv + i]) <= 0)
continue;

W[nv + i] = nvi;

d = W[degree + i] + dk - nvi;
d = Math.min(d,n - nel - nvi);
if(W[head + d] != -1)
last[W[head + d]] = i;

W[next + i] = W[head + d];
last[i] = -1;
W[head + d] = i;

mindeg = Math.min(mindeg,d);
W[degree + i] = d;

cindex[p++] = i;}


W[nv + k] = nvk;

if((W[len + k] = p - pk1) === 0){

cptr[k] = -1;

W[w + k] = 0;}

if(elenk !== 0){

cnz = p;}}









for(i = 0;i < n;i++) 
cptr[i] = cs_flip(cptr[i]);
for(j = 0;j <= n;j++) 
W[head + j] = -1;

for(j = n;j >= 0;j--) {

if(W[nv + j] > 0)
continue;

W[next + j] = W[head + cptr[j]];
W[head + cptr[j]] = j;}


for(e = n;e >= 0;e--) {

if(W[nv + e] <= 0)
continue;
if(cptr[e] != -1){

W[next + e] = W[head + cptr[e]];
W[head + cptr[e]] = e;}}



for(k = 0,i = 0;i <= n;i++) {
if(cptr[i] == -1)
k = cs_tdfs(i,k,W,head,next,P,w);}


P.splice(P.length - 1,1);

return P;};





















var _createTargetMatrix=function(order,a,m,n,dense){

var at=transpose(a);


if(order === 1 && n === m){

return add(a,at);}



if(order == 2){

var tindex=at._index;
var tptr=at._ptr;

var p2=0;

for(var j=0;j < m;j++) {

var p=tptr[j];

tptr[j] = p2;

if(tptr[j + 1] - p > dense)
continue;

for(var p1=tptr[j + 1];p < p1;p++) 
tindex[p2++] = tindex[p];}


tptr[m] = p2;

a = transpose(at);

return multiply(at,a);}



return multiply(at,a);};










var _initializeQuotientGraph=function(n,cptr,W,len,head,last,next,hhead,nv,w,elen,degree){

for(var k=0;k < n;k++) 
W[len + k] = cptr[k + 1] - cptr[k];
W[len + n] = 0;

for(var i=0;i <= n;i++) {

W[head + i] = -1;
last[i] = -1;
W[next + i] = -1;

W[hhead + i] = -1;

W[nv + i] = 1;

W[w + i] = 1;

W[elen + i] = 0;

W[degree + i] = W[len + i];}


var mark=_wclear(0,0,w,n);

W[elen + n] = -2;

cptr[n] = -1;

W[w + n] = 0;

return mark;};







var _initializeDegreeLists=function(n,cptr,W,degree,elen,w,dense,nv,head,last,next){

var nel=0;

for(var i=0;i < n;i++) {

var d=W[degree + i];

if(d === 0){

W[elen + i] = -2;
nel++;

cptr[i] = -1;
W[w + i] = 0;}else 

if(d > dense){

W[nv + i] = 0;

W[elen + i] = -1;
nel++;
cptr[i] = cs_flip(n);
W[nv + n]++;}else 

{
var h=W[head + d];
if(h != -1)
last[h] = i;

W[next + i] = W[head + d];
W[head + d] = i;}}


return nel;};


var _wclear=function(mark,lemax,w,n){
if(mark < 2 || mark + lemax < 0){
for(var k=0;k < n;k++) {
if(w[k] !== 0)
w[k] = 1;}

mark = 2;}


return mark;};


var _diag=function(i,j){
return i != j;};


return cs_amd;}


exports.name = 'cs_amd';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_flip.js',[],function(global, require, module, exports) {  'use strict';

function factory(){








var cs_flip=function(i){

return -i - 2;};


return cs_flip;}


exports.name = 'cs_flip';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_fkeep.js',[],function(global, require, module, exports) {  'use strict';

function factory(){
















var cs_fkeep=function(a,callback,other){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;

var n=asize[1];

var nz=0;

for(var j=0;j < n;j++) {

var p=aptr[j];

aptr[j] = nz;
for(;p < aptr[j + 1];p++) {

if(callback(aindex[p],j,avalues?avalues[p]:1,other)){

aindex[nz] = aindex[p];

if(avalues)
avalues[nz] = avalues[p];

nz++;}}}




aptr[n] = nz;

aindex.splice(nz,aindex.length - nz);

if(avalues)
avalues.splice(nz,avalues.length - nz);

return nz;};


return cs_fkeep;}


exports.name = 'cs_fkeep';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_tdfs.js',[],function(global, require, module, exports) {  'use strict';

function factory(){














var cs_tdfs=function(j,k,w,head,next,post,stack){

var top=0;

w[stack] = j;

while(top >= 0) {

var p=w[stack + top];

var i=w[head + p];
if(i == -1){

top--;

post[k++] = p;}else 

{

w[head + p] = w[next + i];

++top;

w[stack + top] = i;}}


return k;};


return cs_tdfs;}


exports.name = 'cs_tdfs';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/transpose.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/string.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var format=require('mathjs/lib/utils/string.js').format;

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var DenseMatrix=type.DenseMatrix,
SparseMatrix=type.SparseMatrix;





















var transpose=typed('transpose',{

'Array':function(x){

return transpose(matrix(x)).valueOf();},


'Matrix':function(x){

var size=x.size();


var c;


switch(size.length){
case 1:

c = x.clone();
break;

case 2:

var rows=size[0];
var columns=size[1];


if(columns === 0){

throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + format(size) + ')');}



switch(x.storage()){
case 'dense':
c = _denseTranspose(x,rows,columns);
break;
case 'sparse':
c = _sparseTranspose(x,rows,columns);
break;}

break;

default:

throw new RangeError('Matrix must be a vector or two dimensional (size: ' + format(this._size) + ')');}

return c;},



'any':function(x){
return clone(x);}});



var _denseTranspose=function(m,rows,columns){

var data=m._data;

var transposed=[];
var transposedRow;

for(var j=0;j < columns;j++) {

transposedRow = transposed[j] = [];

for(var i=0;i < rows;i++) {

transposedRow[i] = clone(data[i][j]);}}



return new DenseMatrix({
data:transposed,
size:[columns,rows],
datatype:m._datatype});};



var _sparseTranspose=function(m,rows,columns){

var values=m._values;
var index=m._index;
var ptr=m._ptr;

var cvalues=values?[]:undefined;
var cindex=[];
var cptr=[];

var w=[];
for(var x=0;x < rows;x++) 
w[x] = 0;

var p,l,j;

for(p = 0,l = index.length;p < l;p++) {

w[index[p]]++;}


var sum=0;

for(var i=0;i < rows;i++) {

cptr.push(sum);

sum += w[i];

w[i] = cptr[i];}


cptr.push(sum);

for(j = 0;j < columns;j++) {

for(var k0=ptr[j],k1=ptr[j + 1],k=k0;k < k1;k++) {

var q=w[index[k]]++;

cindex[q] = j;

if(values)
cvalues[q] = clone(values[k]);}}



return new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[columns,rows],
datatype:m._datatype});};



transpose.toTex = '\\left(${args[0]}\\right)' + latex.operators['transpose'];

return transpose;}


exports.name = 'transpose';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_permute.js',[],function(global, require, module, exports) {  'use strict';

function factory(type){

var SparseMatrix=type.SparseMatrix;













var cs_permute=function(a,pinv,q,values){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;
var adt=a._datatype;

var m=asize[0];
var n=asize[1];

var cvalues=values && a._values?[]:null;
var cindex=[];
var cptr=[];

var nz=0;

for(var k=0;k < n;k++) {

cptr[k] = nz;

var j=q?q[k]:k;

for(var t0=aptr[j],t1=aptr[j + 1],t=t0;t < t1;t++) {

var r=pinv?pinv[aindex[t]]:aindex[t];

cindex[nz] = r;

if(cvalues)
cvalues[nz] = avalues[t];

nz++;}}



cptr[n] = nz;

return new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[m,n],
datatype:adt});};



return cs_permute;}


exports.name = 'cs_permute';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_etree.js',[],function(global, require, module, exports) {  'use strict';

function factory(){










var cs_etree=function(a,ata){

if(!a)
return null;

var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;

var m=asize[0];
var n=asize[1];


var parent=[];


var w=[];
var ancestor=0;
var prev=n;

var i,inext;


if(ata){

for(i = 0;i < m;i++) 
w[prev + i] = -1;}


for(var k=0;k < n;k++) {

parent[k] = -1;

w[ancestor + k] = -1;

for(var p0=aptr[k],p1=aptr[k + 1],p=p0;p < p1;p++) {

var r=aindex[p];

i = ata?w[prev + r]:r;

for(;i != -1 && i < k;i = inext) {

inext = w[ancestor + i];

w[ancestor + i] = k;

if(inext == -1)
parent[i] = k;}

if(ata)
w[prev + r] = k;}}


return parent;};


return cs_etree;}


exports.name = 'cs_etree';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_post.js',["mathjs/lib/function/algebra/sparse/cs_tdfs.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_tdfs=load(require('mathjs/lib/function/algebra/sparse/cs_tdfs.js'));









var cs_post=function(parent,n){

if(!parent)
return null;

var k=0;
var j;

var post=[];

var w=[];
var head=0;
var next=n;
var stack=2 * n;

for(j = 0;j < n;j++) {

w[head + j] = -1;}


for(j = n - 1;j >= 0;j--) {

if(parent[j] == -1)
continue;

w[next + j] = w[head + parent[j]];
w[head + parent[j]] = j;}


for(j = 0;j < n;j++) {

if(parent[j] != -1)
continue;

k = cs_tdfs(j,k,w,head,next,post,stack);}

return post;};


return cs_post;}


exports.name = 'cs_post';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_counts.js',["mathjs/lib/function/matrix/transpose.js","mathjs/lib/function/algebra/sparse/cs_leaf.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var transpose=load(require('mathjs/lib/function/matrix/transpose.js'));

var cs_leaf=load(require('mathjs/lib/function/algebra/sparse/cs_leaf.js'));













var cs_counts=function(a,parent,post,ata){

if(!a || !parent || !post)
return null;

var asize=a._size;

var m=asize[0];
var n=asize[1];

var i,j,k,J,p,p0,p1;


var s=4 * n + (ata?n + m + 1:0);

var w=[];
var ancestor=0;
var maxfirst=n;
var prevleaf=2 * n;
var first=3 * n;
var head=4 * n;
var next=5 * n + 1;

for(k = 0;k < s;k++) 
w[k] = -1;


var colcount=[];


var at=transpose(a);

var tindex=at._index;
var tptr=at._ptr;


for(k = 0;k < n;k++) {
j = post[k];

colcount[j] = w[first + j] == -1?1:0;
for(;j != -1 && w[first + j] == -1;j = parent[j]) 
w[first + j] = k;}



if(ata){

for(k = 0;k < n;k++) 
w[post[k]] = k;

for(i = 0;i < m;i++) {

for(k = n,p0 = tptr[i],p1 = tptr[i + 1],p = p0;p < p1;p++) 
k = Math.min(k,w[tindex[p]]);

w[next + i] = w[head + k];
w[head + k] = i;}}




for(i = 0;i < n;i++) 
w[ancestor + i] = i;

for(k = 0;k < n;k++) {

j = post[k];

if(parent[j] != -1)
colcount[parent[j]]--;


for(J = ata?w[head + k]:j;J != -1;J = ata?w[next + J]:-1) {
for(p = tptr[J];p < tptr[J + 1];p++) {
i = tindex[p];
var r=cs_leaf(i,j,w,first,maxfirst,prevleaf,ancestor);

if(r.jleaf >= 1)
colcount[j]++;

if(r.jleaf == 2)
colcount[r.q]--;}}


if(parent[j] != -1)
w[ancestor + j] = parent[j];}


for(j = 0;j < n;j++) {
if(parent[j] != -1)
colcount[parent[j]] += colcount[j];}

return colcount;};


return cs_counts;}


exports.name = 'cs_counts';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_leaf.js',[],function(global, require, module, exports) {  'use strict';

function factory(){

















var cs_leaf=function(i,j,w,first,maxfirst,prevleaf,ancestor){

var s,sparent,jprev;


var jleaf=0;
var q;


if(i <= j || w[first + j] <= w[maxfirst + i])
return -1;

w[maxfirst + i] = w[first + j];

jprev = w[prevleaf + i];
w[prevleaf + i] = j;


if(jprev === -1){

jleaf = 1;
q = i;}else 

{

jleaf = 2;

for(q = jprev;q != w[ancestor + q];q = w[ancestor + q]);
for(s = jprev;s != q;s = sparent) {

sparent = w[ancestor + s];
w[ancestor + s] = q;}}


return {
jleaf:jleaf,
q:q};};



return cs_leaf;}


exports.name = 'cs_leaf';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_lu.js',["mathjs/lib/function/arithmetic/abs.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/relational/larger.js","mathjs/lib/function/relational/largerEq.js","mathjs/lib/function/algebra/sparse/cs_spsolve.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var abs=load(require('mathjs/lib/function/arithmetic/abs.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));

var larger=load(require('mathjs/lib/function/relational/larger.js'));
var largerEq=load(require('mathjs/lib/function/relational/largerEq.js'));

var cs_spsolve=load(require('mathjs/lib/function/algebra/sparse/cs_spsolve.js'));

var SparseMatrix=type.SparseMatrix;
















var cs_lu=function(m,s,tol){

if(!m)
return null;

var size=m._size;

var n=size[1];

var q;
var lnz=100;
var unz=100;

if(s){
q = s.q;
lnz = s.lnz || lnz;
unz = s.unz || unz;}


var lvalues=[];
var lindex=[];
var lptr=[];

var L=new SparseMatrix({
values:lvalues,
index:lindex,
ptr:lptr,
size:[n,n]});


var uvalues=[];
var uindex=[];
var uptr=[];

var U=new SparseMatrix({
values:uvalues,
index:uindex,
ptr:uptr,
size:[n,n]});


var pinv=[];

var i,p;

var x=[];
var xi=[];

for(i = 0;i < n;i++) {

x[i] = 0;

pinv[i] = -1;

lptr[i + 1] = 0;}


lnz = 0;
unz = 0;

for(var k=0;k < n;k++) {

lptr[k] = lnz;
uptr[k] = unz;

var col=q?q[k]:k;

var top=cs_spsolve(L,m,col,xi,x,pinv,1);

var ipiv=-1;
var a=-1;

for(p = top;p < n;p++) {

i = xi[p];

if(pinv[i] < 0){

var xabs=abs(x[i]);

if(larger(xabs,a)){

a = xabs;
ipiv = i;}}else 


{

uindex[unz] = pinv[i];
uvalues[unz++] = x[i];}}



if(ipiv == -1 || a <= 0)
return null;

if(pinv[col] < 0 && largerEq(abs(x[col]),multiply(a,tol)))
ipiv = col;

var pivot=x[ipiv];

uindex[unz] = k;
uvalues[unz++] = pivot;

pinv[ipiv] = k;

lindex[lnz] = ipiv;
lvalues[lnz++] = 1;

for(p = top;p < n;p++) {

i = xi[p];

if(pinv[i] < 0){

lindex[lnz] = i;

lvalues[lnz++] = divideScalar(x[i],pivot);}


x[i] = 0;}}



lptr[n] = lnz;
uptr[n] = unz;

for(p = 0;p < lnz;p++) 
lindex[p] = pinv[lindex[p]];

lvalues.splice(lnz,lvalues.length - lnz);
lindex.splice(lnz,lindex.length - lnz);
uvalues.splice(unz,uvalues.length - unz);
uindex.splice(unz,uindex.length - unz);

return {
L:L,
U:U,
pinv:pinv};};



return cs_lu;}


exports.name = 'cs_lu';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/largerEq.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');



























var largerEq=typed('largerEq',{

'boolean, boolean':function(x,y){
return x >= y;},


'number, number':function(x,y){
return x >= y || nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return x.gte(y);},


'Fraction, Fraction':function(x,y){
return x.compare(y) !== -1;},


'Complex, Complex':function(){
throw new TypeError('No ordering relation is defined for complex numbers');},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value >= y.value || nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x >= y;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,largerEq);
break;
default:

c = algorithm03(y,x,largerEq,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,largerEq,false);
break;
default:

c = algorithm13(x,y,largerEq);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return largerEq(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return largerEq(matrix(x),y);},


'Matrix, Array':function(x,y){

return largerEq(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,largerEq,false);
break;
default:
c = algorithm14(x,y,largerEq,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,largerEq,true);
break;
default:
c = algorithm14(y,x,largerEq,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,largerEq,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,largerEq,true).valueOf();}});



largerEq.toTex = '\\left(${args[0]}' + latex.operators['largerEq'] + '${args[1]}\\right)';

return largerEq;}


exports.name = 'largerEq';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_spsolve.js',["mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/algebra/sparse/cs_reach.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));

var cs_reach=load(require('mathjs/lib/function/algebra/sparse/cs_reach.js'));




















var cs_spsolve=function(g,b,k,xi,x,pinv,lo){

var gvalues=g._values;
var gindex=g._index;
var gptr=g._ptr;
var gsize=g._size;

var n=gsize[1];

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;

var p,p0,p1,q;

var top=cs_reach(g,b,k,xi,pinv);

for(p = top;p < n;p++) 
x[xi[p]] = 0;

for(p0 = bptr[k],p1 = bptr[k + 1],p = p0;p < p1;p++) 
x[bindex[p]] = bvalues[p];

for(var px=top;px < n;px++) {

var j=xi[px];

var J=pinv?pinv[j]:j;

if(J < 0)
continue;

p0 = gptr[J];
p1 = gptr[J + 1];

x[j] = divideScalar(x[j],gvalues[lo?p0:p1 - 1]);

p = lo?p0 + 1:p0;
q = lo?p1:p1 - 1;

for(;p < q;p++) {

var i=gindex[p];

x[i] = subtract(x[i],multiply(gvalues[p],x[j]));}}



return top;};


return cs_spsolve;}


exports.name = 'cs_spsolve';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_reach.js',["mathjs/lib/function/algebra/sparse/cs_dfs.js","mathjs/lib/function/algebra/sparse/cs_marked.js","mathjs/lib/function/algebra/sparse/cs_mark.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_dfs=load(require('mathjs/lib/function/algebra/sparse/cs_dfs.js'));
var cs_marked=load(require('mathjs/lib/function/algebra/sparse/cs_marked.js'));
var cs_mark=load(require('mathjs/lib/function/algebra/sparse/cs_mark.js'));

















var cs_reach=function(g,b,k,xi,pinv){

var gptr=g._ptr;
var gsize=g._size;

var bindex=b._index;
var bptr=b._ptr;

var n=gsize[1];

var p,p0,p1;

var top=n;

for(p0 = bptr[k],p1 = bptr[k + 1],p = p0;p < p1;p++) {

var i=bindex[p];

if(!cs_marked(gptr,i)){

top = cs_dfs(i,g,top,xi,pinv);}}



for(p = top;p < n;p++) {

cs_mark(gptr,xi[p]);}

return top;};


return cs_reach;}


exports.name = 'cs_reach';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_dfs.js',["mathjs/lib/function/algebra/sparse/cs_marked.js","mathjs/lib/function/algebra/sparse/cs_mark.js","mathjs/lib/function/algebra/sparse/cs_unflip.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_marked=load(require('mathjs/lib/function/algebra/sparse/cs_marked.js'));
var cs_mark=load(require('mathjs/lib/function/algebra/sparse/cs_mark.js'));
var cs_unflip=load(require('mathjs/lib/function/algebra/sparse/cs_unflip.js'));

















var cs_dfs=function(j,g,top,xi,pinv){

var index=g._index;
var ptr=g._ptr;
var size=g._size;

var n=size[1];

var i,p,p2;

var head=0;

xi[0] = j;

while(head >= 0) {

j = xi[head];

var jnew=pinv?pinv[j]:j;

if(!cs_marked(ptr,j)){

cs_mark(ptr,j);

xi[n + head] = jnew < 0?0:cs_unflip(ptr[jnew]);}


var done=1;

for(p = xi[n + head],p2 = jnew < 0?0:cs_unflip(ptr[jnew + 1]);p < p2;p++) {

i = index[p];

if(cs_marked(ptr,i))
continue;

xi[n + head] = p;

xi[++head] = i;

done = 0;

break;}


if(done){

head--;

xi[--top] = j;}}


return top;};


return cs_dfs;}


exports.name = 'cs_dfs';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_marked.js',[],function(global, require, module, exports) {  'use strict';

function factory(){









var cs_marked=function(w,j){

return w[j] < 0;};


return cs_marked;}


exports.name = 'cs_marked';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_mark.js',["mathjs/lib/function/algebra/sparse/cs_flip.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_flip=load(require('mathjs/lib/function/algebra/sparse/cs_flip.js'));









var cs_mark=function(w,j){

w[j] = cs_flip(w[j]);};


return cs_mark;}


exports.name = 'cs_mark';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_unflip.js',["mathjs/lib/function/algebra/sparse/cs_flip.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load){

var cs_flip=load(require('mathjs/lib/function/algebra/sparse/cs_flip.js'));








var cs_unflip=function(i){

return i < 0?cs_flip(i):i;};


return cs_unflip;}


exports.name = 'cs_unflip';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/solver/lsolve.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/algebra/solver/utils/solveValidation.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiplyScalar=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var solveValidation=load(require('mathjs/lib/function/algebra/solver/utils/solveValidation.js'));

var DenseMatrix=type.DenseMatrix;

























var lsolve=typed('lsolve',{

'SparseMatrix, Array | Matrix':function(m,b){

return _sparseForwardSubstitution(m,b);},


'DenseMatrix, Array | Matrix':function(m,b){

return _denseForwardSubstitution(m,b);},


'Array, Array | Matrix':function(a,b){

var m=matrix(a);

var r=_denseForwardSubstitution(m,b);

return r.valueOf();}});



var _denseForwardSubstitution=function(m,b){

b = solveValidation(m,b,true);

var bdata=b._data;

var rows=m._size[0];
var columns=m._size[1];

var x=[];

var data=m._data;

for(var j=0;j < columns;j++) {

var bj=bdata[j][0] || 0;

var xj;

if(!equalScalar(bj,0)){

var vjj=data[j][j];

if(equalScalar(vjj,0)){

throw new Error('Linear system cannot be solved since matrix is singular');}


xj = divideScalar(bj,vjj);

for(var i=j + 1;i < rows;i++) {

bdata[i] = [subtract(bdata[i][0] || 0,multiplyScalar(xj,data[i][j]))];}}else 


{

xj = 0;}


x[j] = [xj];}


return new DenseMatrix({
data:x,
size:[rows,1]});};



var _sparseForwardSubstitution=function(m,b){

b = solveValidation(m,b,true);

var bdata=b._data;

var rows=m._size[0];
var columns=m._size[1];

var values=m._values;
var index=m._index;
var ptr=m._ptr;

var i,k;

var x=[];

for(var j=0;j < columns;j++) {

var bj=bdata[j][0] || 0;

if(!equalScalar(bj,0)){

var vjj=0;

var jvalues=[];
var jindex=[];

var l=ptr[j + 1];

for(k = ptr[j];k < l;k++) {

i = index[k];

if(i === j){

vjj = values[k];}else 

if(i > j){

jvalues.push(values[k]);
jindex.push(i);}}



if(equalScalar(vjj,0)){

throw new Error('Linear system cannot be solved since matrix is singular');}


var xj=divideScalar(bj,vjj);

for(k = 0,l = jindex.length;k < l;k++) {

i = jindex[k];

bdata[i] = [subtract(bdata[i][0] || 0,multiplyScalar(xj,jvalues[k]))];}


x[j] = [xj];}else 

{

x[j] = [0];}}



return new DenseMatrix({
data:x,
size:[rows,1]});};



return lsolve;}


exports.name = 'lsolve';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/solver/utils/solveValidation.js',["mathjs/lib/utils/index.js"],function(global, require, module, exports) {  'use strict';

var util=require('mathjs/lib/utils/index.js');

var string=util.string;
var array=util.array;

var isArray=Array.isArray;

function factory(type){

var DenseMatrix=type.DenseMatrix;










var solveValidation=function(m,b,copy){

var size=m.size();

if(size.length !== 2)
throw new RangeError('Matrix must be two dimensional (size: ' + string.format(size) + ')');

var rows=size[0];
var columns=size[1];

if(rows !== columns)
throw new RangeError('Matrix must be square (size: ' + string.format(size) + ')');

var data,i,bdata;

if(b && b.isMatrix === true){

var msize=b.size();

if(msize.length === 1){

if(msize[0] !== rows)
throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');

data = [];

bdata = b._data;

for(i = 0;i < rows;i++) {

data[i] = [bdata[i]];}


return new DenseMatrix({
data:data,
size:[rows,1],
datatype:b._datatype});}



if(msize.length === 2){

if(msize[0] !== rows || msize[1] !== 1)
throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');

if(b.isDenseMatrix === true){

if(copy){

data = [];

bdata = b._data;

for(i = 0;i < rows;i++) {

data[i] = [bdata[i][0]];}


return new DenseMatrix({
data:data,
size:[rows,1],
datatype:b._datatype});}



return b;}


data = [];
for(i = 0;i < rows;i++) 
data[i] = [0];

var values=b._values;
var index=b._index;
var ptr=b._ptr;

for(var k1=ptr[1],k=ptr[0];k < k1;k++) {

i = index[k];

data[i][0] = values[k];}


return new DenseMatrix({
data:data,
size:[rows,1],
datatype:b._datatype});}



throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');}


if(isArray(b)){

var asize=array.size(b);

if(asize.length === 1){

if(asize[0] !== rows)
throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');

data = [];

for(i = 0;i < rows;i++) {

data[i] = [b[i]];}


return new DenseMatrix({
data:data,
size:[rows,1]});}


if(asize.length === 2){

if(asize[0] !== rows || asize[1] !== 1)
throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');

data = [];

for(i = 0;i < rows;i++) {

data[i] = [b[i][0]];}


return new DenseMatrix({
data:data,
size:[rows,1]});}



throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');}};



return solveValidation;}


exports.factory = factory;
});
__d('mathjs/lib/function/algebra/solver/lusolve.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/algebra/decomposition/lup.js","mathjs/lib/function/algebra/decomposition/slu.js","mathjs/lib/function/algebra/sparse/cs_ipvec.js","mathjs/lib/function/algebra/solver/utils/solveValidation.js","mathjs/lib/function/algebra/solver/usolve.js","mathjs/lib/function/algebra/solver/lsolve.js"],function(global, require, module, exports) {  'use strict';

var isArray=Array.isArray;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var lup=load(require('mathjs/lib/function/algebra/decomposition/lup.js'));
var slu=load(require('mathjs/lib/function/algebra/decomposition/slu.js'));
var cs_ipvec=load(require('mathjs/lib/function/algebra/sparse/cs_ipvec.js'));

var solveValidation=load(require('mathjs/lib/function/algebra/solver/utils/solveValidation.js'));

var usolve=load(require('mathjs/lib/function/algebra/solver/usolve.js'));
var lsolve=load(require('mathjs/lib/function/algebra/solver/lsolve.js'));


































var lusolve=typed('lusolve',{

'Array, Array | Matrix':function(a,b){

a = matrix(a);

var d=lup(a);

var x=_lusolve(d.L,d.U,d.p,null,b);

return x.valueOf();},


'DenseMatrix, Array | Matrix':function(a,b){

var d=lup(a);

return _lusolve(d.L,d.U,d.p,null,b);},


'SparseMatrix, Array | Matrix':function(a,b){

var d=lup(a);

return _lusolve(d.L,d.U,d.p,null,b);},


'SparseMatrix, Array | Matrix, number, number':function(a,b,order,threshold){

var d=slu(a,order,threshold);

return _lusolve(d.L,d.U,d.p,d.q,b);},


'Object, Array | Matrix':function(d,b){

return _lusolve(d.L,d.U,d.p,d.q,b);}});



var _toMatrix=function(a){

if(a && a.isMatrix === true)
return a;

if(isArray(a))
return matrix(a);

throw new TypeError('Invalid Matrix LU decomposition');};


var _lusolve=function(l,u,p,q,b){

l = _toMatrix(l);
u = _toMatrix(u);

b = solveValidation(l,b,false);

if(p)
b._data = cs_ipvec(p,b._data);

var y=lsolve(l,b);

var x=usolve(u,y);

if(q)
x._data = cs_ipvec(q,x._data);

return x;};


return lusolve;}


exports.name = 'lusolve';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/sparse/cs_ipvec.js',[],function(global, require, module, exports) {  'use strict';

function factory(){









var cs_ipvec=function(p,b,n){

var k;
var n=b.length;
var x=[];

if(p){

for(k = 0;k < n;k++) {

x[p[k]] = b[k];}}else 


{

for(k = 0;k < n;k++) {

x[k] = b[k];}}


return x;};


return cs_ipvec;}


exports.name = 'cs_ipvec';
exports.path = 'sparse';
exports.factory = factory;
});
__d('mathjs/lib/function/algebra/solver/usolve.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/algebra/solver/utils/solveValidation.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiplyScalar=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var solveValidation=load(require('mathjs/lib/function/algebra/solver/utils/solveValidation.js'));

var DenseMatrix=type.DenseMatrix;

























var usolve=typed('usolve',{

'SparseMatrix, Array | Matrix':function(m,b){

return _sparseBackwardSubstitution(m,b);},


'DenseMatrix, Array | Matrix':function(m,b){

return _denseBackwardSubstitution(m,b);},


'Array, Array | Matrix':function(a,b){

var m=matrix(a);

var r=_denseBackwardSubstitution(m,b);

return r.valueOf();}});



var _denseBackwardSubstitution=function(m,b){

b = solveValidation(m,b,true);

var bdata=b._data;

var rows=m._size[0];
var columns=m._size[1];

var x=[];

var data=m._data;

for(var j=columns - 1;j >= 0;j--) {

var bj=bdata[j][0] || 0;

var xj;

if(!equalScalar(bj,0)){

var vjj=data[j][j];

if(equalScalar(vjj,0)){

throw new Error('Linear system cannot be solved since matrix is singular');}


xj = divideScalar(bj,vjj);

for(var i=j - 1;i >= 0;i--) {

bdata[i] = [subtract(bdata[i][0] || 0,multiplyScalar(xj,data[i][j]))];}}else 


{

xj = 0;}


x[j] = [xj];}


return new DenseMatrix({
data:x,
size:[rows,1]});};



var _sparseBackwardSubstitution=function(m,b){

b = solveValidation(m,b,true);

var bdata=b._data;

var rows=m._size[0];
var columns=m._size[1];

var values=m._values;
var index=m._index;
var ptr=m._ptr;

var i,k;

var x=[];

for(var j=columns - 1;j >= 0;j--) {

var bj=bdata[j][0] || 0;

if(!equalScalar(bj,0)){

var vjj=0;

var jvalues=[];
var jindex=[];

var f=ptr[j];
var l=ptr[j + 1];

for(k = l - 1;k >= f;k--) {

i = index[k];

if(i === j){

vjj = values[k];}else 

if(i < j){

jvalues.push(values[k]);
jindex.push(i);}}



if(equalScalar(vjj,0)){

throw new Error('Linear system cannot be solved since matrix is singular');}


var xj=divideScalar(bj,vjj);

for(k = 0,l = jindex.length;k < l;k++) {

i = jindex[k];

bdata[i] = [subtract(bdata[i][0],multiplyScalar(xj,jvalues[k]))];}


x[j] = [xj];}else 

{

x[j] = [0];}}



return new DenseMatrix({
data:x,
size:[rows,1]});};



return usolve;}


exports.name = 'usolve';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/index.js',["mathjs/lib/function/arithmetic/abs.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/cbrt.js","mathjs/lib/function/arithmetic/ceil.js","mathjs/lib/function/arithmetic/cube.js","mathjs/lib/function/arithmetic/divide.js","mathjs/lib/function/arithmetic/dotDivide.js","mathjs/lib/function/arithmetic/dotMultiply.js","mathjs/lib/function/arithmetic/dotPow.js","mathjs/lib/function/arithmetic/exp.js","mathjs/lib/function/arithmetic/fix.js","mathjs/lib/function/arithmetic/floor.js","mathjs/lib/function/arithmetic/gcd.js","mathjs/lib/function/arithmetic/hypot.js","mathjs/lib/function/arithmetic/lcm.js","mathjs/lib/function/arithmetic/log.js","mathjs/lib/function/arithmetic/log10.js","mathjs/lib/function/arithmetic/mod.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/norm.js","mathjs/lib/function/arithmetic/nthRoot.js","mathjs/lib/function/arithmetic/pow.js","mathjs/lib/function/arithmetic/round.js","mathjs/lib/function/arithmetic/sign.js","mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/arithmetic/square.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/arithmetic/unaryMinus.js","mathjs/lib/function/arithmetic/unaryPlus.js","mathjs/lib/function/arithmetic/xgcd.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/arithmetic/abs.js'),
require('mathjs/lib/function/arithmetic/add.js'),
require('mathjs/lib/function/arithmetic/addScalar.js'),
require('mathjs/lib/function/arithmetic/cbrt.js'),
require('mathjs/lib/function/arithmetic/ceil.js'),
require('mathjs/lib/function/arithmetic/cube.js'),
require('mathjs/lib/function/arithmetic/divide.js'),
require('mathjs/lib/function/arithmetic/dotDivide.js'),
require('mathjs/lib/function/arithmetic/dotMultiply.js'),
require('mathjs/lib/function/arithmetic/dotPow.js'),
require('mathjs/lib/function/arithmetic/exp.js'),
require('mathjs/lib/function/arithmetic/fix.js'),
require('mathjs/lib/function/arithmetic/floor.js'),
require('mathjs/lib/function/arithmetic/gcd.js'),
require('mathjs/lib/function/arithmetic/hypot.js'),
require('mathjs/lib/function/arithmetic/lcm.js'),
require('mathjs/lib/function/arithmetic/log.js'),
require('mathjs/lib/function/arithmetic/log10.js'),
require('mathjs/lib/function/arithmetic/mod.js'),
require('mathjs/lib/function/arithmetic/multiply.js'),
require('mathjs/lib/function/arithmetic/norm.js'),
require('mathjs/lib/function/arithmetic/nthRoot.js'),
require('mathjs/lib/function/arithmetic/pow.js'),
require('mathjs/lib/function/arithmetic/round.js'),
require('mathjs/lib/function/arithmetic/sign.js'),
require('mathjs/lib/function/arithmetic/sqrt.js'),
require('mathjs/lib/function/arithmetic/square.js'),
require('mathjs/lib/function/arithmetic/subtract.js'),
require('mathjs/lib/function/arithmetic/unaryMinus.js'),
require('mathjs/lib/function/arithmetic/unaryPlus.js'),
require('mathjs/lib/function/arithmetic/xgcd.js')];
});
__d('mathjs/lib/function/arithmetic/cbrt.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/exp.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var complexMultiply=typed.find(load(require('mathjs/lib/function/arithmetic/multiplyScalar.js')),['Complex,Complex']);
var complexExp=typed.find(load(require('mathjs/lib/function/arithmetic/exp.js')),['Complex']);







































var cbrt=typed('cbrt',{
'number':_cbrtNumber,



'Complex':_cbrtComplex,

'Complex, boolean':_cbrtComplex,

'BigNumber':_cbrtBigNumber,

'Unit':_cbrtUnit,

'Array | Matrix':function(x){

return deepMap(x,cbrt,true);}});













function _cbrtNumber(x){
if(x === 0){
return x;}


var negate=x < 0;
var result;
if(negate){
x = -x;}


if(isFinite(x)){
result = Math.exp(Math.log(x) / 3);

result = (x / (result * result) + 2 * result) / 3;}else 
{
result = x;}


return negate?-result:result;}











function _cbrtComplex(x,allRoots){

var polar=x.toPolar();


var principal=complexMultiply(
new type.Complex(_cbrtNumber(polar.r),0),
complexExp(new type.Complex(0,polar.phi / 3)));


if(allRoots){
var all=[
principal,
complexMultiply(
new type.Complex(_cbrtNumber(polar.r),0),
complexExp(new type.Complex(0,polar.phi / 3 + Math.PI * 2 / 3))),

complexMultiply(
new type.Complex(_cbrtNumber(polar.r),0),
complexExp(new type.Complex(0,polar.phi / 3 - Math.PI * 2 / 3)))];



return config.matrix === 'array'?all:matrix(all);}else 

{
return principal;}}









function _cbrtBigNumber(x){
if(x.isZero()){
return x;}


var negate=x.isNegative();
var result;
if(negate){
x = x.neg();}


if(!x.isFinite()){
result = Infinity;}else 
{

result = x.ln().div(3).exp();
result = x.div(result.times(result)).plus(result.times(2)).div(3);}


return negate?result.neg():result;}








function _cbrtUnit(x){
var negate=x.value < 0;
if(negate){
x.value = -x.value;}


var result=x.pow(1 / 3);

if(negate){
result.value = -result.value;}


return result;}


cbrt.toTex = '\\sqrt[3]{${args[0]}}';

return cbrt;}


exports.name = 'cbrt';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/exp.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){




























var exp=typed('exp',{
'number':Math.exp,

'Complex':function(x){
var r=Math.exp(x.re);
return new type.Complex(
r * Math.cos(x.im),
r * Math.sin(x.im));},



'BigNumber':function(x){
return x.exp();},


'Array | Matrix':function(x){

return deepMap(x,exp);}});



exp.toTex = '\\exp\\left(${args[0]}\\right)';

return exp;}


exports.name = 'exp';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/ceil.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){




























var ceil=typed('ceil',{
'number':Math.ceil,

'Complex':function(x){
return new type.Complex(
Math.ceil(x.re),
Math.ceil(x.im));},



'BigNumber':function(x){
return x.ceil();},


'Fraction':function(x){
return x.ceil();},


'Array | Matrix':function(x){

return deepMap(x,ceil,true);}});



ceil.toTex = '\\left\\lceil${args[0]}\\right\\rceil';

return ceil;}


exports.name = 'ceil';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/cube.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/function/arithmetic/multiplyScalar.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var complexMultiply=typed.find(load(require('mathjs/lib/function/arithmetic/multiplyScalar.js')),['Complex,Complex']);

























var cube=typed('cube',{
'number':function(x){
return x * x * x;},


'Complex':function(x){
return complexMultiply(complexMultiply(x,x),x);},


'BigNumber':function(x){
return x.times(x).times(x);},


'Fraction':function(x){
return x.mul(x).mul(x);},


'Array | Matrix':function(x){

return deepMap(x,cube,true);},


'Unit':function(x){
return x.pow(3);}});



cube.toTex = '\\left(${args[0]}\\right)^3';

return cube;}


exports.name = 'cube';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/dotDivide.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var latex=require('mathjs/lib/utils/latex.js');

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));



























var dotDivide=typed('dotDivide',{

'any, any':divideScalar,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,divideScalar,false);
break;
default:

c = algorithm02(y,x,divideScalar,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,divideScalar,false);
break;
default:

c = algorithm13(x,y,divideScalar);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return dotDivide(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return dotDivide(matrix(x),y);},


'Matrix, Array':function(x,y){

return dotDivide(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,divideScalar,false);
break;
default:
c = algorithm14(x,y,divideScalar,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,divideScalar,true);
break;
default:
c = algorithm14(y,x,divideScalar,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,divideScalar,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,divideScalar,true).valueOf();}});



dotDivide.toTex = '\\left(${args[0]}' + latex.operators['dotDivide'] + '${args[1]}\\right)';

return dotDivide;}


exports.name = 'dotDivide';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm02.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;




















var algorithm02=function(denseMatrix,sparseMatrix,callback,inverse){

var adata=denseMatrix._data;
var asize=denseMatrix._size;
var adt=denseMatrix._datatype;

var bvalues=sparseMatrix._values;
var bindex=sparseMatrix._index;
var bptr=sparseMatrix._ptr;
var bsize=sparseMatrix._size;
var bdt=sparseMatrix._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


if(!bvalues)
throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=[];
var cindex=[];
var cptr=[];


for(var j=0;j < columns;j++) {

cptr[j] = cindex.length;

for(var k0=bptr[j],k1=bptr[j + 1],k=k0;k < k1;k++) {

var i=bindex[k];

var cij=inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]);

if(!eq(cij,zero)){

cindex.push(i);
cvalues.push(cij);}}}




cptr[columns] = cindex.length;


return new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});};



return algorithm02;}


exports.name = 'algorithm02';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/dotMultiply.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm09.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var multiplyScalar=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var latex=require('mathjs/lib/utils/latex.js');

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm09=load(require('mathjs/lib/type/matrix/utils/algorithm09.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));



























var dotMultiply=typed('dotMultiply',{

'any, any':multiplyScalar,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm09(x,y,multiplyScalar,false);
break;
default:

c = algorithm02(y,x,multiplyScalar,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm02(x,y,multiplyScalar,false);
break;
default:

c = algorithm13(x,y,multiplyScalar);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return dotMultiply(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return dotMultiply(matrix(x),y);},


'Matrix, Array':function(x,y){

return dotMultiply(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,multiplyScalar,false);
break;
default:
c = algorithm14(x,y,multiplyScalar,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm11(y,x,multiplyScalar,true);
break;
default:
c = algorithm14(y,x,multiplyScalar,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,multiplyScalar,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,multiplyScalar,true).valueOf();}});



dotMultiply.toTex = '\\left(${args[0]}' + latex.operators['dotMultiply'] + '${args[1]}\\right)';

return dotMultiply;}


exports.name = 'dotMultiply';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm09.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;



















var algorithm09=function(a,b,callback){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=avalues && bvalues?[]:undefined;
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



var x=cvalues?[]:undefined;

var w=[];


var i,j,k,k0,k1;


for(j = 0;j < columns;j++) {

cptr[j] = cindex.length;

var mark=j + 1;

if(x){

for(k0 = bptr[j],k1 = bptr[j + 1],k = k0;k < k1;k++) {

i = bindex[k];

w[i] = mark;
x[i] = bvalues[k];}}



for(k0 = aptr[j],k1 = aptr[j + 1],k = k0;k < k1;k++) {

i = aindex[k];

if(x){

var vb=w[i] === mark?x[i]:zero;

var vc=cf(avalues[k],vb);

if(!eq(vc,zero)){

cindex.push(i);

cvalues.push(vc);}}else 


{

cindex.push(i);}}}




cptr[columns] = cindex.length;


return c;};


return algorithm09;}


exports.name = 'algorithm09';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/dotPow.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/pow.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var pow=load(require('mathjs/lib/function/arithmetic/pow.js'));
var latex=require('mathjs/lib/utils/latex.js');

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
























var dotPow=typed('dotPow',{

'any, any':pow,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,pow,false);
break;
default:

c = algorithm03(y,x,pow,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,pow,false);
break;
default:

c = algorithm13(x,y,pow);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return dotPow(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return dotPow(matrix(x),y);},


'Matrix, Array':function(x,y){

return dotPow(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,dotPow,false);
break;
default:
c = algorithm14(x,y,dotPow,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,dotPow,true);
break;
default:
c = algorithm14(y,x,dotPow,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,dotPow,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,dotPow,true).valueOf();}});



dotPow.toTex = '\\left(${args[0]}' + latex.operators['dotPow'] + '${args[1]}\\right)';

return dotPow;}


exports.name = 'dotPow';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/pow.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/array.js","mathjs/lib/utils/latex.js","mathjs/lib/function/arithmetic/exp.js","mathjs/lib/function/matrix/eye.js","mathjs/lib/function/arithmetic/log.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var size=require('mathjs/lib/utils/array.js').size;

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');
var exp=load(require('mathjs/lib/function/arithmetic/exp.js'));
var eye=load(require('mathjs/lib/function/matrix/eye.js'));
var log=load(require('mathjs/lib/function/arithmetic/log.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));




























var pow=typed('pow',{
'number, number':_pow,

'Complex, Complex':_powComplex,

'BigNumber, BigNumber':function(x,y){
if(y.isInteger() || x >= 0 || config.predictable){
return x.pow(y);}else 

{
return _powComplex(new type.Complex(x.toNumber(),0),new type.Complex(y.toNumber(),0));}},



'Fraction, Fraction':function(x,y){
if(y.d !== 1){
if(config.predictable){
throw new Error('Function pow does not support non-integer exponents for fractions.');}else 

{
return _pow(x.valueOf(),y.valueOf());}}else 


{
return x.pow(y);}},



'Array, number':_powArray,

'Array, BigNumber':function(x,y){
return _powArray(x,y.toNumber());},


'Matrix, number':_powMatrix,

'Matrix, BigNumber':function(x,y){
return _powMatrix(x,y.toNumber());},


'Unit, number':function(x,y){
return x.pow(y);}});











function _pow(x,y){
if(isInteger(y) || x >= 0 || config.predictable){
return Math.pow(x,y);}else 

{
return _powComplex(new type.Complex(x,0),new type.Complex(y,0));}}










function _powComplex(x,y){







return exp(multiply(log(x),y));}









function _powArray(x,y){
if(!isInteger(y) || y < 0){
throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')');}


var s=size(x);
if(s.length != 2){
throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)');}

if(s[0] != s[1]){
throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')');}


var res=eye(s[0]).valueOf();
var px=x;
while(y >= 1) {
if((y & 1) == 1){
res = multiply(px,res);}

y >>= 1;
px = multiply(px,px);}

return res;}









function _powMatrix(x,y){
return matrix(_powArray(x.valueOf(),y));}




pow.toTex = '\\left(${args[0]}\\right)' + latex.operators['pow'] + '{${args[1]}}';

return pow;}


exports.name = 'pow';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/log.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/function/arithmetic/divideScalar.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var divideScalar=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));



































var log=typed('log',{
'number':_logNumber,

'Complex':_logComplex,

'BigNumber':function(x){
if(!x.isNegative() || config.predictable){
return x.ln();}else 

{

return _logComplex(new type.Complex(x.toNumber(),0));}},



'Array | Matrix':function(x){
return deepMap(x,log);},


'any, any':function(x,base){

return divideScalar(log(x),log(base));}});









function _logNumber(x){
if(x >= 0 || config.predictable){
return Math.log(x);}else 

{

return log(new type.Complex(x,0));}}









function _logComplex(x){
return new type.Complex(
Math.log(Math.sqrt(x.re * x.re + x.im * x.im)),
Math.atan2(x.im,x.re));}



log.toTex = {
1:'\\ln\\left(${args[0]}\\right)',
2:'\\log_{${args[1]}}\\left(${args[0]}\\right)'};


return log;}


exports.name = 'log';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/fix.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var fix=typed('fix',{
'number':function(x){
return x > 0?Math.floor(x):Math.ceil(x);},


'Complex':function(x){
return new type.Complex(
x.re > 0?Math.floor(x.re):Math.ceil(x.re),
x.im > 0?Math.floor(x.im):Math.ceil(x.im));},



'BigNumber':function(x){
return x.isNegative()?x.ceil():x.floor();},


'Fraction':function(x){
return x.s < 0?x.ceil():x.floor();},


'Array | Matrix':function(x){

return deepMap(x,fix,true);}});



fix.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return fix;}


exports.name = 'fix';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/floor.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var floor=typed('floor',{
'number':Math.floor,

'Complex':function(x){
return new type.Complex(
Math.floor(x.re),
Math.floor(x.im));},



'BigNumber':function(x){
return x.floor();},


'Fraction':function(x){
return x.floor();},


'Array | Matrix':function(x){

return deepMap(x,floor,true);}});



floor.toTex = '\\left\\lfloor${args[0]}\\right\\rfloor';

return floor;}


exports.name = 'floor';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/gcd.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm04.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm04=load(require('mathjs/lib/type/matrix/utils/algorithm04.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));


























var gcd=typed('gcd',{

'number, number':_gcd,

'BigNumber, BigNumber':_gcdBigNumber,

'Fraction, Fraction':function(x,y){
return x.gcd(y);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm04(x,y,gcd);
break;
default:

c = algorithm01(y,x,gcd,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,gcd,false);
break;
default:

c = algorithm13(x,y,gcd);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return gcd(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return gcd(matrix(x),y);},


'Matrix, Array':function(x,y){

return gcd(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm10(x,y,gcd,false);
break;
default:
c = algorithm14(x,y,gcd,false);
break;}

return c;},


'number | BigNumber, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,gcd,true);
break;
default:
c = algorithm14(y,x,gcd,true);
break;}

return c;},


'Array, number | BigNumber':function(x,y){

return algorithm14(matrix(x),y,gcd,false).valueOf();},


'number | BigNumber, Array':function(x,y){

return algorithm14(matrix(y),x,gcd,true).valueOf();},



'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber':function(a,b,args){
var res=gcd(a,b);
for(var i=0;i < args.length;i++) {
res = gcd(res,args[i]);}

return res;}});



gcd.toTex = '\\gcd\\left(${args}\\right)';

return gcd;








function _gcdBigNumber(a,b){
if(!a.isInt() || !b.isInt()){
throw new Error('Parameters in function gcd must be integer numbers');}



var zero=new type.BigNumber(0);
while(!b.isZero()) {
var r=a.mod(b);
a = b;
b = r;}

return a.lt(zero)?a.neg():a;}}










function _gcd(a,b){
if(!isInteger(a) || !isInteger(b)){
throw new Error('Parameters in function gcd must be integer numbers');}



var r;
while(b != 0) {
r = a % b;
a = b;
b = r;}

return a < 0?-a:a;}


exports.name = 'gcd';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/hypot.js',["mathjs/lib/utils/array.js","mathjs/lib/function/arithmetic/abs.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/relational/smaller.js","mathjs/lib/function/utils/isPositive.js"],function(global, require, module, exports) {  'use strict';

var flatten=require('mathjs/lib/utils/array.js').flatten;

function factory(type,config,load,typed){
var abs=load(require('mathjs/lib/function/arithmetic/abs.js'));
var add=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var sqrt=load(require('mathjs/lib/function/arithmetic/sqrt.js'));
var smaller=load(require('mathjs/lib/function/relational/smaller.js'));
var isPositive=load(require('mathjs/lib/function/utils/isPositive.js'));



























var hypot=typed('hypot',{
'... number | BigNumber':_hypot,

'Array':function(x){
return hypot.apply(hypot,flatten(x));},


'Matrix':function(x){
return hypot.apply(hypot,flatten(x.toArray()));}});









function _hypot(args){


var result=0;
var largest=0;

for(var i=0;i < args.length;i++) {
var value=abs(args[i]);
if(smaller(largest,value)){
result = multiply(result,multiply(divide(largest,value),divide(largest,value)));
result = add(result,1);
largest = value;}else 
{
result = add(result,isPositive(value)?multiply(divide(value,largest),divide(value,largest)):value);}}



return multiply(largest,sqrt(result));}


hypot.toTex = '\\hypot\\left(${args}\\right)';

return hypot;}


exports.name = 'hypot';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/sqrt.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
























var sqrt=typed('sqrt',{
'number':_sqrtNumber,

'Complex':_sqrtComplex,

'BigNumber':function(x){
if(!x.isNegative() || config.predictable){
return x.sqrt();}else 

{

return _sqrtNumber(x.toNumber());}},



'Array | Matrix':function(x){

return deepMap(x,sqrt,true);},


'Unit':function(x){

return x.pow(0.5);}});










function _sqrtNumber(x){
if(x >= 0 || config.predictable){
return Math.sqrt(x);}else 

{
return _sqrtComplex(new type.Complex(x,0));}}









function _sqrtComplex(x){
var r=Math.sqrt(x.re * x.re + x.im * x.im);

var re,im;

if(x.re >= 0){
re = 0.5 * Math.sqrt(2.0 * (r + x.re));}else 

{
re = Math.abs(x.im) / Math.sqrt(2 * (r - x.re));}


if(x.re <= 0){
im = 0.5 * Math.sqrt(2.0 * (r - x.re));}else 

{
im = Math.abs(x.im) / Math.sqrt(2 * (r + x.re));}


if(x.im >= 0){
return new type.Complex(re,im);}else 

{
return new type.Complex(re,-im);}}



sqrt.toTex = '\\sqrt{${args[0]}}';

return sqrt;}


exports.name = 'sqrt';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/isPositive.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){































var isPositive=typed('isPositive',{
'number':function(x){
return x > 0;},


'BigNumber':function(x){
return !x.isNeg() && !x.isZero() && !x.isNaN();},


'Fraction':function(x){
return x.s > 0 && x.n > 0;},


'Unit':function(x){
return x.value > 0;},


'Array | Matrix':function(x){
return deepMap(x,isPositive);}});



return isPositive;}


exports.name = 'isPositive';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/lcm.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm06.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm06=load(require('mathjs/lib/type/matrix/utils/algorithm06.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));






























var lcm=typed('lcm',{
'number, number':_lcm,

'BigNumber, BigNumber':_lcmBigNumber,

'Fraction, Fraction':function(x,y){

if(x.n === 0 && y.n === 0){
return new type.Fraction(0);}

return x.mul(y).abs().div(x.gcd(y));},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm06(x,y,lcm);
break;
default:

c = algorithm02(y,x,lcm,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm02(x,y,lcm,false);
break;
default:

c = algorithm13(x,y,lcm);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return lcm(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return lcm(matrix(x),y);},


'Matrix, Array':function(x,y){

return lcm(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,lcm,false);
break;
default:
c = algorithm14(x,y,lcm,false);
break;}

return c;},


'number | BigNumber, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm11(y,x,lcm,true);
break;
default:
c = algorithm14(y,x,lcm,true);
break;}

return c;},


'Array, number | BigNumber':function(x,y){

return algorithm14(matrix(x),y,lcm,false).valueOf();},


'number | BigNumber, Array':function(x,y){

return algorithm14(matrix(y),x,lcm,true).valueOf();},



'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber':function(a,b,args){
var res=lcm(a,b);
for(var i=0;i < args.length;i++) {
res = lcm(res,args[i]);}

return res;}});



lcm.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return lcm;








function _lcmBigNumber(a,b){
if(!a.isInt() || !b.isInt()){
throw new Error('Parameters in function lcm must be integer numbers');}


if(a.isZero() || b.isZero()){
return new type.BigNumber(0);}




var prod=a.times(b);
while(!b.isZero()) {
var t=b;
b = a.mod(t);
a = t;}

return prod.div(a).abs();}}










function _lcm(a,b){
if(!isInteger(a) || !isInteger(b)){
throw new Error('Parameters in function lcm must be integer numbers');}


if(a == 0 || b == 0){
return 0;}




var t;
var prod=a * b;
while(b != 0) {
t = b;
b = a % t;
a = t;}

return Math.abs(prod / a);}


exports.name = 'lcm';
exports.factory = factory;
});
__d('mathjs/lib/type/matrix/utils/algorithm06.js',["mathjs/lib/utils/collection/scatter.js","mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var scatter=require('mathjs/lib/utils/collection/scatter.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;



















var algorithm06=function(a,b,callback){

var avalues=a._values;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=avalues && bvalues?[]:undefined;
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



var x=cvalues?[]:undefined;

var w=[];

var u=[];


for(var j=0;j < columns;j++) {

cptr[j] = cindex.length;

var mark=j + 1;

scatter(a,j,w,x,u,mark,c,cf);

scatter(b,j,w,x,u,mark,c,cf);

if(x){

var k=cptr[j];

while(k < cindex.length) {

var i=cindex[k];

if(u[i] === mark){

var v=x[i];

if(!eq(v,zero)){

cvalues.push(v);

k++;}else 

{

cindex.splice(k,1);}}else 


{

cindex.splice(k,1);}}}else 



{

var p=cptr[j];

while(p < cindex.length) {

var r=cindex[p];

if(u[r] !== mark){

cindex.splice(p,1);}else 

{

p++;}}}}





cptr[columns] = cindex.length;


return c;};


return algorithm06;}


exports.name = 'algorithm06';
exports.factory = factory;
});
__d('mathjs/lib/utils/collection/scatter.js',[],function(global, require, module, exports) {  'use strict';

module.exports = function scatter(a,j,w,x,u,mark,c,f,inverse,update,value){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;

var cindex=c._index;


var k,k0,k1,i;


if(x){

for(k0 = aptr[j],k1 = aptr[j + 1],k = k0;k < k1;k++) {

i = aindex[k];

if(w[i] !== mark){

w[i] = mark;

cindex.push(i);

if(update){

x[i] = inverse?f(avalues[k],value):f(value,avalues[k]);

u[i] = mark;}else 

{

x[i] = avalues[k];}}else 


{

x[i] = inverse?f(avalues[k],x[i]):f(x[i],avalues[k]);

u[i] = mark;}}}else 



{

for(k0 = aptr[j],k1 = aptr[j + 1],k = k0;k < k1;k++) {

i = aindex[k];

if(w[i] !== mark){

w[i] = mark;

cindex.push(i);}else 

{

u[i] = mark;}}}};
});
__d('mathjs/lib/function/arithmetic/log10.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){

























var log10=typed('log10',{
'number':function(x){
if(x >= 0 || config.predictable){
return Math.log(x) / Math.LN10;}else 

{

return log10(new type.Complex(x,0));}},



'Complex':_log10Complex,

'BigNumber':function(x){
if(!x.isNegative() || config.predictable){
return x.log();}else 

{

return _log10Complex(new type.Complex(x.toNumber(),0));}},



'Array | Matrix':function(x){
return deepMap(x,log10);}});



log10.toTex = '\\log_{10}\\left(${args[0]}\\right)';

return log10;







function _log10Complex(x){
return new type.Complex(
Math.log(Math.sqrt(x.re * x.re + x.im * x.im)) / Math.LN10,
Math.atan2(x.im,x.re) / Math.LN10);}}




exports.name = 'log10';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/mod.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm05.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var latex=require('mathjs/lib/utils/latex.js');

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm05=load(require('mathjs/lib/type/matrix/utils/algorithm05.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));




































var mod=typed('mod',{

'number, number':_mod,

'BigNumber, BigNumber':function(x,y){
return y.isZero()?x:x.mod(y);},


'Fraction, Fraction':function(x,y){
return x.mod(y);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm05(x,y,mod,false);
break;
default:

c = algorithm02(y,x,mod,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,mod,false);
break;
default:

c = algorithm13(x,y,mod);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return mod(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return mod(matrix(x),y);},


'Matrix, Array':function(x,y){

return mod(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,mod,false);
break;
default:
c = algorithm14(x,y,mod,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,mod,true);
break;
default:
c = algorithm14(y,x,mod,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,mod,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,mod,true).valueOf();}});



mod.toTex = '\\left(${args[0]}' + latex.operators['mod'] + '${args[1]}\\right)';

return mod;








function _mod(x,y){
if(y > 0){



return x - y * Math.floor(x / y);}else 

if(y === 0){
return x;}else 

{

throw new Error('Cannot calculate mod for a negative divisor');}}}




exports.name = 'mod';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/norm.js',["mathjs/lib/function/arithmetic/abs.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/pow.js","mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/relational/larger.js","mathjs/lib/function/relational/smaller.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/matrix/trace.js","mathjs/lib/function/matrix/transpose.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var abs=load(require('mathjs/lib/function/arithmetic/abs.js'));
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var pow=load(require('mathjs/lib/function/arithmetic/pow.js'));
var sqrt=load(require('mathjs/lib/function/arithmetic/sqrt.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var larger=load(require('mathjs/lib/function/relational/larger.js'));
var smaller=load(require('mathjs/lib/function/relational/smaller.js'));
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var trace=load(require('mathjs/lib/function/matrix/trace.js'));
var transpose=load(require('mathjs/lib/function/matrix/transpose.js'));

var complexAbs=typed.find(abs,['Complex']);







































var norm=typed('norm',{
'number':Math.abs,

'Complex':complexAbs,

'BigNumber':function(x){

return x.abs();},


'boolean | null':function(x){

return Math.abs(x);},


'Array':function(x){
return _norm(matrix(x),2);},


'Matrix':function(x){
return _norm(x,2);},


'number | Complex | BigNumber | boolean | null, number | BigNumber | string':function(x){

return norm(x);},


'Array, number | BigNumber | string':function(x,p){
return _norm(matrix(x),p);},


'Matrix, number | BigNumber | string':function(x,p){
return _norm(x,p);}});










function _norm(x,p){

var sizeX=x.size();


if(sizeX.length == 1){

if(p === Number.POSITIVE_INFINITY || p === 'inf'){

var pinf=0;

x.forEach(
function(value){
var v=abs(value);
if(larger(v,pinf))
pinf = v;},

true);
return pinf;}

if(p === Number.NEGATIVE_INFINITY || p === '-inf'){

var ninf;

x.forEach(
function(value){
var v=abs(value);
if(!ninf || smaller(v,ninf))
ninf = v;},

true);
return ninf || 0;}

if(p === 'fro'){
return _norm(x,2);}

if(typeof p === 'number' && !isNaN(p)){

if(!equalScalar(p,0)){

var n=0;

x.forEach(
function(value){
n = add(pow(abs(value),p),n);},

true);
return pow(n,1 / p);}

return Number.POSITIVE_INFINITY;}


throw new Error('Unsupported parameter value');}


if(sizeX.length == 2){

if(p === 1){

var c=[];

var maxc=0;

x.forEach(
function(value,index){
var j=index[1];
var cj=add(c[j] || 0,abs(value));
if(larger(cj,maxc))
maxc = cj;
c[j] = cj;},

true);
return maxc;}

if(p === Number.POSITIVE_INFINITY || p === 'inf'){

var r=[];

var maxr=0;

x.forEach(
function(value,index){
var i=index[0];
var ri=add(r[i] || 0,abs(value));
if(larger(ri,maxr))
maxr = ri;
r[i] = ri;},

true);
return maxr;}

if(p === 'fro'){

return sqrt(trace(multiply(transpose(x),x)));}

if(p === 2){

throw new Error('Unsupported parameter value, missing implementation of matrix singular value decomposition');}


throw new Error('Unsupported parameter value');}}



norm.toTex = {
1:'\\left\\|${args[0]}\\right\\|',
2:'\\mathrm{${name}}\\left(${args}\\right)'};


return norm;}


exports.name = 'norm';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/trace.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/string.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/add.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var format=require('mathjs/lib/utils/string.js').format;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var add=load(require('mathjs/lib/function/arithmetic/add.js'));




























var trace=typed('trace',{

'Array':function(x){

return trace(matrix(x));},


'Matrix':function(x){

var c;

switch(x.storage()){
case 'dense':
c = _denseTrace(x);
break;
case 'sparse':
c = _sparseTrace(x);
break;}

return c;},


'any':clone});


var _denseTrace=function(m){

var size=m._size;
var data=m._data;


switch(size.length){
case 1:

if(size[0] == 1){

return clone(data[0]);}

throw new RangeError('Matrix must be square (size: ' + format(size) + ')');
case 2:

var rows=size[0];
var cols=size[1];
if(rows === cols){

var sum=0;

for(var i=0;i < rows;i++) 
sum = add(sum,data[i][i]);

return sum;}

throw new RangeError('Matrix must be square (size: ' + format(size) + ')');
default:

throw new RangeError('Matrix must be two dimensional (size: ' + format(size) + ')');}};



var _sparseTrace=function(m){

var values=m._values;
var index=m._index;
var ptr=m._ptr;
var size=m._size;

var rows=size[0];
var columns=size[1];

if(rows === columns){

var sum=0;

if(values.length > 0){

for(var j=0;j < columns;j++) {

var k0=ptr[j];
var k1=ptr[j + 1];

for(var k=k0;k < k1;k++) {

var i=index[k];

if(i === j){

sum = add(sum,values[k]);

break;}

if(i > j){

break;}}}}





return sum;}

throw new RangeError('Matrix must be square (size: ' + format(size) + ')');};


trace.toTex = '\\mathrm{tr}\\left(${args[0]}\\right)';

return trace;}


exports.name = 'trace';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/nthRoot.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm06.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm06=load(require('mathjs/lib/type/matrix/utils/algorithm06.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));






























var nthRoot=typed('nthRoot',{

'number':function(x){
return _nthRoot(x,2);},

'number, number':_nthRoot,

'BigNumber':function(x){
return _bigNthRoot(x,new type.BigNumber(2));},

'Complex':function(x){
return _nthComplexRoot(x,2);},

'Complex, number':_nthComplexRoot,
'BigNumber, BigNumber':_bigNthRoot,

'Array | Matrix':function(x){
return nthRoot(x,2);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

if(y.density() === 1){

c = algorithm06(x,y,nthRoot);}else 

{

throw new Error('Root must be non-zero');}

break;
default:

c = algorithm02(y,x,nthRoot,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

if(y.density() === 1){

c = algorithm01(x,y,nthRoot,false);}else 

{

throw new Error('Root must be non-zero');}

break;
default:

c = algorithm13(x,y,nthRoot);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return nthRoot(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return nthRoot(matrix(x),y);},


'Matrix, Array':function(x,y){

return nthRoot(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,nthRoot,false);
break;
default:
c = algorithm14(x,y,nthRoot,false);
break;}

return c;},


'number | BigNumber, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':

if(y.density() === 1){

c = algorithm11(y,x,nthRoot,true);}else 

{

throw new Error('Root must be non-zero');}

break;
default:
c = algorithm14(y,x,nthRoot,true);
break;}

return c;},


'Array, number | BigNumber':function(x,y){

return nthRoot(matrix(x),y).valueOf();},


'number | BigNumber, Array':function(x,y){

return nthRoot(x,matrix(y)).valueOf();}});



nthRoot.toTex = '\\sqrt[${args[1]}]{${args[0]}}';

return nthRoot;








function _bigNthRoot(a,root){
var precision=type.BigNumber.precision;
var Big=type.BigNumber.constructor({precision:precision + 2});
var zero=new type.BigNumber(0);

var one=new Big(1);
var inv=root.isNegative();
if(inv){
root = root.neg();}


if(root.isZero()){
throw new Error('Root must be non-zero');}

if(a.isNegative() && !root.abs().mod(2).equals(1)){
throw new Error('Root must be odd when a is negative.');}



if(a.isZero()){
return zero;}

if(!a.isFinite()){
return inv?zero:a;}


var x=a.abs().pow(one.div(root));


x = a.isNeg()?x.neg():x;
return new type.BigNumber((inv?one.div(x):x).toPrecision(precision));}}










function _nthRoot(a,root){
var inv=root < 0;
if(inv){
root = -root;}


if(root === 0){
throw new Error('Root must be non-zero');}

if(a < 0 && Math.abs(root) % 2 != 1){
throw new Error('Root must be odd when a is negative.');}



if(a == 0){
return 0;}

if(!isFinite(a)){
return inv?0:a;}


var x=Math.pow(Math.abs(a),1 / root);


x = a < 0?-x:x;
return inv?1 / x:x;}































function _nthComplexRoot(a,root){
if(root < 0)throw new Error('Root must be greater than zero');
if(root === 0)throw new Error('Root must be non-zero');
if(root % 1 !== 0)throw new Error('Root must be an integer');
var polar=a.toPolar();
var roots=[];
var r=Math.pow(polar.r,1 / root);
for(var k=0;k < root;k++) {
roots.push({r:r,phi:(polar.phi + 2 * Math.PI * k) / root});}

return roots;}


exports.name = 'nthRoot';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/round.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/number.js","mathjs/lib/utils/collection/deepMap.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/matrix/zeros.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var toFixed=require('mathjs/lib/utils/number.js').toFixed;
var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

var NO_INT='Number of decimals in function round must be an integer';

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var zeros=load(require('mathjs/lib/function/matrix/zeros.js'));

var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
































var round=typed('round',{

'number':Math.round,

'number, number':function(x,n){
if(!isInteger(n)){throw new TypeError(NO_INT);}
if(n < 0 || n > 15){throw new Error('Number of decimals in function round must be in te range of 0-15');}

return _round(x,n);},


'Complex':function(x){
return new type.Complex(
Math.round(x.re),
Math.round(x.im));},



'Complex, number':function(x,n){
return new type.Complex(
_round(x.re,n),
_round(x.im,n));},



'Complex, BigNumber':function(x,n){
if(!n.isInteger()){throw new TypeError(NO_INT);}

var _n=n.toNumber();
return new type.Complex(
_round(x.re,_n),
_round(x.im,_n));},



'number, BigNumber':function(x,n){
if(!n.isInteger()){throw new TypeError(NO_INT);}

return new type.BigNumber(x).toDecimalPlaces(n.toNumber());},


'BigNumber':function(x){
return x.toDecimalPlaces(0);},


'BigNumber, BigNumber':function(x,n){
if(!n.isInteger()){throw new TypeError(NO_INT);}

return x.toDecimalPlaces(n.toNumber());},


'Fraction':function(x){
return x.round();},



'Array | Matrix':function(x){

return deepMap(x,round,true);},


'Matrix, number | BigNumber':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,round,false);
break;
default:
c = algorithm14(x,y,round,false);
break;}

return c;},


'number | Complex | BigNumber, Matrix':function(x,y){

if(!equalScalar(x,0)){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,round,true);
break;
default:
c = algorithm14(y,x,round,true);
break;}

return c;}


return zeros(y.size(),y.storage());},


'Array, number | BigNumber':function(x,y){

return algorithm14(matrix(x),y,round,false).valueOf();},


'number | Complex | BigNumber, Array':function(x,y){

return algorithm14(matrix(y),x,round,true).valueOf();}});



round.toTex = {
1:'\\left\\lfloor${args[0]}\\right\\rceil',
2:'\\mathrm{${name}}\\left(${args}\\right)'};


return round;}










function _round(value,decimals){
return parseFloat(toFixed(value,decimals));}


exports.name = 'round';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/zeros.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var resize=require('mathjs/lib/utils/array.js').resize;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
































var zeros=typed('zeros',{
'':function(){
return config.matrix === 'array'?
_zeros([]):
_zeros([],'default');},




'...number | BigNumber | string':function(size){
var last=size[size.length - 1];
if(typeof last === 'string'){
var format=size.pop();
return _zeros(size,format);}else 

if(config.matrix === 'array'){
return _zeros(size);}else 

{
return _zeros(size,'default');}},



'Array':_zeros,

'Matrix':function(size){
var format=size.storage();
return _zeros(size.valueOf(),format);},


'Array | Matrix, string':function(size,format){
return _zeros(size.valueOf(),format);}});



zeros.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return zeros;








function _zeros(size,format){
var hasBigNumbers=_normalize(size);
var defaultValue=hasBigNumbers?new type.BigNumber(0):0;
_validate(size);

if(format){

var m=matrix(format);
if(size.length > 0){
return m.resize(size,defaultValue);}

return m;}else 

{

var arr=[];
if(size.length > 0){
return resize(arr,size,defaultValue);}

return arr;}}




function _normalize(size){
var hasBigNumbers=false;
size.forEach(function(value,index,arr){
if(value && value.isBigNumber === true){
hasBigNumbers = true;
arr[index] = value.toNumber();}});


return hasBigNumbers;}



function _validate(size){
size.forEach(function(value){
if(typeof value !== 'number' || !isInteger(value) || value < 0){
throw new Error('Parameters in function zeros must be positive integers');}});}}







exports.name = 'zeros';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/sign.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var number=require('mathjs/lib/utils/number.js');
var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){






























var sign=typed('sign',{
'number':number.sign,

'Complex':function(x){
var abs=Math.sqrt(x.re * x.re + x.im * x.im);
return new type.Complex(x.re / abs,x.im / abs);},


'BigNumber':function(x){
return new type.BigNumber(x.cmp(0));},


'Fraction':function(x){
return new type.Fraction(x.s);},


'Array | Matrix':function(x){

return deepMap(x,sign,true);},


'Unit':function(x){
return number.sign(x.value);}});



sign.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return sign;}


exports.name = 'sign';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/square.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){


























var square=typed('square',{
'number':function(x){
return x * x;},


'Complex':function(x){
return new type.Complex(
x.re * x.re - x.im * x.im,
x.re * x.im + x.im * x.re);},



'BigNumber':function(x){
return x.times(x);},


'Fraction':function(x){
return x.mul(x);},


'Array | Matrix':function(x){

return deepMap(x,square,true);},


'Unit':function(x){
return x.pow(2);}});



square.toTex = '\\left(${args[0]}\\right)^2';

return square;}


exports.name = 'square';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/unaryPlus.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

























var unaryPlus=typed('unaryPlus',{
'number':function(x){
return x;},


'Complex':function(x){
return x.clone();},


'BigNumber':function(x){
return x;},


'Fraction':function(x){
return x;},


'Unit':function(x){
return x.clone();},


'Array | Matrix':function(x){

return deepMap(x,unaryPlus,true);},


'boolean | string | null':function(x){

return config.number == 'bignumber'?new type.BigNumber(+x):+x;}});



unaryPlus.toTex = latex.operators['unaryPlus'] + '\\left(${args[0]}\\right)';

return unaryPlus;}


exports.name = 'unaryPlus';
exports.factory = factory;
});
__d('mathjs/lib/function/arithmetic/xgcd.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
























var xgcd=typed('xgcd',{
'number, number':_xgcd,
'BigNumber, BigNumber':_xgcdBigNumber});



xgcd.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return xgcd;








function _xgcd(a,b){

var t,
q,
r,
x=0,lastx=1,
y=1,lasty=0;

if(!isInteger(a) || !isInteger(b)){
throw new Error('Parameters in function xgcd must be integer numbers');}


while(b) {
q = Math.floor(a / b);
r = a % b;

t = x;
x = lastx - q * x;
lastx = t;

t = y;
y = lasty - q * y;
lasty = t;

a = b;
b = r;}


var res;
if(a < 0){
res = [-a,-lastx,-lasty];}else 

{
res = [a,a?lastx:0,lasty];}

return config.matrix === 'array'?res:matrix(res);}









function _xgcdBigNumber(a,b){

var t,
q,
r,
zero=new type.BigNumber(0),
x=new type.BigNumber(0),lastx=new type.BigNumber(1),
y=new type.BigNumber(1),lasty=new type.BigNumber(0);

if(!a.isInt() || !b.isInt()){
throw new Error('Parameters in function xgcd must be integer numbers');}


while(!b.isZero()) {
q = a.div(b).floor();
r = a.mod(b);

t = x;
x = lastx.minus(q.times(x));
lastx = t;

t = y;
y = lasty.minus(q.times(y));
lasty = t;

a = b;
b = r;}


var res;
if(a.lt(zero)){
res = [a.neg(),lastx.neg(),lasty.neg()];}else 

{
res = [a,!a.isZero()?lastx:0,lasty];}

return config.matrix === 'array'?res:matrix(res);}}



exports.name = 'xgcd';
exports.factory = factory;
});
__d('mathjs/lib/function/bitwise/index.js',["mathjs/lib/function/bitwise/bitAnd.js","mathjs/lib/function/bitwise/bitNot.js","mathjs/lib/function/bitwise/bitOr.js","mathjs/lib/function/bitwise/bitXor.js","mathjs/lib/function/bitwise/leftShift.js","mathjs/lib/function/bitwise/rightArithShift.js","mathjs/lib/function/bitwise/rightLogShift.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/bitwise/bitAnd.js'),
require('mathjs/lib/function/bitwise/bitNot.js'),
require('mathjs/lib/function/bitwise/bitOr.js'),
require('mathjs/lib/function/bitwise/bitXor.js'),
require('mathjs/lib/function/bitwise/leftShift.js'),
require('mathjs/lib/function/bitwise/rightArithShift.js'),
require('mathjs/lib/function/bitwise/rightLogShift.js')];
});
__d('mathjs/lib/function/bitwise/bitAnd.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/bitAnd.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm06.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var bigBitAnd=require('mathjs/lib/utils/bignumber/bitAnd.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm06=load(require('mathjs/lib/type/matrix/utils/algorithm06.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));























var bitAnd=typed('bitAnd',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function bitAnd');}


return x & y;},


'BigNumber, BigNumber':bigBitAnd,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm06(x,y,bitAnd,false);
break;
default:

c = algorithm02(y,x,bitAnd,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm02(x,y,bitAnd,false);
break;
default:

c = algorithm13(x,y,bitAnd);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return bitAnd(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return bitAnd(matrix(x),y);},


'Matrix, Array':function(x,y){

return bitAnd(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,bitAnd,false);
break;
default:
c = algorithm14(x,y,bitAnd,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm11(y,x,bitAnd,true);
break;
default:
c = algorithm14(y,x,bitAnd,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,bitAnd,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,bitAnd,true).valueOf();}});



bitAnd.toTex = '\\left(${args[0]}' + latex.operators['bitAnd'] + '${args[1]}\\right)';

return bitAnd;}


exports.name = 'bitAnd';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/bitAnd.js',["mathjs/lib/utils/bignumber/bitwise.js"],function(global, require, module, exports) {  var bitwise=require('mathjs/lib/utils/bignumber/bitwise.js');






















module.exports = function bitAnd(x,y){
if(x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()){
throw new Error('Integers expected in function bitAnd');}


var BigNumber=x.constructor;
if(x.isNaN() || y.isNaN()){
return new BigNumber(NaN);}


if(x.isZero() || y.eq(-1) || x.eq(y)){
return x;}

if(y.isZero() || x.eq(-1)){
return y;}


if(!x.isFinite() || !y.isFinite()){
if(!x.isFinite() && !y.isFinite()){
if(x.isNegative() == y.isNegative()){
return x;}

return new BigNumber(0);}

if(!x.isFinite()){
if(y.isNegative()){
return x;}

if(x.isNegative()){
return new BigNumber(0);}

return y;}

if(!y.isFinite()){
if(x.isNegative()){
return y;}

if(y.isNegative()){
return new BigNumber(0);}

return x;}}


return bitwise(x,y,function(a,b){return a & b;});};
});
__d('mathjs/lib/utils/bignumber/bitwise.js',["mathjs/lib/utils/bignumber/bitNot.js"],function(global, require, module, exports) {  var bitNot=require('mathjs/lib/utils/bignumber/bitNot.js');








module.exports = function bitwise(x,y,func){
var BigNumber=x.constructor;

var xBits,yBits;
var xSign=+(x.s < 0);
var ySign=+(y.s < 0);
if(xSign){
xBits = decCoefficientToBinaryString(bitNot(x));
for(var i=0;i < xBits.length;++i) {
xBits[i] ^= 1;}}else 

{
xBits = decCoefficientToBinaryString(x);}

if(ySign){
yBits = decCoefficientToBinaryString(bitNot(y));
for(var i=0;i < yBits.length;++i) {
yBits[i] ^= 1;}}else 

{
yBits = decCoefficientToBinaryString(y);}


var minBits,maxBits,minSign;
if(xBits.length <= yBits.length){
minBits = xBits;
maxBits = yBits;
minSign = xSign;}else 
{
minBits = yBits;
maxBits = xBits;
minSign = ySign;}


var shortLen=minBits.length;
var longLen=maxBits.length;
var expFuncVal=func(xSign,ySign) ^ 1;
var outVal=new BigNumber(expFuncVal ^ 1);
var twoPower=BigNumber.ONE;
var two=new BigNumber(2);

var prevPrec=BigNumber.precision;
BigNumber.config({precision:1E9});

while(shortLen > 0) {
if(func(minBits[--shortLen],maxBits[--longLen]) == expFuncVal){
outVal = outVal.plus(twoPower);}

twoPower = twoPower.times(two);}

while(longLen > 0) {
if(func(minSign,maxBits[--longLen]) == expFuncVal){
outVal = outVal.plus(twoPower);}

twoPower = twoPower.times(two);}


BigNumber.config({precision:prevPrec});

if(expFuncVal == 0){
outVal.s = -outVal.s;}

return outVal;};



function decCoefficientToBinaryString(x){

var a=x.c;
var r=a[0] + '';

for(var i=1;i < a.length;++i) {
var s=a[i] + '';
for(var z=7 - s.length;z--;) {
s = '0' + s;}


r += s;}


var j;
for(j = r.length - 1;r.charAt(j) == '0';--j);

var xe=x.e;
var str=r.slice(0,j + 1 || 1);
var strL=str.length;
if(xe > 0){
if(++xe > strL){

for(xe -= strL;xe--;str += '0');}else 
if(xe < strL){
str = str.slice(0,xe) + '.' + str.slice(xe);}}




var arr=[0];
for(var i=0;i < str.length;) {
for(var arrL=arr.length;arrL--;arr[arrL] *= 10);

arr[0] += str.charAt(i++) << 0;
for(var j=0;j < arr.length;++j) {
if(arr[j] > 1){
if(arr[j + 1] == null){
arr[j + 1] = 0;}


arr[j + 1] += arr[j] >> 1;
arr[j] &= 1;}}}




return arr.reverse();}
});
__d('mathjs/lib/utils/bignumber/bitNot.js',[],function(global, require, module, exports) {  module.





exports = function bitNot(x){
if(x.isFinite() && !x.isInteger()){
throw new Error('Integer expected in function bitNot');}


var BigNumber=x.constructor;
var prevPrec=BigNumber.precision;
BigNumber.config({precision:1E9});

var x=x.plus(BigNumber.ONE);
x.s = -x.s || null;

BigNumber.config({precision:prevPrec});
return x;};
});
__d('mathjs/lib/function/bitwise/bitNot.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/bitNot.js","mathjs/lib/utils/number.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var bigBitNot=require('mathjs/lib/utils/bignumber/bitNot.js');
var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');























var bitNot=typed('bitNot',{
'number':function(x){
if(!isInteger(x)){
throw new Error('Integer expected in function bitNot');}


return ~x;},


'BigNumber':bigBitNot,

'Array | Matrix':function(x){
return deepMap(x,bitNot);}});



bitNot.toTex = latex.operators['bitNot'] + '\\left(${args[0]}\\right)';

return bitNot;}


exports.name = 'bitNot';
exports.factory = factory;
});
__d('mathjs/lib/function/bitwise/bitOr.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/bitOr.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm04.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var bigBitOr=require('mathjs/lib/utils/bignumber/bitOr.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm04=load(require('mathjs/lib/type/matrix/utils/algorithm04.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
























var bitOr=typed('bitOr',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function bitOr');}


return x | y;},


'BigNumber, BigNumber':bigBitOr,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm04(x,y,bitOr);
break;
default:

c = algorithm01(y,x,bitOr,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,bitOr,false);
break;
default:
c = algorithm13(x,y,bitOr);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return bitOr(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return bitOr(matrix(x),y);},


'Matrix, Array':function(x,y){

return bitOr(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm10(x,y,bitOr,false);
break;
default:
c = algorithm14(x,y,bitOr,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,bitOr,true);
break;
default:
c = algorithm14(y,x,bitOr,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,bitOr,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,bitOr,true).valueOf();}});



bitOr.toTex = '\\left(${args[0]}' + latex.operators['bitOr'] + '${args[1]}\\right)';

return bitOr;}


exports.name = 'bitOr';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/bitOr.js',["mathjs/lib/utils/bignumber/bitwise.js"],function(global, require, module, exports) {  var bitwise=require('mathjs/lib/utils/bignumber/bitwise.js');





















module.exports = function bitOr(x,y){
if(x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()){
throw new Error('Integers expected in function bitOr');}


var BigNumber=x.constructor;
if(x.isNaN() || y.isNaN()){
return new BigNumber(NaN);}


var negOne=new BigNumber(-1);
if(x.isZero() || y.eq(negOne) || x.eq(y)){
return y;}

if(y.isZero() || x.eq(negOne)){
return x;}


if(!x.isFinite() || !y.isFinite()){
if(!x.isFinite() && !x.isNegative() && y.isNegative() || 
x.isNegative() && !y.isNegative() && !y.isFinite()){
return negOne;}

if(x.isNegative() && y.isNegative()){
return x.isFinite()?x:y;}

return x.isFinite()?y:x;}


return bitwise(x,y,function(a,b){return a | b;});};
});
__d('mathjs/lib/function/bitwise/bitXor.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/bitXor.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var bigBitXor=require('mathjs/lib/utils/bignumber/bitXor.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));























var bitXor=typed('bitXor',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function bitXor');}


return x ^ y;},


'BigNumber, BigNumber':bigBitXor,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,bitXor);
break;
default:

c = algorithm03(y,x,bitXor,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,bitXor,false);
break;
default:

c = algorithm13(x,y,bitXor);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return bitXor(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return bitXor(matrix(x),y);},


'Matrix, Array':function(x,y){

return bitXor(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,bitXor,false);
break;
default:
c = algorithm14(x,y,bitXor,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,bitXor,true);
break;
default:
c = algorithm14(y,x,bitXor,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,bitXor,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,bitXor,true).valueOf();}});



bitXor.toTex = '\\left(${args[0]}' + latex.operators['bitXor'] + '${args[1]}\\right)';

return bitXor;}


exports.name = 'bitXor';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/bitXor.js',["mathjs/lib/utils/bignumber/bitwise.js","mathjs/lib/utils/bignumber/bitNot.js"],function(global, require, module, exports) {  var bitwise=require('mathjs/lib/utils/bignumber/bitwise.js');
var bitNot=require('mathjs/lib/utils/bignumber/bitNot.js');




















module.exports = function bitXor(x,y){
if(x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()){
throw new Error('Integers expected in function bitXor');}


var BigNumber=x.constructor;
if(x.isNaN() || y.isNaN()){
return new BigNumber(NaN);}

if(x.isZero()){
return y;}

if(y.isZero()){
return x;}


if(x.eq(y)){
return new BigNumber(0);}


var negOne=new BigNumber(-1);
if(x.eq(negOne)){
return bitNot(y);}

if(y.eq(negOne)){
return bitNot(x);}


if(!x.isFinite() || !y.isFinite()){
if(!x.isFinite() && !y.isFinite()){
return negOne;}

return new BigNumber(x.isNegative() == y.isNegative()?
Infinity:
-Infinity);}

return bitwise(x,y,function(a,b){return a ^ b;});};
});
__d('mathjs/lib/function/bitwise/leftShift.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/leftShift.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/matrix/zeros.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm08.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var bigLeftShift=require('mathjs/lib/utils/bignumber/leftShift.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var zeros=load(require('mathjs/lib/function/matrix/zeros.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm08=load(require('mathjs/lib/type/matrix/utils/algorithm08.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
























var leftShift=typed('leftShift',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function leftShift');}


return x << y;},


'BigNumber, BigNumber':bigLeftShift,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm08(x,y,leftShift,false);
break;
default:

c = algorithm02(y,x,leftShift,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,leftShift,false);
break;
default:

c = algorithm13(x,y,leftShift);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return leftShift(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return leftShift(matrix(x),y);},


'Matrix, Array':function(x,y){

return leftShift(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

if(!equalScalar(y,0)){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,leftShift,false);
break;
default:
c = algorithm14(x,y,leftShift,false);
break;}

return c;}

return x.clone();},


'number | BigNumber, Matrix':function(x,y){

if(!equalScalar(x,0)){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,leftShift,true);
break;
default:
c = algorithm14(y,x,leftShift,true);
break;}

return c;}

return zeros(y.size(),y.storage());},


'Array, number | BigNumber':function(x,y){

return leftShift(matrix(x),y).valueOf();},


'number | BigNumber, Array':function(x,y){

return leftShift(x,matrix(y)).valueOf();}});



leftShift.toTex = '\\left(${args[0]}' + latex.operators['leftShift'] + '${args[1]}\\right)';

return leftShift;}


exports.name = 'leftShift';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/leftShift.js',[],function(global, require, module, exports) {  module.


















exports = function leftShift(x,y){
if(x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()){
throw new Error('Integers expected in function leftShift');}


var BigNumber=x.constructor;
if(x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()){
return new BigNumber(NaN);}

if(x.isZero() || y.isZero()){
return x;}

if(!x.isFinite() && !y.isFinite()){
return new BigNumber(NaN);}



if(y.lt(55)){
return x.times(Math.pow(2,y.toNumber()) + '');}

return x.times(new BigNumber(2).pow(y));};
});
__d('mathjs/lib/type/matrix/utils/algorithm08.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/function/relational/equalScalar.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');

function factory(type,config,load,typed){

var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var SparseMatrix=type.SparseMatrix;



















var algorithm08=function(a,b,callback){

var avalues=a._values;
var aindex=a._index;
var aptr=a._ptr;
var asize=a._size;
var adt=a._datatype;

var bvalues=b._values;
var bindex=b._index;
var bptr=b._ptr;
var bsize=b._size;
var bdt=b._datatype;


if(asize.length !== bsize.length)
throw new DimensionError(asize.length,bsize.length);


if(asize[0] !== bsize[0] || asize[1] !== bsize[1])
throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');


if(!avalues || !bvalues)
throw new Error('Cannot perform operation on Pattern Sparse Matrices');


var rows=asize[0];
var columns=asize[1];


var dt;

var eq=equalScalar;

var zero=0;

var cf=callback;


if(typeof adt === 'string' && adt === bdt){

dt = adt;

eq = typed.find(equalScalar,[dt,dt]);

zero = typed.convert(0,dt);

cf = typed.find(callback,[dt,dt]);}



var cvalues=[];
var cindex=[];
var cptr=[];

var c=new SparseMatrix({
values:cvalues,
index:cindex,
ptr:cptr,
size:[rows,columns],
datatype:dt});



var x=[];

var w=[];


var k,k0,k1,i;


for(var j=0;j < columns;j++) {

cptr[j] = cindex.length;

var mark=j + 1;

for(k0 = aptr[j],k1 = aptr[j + 1],k = k0;k < k1;k++) {

i = aindex[k];

w[i] = mark;

x[i] = avalues[k];

cindex.push(i);}


for(k0 = bptr[j],k1 = bptr[j + 1],k = k0;k < k1;k++) {

i = bindex[k];

if(w[i] === mark){

x[i] = cf(x[i],bvalues[k]);}}



k = cptr[j];

while(k < cindex.length) {

i = cindex[k];

var v=x[i];

if(!eq(v,zero)){

cvalues.push(v);

k++;}else 

{

cindex.splice(k,1);}}}




cptr[columns] = cindex.length;


return c;};


return algorithm08;}


exports.name = 'algorithm08';
exports.factory = factory;
});
__d('mathjs/lib/function/bitwise/rightArithShift.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/bignumber/rightArithShift.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/matrix/zeros.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm08.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var bigRightArithShift=require('mathjs/lib/utils/bignumber/rightArithShift.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var zeros=load(require('mathjs/lib/function/matrix/zeros.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm08=load(require('mathjs/lib/type/matrix/utils/algorithm08.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));
























var rightArithShift=typed('rightArithShift',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function rightArithShift');}


return x >> y;},


'BigNumber, BigNumber':bigRightArithShift,

'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm08(x,y,rightArithShift,false);
break;
default:

c = algorithm02(y,x,rightArithShift,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,rightArithShift,false);
break;
default:

c = algorithm13(x,y,rightArithShift);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return rightArithShift(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return rightArithShift(matrix(x),y);},


'Matrix, Array':function(x,y){

return rightArithShift(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

if(!equalScalar(y,0)){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,rightArithShift,false);
break;
default:
c = algorithm14(x,y,rightArithShift,false);
break;}

return c;}

return x.clone();},


'number | BigNumber, Matrix':function(x,y){

if(!equalScalar(x,0)){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,rightArithShift,true);
break;
default:
c = algorithm14(y,x,rightArithShift,true);
break;}

return c;}

return zeros(y.size(),y.storage());},


'Array, number | BigNumber':function(x,y){

return rightArithShift(matrix(x),y).valueOf();},


'number | BigNumber, Array':function(x,y){

return rightArithShift(x,matrix(y)).valueOf();}});



rightArithShift.toTex = '\\left(${args[0]}' + latex.operators['rightArithShift'] + '${args[1]}\\right)';

return rightArithShift;}


exports.name = 'rightArithShift';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/rightArithShift.js',[],function(global, require, module, exports) {  module.


















exports = function rightArithShift(x,y){
if(x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()){
throw new Error('Integers expected in function rightArithShift');}


var BigNumber=x.constructor;
if(x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()){
return new BigNumber(NaN);}

if(x.isZero() || y.isZero()){
return x;}

if(!y.isFinite()){
if(x.isNegative()){
return new BigNumber(-1);}

if(!x.isFinite()){
return new BigNumber(NaN);}

return new BigNumber(0);}



if(y.lt(55)){
return x.div(Math.pow(2,y.toNumber()) + '').floor();}

return x.div(new BigNumber(2).pow(y)).floor();};
});
__d('mathjs/lib/function/bitwise/rightLogShift.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/function/matrix/zeros.js","mathjs/lib/type/matrix/utils/algorithm01.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm08.js","mathjs/lib/type/matrix/utils/algorithm10.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));
var zeros=load(require('mathjs/lib/function/matrix/zeros.js'));

var algorithm01=load(require('mathjs/lib/type/matrix/utils/algorithm01.js'));
var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm08=load(require('mathjs/lib/type/matrix/utils/algorithm08.js'));
var algorithm10=load(require('mathjs/lib/type/matrix/utils/algorithm10.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

























var rightLogShift=typed('rightLogShift',{

'number, number':function(x,y){
if(!isInteger(x) || !isInteger(y)){
throw new Error('Integers expected in function rightLogShift');}


return x >>> y;},




'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm08(x,y,rightLogShift,false);
break;
default:

c = algorithm02(y,x,rightLogShift,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm01(x,y,rightLogShift,false);
break;
default:

c = algorithm13(x,y,rightLogShift);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return rightLogShift(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return rightLogShift(matrix(x),y);},


'Matrix, Array':function(x,y){

return rightLogShift(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

if(!equalScalar(y,0)){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,rightLogShift,false);
break;
default:
c = algorithm14(x,y,rightLogShift,false);
break;}

return c;}

return x.clone();},


'number | BigNumber, Matrix':function(x,y){

if(!equalScalar(x,0)){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm10(y,x,rightLogShift,true);
break;
default:
c = algorithm14(y,x,rightLogShift,true);
break;}

return c;}

return zeros(y.size(),y.storage());},


'Array, number | BigNumber':function(x,y){

return rightLogShift(matrix(x),y).valueOf();},


'number | BigNumber, Array':function(x,y){

return rightLogShift(x,matrix(y)).valueOf();}});



rightLogShift.toTex = '\\left(${args[0]}' + latex.operators['rightLogShift'] + '${args[1]}\\right)';

return rightLogShift;}


exports.name = 'rightLogShift';
exports.factory = factory;
});
__d('mathjs/lib/function/combinatorics/index.js',["mathjs/lib/function/combinatorics/bellNumbers.js","mathjs/lib/function/combinatorics/composition.js","mathjs/lib/function/combinatorics/stirlingS2.js","mathjs/lib/function/combinatorics/catalan.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/combinatorics/bellNumbers.js'),
require('mathjs/lib/function/combinatorics/composition.js'),
require('mathjs/lib/function/combinatorics/stirlingS2.js'),
require('mathjs/lib/function/combinatorics/catalan.js')];
});
__d('mathjs/lib/function/combinatorics/bellNumbers.js',["mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/combinatorics/stirlingS2.js","mathjs/lib/function/utils/isNegative.js","mathjs/lib/function/utils/isInteger.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var stirlingS2=load(require('mathjs/lib/function/combinatorics/stirlingS2.js'));
var isNegative=load(require('mathjs/lib/function/utils/isNegative.js'));
var isInteger=load(require('mathjs/lib/function/utils/isInteger.js'));






















var bellNumbers=typed('bellNumbers',{
'number | BigNumber':function(n){

if(!isInteger(n) || isNegative(n)){
throw new TypeError('Non-negative integer value expected in function bellNumbers');}



var result=0;
for(var i=0;i <= n;i++) {
result = add(result,stirlingS2(n,i));}


return result;}});



bellNumbers.toTex = '\\mathrm{B}_{${args[0]}}';

return bellNumbers;}


exports.name = 'bellNumbers';
exports.factory = factory;
});
__d('mathjs/lib/function/combinatorics/stirlingS2.js',["mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/divide.js","mathjs/lib/function/arithmetic/pow.js","mathjs/lib/function/probability/factorial.js","mathjs/lib/function/probability/combinations.js","mathjs/lib/function/utils/isNegative.js","mathjs/lib/function/utils/isInteger.js","mathjs/lib/function/relational/larger.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divide.js'));
var pow=load(require('mathjs/lib/function/arithmetic/pow.js'));
var factorial=load(require('mathjs/lib/function/probability/factorial.js'));
var combinations=load(require('mathjs/lib/function/probability/combinations.js'));
var isNegative=load(require('mathjs/lib/function/utils/isNegative.js'));
var isInteger=load(require('mathjs/lib/function/utils/isInteger.js'));
var larger=load(require('mathjs/lib/function/relational/larger.js'));

























var stirlingS2=typed('stirlingS2',{
'number | BigNumber, number | BigNumber':function(n,k){
if(!isInteger(n) || isNegative(n) || !isInteger(k) || isNegative(k)){
throw new TypeError('Non-negative integer value expected in function stirlingS2');}else 

if(larger(k,n)){
throw new TypeError('k must be less than or equal to n in function stirlingS2');}



var kFactorial=factorial(k);
var result=0;
for(var i=0;i <= k;i++) {
var negativeOne=pow(-1,subtract(k,i));
var kChooseI=combinations(k,i);
var iPower=pow(i,n);

result = add(result,multiply(multiply(kChooseI,iPower),negativeOne));}


return divide(result,kFactorial);}});



stirlingS2.toTex = '\\mathrm{S}\\left(${args[0]},${args[1]}\\right)';

return stirlingS2;}


exports.name = 'stirlingS2';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/factorial.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/constants.js","mathjs/lib/function/probability/gamma.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var constants=require('mathjs/lib/utils/bignumber/constants.js');

function factory(type,config,load,typed){
var gamma=load(require('mathjs/lib/function/probability/gamma.js'));
var latex=require('mathjs/lib/utils/latex.js');























var factorial=typed('factorial',{
'number':function(n){
if(n < 0){
throw new Error('Value must be non-negative');}


return gamma(n + 1);},


'BigNumber':function(n){
if(n.isNegative()){
throw new Error('Value must be non-negative');}


return gamma(n.plus(1));},


'Array | Matrix':function(n){
return deepMap(n,factorial);}});



factorial.toTex = '\\left(${args[0]}\\right)' + latex.operators['factorial'];

return factorial;}


exports.name = 'factorial';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/gamma.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/pow.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var pow=load(require('mathjs/lib/function/arithmetic/pow.js'));
























var gamma=typed('gamma',{
'number':function(n){
var t,x;

if(isInteger(n)){
if(n <= 0){
return isFinite(n)?Infinity:NaN;}


if(n > 171){
return Infinity;}


var value=n - 2;
var res=n - 1;
while(value > 1) {
res *= value;
value--;}


if(res == 0){
res = 1;}


return res;}


if(n < 0.5){
return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));}


if(n >= 171.35){
return Infinity;}


if(n > 85.0){
var twoN=n * n;
var threeN=twoN * n;
var fourN=threeN * n;
var fiveN=fourN * n;
return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E,n) * (
1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 
571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 
5246819 / (75246796800 * fiveN * n));}


--n;
x = p[0];
for(var i=1;i < p.length;++i) {
x += p[i] / (n + i);}


t = n + g + 0.5;
return Math.sqrt(2 * Math.PI) * Math.pow(t,n + 0.5) * Math.exp(-t) * x;},


'Complex':function(n){
var t,x;

if(n.im == 0){
return gamma(n.re);}


n = new type.Complex(n.re - 1,n.im);
x = new type.Complex(p[0],0);
for(var i=1;i < p.length;++i) {
var real=n.re + i;
var den=real * real + n.im * n.im;
if(den != 0){
x.re += p[i] * real / den;
x.im += -(p[i] * n.im) / den;}else 
{
x.re = p[i] < 0?
-Infinity:
Infinity;}}



t = new type.Complex(n.re + g + 0.5,n.im);
var twoPiSqrt=Math.sqrt(2 * Math.PI);

n.re += 0.5;
var result=pow(t,n);
if(result.im == 0){
result.re *= twoPiSqrt;}else 
if(result.re == 0){
result.im *= twoPiSqrt;}else 
{
result.re *= twoPiSqrt;
result.im *= twoPiSqrt;}


var r=Math.exp(-t.re);
t.re = r * Math.cos(-t.im);
t.im = r * Math.sin(-t.im);

return multiply(multiply(result,t),x);},


'BigNumber':function(n){
if(n.isInteger()){
return n.isNegative() || n.isZero()?
new type.BigNumber(Infinity):
bigFactorial(n.minus(1));}


if(!n.isFinite()){
return new type.BigNumber(n.isNegative()?NaN:Infinity);}


throw new Error('Integer BigNumber expected');},


'Array | Matrix':function(n){
return deepMap(n,gamma);}});








function bigFactorial(n){
if(n.isZero()){
return new type.BigNumber(1);}


var precision=config.precision + (Math.log(n.toNumber()) | 0);
var Big=type.BigNumber.constructor({precision:precision});

var res=new Big(n);
var value=n.toNumber() - 1;
while(value > 1) {
res = res.times(value);
value--;}


return new type.BigNumber(res.toPrecision(type.BigNumber.precision));}


gamma.toTex = '\\Gamma\\left(${args[0]}\\right)';

return gamma;}




var g=4.7421875;

var p=[
0.99999999999999709182,
57.156235665862923517,
-59.597960355475491248,
14.136097974741747174,
-0.49191381609762019978,
0.33994649984811888699e-4,
0.46523628927048575665e-4,
-0.98374475304879564677e-4,
0.15808870322491248884e-3,
-0.21026444172410488319e-3,
0.21743961811521264320e-3,
-0.16431810653676389022e-3,
0.84418223983852743293e-4,
-0.26190838401581408670e-4,
0.36899182659531622704e-5];


exports.name = 'gamma';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/combinations.js',["mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){























var combinations=typed('combinations',{
'number, number':function(n,k){
var max,result,i;

if(!isInteger(n) || n < 0){
throw new TypeError('Positive integer value expected in function combinations');}

if(!isInteger(k) || k < 0){
throw new TypeError('Positive integer value expected in function combinations');}

if(k > n){
throw new TypeError('k must be less than or equal to n');}


max = Math.max(k,n - k);
result = 1;
for(i = 1;i <= n - max;i++) {
result = result * (max + i) / i;}


return result;},


'BigNumber, BigNumber':function(n,k){
var max,result,i,ii;
var one=new type.BigNumber(1);

if(!isPositiveInteger(n) || !isPositiveInteger(k)){
throw new TypeError('Positive integer value expected in function combinations');}

if(k.gt(n)){
throw new TypeError('k must be less than n in function combinations');}


max = n.minus(k);
if(k.lt(max))max = k;
result = one;
for(i = one,ii = n.minus(max);i.lte(ii);i = i.plus(1)) {
result = result.times(max.plus(i)).dividedBy(i);}


return result;}});





combinations.toTex = '\\binom{${args[0]}}{${args[1]}}';

return combinations;}







function isPositiveInteger(n){
return n.isInteger() && n.gte(0);}


exports.name = 'combinations';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/isNegative.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){





























var isNegative=typed('isNegative',{
'number':function(x){
return x < 0;},


'BigNumber':function(x){
return x.isNeg() && !x.isZero() && !x.isNaN();},


'Fraction':function(x){
return x.s < 0 && x.n > 0;},


'Unit':function(x){
return x.value < 0;},


'Array | Matrix':function(x){
return deepMap(x,isNegative);}});



return isNegative;}


exports.name = 'isNegative';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/isInteger.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){





























var isInteger=typed('isInteger',{
'number':number.isInteger,

'BigNumber':function(x){
return x.isInt();},


'Fraction':function(x){
return x.d === 1 && isFinite(x.n);},


'Array | Matrix':function(x){
return deepMap(x,isInteger);}});



return isInteger;}


exports.name = 'isInteger';
exports.factory = factory;
});
__d('mathjs/lib/function/combinatorics/composition.js',["mathjs/lib/function/probability/combinations.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/utils/isPositive.js","mathjs/lib/function/utils/isInteger.js","mathjs/lib/function/relational/larger.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var combinations=load(require('mathjs/lib/function/probability/combinations.js'));
var add=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var isPositive=load(require('mathjs/lib/function/utils/isPositive.js'));
var isInteger=load(require('mathjs/lib/function/utils/isInteger.js'));
var larger=load(require('mathjs/lib/function/relational/larger.js'));























var composition=typed('composition',{
'number | BigNumber, number | BigNumber':function(n,k){
if(!isInteger(n) || !isPositive(n) || !isInteger(k) || !isPositive(k)){
throw new TypeError('Positive integer value expected in function composition');}else 

if(larger(k,n)){
throw new TypeError('k must be less than or equal to n in function composition');}


return combinations(add(n,-1),add(k,-1));}});



composition.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return composition;}


exports.name = 'composition';
exports.factory = factory;
});
__d('mathjs/lib/function/combinatorics/catalan.js',["mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/divide.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/probability/combinations.js","mathjs/lib/function/utils/isNegative.js","mathjs/lib/function/utils/isInteger.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divide.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var combinations=load(require('mathjs/lib/function/probability/combinations.js'));
var isNegative=load(require('mathjs/lib/function/utils/isNegative.js'));
var isInteger=load(require('mathjs/lib/function/utils/isInteger.js'));























var catalan=typed('catalan',{
'number | BigNumber':function(n){

if(!isInteger(n) || isNegative(n)){
throw new TypeError('Non-negative integer value expected in function catalan');}


return divide(combinations(multiply(n,2),n),add(n,1));}});




catalan.toTex = '\\mathrm{C}_{${args[0]}}';

return catalan;}


exports.name = 'catalan';
exports.factory = factory;
});
__d('mathjs/lib/function/complex/index.js',["mathjs/lib/function/complex/arg.js","mathjs/lib/function/complex/conj.js","mathjs/lib/function/complex/im.js","mathjs/lib/function/complex/re.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/complex/arg.js'),
require('mathjs/lib/function/complex/conj.js'),
require('mathjs/lib/function/complex/im.js'),
require('mathjs/lib/function/complex/re.js')];
});
__d('mathjs/lib/function/complex/arg.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var arg=typed('arg',{
'number':function(x){
return Math.atan2(0,x);},


'Complex':function(x){
return Math.atan2(x.im,x.re);},




'Array | Matrix':function(x){
return deepMap(x,arg);}});



arg.toTex = '\\arg\\left(${args[0]}\\right)';

return arg;}


exports.name = 'arg';
exports.factory = factory;
});
__d('mathjs/lib/function/complex/conj.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){

























var conj=typed('conj',{
'number':function(x){
return x;},


'BigNumber':function(x){
return x;},


'Complex':function(x){
return new type.Complex(x.re,-x.im);},


'Array | Matrix':function(x){
return deepMap(x,conj);}});



conj.toTex = '\\left(${args[0]}\\right)^*';

return conj;}


exports.name = 'conj';
exports.factory = factory;
});
__d('mathjs/lib/function/complex/im.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var im=typed('im',{
'number':function(x){
return 0;},


'BigNumber':function(x){
return new type.BigNumber(0);},


'Complex':function(x){
return x.im;},


'Array | Matrix':function(x){
return deepMap(x,im);}});



im.toTex = '\\Im\\left\\lbrace${args[0]}\\right\\rbrace';

return im;}


exports.name = 'im';
exports.factory = factory;
});
__d('mathjs/lib/function/complex/re.js',["mathjs/lib/utils/collection/deepMap.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){



























var re=typed('re',{
'number':function(x){
return x;},


'BigNumber':function(x){
return x;},


'Complex':function(x){
return x.re;},


'Array | Matrix':function(x){
return deepMap(x,re);}});



re.toTex = '\\Re\\left\\lbrace${args[0]}\\right\\rbrace';

return re;}


exports.name = 're';
exports.factory = factory;
});
__d('mathjs/lib/function/geometry/index.js',["mathjs/lib/function/geometry/intersect.js","mathjs/lib/function/geometry/distance.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/geometry/intersect.js'),
require('mathjs/lib/function/geometry/distance.js')];
});
__d('mathjs/lib/function/geometry/intersect.js',["mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));




























var intersect=typed('intersect',{
'Array, Array, Array':function(x,y,plane){
if(!_3d(x)){throw new TypeError('Array with 3 numbers expected for first argument');}
if(!_3d(y)){throw new TypeError('Array with 3 numbers expected for second argument');}
if(!_4d(plane)){throw new TypeError('Array with 4 numbers expected as third argument');}

return _intersectLinePlane(x[0],x[1],x[2],y[0],y[1],y[2],plane[0],plane[1],plane[2],plane[3]);},


'Array, Array, Array, Array':function(w,x,y,z){
if(w.length === 2){
if(!_2d(w)){throw new TypeError('Array with 2 numbers expected for first argument');}
if(!_2d(x)){throw new TypeError('Array with 2 numbers expected for second argument');}
if(!_2d(y)){throw new TypeError('Array with 2 numbers expected for third argument');}
if(!_2d(z)){throw new TypeError('Array with 2 numbers expected for fourth argument');}

return _intersect2d(w[0],w[1],x[0],x[1],y[0],y[1],z[0],z[1]);}else 

if(w.length === 3){
if(!_3d(w)){throw new TypeError('Array with 3 numbers expected for first argument');}
if(!_3d(x)){throw new TypeError('Array with 3 numbers expected for second argument');}
if(!_3d(y)){throw new TypeError('Array with 3 numbers expected for third argument');}
if(!_3d(z)){throw new TypeError('Array with 3 numbers expected for fourth argument');}

return _intersect3d(w[0],w[1],w[2],x[0],x[1],x[2],y[0],y[1],y[2],z[0],z[1],z[2]);}else 

{
throw new TypeError('Arrays with two or thee dimensional points expected');}},



'Matrix, Matrix, Matrix':function(x,y,plane){
return matrix(intersect(x.valueOf(),y.valueOf(),plane.valueOf()));},


'Matrix, Matrix, Matrix, Matrix':function(w,x,y,z){

return matrix(intersect(w.valueOf(),x.valueOf(),y.valueOf(),z.valueOf()));}});



return intersect;}


function _2d(x){
return x.length === 2 && typeof x[0] === 'number' && typeof x[1] === 'number';}


function _3d(x){
return x.length === 3 && typeof x[0] === 'number' && typeof x[1] === 'number' && typeof x[2] === 'number';}


function _4d(x){
return x.length === 4 && typeof x[0] === 'number' && typeof x[1] === 'number' && typeof x[2] === 'number' && typeof x[3] === 'number';}


function _intersect2d(x1,y1,x2,y2,x3,y3,x4,y4){
var d1343=(x1 - x3) * (x4 - x3) + (y1 - y3) * (y4 - y3);
var d4321=(x4 - x3) * (x2 - x1) + (y4 - y3) * (y2 - y1);
var d1321=(x1 - x3) * (x2 - x1) + (y1 - y3) * (y2 - y1);
var d4343=(x4 - x3) * (x4 - x3) + (y4 - y3) * (y4 - y3);
var d2121=(x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
var ta=(d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);
var tb=(d1343 + ta * d4321) / d4343;

var pax=x1 + ta * (x2 - x1);
var pay=y1 + ta * (y2 - y1);
var pbx=x3 + tb * (x4 - x3);
var pby=y3 + tb * (y4 - y3);
if(pax === pbx && pay === pby){
return [pax,pay];}else 

{
return null;}}



function _intersect3d(x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4){
var d1343=(x1 - x3) * (x4 - x3) + (y1 - y3) * (y4 - y3) + (z1 - z3) * (z4 - z3);
var d4321=(x4 - x3) * (x2 - x1) + (y4 - y3) * (y2 - y1) + (z4 - z3) * (z2 - z1);
var d1321=(x1 - x3) * (x2 - x1) + (y1 - y3) * (y2 - y1) + (z1 - z3) * (z2 - z1);
var d4343=(x4 - x3) * (x4 - x3) + (y4 - y3) * (y4 - y3) + (z4 - z3) * (z4 - z3);
var d2121=(x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1) + (z2 - z1) * (z2 - z1);
var ta=(d1343 * d4321 - d1321 * d4343) / (d2121 * d4343 - d4321 * d4321);
var tb=(d1343 + ta * d4321) / d4343;

var pax=x1 + ta * (x2 - x1);
var pay=y1 + ta * (y2 - y1);
var paz=z1 + ta * (z2 - z1);
var pbx=x3 + tb * (x4 - x3);
var pby=y3 + tb * (y4 - y3);
var pbz=z3 + tb * (z4 - z3);
if(pax === pbx && pay === pby && paz === pbz){
return [pax,pay,paz];}else 

{
return null;}}



function _intersectLinePlane(x1,y1,z1,x2,y2,z2,x,y,z,c){
var t=(c - x1 * x - y1 * y - z1 * z) / (x2 * x + y2 * y + z2 * z - x1 - y1 - z1);
var px=x1 + t * (x2 - x1);
var py=y1 + t * (y2 - y1);
var pz=z1 + t * (z2 - z1);
return [px,py,pz];}





exports.name = 'intersect';
exports.factory = factory;
});
__d('mathjs/lib/function/geometry/distance.js',["mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));





















































var distance=typed('distance',{
'Array, Array, Array':function(x,y,z){

if(x.length == 2 && y.length == 2 && z.length == 2){
if(!_2d(x)){throw new TypeError('Array with 2 numbers expected for first argument');}
if(!_2d(y)){throw new TypeError('Array with 2 numbers expected for second argument');}
if(!_2d(z)){throw new TypeError('Array with 2 numbers expected for third argument');}
var m=(z[1] - z[0]) / (y[1] - y[0]);
var xCoeff=m * m * y[0];
var yCoeff=-1 * (m * y[0]);
var constant=x[1];

return _distancePointLine2D(x[0],x[1],xCoeff,yCoeff,constant);}else 

{
throw new TypeError('Invalid Arguments: Try again');}},


'Object, Object, Object':function(x,y,z){
if(Object.keys(x).length == 2 && Object.keys(y).length == 2 && Object.keys(z).length == 2){
if(!_2d(x)){throw new TypeError('Values of pointX and pointY should be numbers');}
if(!_2d(y)){throw new TypeError('Values of lineOnePtX and lineOnePtY should be numbers');}
if(!_2d(z)){throw new TypeError('Values of lineTwoPtX and lineTwoPtY should be numbers');}
if(x.hasOwnProperty('pointX') && x.hasOwnProperty('pointY') && y.hasOwnProperty('lineOnePtX') && 
y.hasOwnProperty('lineOnePtY') && z.hasOwnProperty('lineTwoPtX') && z.hasOwnProperty('lineTwoPtY')){
var m=(z.lineTwoPtY - z.lineTwoPtX) / (y.lineOnePtY - y.lineOnePtX);
var xCoeff=m * m * y.lineOnePtX;
var yCoeff=-1 * (m * y.lineOnePtX);
var constant=x.pointX;

return _distancePointLine2D(x.pointX,x.pointY,xCoeff,yCoeff,constant);}else 

{
throw new TypeError('Key names do not match');}}else 


{
throw new TypeError('Invalid Arguments: Try again');}},


'Array, Array':function(x,y){

if(x.length == 2 && y.length == 3){
if(!_2d(x)){throw new TypeError('Array with 2 numbers expected for first argument');}
if(!_3d(y)){throw new TypeError('Array with 3 numbers expected for second argument');}

return _distancePointLine2D(x[0],x[1],y[0],y[1],y[2]);}else 


if(x.length == 3 && y.length == 6){
if(!_3d(x)){throw new TypeError('Array with 3 numbers expected for first argument');}
if(!_parametricLine(y)){throw new TypeError('Array with 6 numbers expected for second argument');}

return _distancePointLine3D(x[0],x[1],x[2],y[0],y[1],y[2],y[3],y[4],y[5]);}else 


if(x.length == 2 && y.length == 2){
if(!_2d(x)){throw new TypeError('Array with 2 numbers expected for first argument');}
if(!_2d(y)){throw new TypeError('Array with 2 numbers expected for second argument');}

return _distance2d(x[0],x[1],y[0],y[1]);}else 


if(x.length == 3 && y.length == 3){
if(!_3d(x)){throw new TypeError('Array with 3 numbers expected for first argument');}
if(!_3d(y)){throw new TypeError('Array with 3 numbers expected for second argument');}

return _distance3d(x[0],x[1],x[2],y[0],y[1],y[2]);}else 

{
throw new TypeError('Invalid Arguments: Try again');}},


'Object, Object':function(x,y){
if(Object.keys(x).length == 2 && Object.keys(y).length == 3){
if(!_2d(x)){throw new TypeError('Values of pointX and pointY should be numbers');}
if(!_3d(y)){throw new TypeError('Values of xCoeffLine, yCoeffLine and constant should be numbers');}
if(x.hasOwnProperty('pointX') && x.hasOwnProperty('pointY') && y.hasOwnProperty('xCoeffLine') && 
y.hasOwnProperty('yCoeffLine') && y.hasOwnProperty('yCoeffLine')){

return _distancePointLine2D(x.pointX,x.pointY,y.xCoeffLine,y.yCoeffLine,y.constant);}else 

{
throw new TypeError('Key names do not match');}}else 



if(Object.keys(x).length == 3 && Object.keys(y).length == 6){
if(!_3d(x)){throw new TypeError('Values of pointX, pointY and pointZ should be numbers');}
if(!_parametricLine(y)){throw new TypeError('Values of x0, y0, z0, a, b and c should be numbers');}
if(x.hasOwnProperty('pointX') && x.hasOwnProperty('pointY') && y.hasOwnProperty('x0') && 
y.hasOwnProperty('y0') && y.hasOwnProperty('z0') && y.hasOwnProperty('a') && 
y.hasOwnProperty('b') && y.hasOwnProperty('c')){

return _distancePointLine3D(x.pointX,x.pointY,x.pointZ,y.x0,y.y0,y.z0,y.a,y.b,y.c);}else 

{
throw new TypeError('Key names do not match');}}else 



if(Object.keys(x).length == 2 && Object.keys(y).length == 2){
if(!_2d(x)){throw new TypeError('Values of pointOneX and pointOneY should be numbers');}
if(!_2d(y)){throw new TypeError('Values of pointTwoX and pointTwoY should be numbers');}
if(x.hasOwnProperty('pointOneX') && x.hasOwnProperty('pointOneY') && 
y.hasOwnProperty('pointTwoX') && y.hasOwnProperty('pointTwoY')){

return _distance2d(x.pointOneX,x.pointOneY,y.pointTwoX,y.pointTwoY);}else 

{
throw new TypeError('Key names do not match');}}else 



if(Object.keys(x).length == 3 && Object.keys(y).length == 3){
if(!_3d(x)){throw new TypeError('Values of pointOneX, pointOneY and pointOneZ should be numbers');}
if(!_3d(y)){throw new TypeError('Values of pointTwoX, pointTwoY and pointTwoZ should be numbers');}
if(x.hasOwnProperty('pointOneX') && x.hasOwnProperty('pointOneY') && x.hasOwnProperty('pointOneZ') && 
y.hasOwnProperty('pointTwoX') && y.hasOwnProperty('pointTwoY') && y.hasOwnProperty('pointTwoZ')){

return _distance3d(x.pointOneX,x.pointOneY,x.pointOneZ,y.pointTwoX,y.pointTwoY,y.pointTwoZ);}else 

{
throw new TypeError('Key names do not match');}}else 


{
throw new TypeError('Invalid Arguments: Try again');}},


'Array':function(arr){
if(!_pairwise(arr)){throw new TypeError('Incorrect array format entered for pairwise distance calculation');}

return _distancePairwise(arr);}});


return distance;}


function _2d(a){

if(a.constructor !== Array){
a = _objectToArray(a);}

return typeof a[0] === 'number' && typeof a[1] === 'number';}


function _3d(a){

if(a.constructor !== Array){
a = _objectToArray(a);}

return typeof a[0] === 'number' && typeof a[1] === 'number' && typeof a[2] === 'number';}


function _parametricLine(a){
if(a.constructor !== Array){
a = _objectToArray(a);}

return typeof a[0] === 'number' && typeof a[1] === 'number' && typeof a[2] === 'number' && 
typeof a[3] === 'number' && typeof a[4] === 'number' && typeof a[5] === 'number';}



function _objectToArray(o){
var keys=Object.keys(o);
var a=[];
for(var i=0;i < keys.length;i++) {
a.push(o[keys[i]]);}

return a;}


function _pairwise(a){

if(a[0].length == 2 && typeof a[0][0] === 'number' && typeof a[0][1] === 'number'){
for(var i in a) {
if(a[i].length != 2 || typeof a[i][0] !== 'number' || typeof a[i][1] !== 'number'){
return false;}}}else 



if(a[0].length == 3 && typeof a[0][0] === 'number' && typeof a[0][1] === 'number' && typeof a[0][2] === 'number'){
for(var i in a) {
if(a[i].length != 3 || typeof a[i][0] !== 'number' || typeof a[i][1] !== 'number' || typeof a[i][2] !== 'number'){
return false;}}}else 



{
return false;}

return true;}


function _distancePointLine2D(x,y,a,b,c){
var num=Math.abs(a * x + b * y + c);
var den=Math.pow(a * a + b * b,0.5);
var result=num / den;
return result;}


function _distancePointLine3D(x,y,z,x0,y0,z0,a,b,c){
var num=[(y0 - y) * c - (z0 - z) * b,(z0 - z) * a - (x0 - x) * c,(x0 - x) * b - (y0 - y) * a];
num = Math.pow(num[0] * num[0] + num[1] * num[1] + num[2] * num[2],0.5);
var den=Math.pow(a * a + b * b + c * c,0.5);
var result=num / den;
return result;}


function _distance2d(x1,y1,x2,y2){
var yDiff=y2 - y1;
var xDiff=x2 - x1;
var radicant=yDiff * yDiff + xDiff * xDiff;
var result=Math.pow(radicant,0.5);
return result;}


function _distance3d(x1,y1,z1,x2,y2,z2){
var zDiff=z2 - z1;
var yDiff=y2 - y1;
var xDiff=x2 - x1;
var radicant=zDiff * zDiff + yDiff * yDiff + xDiff * xDiff;
var result=Math.pow(radicant,0.5);
return result;}


function _distancePairwise(a){
var result=[];
for(var i=0;i < a.length - 1;i++) {
for(var j=i + 1;j < a.length;j++) {
if(a[0].length == 2){
result.push(_distance2d(a[i][0],a[i][1],a[j][0],a[j][1]));}else 

if(a[0].length == 3){
result.push(_distance3d(a[i][0],a[i][1],a[i][2],a[j][0],a[j][1],a[j][2]));}}}



return result;}


exports.name = 'distance';
exports.factory = factory;
});
__d('mathjs/lib/function/logical/index.js',["mathjs/lib/function/logical/and.js","mathjs/lib/function/logical/not.js","mathjs/lib/function/logical/or.js","mathjs/lib/function/logical/xor.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/logical/and.js'),
require('mathjs/lib/function/logical/not.js'),
require('mathjs/lib/function/logical/or.js'),
require('mathjs/lib/function/logical/xor.js')];
});
__d('mathjs/lib/function/logical/and.js',["mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/matrix/zeros.js","mathjs/lib/function/logical/not.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm06.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var zeros=load(require('mathjs/lib/function/matrix/zeros.js'));
var not=load(require('mathjs/lib/function/logical/not.js'));

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm06=load(require('mathjs/lib/type/matrix/utils/algorithm06.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));





























var and=typed('and',{

'number, number':function(x,y){
return !!(x && y);},


'Complex, Complex':function(x,y){
return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);},


'BigNumber, BigNumber':function(x,y){
return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();},


'Unit, Unit':function(x,y){
return x.value !== 0 && x.value !== null && (y.value !== 0 && y.value !== null);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm06(x,y,and,false);
break;
default:

c = algorithm02(y,x,and,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm02(x,y,and,false);
break;
default:

c = algorithm13(x,y,and);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return and(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return and(matrix(x),y);},


'Matrix, Array':function(x,y){

return and(x,matrix(y));},


'Matrix, any':function(x,y){

if(not(y)){

return zeros(x.size(),x.storage());}


var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,and,false);
break;
default:
c = algorithm14(x,y,and,false);
break;}

return c;},


'any, Matrix':function(x,y){

if(not(x)){

return zeros(x.size(),x.storage());}


var c;

switch(y.storage()){
case 'sparse':
c = algorithm11(y,x,and,true);
break;
default:
c = algorithm14(y,x,and,true);
break;}

return c;},


'Array, any':function(x,y){

return and(matrix(x),y).valueOf();},


'any, Array':function(x,y){

return and(x,matrix(y)).valueOf();}});



and.toTex = '\\left(${args[0]}' + latex.operators['and'] + '${args[1]}\\right)';

return and;}


exports.name = 'and';
exports.factory = factory;
});
__d('mathjs/lib/function/logical/not.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');


























var not=typed('not',{
'number':function(x){
return !x;},


'Complex':function(x){
return x.re === 0 && x.im === 0;},


'BigNumber':function(x){
return x.isZero() || x.isNaN();},


'Unit':function(x){
return x.value === null || x.value == 0;},


'Array | Matrix':function(x){
return deepMap(x,not);}});



not.toTex = latex.operators['not'] + '\\left(${args[0]}\\right)';

return not;}


exports.name = 'not';
exports.factory = factory;
});
__d('mathjs/lib/function/logical/or.js',["mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm05.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm05=load(require('mathjs/lib/type/matrix/utils/algorithm05.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));





























var or=typed('or',{

'number, number':function(x,y){
return !!(x || y);},


'Complex, Complex':function(x,y){
return x.re !== 0 || x.im !== 0 || (y.re !== 0 || y.im !== 0);},


'BigNumber, BigNumber':function(x,y){
return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();},


'Unit, Unit':function(x,y){
return x.value !== 0 && x.value !== null || y.value !== 0 && y.value !== null;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm05(x,y,or);
break;
default:

c = algorithm03(y,x,or,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,or,false);
break;
default:

c = algorithm13(x,y,or);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return or(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return or(matrix(x),y);},


'Matrix, Array':function(x,y){

return or(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,or,false);
break;
default:
c = algorithm14(x,y,or,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,or,true);
break;
default:
c = algorithm14(y,x,or,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,or,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,or,true).valueOf();}});



or.toTex = '\\left(${args[0]}' + latex.operators['or'] + '${args[1]}\\right)';

return or;}


exports.name = 'or';
exports.factory = factory;
});
__d('mathjs/lib/function/logical/xor.js',["mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));





























var xor=typed('xor',{

'number, number':function(x,y){
return !!(!!x ^ !!y);},


'Complex, Complex':function(x,y){
return !!((x.re !== 0 || x.im !== 0) ^ (y.re !== 0 || y.im !== 0));},


'BigNumber, BigNumber':function(x,y){
return !!((!x.isZero() && !x.isNaN()) ^ (!y.isZero() && !y.isNaN()));},


'Unit, Unit':function(x,y){
return !!((x.value !== 0 && x.value !== null) ^ (y.value !== 0 && y.value !== null));},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,xor);
break;
default:

c = algorithm03(y,x,xor,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,xor,false);
break;
default:

c = algorithm13(x,y,xor);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return xor(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return xor(matrix(x),y);},


'Matrix, Array':function(x,y){

return xor(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,xor,false);
break;
default:
c = algorithm14(x,y,xor,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,xor,true);
break;
default:
c = algorithm14(y,x,xor,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,xor,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,xor,true).valueOf();}});



xor.toTex = '\\left(${args[0]}' + latex.operators['xor'] + '${args[1]}\\right)';

return xor;}


exports.name = 'xor';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/index.js',["mathjs/lib/function/matrix/concat.js","mathjs/lib/function/matrix/cross.js","mathjs/lib/function/matrix/det.js","mathjs/lib/function/matrix/diag.js","mathjs/lib/function/matrix/dot.js","mathjs/lib/function/matrix/eye.js","mathjs/lib/function/matrix/flatten.js","mathjs/lib/function/matrix/inv.js","mathjs/lib/function/matrix/ones.js","mathjs/lib/function/matrix/range.js","mathjs/lib/function/matrix/resize.js","mathjs/lib/function/matrix/size.js","mathjs/lib/function/matrix/squeeze.js","mathjs/lib/function/matrix/subset.js","mathjs/lib/function/matrix/trace.js","mathjs/lib/function/matrix/transpose.js","mathjs/lib/function/matrix/zeros.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/matrix/concat.js'),
require('mathjs/lib/function/matrix/cross.js'),
require('mathjs/lib/function/matrix/det.js'),
require('mathjs/lib/function/matrix/diag.js'),
require('mathjs/lib/function/matrix/dot.js'),
require('mathjs/lib/function/matrix/eye.js'),
require('mathjs/lib/function/matrix/flatten.js'),
require('mathjs/lib/function/matrix/inv.js'),
require('mathjs/lib/function/matrix/ones.js'),
require('mathjs/lib/function/matrix/range.js'),
require('mathjs/lib/function/matrix/resize.js'),
require('mathjs/lib/function/matrix/size.js'),
require('mathjs/lib/function/matrix/squeeze.js'),
require('mathjs/lib/function/matrix/subset.js'),
require('mathjs/lib/function/matrix/trace.js'),
require('mathjs/lib/function/matrix/transpose.js'),
require('mathjs/lib/function/matrix/zeros.js')];
});
__d('mathjs/lib/function/matrix/cross.js',["mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/arithmetic/multiply.js"],function(global, require, module, exports) {  'use strict';

var size=require('mathjs/lib/utils/array.js').size;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));






























var cross=typed('cross',{
'Matrix, Matrix':function(x,y){
return matrix(_cross(x.toArray(),y.toArray()));},


'Matrix, Array':function(x,y){
return matrix(_cross(x.toArray(),y));},


'Array, Matrix':function(x,y){
return matrix(_cross(x,y.toArray()));},


'Array, Array':_cross});


cross.toTex = '\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)';

return cross;








function _cross(x,y){
var xSize=size(x);
var ySize=size(y);

if(xSize.length != 1 || ySize.length != 1 || xSize[0] != 3 || ySize[0] != 3){
throw new RangeError('Vectors with length 3 expected ' + 
'(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])');}


return [
subtract(multiply(x[1],y[2]),multiply(x[2],y[1])),
subtract(multiply(x[2],y[0]),multiply(x[0],y[2])),
subtract(multiply(x[0],y[1]),multiply(x[1],y[0]))];}}




exports.name = 'cross';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/diag.js',["mathjs/lib/utils/array.js","mathjs/lib/utils/object.js","mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var array=require('mathjs/lib/utils/array.js');
var clone=require('mathjs/lib/utils/object.js').clone;
var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));






































var diag=typed('diag',{


'Array':function(x){
return _diag(x,0,array.size(x),null);},


'Array, number':function(x,k){
return _diag(x,k,array.size(x),null);},


'Array, BigNumber':function(x,k){
return _diag(x,k.toNumber(),array.size(x),null);},


'Array, string':function(x,format){
return _diag(x,0,array.size(x),format);},


'Array, number, string':function(x,k,format){
return _diag(x,k,array.size(x),format);},


'Array, BigNumber, string':function(x,k,format){
return _diag(x,k.toNumber(),array.size(x),format);},


'Matrix':function(x){
return _diag(x,0,x.size(),x.storage());},


'Matrix, number':function(x,k){
return _diag(x,k,x.size(),x.storage());},


'Matrix, BigNumber':function(x,k){
return _diag(x,k.toNumber(),x.size(),x.storage());},


'Matrix, string':function(x,format){
return _diag(x,0,x.size(),format);},


'Matrix, number, string':function(x,k,format){
return _diag(x,k,x.size(),format);},


'Matrix, BigNumber, string':function(x,k,format){
return _diag(x,k.toNumber(),x.size(),format);}});



diag.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return diag;










function _diag(x,k,size,format){
if(!isInteger(k)){
throw new TypeError('Second parameter in function diag must be an integer');}


var kSuper=k > 0?k:0;
var kSub=k < 0?-k:0;


switch(size.length){
case 1:
return _createDiagonalMatrix(x,k,format,size[0],kSub,kSuper);
case 2:
return _getDiagonal(x,k,format,size,kSub,kSuper);}

throw new RangeError('Matrix for function diag must be 2 dimensional');}


function _createDiagonalMatrix(x,k,format,l,kSub,kSuper){

var ms=[l + kSub,l + kSuper];

var F=type.Matrix.storage(format || 'dense');

var m=F.diagonal(ms,x,k);

return format !== null?m:m.valueOf();}


function _getDiagonal(x,k,format,s,kSub,kSuper){

if(x && x.isMatrix === true){

var dm=x.diagonal(k);

if(format !== null){

if(format !== dm.storage())
return matrix(dm,format);
return dm;}

return dm.valueOf();}


var n=Math.min(s[0] - kSub,s[1] - kSuper);

var vector=[];

for(var i=0;i < n;i++) {
vector[i] = clone(x[i + kSub][i + kSuper]);}


return format !== null?matrix(vector):vector;}}



exports.name = 'diag';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/dot.js',["mathjs/lib/utils/array.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/multiply.js"],function(global, require, module, exports) {  'use strict';

var size=require('mathjs/lib/utils/array.js').size;

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
























var dot=typed('dot',{
'Matrix, Matrix':function(x,y){
return _dot(x.toArray(),y.toArray());},


'Matrix, Array':function(x,y){
return _dot(x.toArray(),y);},


'Array, Matrix':function(x,y){
return _dot(x,y.toArray());},


'Array, Array':_dot});


dot.toTex = '\\left(${args[0]}\\cdot${args[1]}\\right)';

return dot;









function _dot(x,y){
var xSize=size(x);
var ySize=size(y);
var len=xSize[0];

if(xSize.length !== 1 || ySize.length !== 1)throw new RangeError('Vector expected');
if(xSize[0] != ySize[0])throw new RangeError('Vectors must have equal length (' + xSize[0] + ' != ' + ySize[0] + ')');
if(len == 0)throw new RangeError('Cannot calculate the dot product of empty vectors');

var prod=0;
for(var i=0;i < len;i++) {
prod = add(prod,multiply(x[i],y[i]));}


return prod;}}



exports.name = 'dot';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/flatten.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var clone=require('mathjs/lib/utils/object.js').clone;
var _flatten=require('mathjs/lib/utils/array.js').flatten;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));



















var flatten=typed('flatten',{
'Array':function(x){
return _flatten(clone(x));},


'Matrix':function(x){
var flat=_flatten(clone(x.toArray()));

return matrix(flat);}});



flatten.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return flatten;}


exports.name = 'flatten';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/ones.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var resize=require('mathjs/lib/utils/array.js').resize;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));


































var ones=typed('ones',{
'':function(){
return config.matrix === 'array'?
_ones([]):
_ones([],'default');},




'...number | BigNumber | string':function(size){
var last=size[size.length - 1];
if(typeof last === 'string'){
var format=size.pop();
return _ones(size,format);}else 

if(config.matrix === 'array'){
return _ones(size);}else 

{
return _ones(size,'default');}},



'Array':_ones,

'Matrix':function(size){
var format=size.storage();
return _ones(size.valueOf(),format);},


'Array | Matrix, string':function(size,format){
return _ones(size.valueOf(),format);}});



ones.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return ones;








function _ones(size,format){
var hasBigNumbers=_normalize(size);
var defaultValue=hasBigNumbers?new type.BigNumber(1):1;
_validate(size);

if(format){

var m=matrix(format);
if(size.length > 0){
return m.resize(size,defaultValue);}

return m;}else 

{

var arr=[];
if(size.length > 0){
return resize(arr,size,defaultValue);}

return arr;}}




function _normalize(size){
var hasBigNumbers=false;
size.forEach(function(value,index,arr){
if(value && value.isBigNumber === true){
hasBigNumbers = true;
arr[index] = value.toNumber();}});


return hasBigNumbers;}



function _validate(size){
size.forEach(function(value){
if(typeof value !== 'number' || !isInteger(value) || value < 0){
throw new Error('Parameters in function ones must be positive integers');}});}}





exports.name = 'ones';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/resize.js',["mathjs/lib/error/DimensionError.js","mathjs/lib/error/ArgumentsError.js","mathjs/lib/utils/number.js","mathjs/lib/utils/string.js","mathjs/lib/utils/object.js","mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var DimensionError=require('mathjs/lib/error/DimensionError.js');
var ArgumentsError=require('mathjs/lib/error/ArgumentsError.js');

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var format=require('mathjs/lib/utils/string.js').format;
var clone=require('mathjs/lib/utils/object.js').clone;
var array=require('mathjs/lib/utils/array.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));




























var resize=function resize(x,size,defaultValue){
if(arguments.length != 2 && arguments.length != 3){
throw new ArgumentsError('resize',arguments.length,2,3);}


if(size && size.isMatrix === true){
size = size.valueOf();}


if(size.length && size[0] && size[0].isBigNumber === true){

size = size.map(function(value){
return value && value.isBigNumber === true?value.toNumber():value;});}




if(x && x.isMatrix === true){

return x.resize(size,defaultValue,true);}


if(typeof x === 'string'){

return _resizeString(x,size,defaultValue);}



var asMatrix=Array.isArray(x)?false:config.matrix !== 'array';

if(size.length == 0){

while(Array.isArray(x)) {
x = x[0];}


return clone(x);}else 

{

if(!Array.isArray(x)){
x = [x];}

x = clone(x);

var res=array.resize(x,size,defaultValue);
return asMatrix?matrix(res):res;}};



resize.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return resize;








function _resizeString(str,size,defaultChar){
if(defaultChar !== undefined){
if(typeof defaultChar !== 'string' || defaultChar.length !== 1){
throw new TypeError('Single character expected as defaultValue');}}else 


{
defaultChar = ' ';}


if(size.length !== 1){
throw new DimensionError(size.length,1);}

var len=size[0];
if(typeof len !== 'number' || !isInteger(len)){
throw new TypeError('Invalid size, must contain positive integers ' + 
'(size: ' + format(size) + ')');}


if(str.length > len){
return str.substring(0,len);}else 

if(str.length < len){
var res=str;
for(var i=0,ii=len - str.length;i < ii;i++) {
res += defaultChar;}

return res;}else 

{
return str;}}}




exports.name = 'resize';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/size.js',["mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var array=require('mathjs/lib/utils/array.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
























var size=typed('size',{
'Matrix':function(x){

return matrix(x.size());},


'Array':array.size,

'string':function(x){
return config.matrix === 'array'?[x.length]:matrix([x.length]);},


'number | Complex | BigNumber | Unit | boolean | null':function(x){

return config.matrix === 'array'?[]:matrix([]);}});



size.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return size;}


exports.name = 'size';
exports.factory = factory;
});
__d('mathjs/lib/function/matrix/squeeze.js',["mathjs/lib/utils/object.js","mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js"],function(global, require, module, exports) {  'use strict';

var object=require('mathjs/lib/utils/object.js');
var array=require('mathjs/lib/utils/array.js');

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));






























var squeeze=typed('squeeze',{
'Array':function(x){
return array.squeeze(object.clone(x));},


'Matrix':function(x){
var res=array.squeeze(x.toArray());

return Array.isArray(res)?matrix(res):res;},


'any':function(x){

return object.clone(x);}});



squeeze.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return squeeze;}


exports.name = 'squeeze';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/index.js',["mathjs/lib/function/probability/combinations.js","mathjs/lib/function/probability/factorial.js","mathjs/lib/function/probability/gamma.js","mathjs/lib/function/probability/kldivergence.js","mathjs/lib/function/probability/multinomial.js","mathjs/lib/function/probability/permutations.js","mathjs/lib/function/probability/pickRandom.js","mathjs/lib/function/probability/random.js","mathjs/lib/function/probability/randomInt.js"],function(global, require, module, exports) {  module.exports = [

require('mathjs/lib/function/probability/combinations.js'),
require('mathjs/lib/function/probability/factorial.js'),
require('mathjs/lib/function/probability/gamma.js'),
require('mathjs/lib/function/probability/kldivergence.js'),
require('mathjs/lib/function/probability/multinomial.js'),
require('mathjs/lib/function/probability/permutations.js'),
require('mathjs/lib/function/probability/pickRandom.js'),
require('mathjs/lib/function/probability/random.js'),
require('mathjs/lib/function/probability/randomInt.js')];
});
__d('mathjs/lib/function/probability/kldivergence.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/arithmetic/divide.js","mathjs/lib/function/statistics/sum.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/dotDivide.js","mathjs/lib/function/arithmetic/log.js","mathjs/lib/function/utils/isNumeric.js"],function(global, require, module, exports) {  'use strict';


function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divide.js'));
var sum=load(require('mathjs/lib/function/statistics/sum.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var dotDivide=load(require('mathjs/lib/function/arithmetic/dotDivide.js'));
var log=load(require('mathjs/lib/function/arithmetic/log.js'));
var isNumeric=load(require('mathjs/lib/function/utils/isNumeric.js'));

















var kldivergence=typed('kldivergence',{
'Array, Array':function(q,p){
return _kldiv(matrix(q),matrix(p));},


'Matrix, Array':function(q,p){
return _kldiv(q,matrix(p));},


'Array, Matrix':function(q,p){
return _kldiv(matrix(q),p);},


'Matrix, Matrix':function(q,p){
return _kldiv(q,p);}});




function _kldiv(q,p){
var plength=p.size().length;
var qlength=q.size().length;
if(plength > 1){
throw new Error('first object must be one dimensional');}


if(qlength > 1){
throw new Error('second object must be one dimensional');}


if(plength !== qlength){
throw new Error("Length of two vectors must be equal");}



var sumq=sum(q);
if(sumq === 0){
throw new Error("Sum of elements in first object must be non zero");}


var sump=sum(p);
if(sump === 0){
throw new Error("Sum of elements in second object must be non zero");}

var qnorm=divide(q,sum(q));
var pnorm=divide(p,sum(p));

var result=sum(multiply(qnorm,log(dotDivide(qnorm,pnorm))));
if(isNumeric(result)){
return result;}else 

{
return Number.NaN;}}



return kldivergence;}



exports.name = 'kldivergence';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/sum.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/function/arithmetic/addScalar.js"],function(global, require, module, exports) {  'use strict';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
























var sum=typed('sum',{
'Array | Matrix':function(args){

return _sum(args);},


'Array | Matrix, number | BigNumber':function(){


throw new Error('sum(A, dim) is not yet supported');},


'...':function(){

return _sum(arguments);}});



sum.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return sum;







function _sum(array){
var sum=undefined;

deepForEach(array,function(value){
sum = sum === undefined?value:add(sum,value);});


if(sum === undefined){
switch(config.number){
case 'number':
return 0;
case 'bignumber':
return new type.BigNumber(0);
case 'fraction':
return new type.Fraction(0);
default:
return 0;}}



return sum;}}



exports.name = 'sum';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/isNumeric.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){




























var isNumeric=typed('isNumeric',{
'number | BigNumber | Fraction | boolean':function(){
return true;},


'Complex | Unit | string':function(){
return false;},


'Array | Matrix':function(x){
return deepMap(x,isNumeric);}});



return isNumeric;}


exports.name = 'isNumeric';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/multinomial.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/arithmetic/divide.js","mathjs/lib/function/probability/factorial.js","mathjs/lib/function/utils/isInteger.js","mathjs/lib/function/utils/isPositive.js"],function(global, require, module, exports) {  'use strict';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divide.js'));
var factorial=load(require('mathjs/lib/function/probability/factorial.js'));
var isInteger=load(require('mathjs/lib/function/utils/isInteger.js'));
var isPositive=load(require('mathjs/lib/function/utils/isPositive.js'));






















return typed('multinomial',{
'Array | Matrix':function(a){
var sum=0;
var denom=1;

deepForEach(a,function(ai){
if(!isInteger(ai) || !isPositive(ai)){
throw new TypeError('Positive integer value expected in function multinomial');}

sum = add(sum,ai);
denom = multiply(denom,factorial(ai));});


return divide(factorial(sum),denom);}});}




exports.name = 'multinomial';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/permutations.js',["mathjs/lib/utils/number.js","mathjs/lib/function/probability/factorial.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var factorial=load(require('mathjs/lib/function/probability/factorial.js'));


























var permutations=typed('permutations',{
'number | BigNumber':factorial,

'number, number':function(n,k){
var result,i;

if(!isInteger(n) || n < 0){
throw new TypeError('Positive integer value expected in function permutations');}

if(!isInteger(k) || k < 0){
throw new TypeError('Positive integer value expected in function permutations');}

if(k > n){
throw new TypeError('second argument k must be less than or equal to first argument n');}



result = 1;
for(i = n - k + 1;i <= n;i++) {
result = result * i;}


return result;},


'BigNumber, BigNumber':function(n,k){
var result,i;

if(!isPositiveInteger(n) || !isPositiveInteger(k)){
throw new TypeError('Positive integer value expected in function permutations');}

if(k.gt(n)){
throw new TypeError('second argument k must be less than or equal to first argument n');}


result = new type.BigNumber(1);
for(i = n.minus(k).plus(1);i.lte(n);i = i.plus(1)) {
result = result.times(i);}


return result;}});





permutations.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return permutations;}







function isPositiveInteger(n){
return n.isInteger() && n.gte(0);}


exports.name = 'permutations';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/pickRandom.js',["mathjs/lib/function/probability/distribution.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var distribution=load(require('mathjs/lib/function/probability/distribution.js'));





















var pickRandom=distribution('uniform').pickRandom;

pickRandom.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return pickRandom;}


exports.name = 'pickRandom';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/distribution.js',["mathjs/lib/error/ArgumentsError.js","mathjs/lib/utils/collection/isCollection.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/utils/array.js"],function(global, require, module, exports) {  'use strict';

var ArgumentsError=require('mathjs/lib/error/ArgumentsError.js');
var isCollection=require('mathjs/lib/utils/collection/isCollection.js');



function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var array=require('mathjs/lib/utils/array.js');
























function distribution(name){
if(!distributions.hasOwnProperty(name))
throw new Error('Unknown distribution ' + name);

var args=Array.prototype.slice.call(arguments,1),
distribution=distributions[name].apply(this,args);

return (function(distribution){


var randFunctions={

random:function(arg1,arg2,arg3){
var size,min,max;
if(arguments.length > 3){
throw new ArgumentsError('random',arguments.length,0,3);}else 


if(arguments.length === 1){
if(isCollection(arg1)){
size = arg1;}else 

{
max = arg1;}}else 


if(arguments.length === 2){
if(isCollection(arg1)){
size = arg1;
max = arg2;}else 

{
min = arg1;
max = arg2;}}else 


{
size = arg1;
min = arg2;
max = arg3;}




if(max === undefined)max = 1;
if(min === undefined)min = 0;
if(size !== undefined){
var res=_randomDataForMatrix(size.valueOf(),min,max,_random);
return size && size.isMatrix === true?matrix(res):res;}else 

return _random(min,max);},


randomInt:function(arg1,arg2,arg3){
var size,min,max;
if(arguments.length > 3 || arguments.length < 1)
throw new ArgumentsError('randomInt',arguments.length,1,3);else 


if(arguments.length === 1)
if(isCollection(arg1)){
size = arg1;}else 

{
max = arg1;}else 


if(arguments.length === 2){
if(isCollection(arg1)){
size = arg1;
max = arg2;}else 

{
min = arg1;
max = arg2;}}else 


{
size = arg1;
min = arg2;
max = arg3;}




if(min === undefined)min = 0;
if(size !== undefined){
var res=_randomDataForMatrix(size.valueOf(),min,max,_randomInt);
return size && size.isMatrix === true?matrix(res):res;}else 

return _randomInt(min,max);},


pickRandom:function(possibles){
if(arguments.length !== 1){
throw new ArgumentsError('pickRandom',arguments.length,1);}

if(possibles && possibles.isMatrix === true){
possibles = possibles.valueOf();}else 

if(!Array.isArray(possibles)){
throw new TypeError('Unsupported type of value in function pickRandom');}


if(array.size(possibles).length > 1){
throw new Error('Only one dimensional vectors supported');}



return possibles[Math.floor(Math.random() * possibles.length)];}};




var _random=function(min,max){
return min + distribution() * (max - min);};


var _randomInt=function(min,max){
return Math.floor(min + distribution() * (max - min));};



var _randomDataForMatrix=function(size,min,max,randFunc){
var data=[],length,i;
size = size.slice(0);

if(size.length > 1){
for(i = 0,length = size.shift();i < length;i++) 
data.push(_randomDataForMatrix(size,min,max,randFunc));}else 
{
for(i = 0,length = size.shift();i < length;i++) 
data.push(randFunc(min,max));}


return data;};


return randFunctions;})(

distribution);}




var distributions={

uniform:function(){
return Math.random;},






normal:function(){
return function(){
var u1,u2,
picked=-1;


while(picked < 0 || picked > 1) {
u1 = Math.random();
u2 = Math.random();
picked = 1 / 6 * Math.pow(-2 * Math.log(u1),0.5) * Math.cos(2 * Math.PI * u2) + 0.5;}

return picked;};}};




distribution.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return distribution;}


exports.name = 'distribution';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/random.js',["mathjs/lib/function/probability/distribution.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var distribution=load(require('mathjs/lib/function/probability/distribution.js'));
































var random=distribution('uniform').random;

random.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return random;}


exports.name = 'random';
exports.factory = factory;
});
__d('mathjs/lib/function/probability/randomInt.js',["mathjs/lib/function/probability/distribution.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var distribution=load(require('mathjs/lib/function/probability/distribution.js'));






























var randomInt=distribution('uniform').randomInt;

randomInt.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return randomInt;}


exports.name = 'randomInt';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/index.js',["mathjs/lib/function/relational/compare.js","mathjs/lib/function/relational/deepEqual.js","mathjs/lib/function/relational/equal.js","mathjs/lib/function/relational/larger.js","mathjs/lib/function/relational/largerEq.js","mathjs/lib/function/relational/smaller.js","mathjs/lib/function/relational/smallerEq.js","mathjs/lib/function/relational/unequal.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/relational/compare.js'),
require('mathjs/lib/function/relational/deepEqual.js'),
require('mathjs/lib/function/relational/equal.js'),
require('mathjs/lib/function/relational/larger.js'),
require('mathjs/lib/function/relational/largerEq.js'),
require('mathjs/lib/function/relational/smaller.js'),
require('mathjs/lib/function/relational/smallerEq.js'),
require('mathjs/lib/function/relational/unequal.js')];
});
__d('mathjs/lib/function/relational/compare.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm05.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm05=load(require('mathjs/lib/type/matrix/utils/algorithm05.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));


































var compare=typed('compare',{

'boolean, boolean':function(x,y){
return x === y?0:x > y?1:-1;},


'number, number':function(x,y){
return x === y || nearlyEqual(x,y,config.epsilon)?0:x > y?1:-1;},


'BigNumber, BigNumber':function(x,y){
return new type.BigNumber(x.cmp(y));},


'Fraction, Fraction':function(x,y){
return new type.Fraction(x.compare(y));},


'Complex, Complex':function(){
throw new TypeError('No ordering relation is defined for complex numbers');},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value === y.value || nearlyEqual(x.value,y.value,config.epsilon)?0:x.value > y.value?1:-1;},


'string, string':function(x,y){
return x === y?0:x > y?1:-1;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm05(x,y,compare);
break;
default:

c = algorithm03(y,x,compare,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,compare,false);
break;
default:

c = algorithm13(x,y,compare);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return compare(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return compare(matrix(x),y);},


'Matrix, Array':function(x,y){

return compare(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,compare,false);
break;
default:
c = algorithm14(x,y,compare,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,compare,true);
break;
default:
c = algorithm14(y,x,compare,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,compare,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,compare,true).valueOf();}});



compare.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return compare;}


exports.name = 'compare';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/deepEqual.js',["mathjs/lib/function/relational/equal.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var equal=load(require('mathjs/lib/function/relational/equal.js'));




























var deepEqual=typed('deepEqual',{
'any, any':function(x,y){
return _deepEqual(x.valueOf(),y.valueOf());}});



deepEqual.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return deepEqual;







function _deepEqual(x,y){
if(Array.isArray(x)){
if(Array.isArray(y)){
var len=x.length;
if(len !== y.length){
return false;}


for(var i=0;i < len;i++) {
if(!_deepEqual(x[i],y[i])){
return false;}}



return true;}else 

{
return false;}}else 


{
if(Array.isArray(y)){
return false;}else 

{
return equal(x,y);}}}}





exports.name = 'deepEqual';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/equal.js',["mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/equalScalar.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var equalScalar=load(require('mathjs/lib/function/relational/equalScalar.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');












































var equal=typed('equal',{

'any, any':function(x,y){

if(x === null){return y === null;}
if(y === null){return x === null;}
if(x === undefined){return y === undefined;}
if(y === undefined){return x === undefined;}

return equalScalar(x,y);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,equalScalar);
break;
default:

c = algorithm03(y,x,equalScalar,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,equalScalar,false);
break;
default:

c = algorithm13(x,y,equalScalar);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return equal(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return equal(matrix(x),y);},


'Matrix, Array':function(x,y){

return equal(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,equalScalar,false);
break;
default:
c = algorithm14(x,y,equalScalar,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,equalScalar,true);
break;
default:
c = algorithm14(y,x,equalScalar,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,equalScalar,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,equalScalar,true).valueOf();}});



equal.toTex = '\\left(${args[0]}' + latex.operators['equal'] + '${args[1]}\\right)';

return equal;}


exports.name = 'equal';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/smallerEq.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');


























var smallerEq=typed('smallerEq',{

'boolean, boolean':function(x,y){
return x <= y;},


'number, number':function(x,y){
return x <= y || nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return x.lte(y);},


'Fraction, Fraction':function(x,y){
return x.compare(y) !== 1;},


'Complex, Complex':function(){
throw new TypeError('No ordering relation is defined for complex numbers');},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return x.value <= y.value || nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x <= y;},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,smallerEq);
break;
default:

c = algorithm03(y,x,smallerEq,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,smallerEq,false);
break;
default:

c = algorithm13(x,y,smallerEq);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return smallerEq(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return smallerEq(matrix(x),y);},


'Matrix, Array':function(x,y){

return smallerEq(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,smallerEq,false);
break;
default:
c = algorithm14(x,y,smallerEq,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,smallerEq,true);
break;
default:
c = algorithm14(y,x,smallerEq,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,smallerEq,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,smallerEq,true).valueOf();}});



smallerEq.toTex = '\\left(${args[0]}' + latex.operators['smallerEq'] + '${args[1]}\\right)';

return smallerEq;}


exports.name = 'smallerEq';
exports.factory = factory;
});
__d('mathjs/lib/function/relational/unequal.js',["mathjs/lib/utils/number.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm07.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js","mathjs/lib/utils/latex.js"],function(global, require, module, exports) {  'use strict';

var nearlyEqual=require('mathjs/lib/utils/number.js').nearlyEqual;

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm07=load(require('mathjs/lib/type/matrix/utils/algorithm07.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

var latex=require('mathjs/lib/utils/latex.js');











































var unequal=typed('unequal',{

'any, any':function(x,y){

if(x === null){return y !== null;}
if(y === null){return x !== null;}
if(x === undefined){return y !== undefined;}
if(y === undefined){return x !== undefined;}

return _unequal(x,y);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm07(x,y,_unequal);
break;
default:

c = algorithm03(y,x,_unequal,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,_unequal,false);
break;
default:

c = algorithm13(x,y,_unequal);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return unequal(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return unequal(matrix(x),y);},


'Matrix, Array':function(x,y){

return unequal(x,matrix(y));},


'Matrix, any':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm12(x,y,_unequal,false);
break;
default:
c = algorithm14(x,y,_unequal,false);
break;}

return c;},


'any, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,_unequal,true);
break;
default:
c = algorithm14(y,x,_unequal,true);
break;}

return c;},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,_unequal,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,_unequal,true).valueOf();}});



var _unequal=typed('_unequal',{

'boolean, boolean':function(x,y){
return x !== y;},


'number, number':function(x,y){
return !nearlyEqual(x,y,config.epsilon);},


'BigNumber, BigNumber':function(x,y){
return !x.eq(y);},


'Fraction, Fraction':function(x,y){
return x.compare(y) !== 0;},


'Complex, Complex':function(x,y){
return !nearlyEqual(x.re,y.re,config.epsilon) || 
!nearlyEqual(x.im,y.im,config.epsilon);},


'Unit, Unit':function(x,y){
if(!x.equalBase(y)){
throw new Error('Cannot compare units with different base');}

return !nearlyEqual(x.value,y.value,config.epsilon);},


'string, string':function(x,y){
return x !== y;}});



unequal.toTex = '\\left(${args[0]}' + latex.operators['unequal'] + '${args[1]}\\right)';

return unequal;}


exports.name = 'unequal';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/index.js',["mathjs/lib/function/statistics/max.js","mathjs/lib/function/statistics/mean.js","mathjs/lib/function/statistics/median.js","mathjs/lib/function/statistics/min.js","mathjs/lib/function/statistics/mode.js","mathjs/lib/function/statistics/prod.js","mathjs/lib/function/statistics/quantileSeq.js","mathjs/lib/function/statistics/std.js","mathjs/lib/function/statistics/sum.js","mathjs/lib/function/statistics/var.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/statistics/max.js'),
require('mathjs/lib/function/statistics/mean.js'),
require('mathjs/lib/function/statistics/median.js'),
require('mathjs/lib/function/statistics/min.js'),
require('mathjs/lib/function/statistics/mode.js'),
require('mathjs/lib/function/statistics/prod.js'),
require('mathjs/lib/function/statistics/quantileSeq.js'),
require('mathjs/lib/function/statistics/std.js'),
require('mathjs/lib/function/statistics/sum.js'),
require('mathjs/lib/function/statistics/var.js')];
});
__d('mathjs/lib/function/statistics/median.js',["mathjs/lib/utils/array.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/divideScalar.js","mathjs/lib/function/relational/compare.js","mathjs/lib/function/utils/partitionSelect.js"],function(global, require, module, exports) {  'use strict';

var flatten=require('mathjs/lib/utils/array.js').flatten;

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));
var compare=load(require('mathjs/lib/function/relational/compare.js'));
var partitionSelect=load(require('mathjs/lib/function/utils/partitionSelect.js'));



























var median=typed('median',{

'Array | Matrix':_median,


'Array | Matrix, number | BigNumber':function(array,dim){

throw new Error('median(A, dim) is not yet supported');},




'...':function(){
return _median(Array.prototype.slice.call(arguments));}});










function _median(array){
array = flatten(array.valueOf());

var num=array.length;
if(num == 0){
throw new Error('Cannot calculate median of an empty array');}


if(num % 2 == 0){

var mid=num / 2 - 1;
var right=partitionSelect(array,mid + 1);


var left=array[mid];
for(var i=0;i < mid;++i) {
if(compare(array[i],left) > 0){
left = array[i];}}



return middle2(left,right);}else 

{

var m=partitionSelect(array,(num - 1) / 2);

return middle(m);}}




var middle=typed({
'number | BigNumber | Unit':function(value){
return value;}});




var middle2=typed({
'number | BigNumber | Unit, number | BigNumber | Unit':function(left,right){
return divide(add(left,right),2);}});



median.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return median;}


exports.name = 'median';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/partitionSelect.js',["mathjs/lib/utils/number.js","mathjs/lib/function/relational/compare.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;

function factory(type,config,load,typed){
var asc=load(require('mathjs/lib/function/relational/compare.js'));
function desc(a,b){
return -asc(a,b);}


































return typed('partitionSelect',{
'Array | Matrix, number':function(x,k){
return _partitionSelect(x,k,asc);},


'Array | Matrix, number, string':function(x,k,compare){
if(compare === 'asc'){
return _partitionSelect(x,k,asc);}else 

if(compare === 'desc'){
return _partitionSelect(x,k,desc);}else 

{
throw new Error('Compare string must be "asc" or "desc"');}},



'Array | Matrix, number, function':_partitionSelect});


function _partitionSelect(x,k,compare){
if(!isInteger(k) || k < 0){
throw new Error('k must be a non-negative integer');}


if(x && x.isMatrix){
var size=x.size();
if(size.length > 1){
throw new Error('Only one dimensional matrices supported');}

return quickSelect(x.valueOf(),k,compare);}


if(Array.isArray(x)){
return quickSelect(x,k,compare);}}













function quickSelect(arr,k,compare){
if(k >= arr.length){
throw new Error('k out of bounds');}


var from=0;
var to=arr.length - 1;


while(from < to) {
var r=from;
var w=to;
var pivot=arr[Math.floor(Math.random() * (to - from + 1)) + from];


while(r < w) {

if(compare(arr[r],pivot) >= 0){
var tmp=arr[w];
arr[w] = arr[r];
arr[r] = tmp;
--w;}else 
{
++r;}}




if(compare(arr[r],pivot) > 0){
--r;}



if(k <= r){
to = r;}else 
{
from = r + 1;}}



return arr[k];}}



exports.name = 'partitionSelect';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/mode.js',["mathjs/lib/utils/array.js"],function(global, require, module, exports) {  'use strict';

var flatten=require('mathjs/lib/utils/array.js').flatten;

function factory(type,config,load,typed){



























var mode=typed('mode',{
'Array | Matrix':_mode,

'...':function(){
return _mode(Array.prototype.slice.call(arguments));}});



return mode;







function _mode(values){
values = flatten(values.valueOf());
var num=values.length;
if(num == 0){
throw new Error('Cannot calculate mode of an empty array');}


var count={},
mode=[],
max=0;
for(var i in values) {
if(!(values[i] in count)){
count[values[i]] = 0;}

count[values[i]]++;
if(count[values[i]] == max){
mode.push(values[i]);}else 

if(count[values[i]] > max){
max = count[values[i]];
mode = [values[i]];}}


return mode;}
;}


exports.name = 'mode';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/prod.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/function/arithmetic/multiplyScalar.js"],function(global, require, module, exports) {  'use strict';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');

function factory(type,config,load,typed){
var multiply=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));


























var prod=typed('prod',{

'Array | Matrix':_prod,


'Array | Matrix, number | BigNumber':function(array,dim){

throw new Error('prod(A, dim) is not yet supported');},




'...':function(){
return _prod(arguments);}});



prod.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return prod;







function _prod(array){
var prod=undefined;

deepForEach(array,function(value){
prod = prod === undefined?value:multiply(prod,value);});


if(prod === undefined){
throw new Error('Cannot calculate prod of an empty array');}


return prod;}}



exports.name = 'prod';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/quantileSeq.js',["mathjs/lib/utils/number.js","mathjs/lib/utils/number.js","mathjs/lib/utils/array.js","mathjs/lib/utils/collection/isCollection.js","mathjs/lib/function/arithmetic/add.js","mathjs/lib/function/arithmetic/multiply.js","mathjs/lib/function/utils/partitionSelect.js","mathjs/lib/function/relational/compare.js"],function(global, require, module, exports) {  'use strict';

var isInteger=require('mathjs/lib/utils/number.js').isInteger;
var isNumber=require('mathjs/lib/utils/number.js').isNumber;
var flatten=require('mathjs/lib/utils/array.js').flatten;
var isCollection=require('mathjs/lib/utils/collection/isCollection.js');

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/add.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiply.js'));
var partitionSelect=load(require('mathjs/lib/function/utils/partitionSelect.js'));
var compare=load(require('mathjs/lib/function/relational/compare.js'));



































function quantileSeq(data,probOrN,sorted){
var probArr,dataArr,one;

if(arguments.length < 2 || arguments.length > 3){
throw new SyntaxError('Function quantileSeq requires two or three parameters');}


if(isCollection(data)){
sorted = sorted || false;
if(typeof sorted === 'boolean'){
dataArr = data.valueOf();
if(isNumber(probOrN)){
if(probOrN < 0){
throw new Error('N/prob must be non-negative');}


if(probOrN <= 1){

return _quantileSeq(dataArr,probOrN,sorted);}


if(probOrN > 1){

if(!isInteger(probOrN)){
throw new Error('N must be a positive integer');}


var nPlusOne=probOrN + 1;
probArr = new Array(probOrN);
for(var i=0;i < probOrN;) {
probArr[i] = _quantileSeq(dataArr,++i / nPlusOne,sorted);}

return probArr;}}



if(probOrN && probOrN.isBigNumber){
if(probOrN.isNegative()){
throw new Error('N/prob must be non-negative');}


one = probOrN.constructor.ONE;

if(probOrN.lte(one)){

return _quantileSeq(dataArr,probOrN,sorted);}


if(probOrN.gt(one)){

if(!probOrN.isInteger()){
throw new Error('N must be a positive integer');}




var intN=probOrN.toNumber();
if(intN > 4294967295){
throw new Error('N must be less than or equal to 2^32-1, as that is the maximum length of an Array');}


var nPlusOne=new type.BigNumber(intN + 1);
probArr = new Array(intN);
for(var i=0;i < intN;) {
probArr[i] = _quantileSeq(dataArr,new type.BigNumber(++i).div(nPlusOne),sorted);}

return probArr;}}



if(Array.isArray(probOrN)){

probArr = new Array(probOrN.length);
for(var i=0;i < probArr.length;++i) {
var currProb=probOrN[i];
if(isNumber(currProb)){
if(currProb < 0 || currProb > 1){
throw new Error('Probability must be between 0 and 1, inclusive');}}else 

if(currProb && currProb.isBigNumber){
one = currProb.constructor.ONE;
if(currProb.isNegative() || currProb.gt(one)){
throw new Error('Probability must be between 0 and 1, inclusive');}}else 

{
throw new TypeError('Unexpected type of argument in function quantileSeq');}


probArr[i] = _quantileSeq(dataArr,currProb,sorted);}

return probArr;}


throw new TypeError('Unexpected type of argument in function quantileSeq');}


throw new TypeError('Unexpected type of argument in function quantileSeq');}


throw new TypeError('Unexpected type of argument in function quantileSeq');}











function _quantileSeq(array,prob,sorted){
var flat=flatten(array);
var len=flat.length;
if(len === 0){
throw new Error('Cannot calculate quantile of an empty sequence');}


if(isNumber(prob)){
var index=prob * (len - 1);
var fracPart=index % 1;
if(fracPart === 0){
var value=sorted?flat[index]:partitionSelect(flat,index);

validate(value);

return value;}


var integerPart=Math.floor(index);

var left,right;
if(sorted){
left = flat[integerPart];
right = flat[integerPart + 1];}else 
{
right = partitionSelect(flat,integerPart + 1);


left = flat[integerPart];
for(var i=0;i < integerPart;++i) {
if(compare(flat[i],left) > 0){
left = flat[i];}}}




validate(left);
validate(right);


return add(multiply(left,1 - fracPart),multiply(right,fracPart));}



var index=prob.times(len - 1);
if(index.isInteger()){
index = index.toNumber();
var value=sorted?flat[index]:partitionSelect(flat,index);

validate(value);

return value;}


var integerPart=index.floor();
var fracPart=index.minus(integerPart);
var integerPartNumber=integerPart.toNumber();

var left,right;
if(sorted){
left = flat[integerPartNumber];
right = flat[integerPartNumber + 1];}else 
{
right = partitionSelect(flat,integerPartNumber + 1);


left = flat[integerPartNumber];
for(var i=0;i < integerPartNumber;++i) {
if(compare(flat[i],left) > 0){
left = flat[i];}}}




validate(left);
validate(right);


var one=fracPart.constructor.ONE;
return add(multiply(left,one.minus(fracPart)),multiply(right,fracPart));}








var validate=typed({
'number | BigNumber | Unit':function(x){
return x;}});



return quantileSeq;}


exports.name = 'quantileSeq';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/std.js',["mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/statistics/var.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var sqrt=load(require('mathjs/lib/function/arithmetic/sqrt.js'));
var variance=load(require('mathjs/lib/function/statistics/var.js'));









































var std=typed('std',{

'Array | Matrix':_std,


'Array | Matrix, string':_std,


'...':function(){
return _std(Array.prototype.slice.call(arguments));}});



std.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return std;

function _std(array,normalization){
if(array.length == 0){
throw new SyntaxError('Function std requires one or more parameters (0 provided)');}


return sqrt(variance.apply(null,arguments));}}



exports.name = 'std';
exports.factory = factory;
});
__d('mathjs/lib/function/statistics/var.js',["mathjs/lib/utils/collection/deepForEach.js","mathjs/lib/function/arithmetic/addScalar.js","mathjs/lib/function/arithmetic/subtract.js","mathjs/lib/function/arithmetic/multiplyScalar.js","mathjs/lib/function/arithmetic/divideScalar.js"],function(global, require, module, exports) {  'use strict';

var DEFAULT_NORMALIZATION='unbiased';

var deepForEach=require('mathjs/lib/utils/collection/deepForEach.js');

function factory(type,config,load,typed){
var add=load(require('mathjs/lib/function/arithmetic/addScalar.js'));
var subtract=load(require('mathjs/lib/function/arithmetic/subtract.js'));
var multiply=load(require('mathjs/lib/function/arithmetic/multiplyScalar.js'));
var divide=load(require('mathjs/lib/function/arithmetic/divideScalar.js'));











































var variance=typed('variance',{

'Array | Matrix':function(array){
return _var(array,DEFAULT_NORMALIZATION);},



'Array | Matrix, string':_var,


'...':function(){
return _var(arguments,DEFAULT_NORMALIZATION);}});



variance.toTex = '\\mathrm{Var}\\left(${args}\\right)';

return variance;












function _var(array,normalization){
var sum=0;
var num=0;

if(array.length == 0){
throw new SyntaxError('Function var requires one or more parameters (0 provided)');}



deepForEach(array,function(value){
sum = add(sum,value);
num++;});

if(num === 0)throw new Error('Cannot calculate var of an empty array');

var mean=divide(sum,num);


sum = 0;
deepForEach(array,function(value){
var diff=subtract(value,mean);
sum = add(sum,multiply(diff,diff));});


switch(normalization){
case 'uncorrected':
return divide(sum,num);

case 'biased':
return divide(sum,num + 1);

case 'unbiased':
var zero=sum && sum.isBigNumber === true?new type.BigNumber(0):0;
return num == 1?zero:divide(sum,num - 1);

default:
throw new Error('Unknown normalization "' + normalization + '". ' + 
'Choose "unbiased" (default), "uncorrected", or "biased".');}}}




exports.name = 'var';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/index.js',["mathjs/lib/function/trigonometry/acos.js","mathjs/lib/function/trigonometry/acosh.js","mathjs/lib/function/trigonometry/acot.js","mathjs/lib/function/trigonometry/acoth.js","mathjs/lib/function/trigonometry/acsc.js","mathjs/lib/function/trigonometry/acsch.js","mathjs/lib/function/trigonometry/asec.js","mathjs/lib/function/trigonometry/asech.js","mathjs/lib/function/trigonometry/asin.js","mathjs/lib/function/trigonometry/asinh.js","mathjs/lib/function/trigonometry/atan.js","mathjs/lib/function/trigonometry/atan2.js","mathjs/lib/function/trigonometry/atanh.js","mathjs/lib/function/trigonometry/cos.js","mathjs/lib/function/trigonometry/cosh.js","mathjs/lib/function/trigonometry/cot.js","mathjs/lib/function/trigonometry/coth.js","mathjs/lib/function/trigonometry/csc.js","mathjs/lib/function/trigonometry/csch.js","mathjs/lib/function/trigonometry/sec.js","mathjs/lib/function/trigonometry/sech.js","mathjs/lib/function/trigonometry/sin.js","mathjs/lib/function/trigonometry/sinh.js","mathjs/lib/function/trigonometry/tan.js","mathjs/lib/function/trigonometry/tanh.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/trigonometry/acos.js'),
require('mathjs/lib/function/trigonometry/acosh.js'),
require('mathjs/lib/function/trigonometry/acot.js'),
require('mathjs/lib/function/trigonometry/acoth.js'),
require('mathjs/lib/function/trigonometry/acsc.js'),
require('mathjs/lib/function/trigonometry/acsch.js'),
require('mathjs/lib/function/trigonometry/asec.js'),
require('mathjs/lib/function/trigonometry/asech.js'),
require('mathjs/lib/function/trigonometry/asin.js'),
require('mathjs/lib/function/trigonometry/asinh.js'),
require('mathjs/lib/function/trigonometry/atan.js'),
require('mathjs/lib/function/trigonometry/atan2.js'),
require('mathjs/lib/function/trigonometry/atanh.js'),
require('mathjs/lib/function/trigonometry/cos.js'),
require('mathjs/lib/function/trigonometry/cosh.js'),
require('mathjs/lib/function/trigonometry/cot.js'),
require('mathjs/lib/function/trigonometry/coth.js'),
require('mathjs/lib/function/trigonometry/csc.js'),
require('mathjs/lib/function/trigonometry/csch.js'),
require('mathjs/lib/function/trigonometry/sec.js'),
require('mathjs/lib/function/trigonometry/sech.js'),
require('mathjs/lib/function/trigonometry/sin.js'),
require('mathjs/lib/function/trigonometry/sinh.js'),
require('mathjs/lib/function/trigonometry/tan.js'),
require('mathjs/lib/function/trigonometry/tanh.js')];
});
__d('mathjs/lib/function/trigonometry/acos.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acosAsec.js","mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/arithmetic/log.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acosAsec=require('mathjs/lib/utils/bignumber/acosAsec.js');

function factory(type,config,load,typed){
var complexSqrt=typed.find(load(require('mathjs/lib/function/arithmetic/sqrt.js')),['Complex']);
var complexLog=typed.find(load(require('mathjs/lib/function/arithmetic/log.js')),['Complex']);
























var acos=typed('acos',{
'number':function(x){
if(x >= -1 && x <= 1 || config.predictable){
return Math.acos(x);}else 

{
return _complexAcos(new type.Complex(x,0));}},



'Complex':_complexAcos,

'BigNumber':function(x){
return acosAsec(x,type.BigNumber,false);},


'Array | Matrix':function(x){
return deepMap(x,acos);}});









function _complexAcos(x){

var temp1=new type.Complex(
x.im * x.im - x.re * x.re + 1.0,
-2.0 * x.re * x.im);

var temp2=complexSqrt(temp1);
var temp3=new type.Complex(
temp2.re - x.im,
temp2.im + x.re);

var temp4=complexLog(temp3);


return new type.Complex(
1.57079632679489661923 - temp4.im,
temp4.re);}



acos.toTex = '\\cos^{-1}\\left(${args[0]}\\right)';

return acos;}


exports.name = 'acos';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/acosAsec.js',["mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/bignumber/atanAcot.js"],function(global, require, module, exports) {  var pi=require('mathjs/lib/utils/bignumber/constants.js').pi;
var atanAcot=require('mathjs/lib/utils/bignumber/atanAcot.js');













module.exports = function acosAsec(x,BigNumber,reciprocal){
if(reciprocal){
if(x.abs().lt(BigNumber.ONE)){
throw new Error('asec() only has non-complex values for |x| >= 1.');}}else 

if(x.abs().gt(BigNumber.ONE)){
throw new Error('acos() only has non-complex values for |x| <= 1.');}

if(x.eq(-1)){
return pi(BigNumber);}


var precision=BigNumber.precision;
BigNumber.config({precision:precision + 4});

if(reciprocal){
x = BigNumber.ONE.div(x);}


var acos=atanAcot(BigNumber.ONE.minus(x.times(x)).sqrt().
div(x.plus(BigNumber.ONE)),BigNumber).times(2);

BigNumber.config({precision:precision});
return acos.toDP(precision - 1);};
});
__d('mathjs/lib/utils/bignumber/atanAcot.js',["mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/bignumber/asinAcsc.js","mathjs/lib/utils/bignumber/atan.js"],function(global, require, module, exports) {  var constants=require('mathjs/lib/utils/bignumber/constants.js');
var asinAcsc=require('mathjs/lib/utils/bignumber/asinAcsc.js');
var atan=require('mathjs/lib/utils/bignumber/atan.js');









module.exports = function atanAcot(x,BigNumber,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}

if(!reciprocal && x.isZero() || reciprocal && !x.isFinite()){
return new BigNumber(0);}


var precision=BigNumber.precision;
if(!reciprocal && !x.isFinite() || reciprocal && x.isZero()){
var halfPi=constants.pi(BigNumber.constructor({precision:precision + 2})).div(2).toDP(precision - 1);
halfPi.constructor = BigNumber;
halfPi.s = x.s;

return halfPi;}


BigNumber.config({precision:precision + 4});

if(reciprocal){
x = BigNumber.ONE.div(x);}


var absX=x.abs();
if(absX.lte(0.875)){
var ret=atan(x);

ret.constructor = BigNumber;
BigNumber.config({precision:precision});
return ret.toDP(BigNumber.precision - 1);}

if(absX.gte(1.143)){

var halfPi=constants.pi(BigNumber.constructor({precision:precision + 4})).div(2);
var ret=halfPi.minus(atan(BigNumber.ONE.div(absX)));
ret.s = x.s;

ret.constructor = BigNumber;
BigNumber.config({precision:precision});
return ret.toDP(BigNumber.precision - 1);}



x = x.div(x.times(x).plus(1).sqrt());

BigNumber.config({precision:precision});
return asinAcsc(x,BigNumber);};
});
__d('mathjs/lib/utils/bignumber/asinAcsc.js',["mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/bignumber/asin.js","mathjs/lib/utils/bignumber/asinNewton.js"],function(global, require, module, exports) {  var pi=require('mathjs/lib/utils/bignumber/constants.js').pi;
var asin=require('mathjs/lib/utils/bignumber/asin.js');
var asinNewton=require('mathjs/lib/utils/bignumber/asinNewton.js');









module.exports = function asinAcsc(x,BigNumber,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}


var precision=BigNumber.precision;
var absX=x.abs();
if(reciprocal){
if(absX.lt(BigNumber.ONE)){
throw new Error('acsc() only has non-complex values for |x| >= 1.');}


BigNumber.config({precision:precision + 2});
x = BigNumber.ONE.div(x);
BigNumber.config({precision:precision});

absX = x.abs();}else 
if(absX.gt(BigNumber.ONE)){
throw new Error('asin() only has non-complex values for |x| <= 1.');}



if(absX.gt(0.8)){
BigNumber.config({precision:precision + 4});


var sign=x.s;
var halfPi=pi(BigNumber.constructor({precision:precision + 4})).div(2);
x = halfPi.minus(asinAcsc(BigNumber.ONE.minus(x.times(x)).sqrt(),BigNumber));
x.s = sign;

x.constructor = BigNumber;
BigNumber.config({precision:precision});
return x.toDP(precision - 1);}

var wasReduced=absX.gt(0.58);
if(wasReduced){
BigNumber.config({precision:precision + 8});


x = x.div(new BigNumber(2).sqrt().times(BigNumber.ONE.minus(x.times(x)).sqrt().
plus(BigNumber.ONE).sqrt()));

BigNumber.config({precision:precision});}



var ret=precision <= 60 || x.dp() <= Math.log(precision) && x.lt(0.05)?
asin(x,precision):
asinNewton(x,BigNumber);

if(wasReduced){
return ret.times(2);}

return ret;};
});
__d('mathjs/lib/utils/bignumber/asin.js',[],function(global, require, module, exports) {  module.









exports = function asinTaylor(x,precision){
var BigNumber=x.constructor;
BigNumber.config({precision:precision + Math.log(precision) | 0 + 4});

var one=new BigNumber(1);
var y=x;
var yPrev=NaN;
var x2=x.times(x);
var polyNum=x;
var constNum=new BigNumber(one);
var constDen=new BigNumber(one);

var bigK=new BigNumber(one);
for(var k=3;!y.equals(yPrev);k += 2) {
polyNum = polyNum.times(x2);

constNum = constNum.times(bigK);
constDen = constDen.times(bigK.plus(one));

yPrev = y;
bigK = new BigNumber(k);
y = y.plus(polyNum.times(constNum).div(bigK.times(constDen)));}


BigNumber.config({precision:precision});
return y.toDP(precision - 1);};
});
__d('mathjs/lib/utils/bignumber/asinNewton.js',["mathjs/lib/utils/bignumber/cosSinSecCsc.js","mathjs/lib/utils/bignumber/sinToCos.js"],function(global, require, module, exports) {  var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');
var sinToCos=require('mathjs/lib/utils/bignumber/sinToCos.js');














module.exports = function asinNewton(x,BigNumber){
var oldPrecision=BigNumber.precision;


var tolerance=-(oldPrecision + 4);
var maxp=oldPrecision + 8 - x.e;
var localPrecision=25 - x.e;
var maxIter=Math.max(Math.log(oldPrecision + 2) * 1.442695 | 0 + 5,5);
BigNumber.config({precision:localPrecision});

var i=0;
var curr=new BigNumber(Math.asin(x.toNumber()) + '');
do {
var tmp0=cosSinSecCsc(curr,BigNumber,1,false);
var tmp1=sinToCos(tmp0);
if(!tmp0.isZero()){
tmp0.s = curr.s;}


var tmp2=tmp0.minus(x).div(tmp1);
curr = curr.minus(tmp2);

localPrecision = Math.min(2 * localPrecision,maxp);
BigNumber.config({precision:localPrecision});}while(
2 * tmp2.e >= tolerance && !tmp2.isZero() && ++i <= maxIter);

if(i == maxIter){
throw new Error('asin() failed to converge to the requested accuracy.' + 
'Try with a higher precision.');}


BigNumber.config({precision:oldPrecision});
return curr.toDP(oldPrecision - 1);};
});
__d('mathjs/lib/utils/bignumber/cosSinSecCsc.js',["mathjs/lib/utils/bignumber/reduceToPeriod.js","mathjs/lib/utils/bignumber/cosSin.js"],function(global, require, module, exports) {  var reduceToPeriod=require('mathjs/lib/utils/bignumber/reduceToPeriod.js');
var cosSin=require('mathjs/lib/utils/bignumber/cosSin.js');















module.exports = function cosSinSecCsc(x,BigNumber,mode,reciprocal){
if(x.isNaN() || !x.isFinite()){
return new BigNumber(NaN);}

var precision=BigNumber.precision;


var y=new BigNumber(x);


var isNeg=y.isNegative();
if(isNeg){
y.s = -y.s;}



var precPlusGuardDigits=precision + (Math.log(precision) | 0) + 3;
BigNumber.config({precision:precPlusGuardDigits});

y = reduceToPeriod(y,BigNumber.constructor({precision:precPlusGuardDigits}),mode);
y[0].constructor = BigNumber;
if(y[1]){
y = y[0];
if(reciprocal && y.isZero()){
y = new BigNumber(Infinity);}


BigNumber.config({precision:precision});
return y;}


var ret;
y = y[0];
if(mode){
ret = cosSin(y.div(3125),mode);
BigNumber.config({precision:Math.min(precPlusGuardDigits,precision + 15)});

var five=new BigNumber(5);
var sixteen=new BigNumber(16);
var twenty=new BigNumber(20);
for(var i=0;i < 5;++i) {
var ret2=ret.times(ret);
var ret3=ret2.times(ret);
var ret5=ret3.times(ret2);
ret = sixteen.times(ret5).minus(
twenty.times(ret3)).plus(
five.times(ret));}


if(isNeg){
ret.s = -ret.s;}}else 

{
var div_factor,loops;
if(y.abs().lt(BigNumber.ONE)){
div_factor = 64;
loops = 3;}else 
{
div_factor = 256;
loops = 4;}


ret = cosSin(y.div(div_factor),mode);
BigNumber.config({precision:Math.min(precPlusGuardDigits,precision + 8)});

var eight=new BigNumber(8);
for(;loops > 0;--loops) {
var ret2=ret.times(ret);
var ret4=ret2.times(ret2);
ret = eight.times(ret4.minus(ret2)).plus(BigNumber.ONE);}}



if(reciprocal){
ret = ret.e <= -precision?
new BigNumber(Infinity):
BigNumber.ONE.div(ret);}


BigNumber.config({precision:precision});
return ret.toDP(precision - 1);};
});
__d('mathjs/lib/utils/bignumber/reduceToPeriod.js',["mathjs/lib/utils/bignumber/constants.js"],function(global, require, module, exports) {  var constants=require('mathjs/lib/utils/bignumber/constants.js');









module.exports = function reduceToPeriod(x,BigNumber,mode){
var pi=constants.pi(BigNumber.constructor({precision:BigNumber.precision + 2}));
var tau=constants.tau(BigNumber);



if(x.abs().lte(pi.toDP(x.dp()))){
return [x,false];}



if(x.dp() > 0 && x.div(pi.toDP(x.dp())).toNumber() % 2 == 0){
return [new BigNumber(mode ^ 1),true];}


var y=x.mod(tau);


if(x.dp() > 0 && y.toDP(x.dp(),1).isZero()){
return [new BigNumber(mode ^ 1),true];}


if(y.gt(pi)){
if(mode){

y = y.minus(pi);
y.s = -y.s;}else 
{

y = tau.minus(y);}}



y.constructor = x.constructor;
return [y,false];};
});
__d('mathjs/lib/utils/bignumber/cosSin.js',[],function(global, require, module, exports) {  module.












exports = function cosSin(x,mode){
var one=x.constructor.ONE;

var y=x;
var yPrev=NaN;
var x2=x.times(x);
var num=mode?y:y = one;
var den=one;
var add=true;

for(var k=mode;!y.equals(yPrev);k += 2) {
num = num.times(x2);
den = den.times(k + 1).times(k + 2);

yPrev = y;
add = !add;
y = add?y.plus(num.div(den)):y.minus(num.div(den));}


return y;};
});
__d('mathjs/lib/utils/bignumber/sinToCos.js',[],function(global, require, module, exports) {  module.







exports = function sinToCos(value){
var BigNumber=value.constructor;
var precision=BigNumber.precision;
BigNumber.config({precision:precision + 2});

var ret=BigNumber.ONE.minus(value.times(value)).sqrt();

BigNumber.config({precision:precision});
return ret.toDP(precision - 1);};
});
__d('mathjs/lib/function/trigonometry/acosh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js","mathjs/lib/function/trigonometry/acos.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acoshAsinhAsechAcsch=require('mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js');

function factory(type,config,load,typed){
var complexAcos=typed.find(load(require('mathjs/lib/function/trigonometry/acos.js')),['Complex']);






















var acosh=typed('acosh',{
'number':function(x){
if(x >= 1 || config.predictable){
return Math.log(Math.sqrt(x * x - 1) + x);}

if(x <= -1){
return new type.Complex(Math.log(Math.sqrt(x * x - 1) - x),Math.PI);}

return _complexAcosh(new type.Complex(x,0));},


'Complex':_complexAcosh,

'BigNumber':function(x){
return acoshAsinhAsechAcsch(x,type.BigNumber,false,false);},


'Array | Matrix':function(x){
return deepMap(x,acosh);}});









function _complexAcosh(x){


var temp;
var res=complexAcos(x);
if(res.im <= 0){
temp = res.re;
res.re = -res.im;
res.im = temp;}else 
{
temp = res.im;
res.im = -res.re;
res.re = temp;}


return res;}


acosh.toTex = '\\cosh^{-1}\\left(${args[0]}\\right)';

return acosh;}


exports.name = 'acosh';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js',[],function(global, require, module, exports) {  module.
















exports = function acoshAsinhAsechAcsch(x,BigNumber,mode,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}

if(reciprocal && x.isZero()){
return new BigNumber(Infinity);}

if(!mode){
if(reciprocal){
if(x.isNegative() || x.gt(BigNumber.ONE)){
throw new Error('asech() only has non-complex values for 0 <= x <= 1.');}}else 

if(x.lt(BigNumber.ONE)){
throw new Error('acosh() only has non-complex values for x >= 1.');}}



var precision=BigNumber.precision;
BigNumber.config({precision:precision + 4});

var y=new BigNumber(x);
y.constructor = BigNumber;

if(reciprocal){
y = BigNumber.ONE.div(y);}


var x2PlusOrMinus=mode?y.times(y).plus(BigNumber.ONE):y.times(y).minus(BigNumber.ONE);
var ret=y.plus(x2PlusOrMinus.sqrt()).ln();

BigNumber.config({precision:precision});
return new BigNumber(ret.toPrecision(precision));};
});
__d('mathjs/lib/function/trigonometry/acot.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/atanAcot.js","mathjs/lib/function/trigonometry/atan.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var atanAcot=require('mathjs/lib/utils/bignumber/atanAcot.js');

var HALF_PI=1.5707963267948966;

function factory(type,config,load,typed){
var complexAtan=typed.find(load(require('mathjs/lib/function/trigonometry/atan.js')),['Complex']);
























var acot=typed('acot',{
'number':function(x){
return x?Math.atan(1 / x):HALF_PI;},


'Complex':function(x){
if(x.im == 0){
return new type.Complex(x.re?Math.atan(1 / x.re):HALF_PI,0);}


var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re = x.re / den,
x.im = -x.im / den):
new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);

return complexAtan(x);},


'BigNumber':function(x){
return atanAcot(x,type.BigNumber,true);},


'Array | Matrix':function(x){
return deepMap(x,acot);}});



acot.toTex = '\\cot^{-1}\\left(${args[0]}\\right)';

return acot;}


exports.name = 'acot';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/atan.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/atanAcot.js","mathjs/lib/function/arithmetic/log.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var atanAcot=require('mathjs/lib/utils/bignumber/atanAcot.js');

function factory(type,config,load,typed){
var complexLog=typed.find(load(require('mathjs/lib/function/arithmetic/log.js')),['Complex']);
























var atan=typed('atan',{
'number':function(x){
return Math.atan(x);},


'Complex':function(x){
if(x.re == 0){
if(x.im == 1){
return new type.Complex(0,Infinity);}

if(x.im == -1){
return new type.Complex(0,-Infinity);}}




var re=x.re;
var im=x.im;
var den=re * re + (1.0 - im) * (1.0 - im);

var temp1=new type.Complex(
(1.0 - im * im - re * re) / den,
-2.0 * re / den);

var temp2=complexLog(temp1);

return new type.Complex(
-0.5 * temp2.im,
0.5 * temp2.re);},



'BigNumber':function(x){
return atanAcot(x,type.BigNumber,false);},


'Array | Matrix':function(x){

return deepMap(x,atan,true);}});



atan.toTex = '\\tan^{-1}\\left(${args[0]}\\right)';

return atan;}


exports.name = 'atan';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/acoth.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/atanhAcoth.js","mathjs/lib/function/trigonometry/atanh.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var atanhAcoth=require('mathjs/lib/utils/bignumber/atanhAcoth.js');

var HALF_PI=1.5707963267948966;

function factory(type,config,load,typed){
var atanh=typed.find(load(require('mathjs/lib/function/trigonometry/atanh.js')),['Complex']);






















var acoth=typed('acoth',{
'number':function(x){
if(x >= 1 || x <= -1 || config.predictable){
return isFinite(x)?(Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2:0;}

return x !== 0?_complexAcoth(new type.Complex(x,0)):new type.Complex(0,HALF_PI);},


'Complex':_complexAcoth,

'BigNumber':function(x){
return atanhAcoth(x,type.BigNumber,true);},


'Array | Matrix':function(x){
return deepMap(x,acoth);}});









function _complexAcoth(x){
if(x.re == 0 && x.im == 0){
return new type.Complex(0,HALF_PI);}



var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re / den,
-x.im / den):

new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);


return atanh(x);}


acoth.toTex = '\\coth^{-1}\\left(${args[0]}\\right)';

return acoth;}


exports.name = 'acoth';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/atanhAcoth.js',[],function(global, require, module, exports) {  module.












exports = function atanhAcoth(x,BigNumber,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}


var absX=x.abs();
if(absX.eq(BigNumber.ONE)){
return new BigNumber(x.isNegative()?-Infinity:Infinity);}

if(absX.gt(BigNumber.ONE)){
if(!reciprocal){
throw new Error('atanh() only has non-complex values for |x| <= 1.');}}else 

if(reciprocal){
throw new Error('acoth() has complex values for |x| < 1.');}


if(x.isZero()){
return new BigNumber(0);}


var precision=BigNumber.precision;
BigNumber.config({precision:precision + 4});

var y=new BigNumber(x);
y.constructor = BigNumber;

if(reciprocal){
y = BigNumber.ONE.div(y);}

var ret=BigNumber.ONE.plus(y).div(BigNumber.ONE.minus(y)).ln().div(2);

BigNumber.config({precision:precision});
return new BigNumber(ret.toPrecision(precision));};
});
__d('mathjs/lib/function/trigonometry/atanh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/atanhAcoth.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var atanhAcoth=require('mathjs/lib/utils/bignumber/atanhAcoth.js');

function factory(type,config,load,typed){





















var atanh=typed('atanh',{
'number':function(x){
if(x <= 1 && x >= -1 || config.predictable){
return Math.log((1 + x) / (1 - x)) / 2;}

return _complexAtanh(new type.Complex(x,0));},


'Complex':_complexAtanh,

'BigNumber':function(x){
return atanhAcoth(x,type.BigNumber,false);},


'Array | Matrix':function(x){

return deepMap(x,atanh,true);}});









function _complexAtanh(x){

var noIM=x.re > 1 && x.im == 0;

var oneMinus=1 - x.re;
var onePlus=1 + x.re;
var den=oneMinus * oneMinus + x.im * x.im;
x = den != 0?
new type.Complex(
(onePlus * oneMinus - x.im * x.im) / den,
(x.im * oneMinus + onePlus * x.im) / den):

new type.Complex(
x.re != -1?x.re / 0:0,
x.im != 0?x.im / 0:0);


var temp=x.re;
x.re = Math.log(Math.sqrt(x.re * x.re + x.im * x.im)) / 2;
x.im = Math.atan2(x.im,temp) / 2;

if(noIM){
x.im = -x.im;}

return x;}


atanh.toTex = '\\tanh^{-1}\\left(${args[0]}\\right)';

return atanh;}


exports.name = 'atanh';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/acsc.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/asinAcsc.js","mathjs/lib/function/trigonometry/asin.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var asinAcsc=require('mathjs/lib/utils/bignumber/asinAcsc.js');

var HALF_PI=1.5707963267948966;

function factory(type,config,load,typed){
var complexAsin=typed.find(load(require('mathjs/lib/function/trigonometry/asin.js')),['Complex']);
























var acsc=typed('acsc',{
'number':function(x){
if(x <= -1 || x >= 1 || config.predictable){
return Math.asin(1 / x);}

return _complexAcsc(new type.Complex(x,0));},


'Complex':_complexAcsc,

'BigNumber':function(x){
return asinAcsc(x,type.BigNumber,true);},


'Array | Matrix':function(x){
return deepMap(x,acsc);}});









function _complexAcsc(x){
if(x.re == 0 && x.im == 0){
return new type.Complex(HALF_PI,Infinity);}


var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re = x.re / den,
x.im = -x.im / den):
new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);

return complexAsin(x);}


acsc.toTex = '\\csc^{-1}\\left(${args[0]}\\right)';

return acsc;}


exports.name = 'acsc';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/asin.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/asinAcsc.js","mathjs/lib/function/arithmetic/sqrt.js","mathjs/lib/function/arithmetic/log.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var asinAcsc=require('mathjs/lib/utils/bignumber/asinAcsc.js');

function factory(type,config,load,typed){
var complexSqrt=typed.find(load(require('mathjs/lib/function/arithmetic/sqrt.js')),['Complex']);
var complexLog=typed.find(load(require('mathjs/lib/function/arithmetic/log.js')),['Complex']);
























var asin=typed('asin',{
'number':function(x){
if(x >= -1 && x <= 1 || config.predictable){
return Math.asin(x);}else 

{
return _complexAsin(new type.Complex(x,0));}},



'Complex':_complexAsin,

'BigNumber':function(x){
return asinAcsc(x,type.BigNumber,false);},


'Array | Matrix':function(x){

return deepMap(x,asin,true);}});









function _complexAsin(x){

var re=x.re;
var im=x.im;
var temp1=new type.Complex(
im * im - re * re + 1.0,
-2.0 * re * im);

var temp2=complexSqrt(temp1);
var temp3=new type.Complex(
temp2.re - im,
temp2.im + re);

var temp4=complexLog(temp3);

return new type.Complex(temp4.im,-temp4.re);}


asin.toTex = '\\sin^{-1}\\left(${args[0]}\\right)';

return asin;}


exports.name = 'asin';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/acsch.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js","mathjs/lib/function/trigonometry/asinh.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acoshAsinhAsechAcsch=require('mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js');

function factory(type,config,load,typed){
var asinh=typed.find(load(require('mathjs/lib/function/trigonometry/asinh.js')),['Complex']);






















var acsch=typed('acsch',{
'number':function(x){
x = 1 / x;
return Math.log(x + Math.sqrt(x * x + 1));},


'Complex':function(x){
if(x.im == 0){
x = x.re != 0?
Math.log(x.re + Math.sqrt(x.re * x.re + 1)):
Infinity;
return new type.Complex(x,0);}



var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re / den,
-x.im / den):

new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);


return asinh(x);},


'BigNumber':function(x){
return acoshAsinhAsechAcsch(x,type.BigNumber,true,true);},


'Array | Matrix':function(x){
return deepMap(x,acsch);}});



acsch.toTex = '\\mathrm{csch}^{-1}\\left(${args[0]}\\right)';

return acsch;}


exports.name = 'acsch';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/asinh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js","mathjs/lib/function/trigonometry/asin.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acoshAsinhAsechAcsch=require('mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js');

function factory(type,config,load,typed){
var complexAsin=typed.find(load(require('mathjs/lib/function/trigonometry/asin.js')),['Complex']);






















var asinh=typed('asinh',{
'number':function(x){
return Math.log(Math.sqrt(x * x + 1) + x);},


'Complex':function(x){

var temp=x.im;
x.im = -x.re;
x.re = temp;

var res=complexAsin(x);


x.re = -x.im;
x.im = temp;

temp = res.re;
res.re = -res.im;
res.im = temp;

return res;},


'BigNumber':function(x){
return acoshAsinhAsechAcsch(x,type.BigNumber,true,false);},


'Array | Matrix':function(x){

return deepMap(x,asinh,true);}});



asinh.toTex = '\\sinh^{-1}\\left(${args[0]}\\right)';

return asinh;}


exports.name = 'asinh';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/asec.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acosAsec.js","mathjs/lib/function/trigonometry/acos.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acosAsec=require('mathjs/lib/utils/bignumber/acosAsec.js');

function factory(type,config,load,typed){
var complexAcos=typed.find(load(require('mathjs/lib/function/trigonometry/acos.js')),['Complex']);
























var asec=typed('asec',{
'number':function(x){
if(x <= -1 || x >= 1 || config.predictable){
return Math.acos(1 / x);}

return _complexAsec(new type.Complex(x,0));},


'Complex':_complexAsec,

'BigNumber':function(x){
return acosAsec(x,type.BigNumber,true);},


'Array | Matrix':function(x){
return deepMap(x,asec);}});









function _complexAsec(x){
if(x.re == 0 && x.im == 0){
return new type.Complex(0,Infinity);}


var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re = x.re / den,
x.im = -x.im / den):
new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);

return complexAcos(x);}


asec.toTex = '\\sec^{-1}\\left(${args[0]}\\right)';

return asec;}


exports.name = 'asec';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/asech.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js","mathjs/lib/function/trigonometry/acosh.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var acoshAsinhAsechAcsch=require('mathjs/lib/utils/bignumber/acoshAsinhAsechAcsch.js');

function factory(type,config,load,typed){
var acosh=typed.find(load(require('mathjs/lib/function/trigonometry/acosh.js')),['Complex']);






















var asech=typed('asech',{
'number':function(x){
if(x <= 1 && x >= -1 || config.predictable){
x = 1 / x;

var ret=Math.sqrt(x * x - 1);
if(x > 0 || config.predictable){
return Math.log(ret + x);}


return new type.Complex(Math.log(ret - x),Math.PI);}


return _complexAsech(new type.Complex(x,0));},


'Complex':_complexAsech,

'BigNumber':function(x){
return acoshAsinhAsechAcsch(x,type.BigNumber,false,true);},


'Array | Matrix':function(x){
return deepMap(x,asech);}});









function _complexAsech(x){
if(x.re == 0 && x.im == 0){
return new type.Complex(Infinity,0);}



var den=x.re * x.re + x.im * x.im;
x = den != 0?
new type.Complex(
x.re / den,
-x.im / den):

new type.Complex(
x.re != 0?x.re / 0:0,
x.im != 0?-(x.im / 0):0);


return acosh(x);}


asech.toTex = '\\mathrm{sech}^{-1}\\left(${args[0]}\\right)';

return asech;}


exports.name = 'asech';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/atan2.js',["mathjs/lib/utils/bignumber/atan2.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm02.js","mathjs/lib/type/matrix/utils/algorithm03.js","mathjs/lib/type/matrix/utils/algorithm09.js","mathjs/lib/type/matrix/utils/algorithm11.js","mathjs/lib/type/matrix/utils/algorithm12.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

var bigAtan2=require('mathjs/lib/utils/bignumber/atan2.js');

function factory(type,config,load,typed){

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm02=load(require('mathjs/lib/type/matrix/utils/algorithm02.js'));
var algorithm03=load(require('mathjs/lib/type/matrix/utils/algorithm03.js'));
var algorithm09=load(require('mathjs/lib/type/matrix/utils/algorithm09.js'));
var algorithm11=load(require('mathjs/lib/type/matrix/utils/algorithm11.js'));
var algorithm12=load(require('mathjs/lib/type/matrix/utils/algorithm12.js'));
var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));






























var atan2=typed('atan2',{

'number, number':Math.atan2,



'BigNumber, BigNumber':function(y,x){
return bigAtan2(y,x,type.BigNumber);},


'Matrix, Matrix':function(x,y){

var c;


switch(x.storage()){
case 'sparse':
switch(y.storage()){
case 'sparse':

c = algorithm09(x,y,atan2,false);
break;
default:

c = algorithm02(y,x,atan2,true);
break;}

break;
default:
switch(y.storage()){
case 'sparse':

c = algorithm03(x,y,atan2,false);
break;
default:

c = algorithm13(x,y,atan2);
break;}

break;}

return c;},


'Array, Array':function(x,y){

return atan2(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return atan2(matrix(x),y);},


'Matrix, Array':function(x,y){

return atan2(x,matrix(y));},


'Matrix, number | BigNumber':function(x,y){

var c;

switch(x.storage()){
case 'sparse':
c = algorithm11(x,y,atan2,false);
break;
default:
c = algorithm14(x,y,atan2,false);
break;}

return c;},


'number | BigNumber, Matrix':function(x,y){

var c;

switch(y.storage()){
case 'sparse':
c = algorithm12(y,x,atan2,true);
break;
default:
c = algorithm14(y,x,atan2,true);
break;}

return c;},


'Array, number | BigNumber':function(x,y){

return algorithm14(matrix(x),y,atan2,false).valueOf();},


'number | BigNumber, Array':function(x,y){

return algorithm14(matrix(y),x,atan2,true).valueOf();}});



atan2.toTex = '\\mathrm{atan2}\\left(${args}\\right)';

return atan2;}


exports.name = 'atan2';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/atan2.js',["mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/bignumber/atanAcot.js"],function(global, require, module, exports) {  var constants=require('mathjs/lib/utils/bignumber/constants.js');
var atanAcot=require('mathjs/lib/utils/bignumber/atanAcot.js');









module.exports = function arctan2(y,x,BigNumber){
var precision=BigNumber.precision;

if(x.isZero()){
if(y.isZero()){
return new BigNumber(NaN);}


var halfPi=constants.pi(BigNumber.constructor({precision:precision + 2})).div(2).toDP(precision - 1);
halfPi.constructor = BigNumber;
halfPi.s = y.s;

return halfPi;}


BigNumber.config({precision:precision + 2});

var ret=atanAcot(y.div(x),BigNumber,false);
if(x.isNegative()){
var pi=constants.pi(BigNumber);
ret = y.isNegative()?ret.minus(pi):ret.plus(pi);}


ret.constructor = BigNumber;
BigNumber.config({precision:precision});
return ret.toDP(precision - 1);};
});
__d('mathjs/lib/function/trigonometry/cos.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/cosSinSecCsc.js","mathjs/lib/function/trigonometry/cosh.js","mathjs/lib/function/trigonometry/sinh.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');

function factory(type,config,load,typed){
var cosh=typed.find(load(require('mathjs/lib/function/trigonometry/cosh.js')),['number']);
var sinh=typed.find(load(require('mathjs/lib/function/trigonometry/sinh.js')),['number']);



























var cos=typed('cos',{
'number':Math.cos,

'Complex':function(x){

return new type.Complex(
Math.cos(x.re) * cosh(-x.im),
Math.sin(x.re) * sinh(-x.im));},



'BigNumber':function(x){
return cosSinSecCsc(x,type.BigNumber,0,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function cos is no angle');}

return Math.cos(x.value);},


'Array | Matrix':function(x){
return deepMap(x,cos);}});



cos.toTex = '\\cos\\left(${args[0]}\\right)';

return cos;}


exports.name = 'cos';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/cosh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/coshSinhCschSech.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var coshSinhCschSech=require('mathjs/lib/utils/bignumber/coshSinhCschSech.js');

function factory(type,config,load,typed){





















var cosh=typed('cosh',{
'number':_cosh,

'Complex':function(x){
var ep=Math.exp(x.re);
var en=Math.exp(-x.re);
return new type.Complex(Math.cos(x.im) * (ep + en) / 2,Math.sin(x.im) * (ep - en) / 2);},


'BigNumber':function(x){
return coshSinhCschSech(x,type.BigNumber,false,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function cosh is no angle');}

return _cosh(x.value);},


'Array | Matrix':function(x){
return deepMap(x,cosh);}});



cosh.toTex = '\\cosh\\left(${args[0]}\\right)';

return cosh;}








function _cosh(x){
return (Math.exp(x) + Math.exp(-x)) / 2;}


exports.name = 'cosh';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/coshSinhCschSech.js',[],function(global, require, module, exports) {  module.




















exports = function coshSinhSschSech(x,BigNumber,mode,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}

if(!x.isFinite()){
if(reciprocal){
return new BigNumber(0);}

return new BigNumber(mode?x:Infinity);}


var precision=BigNumber.precision;
BigNumber.config({precision:precision + 4});

var y=new BigNumber(x);
y.constructor = BigNumber;

y = y.exp();
y = mode?y.minus(BigNumber.ONE.div(y)):y.plus(BigNumber.ONE.div(y));
y = reciprocal?new BigNumber(2).div(y):y.div(2);

BigNumber.config({precision:precision});
return new BigNumber(y.toPrecision(precision));};
});
__d('mathjs/lib/function/trigonometry/sinh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/coshSinhCschSech.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var coshSinhCschSech=require('mathjs/lib/utils/bignumber/coshSinhCschSech.js');

function factory(type,config,load,typed){





















var sinh=typed('sinh',{
'number':_sinh,

'Complex':function(x){
var cim=Math.cos(x.im);
var sim=Math.sin(x.im);
var ep=Math.exp(x.re);
var en=Math.exp(-x.re);
return new type.Complex(cim * (ep - en) / 2,sim * (ep + en) / 2);},


'BigNumber':function(x){
return coshSinhCschSech(x,type.BigNumber,true,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function sinh is no angle');}

return _sinh(x.value);},


'Array | Matrix':function(x){

return deepMap(x,sinh,true);}});



sinh.toTex = '\\sinh\\left(${args[0]}\\right)';

return sinh;}








function _sinh(x){
if(Math.abs(x) < 1){
return x + x * x * x / 6 + x * x * x * x * x / 120;}else 
{
return (Math.exp(x) - Math.exp(-x)) / 2;}}



exports.name = 'sinh';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/cot.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/tanCot.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var tanCot=require('mathjs/lib/utils/bignumber/tanCot.js');

function factory(type,config,load,typed){





















var cot=typed('cot',{
'number':function(x){
return 1 / Math.tan(x);},


'Complex':function(x){
var den=
Math.exp(-4 * x.im) - 
2 * Math.exp(-2 * x.im) * Math.cos(2 * x.re) + 1;

return new type.Complex(
2 * Math.exp(-2 * x.im) * Math.sin(2 * x.re) / den,
(Math.exp(-4 * x.im) - 1) / den);},



'BigNumber':function(x){
return tanCot(x,type.BigNumber,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function cot is no angle');}

return 1 / Math.tan(x.value);},


'Array | Matrix':function(x){
return deepMap(x,cot);}});



cot.toTex = '\\cot\\left(${args[0]}\\right)';

return cot;}


exports.name = 'cot';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/tanCot.js',["mathjs/lib/utils/bignumber/constants.js","mathjs/lib/utils/bignumber/cosSinSecCsc.js","mathjs/lib/utils/bignumber/sinToCos.js","mathjs/lib/utils/bignumber/reduceToPeriod.js"],function(global, require, module, exports) {  var constants=require('mathjs/lib/utils/bignumber/constants.js');
var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');
var sinToCos=require('mathjs/lib/utils/bignumber/sinToCos.js');
var reduceToPeriod=require('mathjs/lib/utils/bignumber/reduceToPeriod.js');













module.exports = function tanCot(x,BigNumber,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}


var precision=BigNumber.precision;
var pi=constants.pi(BigNumber.constructor({precision:precision + 2}));
var halfPi=pi.div(2).toDP(precision - 1);
pi = pi.toDP(precision - 1);

var y=reduceToPeriod(x,BigNumber,1)[0];
if(y.abs().eq(pi)){
return new BigNumber(Infinity);}


BigNumber.config({precision:precision + 4});
var sin=cosSinSecCsc(y,BigNumber,1,false);
var cos=sinToCos(sin);

sin = sin.toDP(precision);
cos = cos.toDP(precision);


if(y.eq(x)){
if(y.gt(halfPi)){
cos.s = -cos.s;}}else 

if(pi.minus(y.abs()).gt(halfPi)){
cos.s = -cos.s;}


var tan=reciprocal?cos.div(sin):sin.div(cos);

BigNumber.config({precision:precision});
return new BigNumber(tan.toPrecision(precision));};
});
__d('mathjs/lib/function/trigonometry/coth.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/tanhCoth.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var tanhCoth=require('mathjs/lib/utils/bignumber/tanhCoth.js');

function factory(type,config,load,typed){























var coth=typed('coth',{
'number':_coth,

'Complex':function(x){
var r=Math.exp(2 * x.re);
var re=r * Math.cos(2 * x.im);
var im=r * Math.sin(2 * x.im);
var den=(re - 1) * (re - 1) + im * im;
return new type.Complex(
((re + 1) * (re - 1) + im * im) / den,
-2 * im / den);},



'BigNumber':function(x){
return tanhCoth(x,type.BigNumber,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function coth is no angle');}

return _coth(x.value);},


'Array | Matrix':function(x){
return deepMap(x,coth);}});



coth.toTex = '\\coth\\left(${args[0]}\\right)';

return coth;}








function _coth(x){
var e=Math.exp(2 * x);
return (e + 1) / (e - 1);}


exports.name = 'coth';
exports.factory = factory;
});
__d('mathjs/lib/utils/bignumber/tanhCoth.js',[],function(global, require, module, exports) {  module.















exports = function tanhCoth(x,BigNumber,reciprocal){
if(x.isNaN()){
return new BigNumber(NaN);}

if(!x.isFinite()){
return new BigNumber(x.s);}


var precision=BigNumber.precision;
BigNumber.config({precision:precision + 4});

var y=new BigNumber(x);
y.constructor = BigNumber;

var posExp=y.exp();
var negExp=BigNumber.ONE.div(posExp);
var ret=posExp.minus(negExp);
ret = reciprocal?posExp.plus(negExp).div(ret):ret.div(posExp.plus(negExp));

BigNumber.config({precision:precision});
return ret.toDP(precision - 1);};
});
__d('mathjs/lib/function/trigonometry/csc.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/cosSinSecCsc.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');

function factory(type,config,load,typed){





















var csc=typed('csc',{
'number':function(x){
return 1 / Math.sin(x);},


'Complex':function(x){

var den=
0.25 * (Math.exp(-2 * x.im) + Math.exp(2 * x.im)) - 
0.5 * Math.cos(2 * x.re);

return new type.Complex(
0.5 * Math.sin(x.re) * (Math.exp(-x.im) + Math.exp(x.im)) / den,
0.5 * Math.cos(x.re) * (Math.exp(-x.im) - Math.exp(x.im)) / den);},



'BigNumber':function(x){
return cosSinSecCsc(x,type.BigNumber,1,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function csc is no angle');}

return 1 / Math.sin(x.value);},


'Array | Matrix':function(x){
return deepMap(x,csc);}});



csc.toTex = '\\csc\\left(${args[0]}\\right)';

return csc;}


exports.name = 'csc';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/csch.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/coshSinhCschSech.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var coshSinhCschSech=require('mathjs/lib/utils/bignumber/coshSinhCschSech.js');
var sign=require('mathjs/lib/utils/number.js').sign;

function factory(type,config,load,typed){























var csch=typed('csch',{
'number':_csch,

'Complex':function(x){
var ep=Math.exp(x.re);
var en=Math.exp(-x.re);
var re=Math.cos(x.im) * (ep - en);
var im=Math.sin(x.im) * (ep + en);
var den=re * re + im * im;
return new type.Complex(2 * re / den,-2 * im / den);},


'BigNumber':function(x){
return coshSinhCschSech(x,type.BigNumber,true,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function csch is no angle');}

return _csch(x.value);},


'Array | Matrix':function(x){
return deepMap(x,csch);}});



csch.toTex = '\\mathrm{csch}\\left(${args[0]}\\right)';

return csch;}








function _csch(x){

if(x == 0){
return Number.POSITIVE_INFINITY;}else 

{
return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * sign(x);}}



exports.name = 'csch';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/sec.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/cosSinSecCsc.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');

function factory(type,config,load,typed){





















var sec=typed('sec',{
'number':function(x){
return 1 / Math.cos(x);},


'Complex':function(x){

var den=
0.25 * (Math.exp(-2 * x.im) + Math.exp(2 * x.im)) + 
0.5 * Math.cos(2 * x.re);

return new type.Complex(
0.5 * Math.cos(x.re) * (Math.exp(-x.im) + Math.exp(x.im)) / den,
0.5 * Math.sin(x.re) * (Math.exp(x.im) - Math.exp(-x.im)) / den);},



'BigNumber':function(x){
return cosSinSecCsc(x,type.BigNumber,0,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function sec is no angle');}

return 1 / Math.cos(x.value);},


'Array | Matrix':function(x){
return deepMap(x,sec);}});



sec.toTex = '\\sec\\left(${args[0]}\\right)';

return sec;}


exports.name = 'sec';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/sech.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/coshSinhCschSech.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var coshSinhCschSech=require('mathjs/lib/utils/bignumber/coshSinhCschSech.js');

function factory(type,config,load,typed){























var sech=typed('sech',{
'number':_sech,

'Complex':function(x){
var ep=Math.exp(x.re);
var en=Math.exp(-x.re);
var re=Math.cos(x.im) * (ep + en);
var im=Math.sin(x.im) * (ep - en);
var den=re * re + im * im;
return new type.Complex(2 * re / den,-2 * im / den);},


'BigNumber':function(x){
return coshSinhCschSech(x,type.BigNumber,false,true);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function sech is no angle');}

return _sech(x.value);},


'Array | Matrix':function(x){
return deepMap(x,sech);}});



sech.toTex = '\\mathrm{sech}\\left(${args[0]}\\right)';

return sech;}








function _sech(x){
return 2 / (Math.exp(x) + Math.exp(-x));}


exports.name = 'sech';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/sin.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/cosSinSecCsc.js","mathjs/lib/function/trigonometry/cosh.js","mathjs/lib/function/trigonometry/sinh.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var cosSinSecCsc=require('mathjs/lib/utils/bignumber/cosSinSecCsc.js');

function factory(type,config,load,typed){
var cosh=typed.find(load(require('mathjs/lib/function/trigonometry/cosh.js')),['number']);
var sinh=typed.find(load(require('mathjs/lib/function/trigonometry/sinh.js')),['number']);



























var sin=typed('sin',{
'number':Math.sin,

'Complex':function(x){
return new type.Complex(
Math.sin(x.re) * cosh(-x.im),
Math.cos(x.re) * sinh(x.im));},



'BigNumber':function(x){
return cosSinSecCsc(x,type.BigNumber,1,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function sin is no angle');}

return Math.sin(x.value);},


'Array | Matrix':function(x){

return deepMap(x,sin,true);}});



sin.toTex = '\\sin\\left(${args[0]}\\right)';

return sin;}


exports.name = 'sin';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/tan.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/tanCot.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var tanCot=require('mathjs/lib/utils/bignumber/tanCot.js');

function factory(type,config,load,typed){























var tan=typed('tan',{
'number':Math.tan,

'Complex':function(x){
var den=
Math.exp(-4 * x.im) + 
2 * Math.exp(-2 * x.im) * Math.cos(2 * x.re) + 
1;

return new type.Complex(
2 * Math.exp(-2 * x.im) * Math.sin(2 * x.re) / den,
(1 - Math.exp(-4 * x.im)) / den);},



'BigNumber':function(x){
return tanCot(x,type.BigNumber,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function tan is no angle');}

return Math.tan(x.value);},


'Array | Matrix':function(x){

return deepMap(x,tan,true);}});



tan.toTex = '\\tan\\left(${args[0]}\\right)';

return tan;}


exports.name = 'tan';
exports.factory = factory;
});
__d('mathjs/lib/function/trigonometry/tanh.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/bignumber/tanhCoth.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var tanhCoth=require('mathjs/lib/utils/bignumber/tanhCoth.js');

function factory(type,config,load,typed){
























var tanh=typed('tanh',{
'number':_tanh,

'Complex':function(x){
var r=Math.exp(2 * x.re);
var re=r * Math.cos(2 * x.im);
var im=r * Math.sin(2 * x.im);
var den=(re + 1) * (re + 1) + im * im;
return new type.Complex(
((re - 1) * (re + 1) + im * im) / den,
im * 2 / den);},



'BigNumber':function(x){
return tanhCoth(x,type.BigNumber,false);},


'Unit':function(x){
if(!x.hasBase(type.Unit.BASE_UNITS.ANGLE)){
throw new TypeError('Unit in function tanh is no angle');}

return _tanh(x.value);},


'Array | Matrix':function(x){

return deepMap(x,tanh,true);}});



tanh.toTex = '\\tanh\\left(${args[0]}\\right)';

return tanh;}








function _tanh(x){
var e=Math.exp(2 * x);
return (e - 1) / (e + 1);}


exports.name = 'tanh';
exports.factory = factory;
});
__d('mathjs/lib/function/units/index.js',["mathjs/lib/function/units/to.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/units/to.js')];
});
__d('mathjs/lib/function/units/to.js',["mathjs/lib/utils/latex.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/type/matrix/utils/algorithm13.js","mathjs/lib/type/matrix/utils/algorithm14.js"],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){
var latex=require('mathjs/lib/utils/latex.js');

var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));

var algorithm13=load(require('mathjs/lib/type/matrix/utils/algorithm13.js'));
var algorithm14=load(require('mathjs/lib/type/matrix/utils/algorithm14.js'));

























var to=typed('to',{

'Unit, Unit | string':function(x,unit){
return x.to(unit);},


'Matrix, Matrix':function(x,y){

return algorithm13(x,y,to);},


'Array, Array':function(x,y){

return to(matrix(x),matrix(y)).valueOf();},


'Array, Matrix':function(x,y){

return to(matrix(x),y);},


'Matrix, Array':function(x,y){

return to(x,matrix(y));},


'Matrix, any':function(x,y){

return algorithm14(x,y,to,false);},


'any, Matrix':function(x,y){

return algorithm14(y,x,to,true);},


'Array, any':function(x,y){

return algorithm14(matrix(x),y,to,false).valueOf();},


'any, Array':function(x,y){

return algorithm14(matrix(y),x,to,true).valueOf();}});



to.toTex = '\\left(${args[0]}' + latex.operators['to'] + '${args[1]}\\right)';

return to;}


exports.name = 'to';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/index.js',["mathjs/lib/function/utils/clone.js","mathjs/lib/function/utils/filter.js","mathjs/lib/function/utils/format.js","mathjs/lib/function/utils/isInteger.js","mathjs/lib/function/utils/isNegative.js","mathjs/lib/function/utils/isNumeric.js","mathjs/lib/function/utils/isPositive.js","mathjs/lib/function/utils/isZero.js","mathjs/lib/function/utils/map.js","mathjs/lib/function/utils/partitionSelect.js","mathjs/lib/function/utils/print.js","mathjs/lib/function/utils/sort.js","mathjs/lib/function/utils/typeof.js","mathjs/lib/function/utils/forEach.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/function/utils/clone.js'),
require('mathjs/lib/function/utils/filter.js'),
require('mathjs/lib/function/utils/format.js'),
require('mathjs/lib/function/utils/isInteger.js'),
require('mathjs/lib/function/utils/isNegative.js'),
require('mathjs/lib/function/utils/isNumeric.js'),
require('mathjs/lib/function/utils/isPositive.js'),
require('mathjs/lib/function/utils/isZero.js'),
require('mathjs/lib/function/utils/map.js'),
require('mathjs/lib/function/utils/partitionSelect.js'),
require('mathjs/lib/function/utils/print.js'),
require('mathjs/lib/function/utils/sort.js'),
require('mathjs/lib/function/utils/typeof.js'),
require('mathjs/lib/function/utils/forEach.js')];
});
__d('mathjs/lib/function/utils/clone.js',["mathjs/lib/utils/object.js"],function(global, require, module, exports) {  'use strict';

var object=require('mathjs/lib/utils/object.js');

function factory(type,config,load,typed){


















var clone=typed('clone',{
'any':object.clone});


clone.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return clone;}


exports.name = 'clone';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/format.js',["mathjs/lib/utils/string.js"],function(global, require, module, exports) {  'use strict';

var string=require('mathjs/lib/utils/string.js');

function factory(type,config,load,typed){



































































var format=typed('format',{
'any':string.format,
'any, Object | function | number':string.format});


format.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return format;}


exports.name = 'format';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/isZero.js',["mathjs/lib/utils/collection/deepMap.js","mathjs/lib/utils/number.js"],function(global, require, module, exports) {  'use strict';

var deepMap=require('mathjs/lib/utils/collection/deepMap.js');
var number=require('mathjs/lib/utils/number.js');

function factory(type,config,load,typed){

































var isZero=typed('isZero',{
'number':function(x){
return x === 0;},


'BigNumber':function(x){
return x.isZero();},


'Complex':function(x){
return x.re === 0 && x.im === 0;},


'Fraction':function(x){
return x.d === 1 && x.n === 0;},


'Unit':function(x){
return x.value === 0;},


'Array | Matrix':function(x){
return deepMap(x,isZero);}});



return isZero;}


exports.name = 'isZero';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/print.js',["mathjs/lib/utils/string.js","mathjs/lib/utils/string.js"],function(global, require, module, exports) {  'use strict';

var isString=require('mathjs/lib/utils/string.js').isString;
var format=require('mathjs/lib/utils/string.js').format;

function factory(type,config,load,typed){



































var print=typed('print',{
'string, Object':_print,
'string, Object, number':_print});


print.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return print;}










function _print(template,values,precision){
return template.replace(/\$([\w\.]+)/g,function(original,key){
var keys=key.split('.');
var value=values[keys.shift()];
while(keys.length && value !== undefined) {
var k=keys.shift();
value = k?value[k]:value + '.';}


if(value !== undefined){
if(!isString(value)){
return format(value,precision);}else 

{
return value;}}



return original;});}




exports.name = 'print';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/sort.js',["mathjs/lib/utils/array.js","mathjs/lib/type/matrix/function/matrix.js","mathjs/lib/function/relational/compare.js"],function(global, require, module, exports) {  'use strict';

var size=require('mathjs/lib/utils/array.js').size;

function factory(type,config,load,typed){
var matrix=load(require('mathjs/lib/type/matrix/function/matrix.js'));
var asc=load(require('mathjs/lib/function/relational/compare.js'));
var desc=function(a,b){
return -asc(a,b);};































var sort=typed('sort',{
'Array':function(x){
_arrayIsVector(x);
return x.sort(asc);},


'Matrix':function(x){
_matrixIsVector(x);
return matrix(x.toArray().sort(asc),x.storage());},


'Array, function':function(x,_comparator){
_arrayIsVector(x);
return x.sort(_comparator);},


'Matrix, function':function(x,_comparator){
_matrixIsVector(x);
return matrix(x.toArray().sort(_comparator),x.storage());},


'Array, string':function(x,order){
_arrayIsVector(x);
return x.sort(_comparator(order));},


'Matrix, string':function(x,order){
_matrixIsVector(x);
return matrix(x.toArray().sort(_comparator(order)),x.storage());}});



sort.toTex = '\\mathrm{${name}}\\left(${args}\\right)';






function _comparator(order){
if(order === 'asc'){
return asc;}else 

if(order === 'desc'){
return desc;}else 

{
throw new Error('String "asc" or "desc" expected');}}









function _arrayIsVector(array){
if(size(array).length !== 1){
throw new Error('One dimensional array expected');}}









function _matrixIsVector(matrix){
if(matrix.size().length !== 1){
throw new Error('One dimensional matrix expected');}}



return sort;}


exports.name = 'sort';
exports.factory = factory;
});
__d('mathjs/lib/function/utils/typeof.js',["mathjs/lib/utils/types.js"],function(global, require, module, exports) {  'use strict';

var types=require('mathjs/lib/utils/types.js');

function factory(type,config,load,typed){











































var _typeof=typed('_typeof',{
'any':function(x){

var t=types.type(x);


if(t === 'Object'){
if(x.isBigNumber === true)return 'BigNumber';
if(x.isComplex === true)return 'Complex';
if(x.isFraction === true)return 'Fraction';
if(x.isMatrix === true)return 'Matrix';
if(x.isUnit === true)return 'Unit';
if(x.isIndex === true)return 'Index';
if(x.isRange === true)return 'Range';
if(x.isChain === true)return 'Chain';
if(x.isHelp === true)return 'Help';}


return t;}});



_typeof.toTex = '\\mathrm{${name}}\\left(${args}\\right)';

return _typeof;}


exports.name = 'typeof';
exports.factory = factory;
});
__d('mathjs/lib/json/index.js',["mathjs/lib/json/reviver.js"],function(global, require, module, exports) {  module.exports = [
require('mathjs/lib/json/reviver.js')];
});
__d('mathjs/lib/json/reviver.js',[],function(global, require, module, exports) {  'use strict';

function factory(type,config,load,typed){






return function reviver(key,value){
var constructor=type[value && value.mathjs];
if(constructor && typeof constructor.fromJSON === 'function'){
return constructor.fromJSON(value);}


return value;};}



exports.name = 'reviver';
exports.path = 'json';
exports.factory = factory;
});
__d('mathjs/lib/error/index.js',["mathjs/lib/error/ArgumentsError.js","mathjs/lib/error/DimensionError.js","mathjs/lib/error/IndexError.js"],function(global, require, module, exports) {  'use strict';

var ArgumentsError=require('mathjs/lib/error/ArgumentsError.js');
var DimensionError=require('mathjs/lib/error/DimensionError.js');
var IndexError=require('mathjs/lib/error/IndexError.js');

module.exports = [
{
name:'ArgumentsError',path:'error',
factory:function(){
return ArgumentsError;}},


{
name:'DimensionError',
path:'error',
factory:function(){
return DimensionError;}},


{
name:'IndexError',
path:'error',
factory:function(){
return IndexError;}}];
});
__d('FoodOracle/SearchResults.js',["react-native/Libraries/react-native/react-native.js","FoodOracle/RecipeView.js","FoodOracle/Fetch.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var RecipeView=require('FoodOracle/RecipeView.js');
var Fetch=require('FoodOracle/Fetch.js');var 


StyleSheet=







React.StyleSheet;var Image=React.Image;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var ListView=React.ListView;var Text=React.Text;var Component=React.Component;var TouchableOpacity=React.TouchableOpacity;

var styles=StyleSheet.create({

textContainer:{
flex:1},

title:{
fontSize:20,
color:'#656565'},

rowContainer:{
flexDirection:'row',
padding:10},

thumbnail:{
width:90,
height:90,
marginRight:10},


cellContainer:{
flex:1,
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
backgroundColor:'rgba(72,187,236,0.3)',
padding:10},

rightContainer:{
flex:1},


separator:{
height:2,
backgroundColor:'rgba(72,187,236,1)'},

recipeSeparator:{
height:2,
width:120,
backgroundColor:'rgba(72,187,236,0.3)'},

recipeText:{
fontSize:23,
fontFamily:'Arial',
color:'rgba(20,56,86,1)'},

extraText:{
fontSize:15,
fontFamily:'Arial',
color:'rgba(20,56,86,0.8)'}});var 



SearchResults=(function(_Component){_inherits(SearchResults,_Component);
function SearchResults(props){_classCallCheck(this,SearchResults);
_get(Object.getPrototypeOf(SearchResults.prototype),'constructor',this).call(this,props);
var ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1 !== row2;}});
this.state = {
dataSource:ds.cloneWithRows(this.props.matches)};}_createClass(SearchResults,[{key:'renderRow',value:



function renderRow(recipeData){var _this=this;
return (
React.createElement(TouchableOpacity,{onPress:function(){return _this.rowPressed(recipeData.id);}},
React.createElement(View,null,
React.createElement(View,{style:styles.cellContainer},
React.createElement(Image,{
source:{uri:recipeData.imageUrlsBySize['90']},
style:styles.thumbnail}),
React.createElement(View,{style:styles.rightContainer},
React.createElement(Text,{style:styles.recipeText},recipeData.recipeName),
React.createElement(View,{style:styles.recipeSeparator}),
React.createElement(Text,{style:styles.extraText},'Time: ',recipeData.totalTimeInSeconds / 60,' Minutes'),
React.createElement(Text,{style:styles.extraText},'Rating: ',recipeData.rating,'/5'))),


React.createElement(View,{style:styles.separator}))));}},{key:'render',value:





function render(){
return (
React.createElement(ListView,{
dataSource:this.state.dataSource,
renderRow:this.renderRow.bind(this)}));}},{key:'rowPressed',value:



function rowPressed(recipeID){
var recipe=this.props.matches.filter(function(prop){return prop.id === recipeID;})[0];
this._executeQuery(recipe.id);}},{key:'_executeQuery',value:


function _executeQuery(query){
console.log(query);
var handler=function(self,responseData){
self._handleResponse(responseData);};

var errorHandler=function(error){
React.AlertIOS.alert(
'Error',
'There seems to be an issue connecting to the network.  ' + error);};


var fetch=new Fetch(this);
fetch.getRequest(encodeURIComponent(query),handler,errorHandler);}},{key:'_handleResponse',value:


function _handleResponse(response){
console.log(response);
this.props.navigator.push({
component:RecipeView,
passProps:{recipe:response}});}}]);return SearchResults;})(Component);



module.exports = SearchResults;
});
__d('react-native-refreshable-listview/index.js',["react-native-refreshable-listview/lib/RefreshableListView.js"],function(global, require, module, exports) {  module.exports = require('react-native-refreshable-listview/lib/RefreshableListView.js');
});
__d('react-native-refreshable-listview/lib/RefreshableListView.js',["react-native/Libraries/react-native/react-native.js","is-promise/index.js","react-native-refreshable-listview/lib/delay.js","react-native-refreshable-listview/lib/ListView.js","react-native-refreshable-listview/lib/RefreshingIndicator.js","react-native-refreshable-listview/lib/ControlledRefreshableListView.js"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=
React.PropTypes;
var isPromise=require('is-promise/index.js');
var delay=require('react-native-refreshable-listview/lib/delay.js');
var ListView=require('react-native-refreshable-listview/lib/ListView.js');
var RefreshingIndicator=require('react-native-refreshable-listview/lib/RefreshingIndicator.js');
var ControlledRefreshableListView=require('react-native-refreshable-listview/lib/ControlledRefreshableListView.js');

const LISTVIEW_REF='listview';

var RefreshableListView=React.createClass({displayName:'RefreshableListView',
propTypes:{
loadData:PropTypes.func.isRequired,
minDisplayTime:PropTypes.number,
minBetweenTime:PropTypes.number,

refreshDescription:PropTypes.oneOfType([PropTypes.string,PropTypes.element]),
refreshingIndictatorComponent:PropTypes.oneOfType([PropTypes.func,PropTypes.element]),
minPulldownDistance:PropTypes.number,
renderHeaderWrapper:PropTypes.func},

getDefaultProps:function(){
return {
minDisplayTime:300,
minBetweenTime:300,
minPulldownDistance:40,
refreshingIndictatorComponent:RefreshingIndicator};},


getInitialState:function(){
return {
isRefreshing:false};},


handleRefresh:function(){var _this=this;
if(this.willRefresh)return;

this.willRefresh = true;

var loadingDataPromise=new Promise(function(resolve){
var loadDataReturnValue=_this.props.loadData(resolve);

if(isPromise(loadDataReturnValue)){
loadingDataPromise = loadDataReturnValue;}


Promise.all([
loadingDataPromise,
new Promise(function(resolve){return _this.setState({isRefreshing:true},resolve);}),
delay(_this.props.minDisplayTime)]).

then(function(){return delay(_this.props.minBetweenTime);}).
then(function(){
_this.willRefresh = false;
_this.setState({isRefreshing:false});});});},



getScrollResponder:function(){
return this.refs[LISTVIEW_REF].getScrollResponder();},

setNativeProps:function(props){
this.refs[LISTVIEW_REF].setNativeProps(props);},

render:function(){
return (
React.createElement(ControlledRefreshableListView,_extends({},
this.props,{
ref:LISTVIEW_REF,
onRefresh:this.handleRefresh,
isRefreshing:this.state.isRefreshing})));}});





RefreshableListView.DataSource = ListView.DataSource;
RefreshableListView.RefreshingIndicator = RefreshingIndicator;

module.exports = RefreshableListView;
});
__d('is-promise/index.js',[],function(global, require, module, exports) {  module.exports = isPromise;

function isPromise(obj){
return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';}
});
__d('react-native-refreshable-listview/lib/delay.js',[],function(global, require, module, exports) {  function delay(time){
return new Promise(function(resolve){return setTimeout(resolve,time);});}


module.exports = delay;
});
__d('react-native-refreshable-listview/lib/ListView.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var _require=require('react-native/Libraries/react-native/react-native.js');var ListView=_require.ListView;

module.exports = ListView;
});
__d('react-native-refreshable-listview/lib/RefreshingIndicator.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 

View=






React.View;var Text=React.Text;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var PropTypes=React.PropTypes;var StyleSheet=React.StyleSheet;var isValidElement=React.isValidElement;var createElement=React.createElement;

var RefreshingIndicator=React.createClass({displayName:'RefreshingIndicator',
propTypes:{
activityIndicatorComponent:PropTypes.oneOfType([PropTypes.func,PropTypes.element]),
stylesheet:PropTypes.object,
description:PropTypes.oneOfType([PropTypes.string,PropTypes.element])},

getDefaultProps:function(){
return {
activityIndicatorComponent:ActivityIndicatorIOS};},


renderActivityIndicator:function(style){
var activityIndicator=this.props.activityIndicatorComponent;

if(isValidElement(activityIndicator)){
return activityIndicator;}else 
{
return createElement(activityIndicator,{style:style});}},


render:function(){
var styles=Object.assign({},stylesheet,this.props.stylesheet);

return (
React.createElement(View,{style:[styles.container,styles.wrapper]},
React.createElement(View,{style:[styles.container,styles.loading,styles.content]},
React.createElement(Text,{style:styles.description},
this.props.description),

this.renderActivityIndicator(styles.activityIndicator))));}});






var stylesheet=StyleSheet.create({
container:{
flex:1,
justifyContent:'space-around',
alignItems:'center'},

wrapper:{
height:60,
marginTop:10},

content:{
marginTop:10,
height:60}});



module.exports = RefreshingIndicator;
});
__d('react-native-refreshable-listview/lib/ControlledRefreshableListView.js',["react-native/Libraries/react-native/react-native.js","react-native-refreshable-listview/lib/ListView.js","react-native-refreshable-listview/lib/createElementFrom.js","react-native-refreshable-listview/lib/RefreshingIndicator.js"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var React=require('react-native/Libraries/react-native/react-native.js');var 

PropTypes=
React.PropTypes;
var ListView=require('react-native-refreshable-listview/lib/ListView.js');
var createElementFrom=require('react-native-refreshable-listview/lib/createElementFrom.js');
var RefreshingIndicator=require('react-native-refreshable-listview/lib/RefreshingIndicator.js');

const SCROLL_EVENT_THROTTLE=32;
const MIN_PULLDOWN_DISTANCE=40;

const LISTVIEW_REF='listview';

var ControlledRefreshableListView=React.createClass({displayName:'ControlledRefreshableListView',
propTypes:{
onRefresh:PropTypes.func.isRequired,
isRefreshing:PropTypes.bool.isRequired,
refreshDescription:PropTypes.oneOfType([PropTypes.string,PropTypes.element]),
refreshingIndictatorComponent:PropTypes.oneOfType([PropTypes.func,PropTypes.element]),
minPulldownDistance:PropTypes.number,
ignoreInertialScroll:PropTypes.bool,
scrollEventThrottle:PropTypes.number,
onScroll:PropTypes.func,
renderHeader:PropTypes.func,
renderHeaderWrapper:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderRelease:PropTypes.func},

getDefaultProps:function(){
return {
minPulldownDistance:MIN_PULLDOWN_DISTANCE,
scrollEventThrottle:SCROLL_EVENT_THROTTLE,
ignoreInertialScroll:true,
refreshingIndictatorComponent:RefreshingIndicator};},


handleScroll:function(e){
var scrollY=e.nativeEvent.contentInset.top + e.nativeEvent.contentOffset.y;

if(this.isTouching || !this.isTouching && !this.props.ignoreInertialScroll){
if(scrollY < -this.props.minPulldownDistance){
if(!this.props.isRefreshing){
if(this.props.onRefresh){
this.props.onRefresh();}}}}





this.props.onScroll && this.props.onScroll(e);},

handleResponderGrant:function(){
this.isTouching = true;
if(this.props.onResponderGrant){
this.props.onResponderGrant.apply(null,arguments);}},


handleResponderRelease:function(){
this.isTouching = false;
if(this.props.onResponderRelease){
this.props.onResponderRelease.apply(null,arguments);}},


getScrollResponder:function(){
return this.refs[LISTVIEW_REF].getScrollResponder();},

setNativeProps:function(props){
this.refs[LISTVIEW_REF].setNativeProps(props);},

renderHeader:function(){
var description=this.props.refreshDescription;

var refreshingIndictator;
if(this.props.isRefreshing){
refreshingIndictator = createElementFrom(this.props.refreshingIndictatorComponent,{description:description});}else 
{
refreshingIndictator = null;}


if(this.props.renderHeaderWrapper){
return this.props.renderHeaderWrapper(refreshingIndictator);}else 
if(this.props.renderHeader){
console.warn('renderHeader is deprecated. Use renderHeaderWrapper instead.');
return this.props.renderHeader(refreshingIndictator);}else 
{
return refreshingIndictator;}},


render:function(){
return (
React.createElement(ListView,_extends({},
this.props,{
ref:LISTVIEW_REF,
onScroll:this.handleScroll,
renderHeader:this.renderHeader,
scrollEventThrottle:this.props.scrollEventThrottle,
onResponderGrant:this.handleResponderGrant,
onResponderRelease:this.handleResponderRelease})));}});





ControlledRefreshableListView.DataSource = ListView.DataSource;
ControlledRefreshableListView.RefreshingIndicator = RefreshingIndicator;

module.exports = ControlledRefreshableListView;
});
__d('react-native-refreshable-listview/lib/createElementFrom.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var React=require('react-native/Libraries/react-native/react-native.js');var 

cloneElement=


React.cloneElement;var createElement=React.createElement;var isValidElement=React.isValidElement;

function createElementFrom(elementOrClass,props){
if(isValidElement(elementOrClass)){
return cloneElement(elementOrClass,props);}else 
{
return createElement(elementOrClass,props);}}



module.exports = createElementFrom;
});
__d('FoodOracle/Home.js',["react-native/Libraries/react-native/react-native.js","FoodOracle/HomeView.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var HomeView=require('FoodOracle/HomeView.js');var 


StyleSheet=




React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var Component=React.Component;var View=React.View;var Text=React.Text;

var styles=StyleSheet.create({
container:{
flex:1}});



var Home=React.createClass({displayName:'Home',
render:function(){
return (
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'rgba(114,192,253,1)',
tintColor:'rgba(20,50,87,1)',
titleTextColor:'rgba(20,50,87,1)',
initialRoute:{
leftButtonTitle:'>>>',
title:'Food Oracle',
component:HomeView}}));}});






module.exports = Home;
});
__d('FoodOracle/HomeView.js',["react-native/Libraries/react-native/react-native.js","Ionicons","FoodOracle/SearchResults.js","FoodOracle/Fetch.js","react-native-blur/index.js","react-native-blur/index.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('Ionicons');
var SearchResults=require('FoodOracle/SearchResults.js');
var Fetch=require('FoodOracle/Fetch.js');
var BlurView=require('react-native-blur/index.js').BlurView;
var VibrancyView=require('react-native-blur/index.js').VibrancyView;

var background='http://iphonewallpapers-hd.com/wallpapers/cocktail_-640x1136.jpg';var 


StyleSheet=








React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var View=React.View;var Text=React.Text;var Component=React.Component;var TouchableHighlight=React.TouchableHighlight;var TextInput=React.TextInput;var Image=React.Image;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;


var styles=StyleSheet.create({

container:{
flex:1,
marginTop:64},



flowRight:{
flexDirection:'row',
alignItems:'center',
alignSelf:'stretch',
marginLeft:10,
marginRight:10},


flowRightMealTime:{
flex:1,
flexDirection:'row'},


searchInput:{
height:36,
paddingLeft:5,
marginRight:5,
flex:3,
fontSize:18,
borderWidth:1,
borderColor:'#48BBEC',
borderRadius:8,
color:'rgba(20,50,87,1)',
justifyContent:'center',
backgroundColor:'#FFFFFF'},


button:{
height:36,
flex:1,
flexDirection:'row',
borderColor:'rgba(72,187,236,0.2)',
borderWidth:1,
borderRadius:8,
alignSelf:'stretch',
justifyContent:'center',
backgroundColor:'rgba(72,187,236,0.2)'},



buttonText:{
fontSize:18,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},


mealTimeContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent'},


searchContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent'},

mealTimeTextContainer:{
flex:1,
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent',
borderWidth:1,
borderColor:'rgba(72,187,236,0.2)'},

mealTimeText:{
flex:4,
color:'#FFFFFF',
fontSize:25,
fontFamily:'Arial',
marginRight:10,
marginLeft:50},



mealTimeIcon:{
flex:1},


fillerView:{
height:49}});



var resultCache={
recipes:false};


var sortByTime=function(item){
item.sort(compare);};


var compare=function(a,b){
if(a.totalTimeInSeconds < b.totalTimeInSeconds)
return -1;
if(a.totalTimeInSeconds > b.totalTimeInSeconds)
return 1;
return 0;};var 


HomeView=(function(_Component){_inherits(HomeView,_Component);
function HomeView(props){_classCallCheck(this,HomeView);
_get(Object.getPrototypeOf(HomeView.prototype),'constructor',this).call(this,props);
this.state = {
searchString:'',
isLoading:false};}_createClass(HomeView,[{key:'render',value:



function render(){var _this=this;
console.log('HomeView.render');
var spinner=this.state.isLoading?React.createElement(ActivityIndicatorIOS,{
hidden:'true',
size:'large'}):
React.createElement(View,null);
return (

React.createElement(View,{style:styles.container},
React.createElement(Image,{source:{uri:background},style:styles.mealTimeContainer},

React.createElement(BlurView,{blurType:'dark',style:styles.searchContainer},
React.createElement(View,{blurType:'light',style:styles.searchContainer},
React.createElement(View,{style:styles.flowRight},
React.createElement(TextInput,{
style:styles.searchInput,
value:this.state.searchString,
onChange:this._onSearchTextChanged.bind(this),
placeholder:'Quick food search'}),
React.createElement(TouchableHighlight,{
style:styles.button,
underlayColor:'#99d9f4',
onPress:this._onSearchPress.bind(this)},
React.createElement(Text,{style:styles.buttonText},'Search'))),


spinner)),




React.createElement(BlurView,{blurType:'dark',style:styles.mealTimeContainer},
React.createElement(TouchableHighlight,{
style:styles.mealTimeTextContainer,
underlayColor:'#dddddd',
onPress:function(){return _this._onMealTimePress('breakfast');}},
React.createElement(View,{style:styles.flowRightMealTime},
React.createElement(Text,{style:styles.mealTimeText},'Breakfast '),

React.createElement(Icon,{name:'ios-arrow-right',size:40,color:'#FFF',
style:styles.mealTimeIcon})))),




React.createElement(BlurView,{blurType:'dark',style:styles.mealTimeContainer},
React.createElement(TouchableHighlight,{style:styles.mealTimeTextContainer,
underlayColor:'#dddddd',
onPress:function(){return _this._onMealTimePress('lunch');}},
React.createElement(View,{style:styles.flowRightMealTime},
React.createElement(Text,{style:styles.mealTimeText},'Lunch'),
React.createElement(Icon,{name:'ios-arrow-right',size:40,color:'#FFF',
style:styles.mealTimeIcon})))),




React.createElement(BlurView,{blurType:'dark',style:styles.mealTimeContainer},
React.createElement(TouchableHighlight,{
style:styles.mealTimeTextContainer,
underlayColor:'#dddddd',
onPress:function(){return _this._onMealTimePress('dinner');}},
React.createElement(View,{style:styles.flowRightMealTime},
React.createElement(Text,{style:styles.mealTimeText},'Dinner'),
React.createElement(Icon,{name:'ios-arrow-right',size:40,color:'#FFF',
style:styles.mealTimeIcon})))),




React.createElement(BlurView,{blurType:'dark',style:styles.fillerView},
React.createElement(View,{style:styles.fillerView})))));}},{key:'_onSearchTextChanged',value:







function _onSearchTextChanged(event){
console.log('onSearchTextChanged');
this.setState({searchString:event.nativeEvent.text});
console.log(this.state.searchString);}},{key:'_handleResponse',value:


function _handleResponse(response){
this.setState({isLoading:false});
this.props.navigator.push({
component:SearchResults,
passProps:{matches:response.matches}});}},{key:'_executeQuery',value:



function _executeQuery(query){
console.log(query);
this.setState({isLoading:true});
var handler=function(self,responseData){
resultCache.recipes = responseData.matches;
sortByTime(resultCache.recipes);
self._handleResponse(responseData);};

var errorHandler=function(error){
this.setState({isLoading:false});
React.AlertIOS.alert(
'Error',
'There seems to be an issue connecting to the network.  ' + error);};


var fetch=new Fetch(this);
fetch.searchRequest(encodeURIComponent(query),handler,errorHandler);}},{key:'_onSearchPress',value:


function _onSearchPress(){
var query=this.state.searchString;
this._executeQuery(query);}},{key:'_onMealTimePress',value:


function _onMealTimePress(mealtime){
console.log(mealtime);
this._executeQuery(mealtime);}}]);return HomeView;})(Component);




module.exports = HomeView;
});
__d('react-native-blur/index.js',["react-native-blur/src/BlurView.js","react-native-blur/src/VibrancyView.js"],function(global, require, module, exports) {  const BlurView=require('react-native-blur/src/BlurView.js');
const VibrancyView=require('react-native-blur/src/VibrancyView.js');

module.exports = {
BlurView:BlurView,
VibrancyView:VibrancyView};
});
__d('react-native-blur/src/BlurView.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}const React=require('react-native/Libraries/react-native/react-native.js');const 

requireNativeComponent=

React.requireNativeComponent;const Component=React.Component;var 

BlurView=(function(_Component){_inherits(BlurView,_Component);function BlurView(){_classCallCheck(this,BlurView);_get(Object.getPrototypeOf(BlurView.prototype),'constructor',this).apply(this,arguments);}_createClass(BlurView,[{key:'render',value:
function render(){
return React.createElement(NativeBlurView,this.props);}}]);return BlurView;})(Component);



BlurView.propTypes = {
blurType:React.PropTypes.string};


const NativeBlurView=requireNativeComponent('BlurView',BlurView);

module.exports = BlurView;
});
__d('react-native-blur/src/VibrancyView.js',["react-native/Libraries/react-native/react-native.js"],function(global, require, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}const React=require('react-native/Libraries/react-native/react-native.js');const 

requireNativeComponent=

React.requireNativeComponent;const Component=React.Component;var 

VibrancyView=(function(_Component){_inherits(VibrancyView,_Component);function VibrancyView(){_classCallCheck(this,VibrancyView);_get(Object.getPrototypeOf(VibrancyView.prototype),'constructor',this).apply(this,arguments);}_createClass(VibrancyView,[{key:'render',value:
function render(){
return React.createElement(NativeVibrancyView,this.props);}}]);return VibrancyView;})(Component);



VibrancyView.propTypes = {
blurType:React.PropTypes.string};


const NativeVibrancyView=requireNativeComponent('VibrancyView',VibrancyView);

module.exports = VibrancyView;
});
__d('FoodOracle/Refrigerator.js',["react-native/Libraries/react-native/react-native.js","FoodOracle/FridgeView.js"],function(global, require, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native.js');
var FridgeView=require('FoodOracle/FridgeView.js');var 


StyleSheet=




React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var Component=React.Component;var View=React.View;var Text=React.Text;

var styles=StyleSheet.create({
container:{
flex:1}});



var Fridge=React.createClass({displayName:'Fridge',
render:function(){
return (
React.createElement(NavigatorIOS,{
style:styles.container,
barTintColor:'rgba(114,192,253,1)',
tintColor:'rgba(20,50,87,1)',
titleTextColor:'rgba(20,50,87,1)',
initialRoute:{
rightButtonTitle:'<<<',
title:'Fridge',
component:FridgeView}}));}});






module.exports = Fridge;
});
__d('FoodOracle/FridgeView.js',["react-native/Libraries/react-native/react-native.js","react-native-fm-picker/index.js","FoodOracle/Fetch.js","FoodOracle/SearchResults.js","FoodOracle/VerificationView.js","react-native-refreshable-listview/index.js","FoodOracle/DB.js","Dimensions"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var React=require('react-native/Libraries/react-native/react-native.js');
var FMPicker=require('react-native-fm-picker/index.js');
var Fetch=require('FoodOracle/Fetch.js');
var SearchResults=require('FoodOracle/SearchResults.js');
var VerificationView=require('FoodOracle/VerificationView.js');
var RefreshableListView=require('react-native-refreshable-listview/index.js');
var DB=require('FoodOracle/DB.js');
var Dimensions=require('Dimensions');var _Dimensions$get=
Dimensions.get('window');var width=_Dimensions$get.width;var height=_Dimensions$get.height;var 


Component=











React.Component;var StyleSheet=React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var View=React.View;var Text=React.Text;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;var TouchableOpacity=React.TouchableOpacity;var PickerIOS=React.PickerIOS;var TextInput=React.TextInput;var Image=React.Image;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'rgba(72,187,236,0.2)'},

flowRight:{
flexDirection:'row',
alignItems:'center',
alignSelf:'stretch',
justifyContent:'center',
marginLeft:10,
marginRight:10,
height:49},


flowRightSearch:{
flexDirection:'row',
alignItems:'center',
alignSelf:'stretch',
justifyContent:'center',
marginLeft:10,
marginRight:10,
marginBottom:10,
marginTop:10},


flowRightButtonLeft:{
flexDirection:'row',
borderColor:'rgba(72,187,236,0.5)',
borderWidth:1,
borderRadius:8,
marginRight:3,
marginTop:15,
marginBottom:10,
height:30,
width:106,
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

flowRightButtonRight:{
flexDirection:'row',
borderColor:'rgba(72,187,236,0.5)',
borderWidth:1,
borderRadius:8,
marginLeft:3,
marginTop:15,
marginBottom:10,
height:30,
width:140,
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

buttonSelect:{
flexDirection:'row',
borderColor:'rgba(20,56,86,0.8)',
borderWidth:2,
borderRadius:2,
height:33,
width:30,
alignSelf:'center',
justifyContent:'center',
backgroundColor:'rgba(72,187,236,0.5)'},

buttonAdd:{
flexDirection:'row',
borderColor:'rgba(72,187,236,1)',
borderWidth:1,
borderRadius:8,
height:33,
width:60,
alignSelf:'center',
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

buttonText:{
fontSize:18,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

ingredientText:{
fontSize:35,
fontFamily:'Arial',
color:'rgba(20,56,86,0.8)',
alignSelf:'center'},

fridgeHeader:{
alignItems:'center',
alignSelf:'stretch',
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

fridgeHeaderText:{
fontSize:25,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

quantityText:{
fontSize:20,
fontFamily:'Arial',
color:'rgba(20,56,86,0.8)',
alignSelf:'center'},

buttonTextAdd:{
fontSize:25,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

buttonContainer:{
flex:0.125,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent',
marginTop:75,
height:100},


textContainer:{
flex:1},

rowContainer:{
flexDirection:'row',
padding:10},

cellContainer:{
flex:1,
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
backgroundColor:'rgba(72,187,236,0.2)',
padding:20},

rightContainer:{
flex:1},

textInput:{
height:35,
paddingLeft:5,
marginRight:5,
flex:2,
fontSize:18,
borderWidth:1,
borderColor:'#48BBEC',
borderRadius:8,
color:'rgba(20,50,87,1)',
justifyContent:'center',
backgroundColor:'#FFFFFF'},

separator:{
height:2,
backgroundColor:'rgba(72,187,236,1)'},

ingredientSeparator:{
height:2,
width:80,
marginTop:5,
marginBottom:5,
alignSelf:'center',
backgroundColor:'rgba(72,187,236,1)'},

headerSeparator:{
height:2,
alignSelf:'stretch',
backgroundColor:'rgba(72,187,236,1)'},

listPanel:{
flex:1,
marginTop:15}});



var resultCache={
recipes:false};


var sortByTime=function(item){
item.sort(compare);};


var compare=function(a,b){
if(a.totalTimeInSeconds < b.totalTimeInSeconds)
return -1;
if(a.totalTimeInSeconds > b.totalTimeInSeconds)
return 1;
return 0;};


var ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1 !== row2;}});

var INGREDIENT_QUANTITIES=['high','low','empty'];var 

FridgeView=(function(_Component){_inherits(FridgeView,_Component);

function FridgeView(props){_classCallCheck(this,FridgeView);
_get(Object.getPrototypeOf(FridgeView.prototype),'constructor',this).call(this,props);
this.state = {
isInitialized:false,
ingredients:false,
currentIngredient:false,
isLoading:false,
inputString:''};

this._refreshListView(function(){},

[]);}_createClass(FridgeView,[{key:'render',value:


function render(){var _this=this;
DB.preferences.get({key:'isFridgeUpdated'},function(result){
if(result.length == 0){
DB.preferences.add({key:'isFridgeUpdated',value:false},function(result){});}else 
if(result[0].value){
DB.preferences.update({key:'isFridgeUpdated'},{value:false},function(result){
_this._refreshListView(function(){},[]);});}});



var spinner=this.state.isLoading?React.createElement(ActivityIndicatorIOS,{
hidden:'true',size:'large'}):React.createElement(View,null);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.buttonContainer},
React.createElement(View,{style:styles.flowRightSearch},
React.createElement(TextInput,{
style:styles.textInput,
value:this.state.inputString,
onChange:this._onIngredientTextChanged.bind(this),
placeholder:'Enter ingredient'}),
React.createElement(TouchableHighlight,{
style:styles.buttonAdd,
underlayColor:'#99d9f4',
onPress:this._onAddPress.bind(this)},
React.createElement(Text,{style:styles.buttonTextAdd},'＋'))),


React.createElement(View,{style:styles.fridgeHeader},
React.createElement(View,{style:styles.headerSeparator}),
React.createElement(Text,{style:styles.fridgeHeaderText},'Ingredients'),
React.createElement(View,{style:styles.headerSeparator}))),


spinner,
this.state.isInitialized?
React.createElement(View,{style:styles.listPanel},
React.createElement(RefreshableListView,{
dataSource:ds.cloneWithRows(this.state.ingredients),
renderRow:this.renderRow.bind(this),
loadData:this._refreshListView.bind(this),
automaticallyAdjustContentInsets:false})):


React.createElement(View,null),
React.createElement(FMPicker,{ref:'picker',
options:INGREDIENT_QUANTITIES,
onSubmit:function(option){
if(option == 'empty'){
DB.ingredients.remove_id(_this.state.currentIngredient._id,function(result){
console.log(result);
_this._refreshListView(function(){},[]);});}else 

{
DB.ingredients.update_id(_this.state.currentIngredient._id,{quantity:option},
function(result){
console.log(result);
_this._refreshListView(function(){},[]);});}}}),





React.createElement(View,{style:styles.flowRight},
React.createElement(TouchableHighlight,{
style:styles.flowRightButtonLeft,
underlayColor:'#99d9f4',
onPress:this._onUnselectAllPress.bind(this)},
React.createElement(Text,{style:styles.buttonText},'Unselect All')),

React.createElement(TouchableHighlight,{
style:styles.flowRightButtonRight,
underlayColor:'#99d9f4',
onPress:this._onSearchPress.bind(this)},
React.createElement(Text,{style:styles.buttonText},'Search Selected')))));}},{key:'renderRow',value:






function renderRow(ingredient){var _this2=this;
return (
React.createElement(TouchableOpacity,{onPress:function(){return _this2.rowPressed(ingredient);}},
React.createElement(View,null,
React.createElement(View,{style:styles.cellContainer},
React.createElement(View,{style:styles.rightContainer},
React.createElement(Text,{style:styles.ingredientText},ingredient.name),
React.createElement(View,{style:styles.ingredientSeparator}),
React.createElement(Text,{style:styles.quantityText},' quantity: ',ingredient.quantity)),

React.createElement(TouchableHighlight,{
style:styles.buttonSelect,
underlayColor:'#99d9f4',
onPress:function(){return _this2._onSelectPress(ingredient);}},
React.createElement(Text,{style:styles.buttonText},
ingredient.isSelected?'✔':''))),



React.createElement(View,{style:styles.separator}))));}},{key:'rowPressed',value:





function rowPressed(ingredient){
this.setState({
currentIngredient:ingredient});

this.refs.picker.show();}},{key:'_onIngredientTextChanged',value:


function _onIngredientTextChanged(event){
this.setState({inputString:event.nativeEvent.text});}},{key:'_onSearchPress',value:


function _onSearchPress(){
var query='';
var x;
var first=true;
for(x in this.state.ingredients) {
if(this.state.ingredients[x].isSelected){
if(first){
first = false;}else 
{
query += ', ';}

query += this.state.ingredients[x].name;}}


this._executeQuery(query);}},{key:'_onUnselectAllPress',value:


function _onUnselectAllPress(){var _this3=this;
DB.ingredients.update({isSelected:true},{isSelected:false},function(result){
_this3._refreshListView(function(){},[]);});}},{key:'_onAddPress',value:



function _onAddPress(){var _this4=this;

var inputIngredients=this.state.inputString.split(/\,|\s+/);
console.log('inputIngredients: ' + inputIngredients);
this._NLP(inputIngredients,function(noFound,foundIngredients){
console.log('noFound: ' + noFound);
console.log('foundIngredients: ' + foundIngredients);
_this4._recursiveAddIngredients(foundIngredients,function(noFound){
console.log('-------after adding found ingredients-------');
console.log(noFound);
_this4._refreshListView(function(){
_this4.setState({inputString:''});
if(noFound.length != 0){
_this4.props.navigator.push({
component:VerificationView,
passProps:{noFound:noFound}});}},


[]);},
[noFound]);});}},{key:'_NLP',value:



function _NLP(words,callback){
var noFound=[];
var foundIngredients=[];
DB.dictionary.get_all(function(result){
console.log(result);
var dictWords=Object.keys(result.rows).map(function(key){return result.rows[key].name;});
var i;
for(i = 0;i < words.length;i++) {
console.log(words[i]);
if(dictWords.indexOf(words[i].toLowerCase()) == -1){
noFound.push(words[i]);}else 
{
foundIngredients.push(words[i]);}}


callback(noFound.filter(function(value){return value != '';}),foundIngredients.filter(function(value){return value != '';}));});}},{key:'_recursiveAddIngredients',value:



function _recursiveAddIngredients(ingredients,func,args){var _this5=this;
console.log("----------recursive add---------");
console.log(ingredients + ', ' + args);
if(ingredients.length != 0){
var ingredient=ingredients.splice(0,1)[0].trim();
if(ingredient != ''){
DB.ingredients.get({name:ingredient},function(result){
if(result.length == 0){
DB.ingredients.add({name:ingredient,
quantity:'high',isSelected:false},function(result){
_this5._recursiveAddIngredients(ingredients,func,args);});}else 


{
DB.ingredients.update_id(result[0]._id,{quantity:'high'},function(result){
_this5._recursiveAddIngredients(ingredients,func,args);});}});}else 




{
this._recursiveAddIngredients(ingredients,func,args);}}else 

{
console.log('------func-------');
console.log(args);
func.apply(this,args);}}},{key:'_onSelectPress',value:



function _onSelectPress(ingredient){var _this6=this;
DB.ingredients.update_id(ingredient._id,{isSelected:!ingredient.isSelected},
function(result){
console.log(result);
_this6._refreshListView(function(){},[]);});}},{key:'_handleResponse',value:





function _handleResponse(response){
this.setState({isLoading:false});
this.props.navigator.push({
component:SearchResults,
passProps:{matches:response.matches}});}},{key:'_executeQuery',value:



function _executeQuery(query){
console.log(query);
this.setState({isLoading:true});
var handler=function(self,responseData){
resultCache.recipes = responseData.matches;
sortByTime(resultCache.recipes);
self._handleResponse(responseData);};

var errorHandler=function(error){
this.setState({isLoading:false});
React.AlertIOS.alert(
'Error',
'There seems to be an issue connecting to the network.  ' + error);};


var fetch=new Fetch(this);
fetch.searchRequest(encodeURIComponent(query),handler,errorHandler);}},{key:'_refreshListView',value:


function _refreshListView(func,args){var _this7=this;
DB.ingredients.get_all(function(result){
_this7.setState({
isInitialized:true,
ingredients:result.rows});

func.apply(_this7,args);});}}]);return FridgeView;})(Component);



;

module.exports = FridgeView;
});
__d('FoodOracle/VerificationView.js',["react-native/Libraries/react-native/react-native.js","Ionicons","FoodOracle/DB.js"],function(global, require, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if("value" in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _inherits(subClass,superClass){if(typeof superClass !== "function" && superClass !== null){throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}

var COMMONWORDS=["i","have","some","and","add","please"," ","  ","also","a","too","in","my","fridge","refridgerator","no","couple","of"];
var React=require('react-native/Libraries/react-native/react-native.js');
var Icon=require('Ionicons');



var DB=require('FoodOracle/DB.js');var 




Component=








React.Component;var StyleSheet=React.StyleSheet;var NavigatorIOS=React.NavigatorIOS;var View=React.View;var Text=React.Text;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;var TouchableOpacity=React.TouchableOpacity;var TextInput=React.TextInput;

var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:'rgba(72,187,236,0.2)'},

topMargin:{
marginTop:65},



cellContainer:{
flex:1,
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
backgroundColor:'rgba(72,187,236,0.2)',
padding:20},

rightContainer:{
flex:1},

separator:{
height:2,
backgroundColor:'rgba(72,187,236,1)'},

buttonAdd:{
flexDirection:'row',
borderColor:'rgba(72,187,236,1)',
borderWidth:1,
borderRadius:8,
height:33,
width:60,
alignSelf:'center',
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},

buttonRemove:{
flexDirection:'row',
borderColor:'rgba(72,187,236,0.5)',
borderWidth:2,
borderRadius:8,
alignSelf:'stretch',
marginLeft:35,
marginTop:15,
marginBottom:10,
height:30,
width:95,
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},


buttonAddListed:{
flex:1,
flexDirection:'row',
borderColor:'rgba(72,187,236,0.5)',
borderWidth:2,
borderRadius:8,
width:130,
height:30,
alignSelf:'stretch',
justifyContent:'center',
backgroundColor:'rgba(20,56,86,0.8)'},


buttonText:{
fontSize:23,
fontFamily:'Arial',
color:'white',
alignSelf:'center'},

buttonContainer:{
flex:0.0833,
justifyContent:'center',
alignItems:'center',
alignSelf:'stretch',
backgroundColor:'transparent',
marginTop:0},


flowRight:{
flexDirection:'row',
alignItems:'center',
alignSelf:'stretch',
marginLeft:10,
marginRight:10},

textInput:{
height:35,
paddingLeft:5,
marginRight:5,
flex:2,
fontSize:18,
borderWidth:1,
borderColor:'#48BBEC',
borderRadius:8,
color:'rgba(20,50,87,1)',
justifyContent:'center',
backgroundColor:'#FFFFFF'},

ingredientText:{
fontSize:35,
fontFamily:'Arial',
color:'rgba(20,56,86,0.8)',
alignSelf:'center'}});



var resultCache={
recipes:false};




var ds=new ListView.DataSource({rowHasChanged:function(row1,row2){return row1 !== row2;}});

var datasourceInput=[];var 




VerificationView=(function(_Component){_inherits(VerificationView,_Component);



function VerificationView(props){_classCallCheck(this,VerificationView);
_get(Object.getPrototypeOf(VerificationView.prototype),"constructor",this).call(this,props);
this.state = {
inputString:''};


this.filterCommonWords();
this._refreshListView();}_createClass(VerificationView,[{key:"getInitialState",value:


function getInitialState(){
this.filterCommonWords();
this._refreshListView();}},{key:"render",value:



function render(){var _this=this;


return (
React.createElement(View,{style:styles.container},
React.createElement(View,{style:styles.separator}),
React.createElement(ListView,{
dataSource:ds.cloneWithRows(datasourceInput),
renderRow:this.renderList.bind(this),
style:styles.listView,
automaticallyAdjustContentInsets:true}),
React.createElement(View,{style:styles.separator}),
React.createElement(View,{style:styles.buttonContainer},

React.createElement(View,{style:styles.flowRight},
React.createElement(TextInput,{
style:styles.textInput,
value:this.state.inputString,
onChange:this._onIngredientTextChanged.bind(this),
placeholder:"Enter additional ingredient"}),
React.createElement(TouchableHighlight,{
style:styles.buttonAdd,
underlayColor:"#99d9f4",
onPress:this._addPressed.bind(this)},
React.createElement(Text,{style:styles.buttonText},"＋")))),



React.createElement(View,{style:styles.buttonContainer},
React.createElement(View,{style:styles.flowRight},
React.createElement(TouchableHighlight,{
style:styles.buttonAddListed,
underlayColor:"#99d9f4",
onPress:function(){return _this._okPressed();}},
React.createElement(Text,{style:styles.buttonText},"Add Ingredients Listed"))))));}},{key:"renderList",value:















function renderList(word){var _this2=this;
return (
React.createElement(TouchableOpacity,{onPress:function(){}},
React.createElement(View,null,
React.createElement(View,{style:styles.cellContainer},
React.createElement(View,{style:styles.rightContainer},
React.createElement(Text,{style:styles.ingredientText},word)),

React.createElement(TouchableHighlight,{
style:styles.buttonRemove,
underlayColor:"#99d9f4",
onPress:function(){return _this2._onDeletePress(word);}},
React.createElement(Text,{style:styles.buttonText},"Remove"))),




React.createElement(View,{style:styles.separator}))));}},{key:"_addPressed",value:







function _addPressed(){
var inputAdd=this.state.inputString;
if(inputAdd != ''){
datasourceInput.push(inputAdd);
this._refreshListView();}}},{key:"filterCommonWords",value:



function filterCommonWords(){
console.log("-------------- filter running -----------------");
var input=this.props.noFound;
console.log(input);
var i;
datasourceInput = [];
for(i = 0;i < input.length;i++) {
var COMMONWORDS_index=COMMONWORDS.indexOf(input[i].toLowerCase());
if(COMMONWORDS_index == -1){

datasourceInput.push(input[i].toLowerCase());
console.log(i);
console.log(datasourceInput);}}



console.log(datasourceInput);}},{key:"_onDeletePress",value:


function _onDeletePress(ingredientName){
console.log("---------------delete pressed-------------------");
console.log(ingredientName);
var index=datasourceInput.indexOf(ingredientName);
if(index > -1){
datasourceInput.splice(index,1);}


this._refreshListView();}},{key:"_okPressed",value:


function _okPressed(){

this._recursiveAddIngredients(datasourceInput);}},{key:"_recursiveAddIngredients",value:



function _recursiveAddIngredients(ingredients){var _this3=this;
console.log("----------recursive add---------");
console.log(ingredients);
if(ingredients.length != 0){
var ingredient=ingredients.splice(0,1)[0].trim();
if(ingredient != ''){
DB.ingredients.get({name:ingredient},function(result){
if(result.length == 0){
DB.ingredients.add({name:ingredient,
quantity:'high',isSelected:false},function(result){
DB.dictionary.add({name:ingredient},function(result){
console.log(result);
_this3._recursiveAddIngredients(ingredients);});});}else 



{
DB.ingredients.update_id(result[0]._id,{quantity:'high'},function(result){
DB.dictionary.add({name:ingredient},function(result){
console.log(result);
_this3._recursiveAddIngredients(ingredients);});});}});}else 





{
this._recursiveAddIngredients(ingredients);}}else 

{
DB.preferences.get({key:'isFridgeUpdated'},function(result){
if(result.length == 0){
DB.preferences.add({key:'isFridgeUpdated',value:true},function(result){
_this3.props.navigator.pop();});}else 

{
DB.preferences.update({key:'isFridgeUpdated'},{value:true},function(result){
_this3.props.navigator.pop();});}});}}},{key:"_onIngredientTextChanged",value:






function _onIngredientTextChanged(event){
this.setState({inputString:event.nativeEvent.text});}},{key:"_refreshListView",value:









function _refreshListView(){
this.setState({});}}]);return VerificationView;})(Component);







;



module.exports = VerificationView;
});
__d('react-native-drawer/index.js',["react-native/Libraries/react-native/react-native.js","react-native-drawer/Tweener.js"],function(global, require, module, exports) {  var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};var React=require('react-native/Libraries/react-native/react-native.js');var 
PanResponder=React.PanResponder;var View=React.View;var StyleSheet=React.StyleSheet;var Dimensions=React.Dimensions;
var deviceScreen=Dimensions.get('window');
var tween=require('react-native-drawer/Tweener.js');

var drawer=React.createClass({displayName:'drawer',

_left:0,
_prevLeft:0,
_offsetOpen:0,
_offsetClosed:0,
_open:false,
_panning:false,
_tweenPending:false,
_lastPress:0,
_panStartTime:0,
_syncAfterUpdate:false,

propTypes:{
type:React.PropTypes.string,
closedDrawerOffset:React.PropTypes.number,
openDrawerOffset:React.PropTypes.number,
openDrawerThreshold:React.PropTypes.number,
relativeDrag:React.PropTypes.bool,
panStartCompensation:React.PropTypes.bool,
panOpenMask:React.PropTypes.number,
panCloseMask:React.PropTypes.number,
captureGestures:React.PropTypes.bool,
initializeOpen:React.PropTypes.bool,
tweenHandler:React.PropTypes.func,
tweenDuration:React.PropTypes.number,
tweenEasing:React.PropTypes.string,
disabled:React.PropTypes.bool,
acceptDoubleTap:React.PropTypes.bool,
acceptTap:React.PropTypes.bool,
acceptPan:React.PropTypes.bool,
tapToClose:React.PropTypes.bool,
styles:React.PropTypes.object,
onOpen:React.PropTypes.func,
onClose:React.PropTypes.func,
side:React.PropTypes.oneOf(['left','right'])},


getDefaultProps:function(){
return {
type:'displace',
closedDrawerOffset:0,
openDrawerOffset:0,
openDrawerThreshold:.25,
relativeDrag:true,
panStartCompensation:true,
panOpenMask:.25,
panCloseMask:.25,
captureGestures:false,
initializeOpen:false,
tweenHandler:null,
tweenDuration:250,
tweenEasing:'linear',
disabled:false,
acceptDoubleTap:false,
acceptTap:false,
acceptPan:true,
tapToClose:false,
styles:{},
onOpen:function(){},
onClose:function(){},
side:'left'};},



statics:{
tweenPresets:{
parallax:function(ratio){
var drawer={};
drawer.left = -150 * (1 - ratio);
return {drawer:drawer};}}},




getInitialState:function(){
return {viewport:deviceScreen};},


setViewport:function(e){
var viewport=e.nativeEvent.layout;
var oldViewport=this.state.viewport;
if(viewport.width === oldViewport.width && viewport.height === oldViewport.height){
return;}

this.resync(viewport);},


resync:function(viewport,props){
var viewport=viewport || this.state.viewport;
var props=props || this.props;
this._syncAfterUpdate = true;
this._offsetClosed = props.closedDrawerOffset % 1 === 0?props.closedDrawerOffset:props.closedDrawerOffset * viewport.width;
this._offsetOpen = props.openDrawerOffset % 1 === 0?props.openDrawerOffset:props.openDrawerOffset * viewport.width;
this.setState({viewport:viewport});},


propsWhomRequireUpdate:[
'closedDrawerOffset',
'openDrawerOffset',
'type'],


requiresResync:function(nextProps){
for(var i=0;i < this.propsWhomRequireUpdate.length;i++) {
var key=this.propsWhomRequireUpdate[i];
if(this.props[key] !== nextProps[key]){return true;}}},



componentWillReceiveProps:function(nextProps){
if(this.requiresResync(nextProps)){
this.resync(null,nextProps);}},



initialize:function(props){
var fullWidth=this.state.viewport.width;
this._offsetClosed = props.closedDrawerOffset % 1 === 0?props.closedDrawerOffset:props.closedDrawerOffset * fullWidth;
this._offsetOpen = props.openDrawerOffset % 1 === 0?props.openDrawerOffset:props.openDrawerOffset * fullWidth;

var styles={
container:{
flex:1,
justifyContent:'center',
alignItems:'center'}};


styles.main = Object.assign({
position:'absolute',
top:0,
height:this.state.viewport.height},
{borderWidth:0},this.props.styles.main);
styles.drawer = Object.assign({
position:'absolute',
top:0,
height:this.state.viewport.height},
{borderWidth:0},this.props.styles.drawer);


if(props.initializeOpen === true){
this._open = true;
this._left = fullWidth - this._offsetOpen;
this._prevLeft = this._left;
if(props.type === 'static'){
styles.main[this.props.side] = fullWidth - this._offsetOpen;
styles.drawer[this.props.side] = 0;}

if(props.type === 'overlay'){
styles.main[this.props.side] = 0;
styles.drawer[this.props.side] = 0;}

if(props.type === 'displace'){
styles.main[this.props.side] = fullWidth - this._offsetOpen;
styles.drawer[this.props.side] = 0;}}else 



{
this._open = false;
this._left = this._offsetClosed;
this._prevLeft = this._left;
if(props.type === 'static'){
styles.main[this.props.side] = this._offsetClosed;
styles.drawer[this.props.side] = 0;}

if(props.type === 'overlay'){
styles.main[this.props.side] = this._offsetClosed;
styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullWidth;}

if(props.type === 'displace'){
styles.main[this.props.side] = this._offsetClosed;
styles.drawer[this.props.side] = -fullWidth + this._offsetClosed + this._offsetOpen;}}



if(this.refs.main){
this.refs.drawer.setNativeProps({style:{left:styles.drawer.left}});
this.refs.main.setNativeProps({style:{left:styles.main.left}});}else 

{
this.stylesheet = StyleSheet.create(styles);

this.responder = PanResponder.create({
onStartShouldSetPanResponder:this.handleStartShouldSetPanResponder,
onStartShouldSetPanResponderCapture:this.handleStartShouldSetPanResponderCapture,
onPanResponderMove:this.handlePanResponderMove,
onPanResponderRelease:this.handlePanResponderEnd});}



this.resync(null,props);},


componentWillMount:function(){
this.initialize(this.props);},


componentDidUpdate:function(){
if(this._syncAfterUpdate){
this._syncAfterUpdate = false;
this._open?this.open():this.close();}},



updatePosition:function(){
var mainProps={};
var drawerProps={};

var ratio=(this._left - this._offsetClosed) / (this.getOpenLeft() - this._offsetClosed);

switch(this.props.type){
case 'overlay':
drawerProps[this.props.side] = -this.state.viewport.width + this._offsetOpen + this._left;
mainProps[this.props.side] = this._offsetClosed;
break;
case 'static':
mainProps[this.props.side] = this._left;
drawerProps[this.props.side] = 0;
break;
case 'displace':
mainProps[this.props.side] = this._left;
drawerProps[this.props.side] = -this.state.viewport.width + this._left + this._offsetOpen;
break;}


if(this.props.tweenHandler){
var propsFrag=this.props.tweenHandler(ratio);
mainProps = Object.assign(mainProps,propsFrag.main);
drawerProps = Object.assign(drawerProps,propsFrag.drawer);}

this.refs.drawer.setNativeProps({style:drawerProps});
this.refs.main.setNativeProps({style:mainProps});},


shouldOpenDrawer:function(dx){
if(this._open){
return dx < this.state.viewport.width * this.props.openDrawerThreshold;}else 

{
return dx > this.state.viewport.width * this.props.openDrawerThreshold;}},



handleStartShouldSetPanResponderCapture:function(e,gestureState){
if(this.props.captureGestures){
return this.handleStartShouldSetPanResponder(e,gestureState);}},



handleStartShouldSetPanResponder:function(e,gestureState){
this._panStartTime = Date.now();
if(!this.testPanResponderMask(e,gestureState)){
return false;}

return true;},


processTapGestures:function(){
if(this.props.acceptTap)this._open?this.close():this.open();
if(this.props.tapToClose && this._open)this.close();
if(this.props.acceptDoubleTap){
var now=new Date().getTime();
if(now - this._lastPress < 500){
this._open?this.close():this.open();}

this._lastPress = now;}},



testPanResponderMask:function(e,gestureState){
if(this.props.disabled){return false;}
var x0=e.nativeEvent.pageX;

var deltaOpen=this.props.side === 'left'?deviceScreen.width - x0:x0;
var deltaClose=this.props.side === 'left'?x0:deviceScreen.width - x0;

if(this._open && deltaOpen > deviceScreen.width * this.props.panCloseMask)return false;
if(!this._open && deltaClose > deviceScreen.width * this.props.panOpenMask)return false;
return true;},


handlePanResponderMove:function(e,gestureState){
if(!this.props.acceptPan){
return false;}



var dx=gestureState.dx;

var dx=gestureState.dx;

if(this._open ^ dx < 0 ^ this.props.side === 'right'){return false;}

var absDx=Math.abs(dx);
var moveX=gestureState.moveX;
var relMoveX=this.props.side === 'left'?
this._open?-this.state.viewport.width + moveX:moveX:
this._open?-moveX:this.state.viewport.width - moveX;
var delta=relMoveX - dx;
var factor=absDx / Math.abs(relMoveX);
var adjustedDx=dx + delta * factor;
var left=this.props.panStartCompensation?this._prevLeft + adjustedDx:this._prevLeft + dx;
left = Math.min(left,this.getOpenLeft());
left = Math.max(left,this.getClosedLeft());
this._left = left;
this.updatePosition();
this._panning = true;},


open:function(){var _this=this;
tween({
start:this._left,
end:this.getOpenLeft(),
duration:this.props.tweenDuration,
easingType:this.props.tweenEasing,
onFrame:function(tweenValue){
_this._left = tweenValue;
_this.updatePosition();},

onEnd:function(){
_this._open = true;
_this._prevLeft = _this._left;
_this.props.onOpen();}});},




close:function(){var _this2=this;
tween({
start:this._left,
end:this.getClosedLeft(),
easingType:this.props.tweenEasing,
duration:this.props.tweenDuration,
onFrame:function(tweenValue){
_this2._left = tweenValue;
_this2.updatePosition();},

onEnd:function(){
_this2._open = false;
_this2._prevLeft = _this2._left;
_this2.props.onClose();}});},




toggle:function(){
this._open?this.close():this.open();},


handlePanResponderEnd:function(e,gestureState){

if(Date.now() - this._panStartTime < 250)this.processTapGestures();


if(!this._panning){return;}

var absRelMoveX=this.props.side === 'left'?
this._open?this.state.viewport.width - gestureState.moveX:gestureState.moveX:
this._open?gestureState.moveX:this.state.viewport.width - gestureState.moveX;
var calcPos=this.props.relativeDrag?Math.abs(gestureState.dx):absRelMoveX;
if(this.shouldOpenDrawer(calcPos)){
this.open();}else 
{
this.close();}


this.updatePosition();
this._prevLeft = this._left;
this._panning = false;},


getMainView:function(){
return (
React.createElement(View,_extends({
key:'main',
style:[this.stylesheet.main,{width:this.getMainWidth(),height:this.state.viewport.height}],
ref:'main'},
this.responder.panHandlers),
this.props.children));},




getDrawerView:function(){
var drawerActions={
close:this.closeDrawer};


return (
React.createElement(View,_extends({
key:'drawer',
style:[this.stylesheet.drawer,{width:this.getDrawerWidth(),height:this.state.viewport.height}],
ref:'drawer'},
this.responder.panHandlers),
this.props.content));},




render:function(){
switch(this.props.type){
case 'overlay':
var first=this.getMainView();
var second=this.getDrawerView();
break;
default:
var first=this.getDrawerView();
var second=this.getMainView();
break;}

return (
React.createElement(View,{style:this.stylesheet.container,key:'drawerContainer',onLayout:this.setViewport},
first,
second));},




getOpenLeft:function(){
return this.state.viewport.width - this._offsetOpen;},


getClosedLeft:function(){
return this._offsetClosed;},


getMainWidth:function(){
return this.state.viewport.width - this._offsetClosed;},


getDrawerWidth:function(){
return this.state.viewport.width - this._offsetOpen;}});




module.exports = drawer;
});
__d('react-native-drawer/Tweener.js',["tween-functions/index.js"],function(global, require, module, exports) {  var easingTypes=require('tween-functions/index.js');

module.exports = function(config){
return new Tween(config);};


function Tween(config){
this._rafLoop = this._rafLoop.bind(this);
this.terminate = this.terminate.bind(this);

this._t0 = Date.now();
this._config = config;
this._rafLoop();}


Tween.prototype._rafLoop = function(){
if(this._break){return;}var _config=

this._config;var duration=_config.duration;var start=_config.start;var end=_config.end;var easingType=_config.easingType;
var now=Date.now();
var elapsed=now - this._t0;

if(elapsed >= duration){
this._config.onFrame(end);
this._config.onEnd();
return;}


var tweenVal=easingTypes[easingType](elapsed,start,end,duration);
this._config.onFrame(tweenVal);

requestAnimationFrame(this._rafLoop);};


Tween.prototype.terminate = function(){
this._break = true;};
});
__d('tween-functions/index.js',[],function(global, require, module, exports) {  'use strict';


var tweenFunctions={
linear:function(t,b,_c,d){
var c=_c - b;
return c * t / d + b;},

easeInQuad:function(t,b,_c,d){
var c=_c - b;
return c * (t /= d) * t + b;},

easeOutQuad:function(t,b,_c,d){
var c=_c - b;
return -c * (t /= d) * (t - 2) + b;},

easeInOutQuad:function(t,b,_c,d){
var c=_c - b;
if((t /= d / 2) < 1){
return c / 2 * t * t + b;}else 
{
return -c / 2 * (--t * (t - 2) - 1) + b;}},


easeInCubic:function(t,b,_c,d){
var c=_c - b;
return c * (t /= d) * t * t + b;},

easeOutCubic:function(t,b,_c,d){
var c=_c - b;
return c * ((t = t / d - 1) * t * t + 1) + b;},

easeInOutCubic:function(t,b,_c,d){
var c=_c - b;
if((t /= d / 2) < 1){
return c / 2 * t * t * t + b;}else 
{
return c / 2 * ((t -= 2) * t * t + 2) + b;}},


easeInQuart:function(t,b,_c,d){
var c=_c - b;
return c * (t /= d) * t * t * t + b;},

easeOutQuart:function(t,b,_c,d){
var c=_c - b;
return -c * ((t = t / d - 1) * t * t * t - 1) + b;},

easeInOutQuart:function(t,b,_c,d){
var c=_c - b;
if((t /= d / 2) < 1){
return c / 2 * t * t * t * t + b;}else 
{
return -c / 2 * ((t -= 2) * t * t * t - 2) + b;}},


easeInQuint:function(t,b,_c,d){
var c=_c - b;
return c * (t /= d) * t * t * t * t + b;},

easeOutQuint:function(t,b,_c,d){
var c=_c - b;
return c * ((t = t / d - 1) * t * t * t * t + 1) + b;},

easeInOutQuint:function(t,b,_c,d){
var c=_c - b;
if((t /= d / 2) < 1){
return c / 2 * t * t * t * t * t + b;}else 
{
return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;}},


easeInSine:function(t,b,_c,d){
var c=_c - b;
return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},

easeOutSine:function(t,b,_c,d){
var c=_c - b;
return c * Math.sin(t / d * (Math.PI / 2)) + b;},

easeInOutSine:function(t,b,_c,d){
var c=_c - b;
return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;},

easeInExpo:function(t,b,_c,d){
var c=_c - b;
return t == 0?b:c * Math.pow(2,10 * (t / d - 1)) + b;},

easeOutExpo:function(t,b,_c,d){
var c=_c - b;
return t == d?b + c:c * (-Math.pow(2,-10 * t / d) + 1) + b;},

easeInOutExpo:function(t,b,_c,d){
var c=_c - b;
if(t === 0){
return b;}

if(t === d){
return b + c;}

if((t /= d / 2) < 1){
return c / 2 * Math.pow(2,10 * (t - 1)) + b;}else 
{
return c / 2 * (-Math.pow(2,-10 * --t) + 2) + b;}},


easeInCirc:function(t,b,_c,d){
var c=_c - b;
return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;},

easeOutCirc:function(t,b,_c,d){
var c=_c - b;
return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;},

easeInOutCirc:function(t,b,_c,d){
var c=_c - b;
if((t /= d / 2) < 1){
return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;}else 
{
return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;}},


easeInElastic:function(t,b,_c,d){
var c=_c - b;
var a,p,s;
s = 1.70158;
p = 0;
a = c;
if(t === 0){
return b;}else 
if((t /= d) === 1){
return b + c;}

if(!p){
p = d * 0.3;}

if(a < Math.abs(c)){
a = c;
s = p / 4;}else 
{
s = p / (2 * Math.PI) * Math.asin(c / a);}

return -(a * Math.pow(2,10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;},

easeOutElastic:function(t,b,_c,d){
var c=_c - b;
var a,p,s;
s = 1.70158;
p = 0;
a = c;
if(t === 0){
return b;}else 
if((t /= d) === 1){
return b + c;}

if(!p){
p = d * 0.3;}

if(a < Math.abs(c)){
a = c;
s = p / 4;}else 
{
s = p / (2 * Math.PI) * Math.asin(c / a);}

return a * Math.pow(2,-10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;},

easeInOutElastic:function(t,b,_c,d){
var c=_c - b;
var a,p,s;
s = 1.70158;
p = 0;
a = c;
if(t === 0){
return b;}else 
if((t /= d / 2) === 2){
return b + c;}

if(!p){
p = d * (0.3 * 1.5);}

if(a < Math.abs(c)){
a = c;
s = p / 4;}else 
{
s = p / (2 * Math.PI) * Math.asin(c / a);}

if(t < 1){
return -0.5 * (a * Math.pow(2,10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;}else 
{
return a * Math.pow(2,-10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;}},


easeInBack:function(t,b,_c,d,s){
var c=_c - b;
if(s === void 0){
s = 1.70158;}

return c * (t /= d) * t * ((s + 1) * t - s) + b;},

easeOutBack:function(t,b,_c,d,s){
var c=_c - b;
if(s === void 0){
s = 1.70158;}

return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;},

easeInOutBack:function(t,b,_c,d,s){
var c=_c - b;
if(s === void 0){
s = 1.70158;}

if((t /= d / 2) < 1){
return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;}else 
{
return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;}},


easeInBounce:function(t,b,_c,d){
var c=_c - b;
var v;
v = tweenFunctions.easeOutBounce(d - t,0,c,d);
return c - v + b;},

easeOutBounce:function(t,b,_c,d){
var c=_c - b;
if((t /= d) < 1 / 2.75){
return c * (7.5625 * t * t) + b;}else 
if(t < 2 / 2.75){
return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;}else 
if(t < 2.5 / 2.75){
return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;}else 
{
return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;}},


easeInOutBounce:function(t,b,_c,d){
var c=_c - b;
var v;
if(t < d / 2){
v = tweenFunctions.easeInBounce(t * 2,0,c,d);
return v * 0.5 + b;}else 
{
v = tweenFunctions.easeOutBounce(t * 2 - d,0,c,d);
return v * 0.5 + c * 0.5 + b;}}};




module.exports = tweenFunctions;
});
;require("FoodOracle/index.ios.js");
//@ sourceMappingURL=/index.ios.map